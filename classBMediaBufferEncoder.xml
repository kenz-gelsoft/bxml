<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBMediaBufferEncoder" kind="class" language="C++" prot="public">
    <compoundname>BMediaBufferEncoder</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BMediaEncoder</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classBMediaBufferEncoder_1a666b3967101924518048b847ea75ea1b" prot="protected" static="no" mutable="no">
        <type>void *</type>
        <definition>void* BMediaBufferEncoder::fBuffer</definition>
        <argsstring></argsstring>
        <name>fBuffer</name>
        <qualifiedname>BMediaBufferEncoder::fBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaEncoder.h" line="115" column="5" bodyfile="/boot/home/src/haiku/headers/os/media/MediaEncoder.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMediaBufferEncoder_1a1012274ecc5c4a992aa67582c9dd8e55" prot="protected" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BMediaBufferEncoder::fBufferSize</definition>
        <argsstring></argsstring>
        <name>fBufferSize</name>
        <qualifiedname>BMediaBufferEncoder::fBufferSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaEncoder.h" line="116" column="6" bodyfile="/boot/home/src/haiku/headers/os/media/MediaEncoder.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBMediaBufferEncoder_1a5c6a031e3903185d46dc49f1a2365f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMediaBufferEncoder::BMediaBufferEncoder</definition>
        <argsstring>()</argsstring>
        <name>BMediaBufferEncoder</name>
        <qualifiedname>BMediaBufferEncoder::BMediaBufferEncoder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaEncoder.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaBufferEncoder_1a45f94dc25132d47bde79fa3a91dbd721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMediaBufferEncoder::BMediaBufferEncoder</definition>
        <argsstring>(const media_codec_info *info)</argsstring>
        <name>BMediaBufferEncoder</name>
        <qualifiedname>BMediaBufferEncoder::BMediaBufferEncoder</qualifiedname>
        <param>
          <type>const media_codec_info *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaEncoder.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaBufferEncoder_1a4bf49048e563893ca9ef1a785f4e532a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMediaBufferEncoder::BMediaBufferEncoder</definition>
        <argsstring>(const media_format *outputFormat)</argsstring>
        <name>BMediaBufferEncoder</name>
        <qualifiedname>BMediaBufferEncoder::BMediaBufferEncoder</qualifiedname>
        <param>
          <type>const media_format *</type>
          <declname>outputFormat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaEncoder.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaBufferEncoder_1a2cd609dcdb14abc5653acfba599d00ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMediaBufferEncoder::EncodeToBuffer</definition>
        <argsstring>(void *outputBuffer, size_t *_size, const void *inputBuffer, int64 frameCount, media_encode_info *info)</argsstring>
        <name>EncodeToBuffer</name>
        <qualifiedname>BMediaBufferEncoder::EncodeToBuffer</qualifiedname>
        <param>
          <type>void *</type>
          <declname>outputBuffer</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>_size</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>inputBuffer</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
          <declname>frameCount</declname>
        </param>
        <param>
          <type>media_encode_info *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaEncoder.h" line="106" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBMediaBufferEncoder_1af70003b195445708efbf8c3c59add155" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaBufferEncoder::WriteChunk</definition>
        <argsstring>(const void *buffer, size_t size, media_encode_info *info)</argsstring>
        <name>WriteChunk</name>
        <qualifiedname>BMediaBufferEncoder::WriteChunk</qualifiedname>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>media_encode_info *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaEncoder.h" line="111" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/media/MediaEncoder.h" line="98" column="1" bodyfile="/boot/home/src/haiku/headers/os/media/MediaEncoder.h" bodystart="98" bodyend="117"/>
    <listofallmembers>
      <member refid="classBMediaEncoder_1acc09c43c014390141285c96debf888a0" prot="protected" virt="virtual"><scope>BMediaBufferEncoder</scope><name>AddTrackInfo</name></member>
      <member refid="classBMediaBufferEncoder_1a5c6a031e3903185d46dc49f1a2365f0f" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>BMediaBufferEncoder</name></member>
      <member refid="classBMediaBufferEncoder_1a4bf49048e563893ca9ef1a785f4e532a" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>BMediaBufferEncoder</name></member>
      <member refid="classBMediaBufferEncoder_1a45f94dc25132d47bde79fa3a91dbd721" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>BMediaBufferEncoder</name></member>
      <member refid="classBMediaEncoder_1a8695224d44700959ea09a333c52401ca" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>BMediaEncoder</name></member>
      <member refid="classBMediaEncoder_1a156d10d27b9ff370309c9f5a14f1f60b" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>BMediaEncoder</name></member>
      <member refid="classBMediaEncoder_1a6e1f30a0acedb308ff5b1413c10e9029" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>BMediaEncoder</name></member>
      <member refid="classBMediaEncoder_1a4ffd83268e2a8f18ef10ee2b13029e20" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>Encode</name></member>
      <member refid="classBMediaBufferEncoder_1a2cd609dcdb14abc5653acfba599d00ae" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>EncodeToBuffer</name></member>
      <member refid="classBMediaBufferEncoder_1a666b3967101924518048b847ea75ea1b" prot="protected" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>fBuffer</name></member>
      <member refid="classBMediaBufferEncoder_1a1012274ecc5c4a992aa67582c9dd8e55" prot="protected" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>fBufferSize</name></member>
      <member refid="classBMediaEncoder_1a3fa445705e24ef3e7b1fe047c822fc4d" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>GetEncodeParameters</name></member>
      <member refid="classBMediaEncoder_1a76ac5820501bc291dbcff67bb152bd56" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>InitCheck</name></member>
      <member refid="classBMediaEncoder_1a120254d7f15ff52b65a0a9c10dad5942" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>SetEncodeParameters</name></member>
      <member refid="classBMediaEncoder_1a639c1314719df7d1cee6d991bdf74812" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>SetFormat</name></member>
      <member refid="classBMediaEncoder_1ad181f719e4f182b53defb90cc7a7dc22" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>SetTo</name></member>
      <member refid="classBMediaEncoder_1ae0ea0d3a5e96d7da09cdaa0defe65333" prot="public" virt="non-virtual"><scope>BMediaBufferEncoder</scope><name>SetTo</name></member>
      <member refid="classBMediaBufferEncoder_1af70003b195445708efbf8c3c59add155" prot="protected" virt="virtual"><scope>BMediaBufferEncoder</scope><name>WriteChunk</name></member>
      <member refid="classBMediaEncoder_1a8f0e2e1dcb23367bd4a2ae76c92fd076" prot="public" virt="virtual"><scope>BMediaBufferEncoder</scope><name>~BMediaEncoder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
