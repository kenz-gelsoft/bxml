<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="MediaFormats_8h" kind="file" language="C++">
    <compoundname>MediaFormats.h</compoundname>
    <includes refid="MediaDefs_8h" local="no">MediaDefs.h</includes>
    <includes refid="Messenger_8h" local="no">Messenger.h</includes>
    <includes refid="List_8h" local="no">List.h</includes>
    <includes refid="Locker_8h" local="no">Locker.h</includes>
    <includedby refid="MediaDecoder_8h" local="no">MediaDecoder.h</includedby>
    <includedby refid="MediaEncoder_8h" local="no">MediaEncoder.h</includedby>
    <includedby refid="MediaFile_8h" local="no">MediaFile.h</includedby>
    <includedby refid="MediaTrack_8h" local="no">MediaTrack.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>Message.h</label>
        <link refid="Message_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Messenger.h</label>
        <link refid="Messenger_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Point.h</label>
        <link refid="Point_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Rect.h</label>
        <link refid="Rect_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Size.h</label>
        <link refid="Size_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>MediaFormats.h</label>
        <link refid="MediaFormats_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Entry.h</label>
        <link refid="Entry_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Node.h</label>
        <link refid="Node_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Statable.h</label>
        <link refid="Statable_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>DataIO.h</label>
        <link refid="DataIO_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Flattenable.h</label>
        <link refid="Flattenable_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>List.h</label>
        <link refid="List_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Locker.h</label>
        <link refid="Locker_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>SupportDefs.h</label>
        <link refid="SupportDefs_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>TypeConstants.h</label>
        <link refid="TypeConstants_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>BeBuild.h</label>
      </node>
      <node id="3">
        <label>OS.h</label>
      </node>
      <node id="9">
        <label>inttypes.h</label>
      </node>
      <node id="20">
        <label>limits.h</label>
      </node>
      <node id="17">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>new</label>
      </node>
      <node id="12">
        <label>sys/stat.h</label>
      </node>
      <node id="10">
        <label>sys/types.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct__media__format__description" prot="public">_media_format_description</innerclass>
    <innerclass refid="classBMediaFormats" prot="public">BMediaFormats</innerclass>
    <innerclass refid="structGUID" prot="public">GUID</innerclass>
    <innerclass refid="structmedia__aiff__description" prot="public">media_aiff_description</innerclass>
    <innerclass refid="structmedia__asf__description" prot="public">media_asf_description</innerclass>
    <innerclass refid="structmedia__avi__description" prot="public">media_avi_description</innerclass>
    <innerclass refid="structmedia__avr__description" prot="public">media_avr_description</innerclass>
    <innerclass refid="structmedia__beos__description" prot="public">media_beos_description</innerclass>
    <innerclass refid="structmedia__codec__info" prot="public">media_codec_info</innerclass>
    <innerclass refid="structmedia__misc__description" prot="public">media_misc_description</innerclass>
    <innerclass refid="structmedia__mpeg__description" prot="public">media_mpeg_description</innerclass>
    <innerclass refid="structmedia__quicktime__description" prot="public">media_quicktime_description</innerclass>
    <innerclass refid="structmedia__wav__description" prot="public">media_wav_description</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="MediaFormats_8h_1ab5db1e11ab15eea179e9cd91e7caaf78" prot="public" static="no" strong="no">
        <type></type>
        <name>beos_format</name>
        <enumvalue id="MediaFormats_8h_1ab5db1e11ab15eea179e9cd91e7caaf78ae91b7306598cf85bcb99be0913f1fe97" prot="public">
          <name>B_BEOS_FORMAT_RAW_AUDIO</name>
          <initializer>= &apos;rawa&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="MediaFormats_8h_1ab5db1e11ab15eea179e9cd91e7caaf78a3cbe74bf8ef8abb919e8ad236cf75e3a" prot="public">
          <name>B_BEOS_FORMAT_RAW_VIDEO</name>
          <initializer>= &apos;rawv&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h" line="109" column="1" bodyfile="/boot/home/src/haiku/headers/os/media/MediaFormats.h" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="enum" id="MediaFormats_8h_1adb4703051826fd6272a2916cb0fe7db4" prot="public" static="no" strong="no">
        <type></type>
        <name>media_file_accept_format_flags</name>
        <enumvalue id="MediaFormats_8h_1adb4703051826fd6272a2916cb0fe7db4a0332d064a65e9ac9be19193a44b6468f" prot="public">
          <name>B_MEDIA_REJECT_WILDCARDS</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h" line="96" column="1" bodyfile="/boot/home/src/haiku/headers/os/media/MediaFormats.h" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="enum" id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166" prot="public" static="no" strong="no">
        <type></type>
        <name>mpeg_id</name>
        <enumvalue id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166a8a7a50d0afd5290a936dea83cd5e7462" prot="public">
          <name>B_MPEG_ANY</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166a2cc3016247d539b950571844ab3c8e42" prot="public">
          <name>B_MPEG_1_AUDIO_LAYER_1</name>
          <initializer>= 0x101</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166aa58be0401bc6529a6094972bb792559d" prot="public">
          <name>B_MPEG_1_AUDIO_LAYER_2</name>
          <initializer>= 0x102</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166a393327f6a548b33f325d4c75a3e212f2" prot="public">
          <name>B_MPEG_1_AUDIO_LAYER_3</name>
          <initializer>= 0x103</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166ae615eb41ff5e93cf78b99af9eb009b5f" prot="public">
          <name>B_MPEG_1_VIDEO</name>
          <initializer>= 0x111</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166ad9182c95769383097efca82826664e43" prot="public">
          <name>B_MPEG_2_AUDIO_LAYER_1</name>
          <initializer>= 0x201</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166a98e083833a09cbd9ca5de5580085de47" prot="public">
          <name>B_MPEG_2_AUDIO_LAYER_2</name>
          <initializer>= 0x202</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166a6678c67f2f6b5074da58cd5bdc993f9b" prot="public">
          <name>B_MPEG_2_AUDIO_LAYER_3</name>
          <initializer>= 0x203</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166a753647109fa14961f3bd18bc041da596" prot="public">
          <name>B_MPEG_2_VIDEO</name>
          <initializer>= 0x211</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166a13f75ad3eaa56d27f2e3e28fdb1ba27d" prot="public">
          <name>B_MPEG_2_5_AUDIO_LAYER_1</name>
          <initializer>= 0x301</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166a99611848ec15d0e4295b55cc09259ec1" prot="public">
          <name>B_MPEG_2_5_AUDIO_LAYER_2</name>
          <initializer>= 0x302</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="MediaFormats_8h_1a2386b7398f658f82406aed6780aa8166ac8e990f748021352e7980e9b0e747590" prot="public">
          <name>B_MPEG_2_5_AUDIO_LAYER_3</name>
          <initializer>= 0x303</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h" line="141" column="1" bodyfile="/boot/home/src/haiku/headers/os/media/MediaFormats.h" bodystart="141" bodyend="154"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="MediaFormats_8h_1a901712566afb5bbed789b15b0a908903" prot="public" static="no">
        <type>struct _media_format_description</type>
        <definition>typedef struct _media_format_description media_format_description</definition>
        <argsstring></argsstring>
        <name>media_format_description</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h" line="200" column="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="MediaFormats_8h_1ac3501a6f7e9ba0e8faf67fa02819727d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool does_file_accept_format</definition>
        <argsstring>(const media_file_format *fileFormat, media_format *format, uint32 flags=0)</argsstring>
        <name>does_file_accept_format</name>
        <param>
          <type>const media_file_format *</type>
          <declname>fileFormat</declname>
        </param>
        <param>
          <type>media_format *</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h" line="100" column="6" declfile="/boot/home/src/haiku/headers/os/media/MediaFormats.h" declline="100" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="MediaFormats_8h_1a818796037667b43dcad1448d0064b805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t get_next_encoder</definition>
        <argsstring>(int32 *cookie, const media_file_format *fileFormat, const media_format *inputFormat, const media_format *outputFormat, media_codec_info *_codecInfo, media_format *_acceptedInputFormat, media_format *_acceptedOutputFormat)</argsstring>
        <name>get_next_encoder</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>cookie</declname>
        </param>
        <param>
          <type>const media_file_format *</type>
          <declname>fileFormat</declname>
        </param>
        <param>
          <type>const media_format *</type>
          <declname>inputFormat</declname>
        </param>
        <param>
          <type>const media_format *</type>
          <declname>outputFormat</declname>
        </param>
        <param>
          <type>media_codec_info *</type>
          <declname>_codecInfo</declname>
        </param>
        <param>
          <type>media_format *</type>
          <declname>_acceptedInputFormat</declname>
        </param>
        <param>
          <type>media_format *</type>
          <declname>_acceptedOutputFormat</declname>
        </param>
        <briefdescription>
<para>Use this to iterate through the available encoders with restrictions to the input and output media_format while the encoders can specialize wildcards in the media_formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cookie</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a preallocated cookie, which you need to initialize to <computeroutput>0</computeroutput> before calling this function the first time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fileFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid media_file_format structure as can be obtained through get_next_file_format(). You can pass <computeroutput>NULL</computeroutput> if you don&apos;t care. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the type of data given to the encoder, wildcards are accepted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the type of data you want the encoder to output. Wildcards are accepted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_codecInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a preallocated media_codec_info structure, information about the encoder is placed there. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_acceptedInputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the type of data that the encoder will accept as input. Wildcards in <emphasis>inFormat</emphasis> will be specialized here. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_acceptedOutputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the type of data that the encoder will output. Wildcards in <emphasis>_outFormat</emphasis> will be specialized here.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para><computeroutput>B_OK:</computeroutput> Everything went fine.</para>
</listitem><listitem><para><computeroutput>B_BAD_INDEX:</computeroutput> There are no more encoders. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h" line="74" column="10" declfile="/boot/home/src/haiku/headers/os/media/MediaFormats.h" declline="74" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="MediaFormats_8h_1ad03d5f6869ecfef57fbb447653bbd910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t get_next_encoder</definition>
        <argsstring>(int32 *cookie, const media_file_format *fileFormat, const media_format *inputFormat, media_format *_outputFormat, media_codec_info *_codecInfo)</argsstring>
        <name>get_next_encoder</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>cookie</declname>
        </param>
        <param>
          <type>const media_file_format *</type>
          <declname>fileFormat</declname>
        </param>
        <param>
          <type>const media_format *</type>
          <declname>inputFormat</declname>
        </param>
        <param>
          <type>media_format *</type>
          <declname>_outputFormat</declname>
        </param>
        <param>
          <type>media_codec_info *</type>
          <declname>_codecInfo</declname>
        </param>
        <briefdescription>
<para>Use this to iterate through the available encoders for a given file format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cookie</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a preallocated cookie, which you need to initialize to <computeroutput>0</computeroutput> before calling this function the first time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fileFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid media_file_format structure as can be obtained through get_next_file_format(). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the type of data given to the encoder. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_outputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the type of data the encoder will output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_codecInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a preallocated media_codec_info structure, information about the encoder is placed there.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para><computeroutput>B_OK:</computeroutput> Everything went fine.</para>
</listitem><listitem><para><computeroutput>B_BAD_INDEX:</computeroutput> There are no more encoders. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h" line="43" column="10" declfile="/boot/home/src/haiku/headers/os/media/MediaFormats.h" declline="43" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="MediaFormats_8h_1adcb8a7af0de40778268ab4b54f443588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t get_next_encoder</definition>
        <argsstring>(int32 *cookie, media_codec_info *_codecInfo)</argsstring>
        <name>get_next_encoder</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>cookie</declname>
        </param>
        <param>
          <type>media_codec_info *</type>
          <declname>_codecInfo</declname>
        </param>
        <briefdescription>
<para>Iterate over the all the available encoders without media_format restrictions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cookie</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a preallocated cookie, which you need to initialize to <computeroutput>0</computeroutput> before calling this function the first time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_codecInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a preallocated media_codec_info structure, information about the encoder is placed there.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para><computeroutput>B_OK:</computeroutput> Everything went fine.</para>
</listitem><listitem><para><computeroutput>B_BAD_INDEX:</computeroutput> There are no more encoders. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h" line="93" column="10" declfile="/boot/home/src/haiku/headers/os/media/MediaFormats.h" declline="93" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="MediaFormats_8h_1ae09330d57dd81e60b6363fa540f916a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const GUID &amp;a, const GUID &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const GUID &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const GUID &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h" line="279" column="1" declfile="/boot/home/src/haiku/headers/os/media/MediaFormats.h" declline="279" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="MediaFormats_8h_1adc4b07ed1b3e6ab57223678c17564129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const media_format_description &amp;a, const media_format_description &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const media_format_description &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const media_format_description &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h" line="273" column="1" declfile="/boot/home/src/haiku/headers/os/media/MediaFormats.h" declline="273" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="MediaFormats_8h_1aa1f1121e3327713742894500245c3ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const GUID &amp;a, const GUID &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const GUID &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const GUID &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h" line="277" column="6" declfile="/boot/home/src/haiku/headers/os/media/MediaFormats.h" declline="277" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="MediaFormats_8h_1a4368354fdae90924a92d17a0139bb3ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const media_format_description &amp;a, const media_format_description &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const media_format_description &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const media_format_description &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h" line="270" column="6" declfile="/boot/home/src/haiku/headers/os/media/MediaFormats.h" declline="270" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2009,<sp/>Haiku,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>MIT<sp/>license.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_MEDIA_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MEDIA_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;MediaDefs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Messenger_8h" kindref="compound">Messenger.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="List_8h" kindref="compound">List.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Locker_8h" kindref="compound">Locker.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">media_codec_info<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>pretty_name[96];<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>eg:<sp/>&quot;SuperSqueeze<sp/>Encoder<sp/>by<sp/>Foo<sp/>Inc&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>short_name[32];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>eg:<sp/>&quot;SuperSqueeze&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/><sp/><sp/>id;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>opaque<sp/>id<sp/>passed<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMediaFile::CreateTrack()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/><sp/><sp/>sub_id;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/><sp/><sp/>pad[63];</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/>get_next_encoder(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>*<sp/>cookie,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_file_format*<sp/>fileFormat,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_format*<sp/>inputFormat,<sp/>media_format*<sp/>_outputFormat,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>media_codec_info*<sp/>_codecInfo);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/>get_next_encoder(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>*<sp/>cookie,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_file_format*<sp/>fileFormat,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_format*<sp/>inputFormat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_format*<sp/>outputFormat,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>media_codec_info*<sp/>_codecInfo,<sp/>media_format*<sp/>_acceptedInputFormat,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>media_format*<sp/>_acceptedOutputFormat);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/>get_next_encoder(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>*<sp/>cookie,<sp/>media_codec_info*<sp/>_codecInfo);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>media_file_accept_format_flags<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MEDIA_REJECT_WILDCARDS<sp/>=<sp/>0x1</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>does_file_accept_format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_file_format*<sp/>fileFormat,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>media_format*<sp/>format,<sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>flags<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ac56eeb3040e225fafe52dc1872233eeb" kindref="member">uint8</ref><sp/>data[16];</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/>GUID;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>beos_format<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>B_BEOS_FORMAT_RAW_AUDIO<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;rawa&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>B_BEOS_FORMAT_RAW_VIDEO<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;rawv&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>format;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}<sp/>media_beos_description;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>codec;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>vendor;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}<sp/>media_quicktime_description;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>codec;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<sp/>media_avi_description;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>id;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}<sp/>media_avr_description;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>GUID<sp/>guid;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}<sp/>media_asf_description;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>mpeg_id<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MPEG_ANY<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MPEG_1_AUDIO_LAYER_1<sp/>=<sp/>0x101,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MPEG_1_AUDIO_LAYER_2<sp/>=<sp/>0x102,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MPEG_1_AUDIO_LAYER_3<sp/>=<sp/>0x103,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;MP3&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MPEG_1_VIDEO<sp/>=<sp/>0x111,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MPEG_2_AUDIO_LAYER_1<sp/>=<sp/>0x201,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MPEG_2_AUDIO_LAYER_2<sp/>=<sp/>0x202,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MPEG_2_AUDIO_LAYER_3<sp/>=<sp/>0x203,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MPEG_2_VIDEO<sp/>=<sp/>0x211,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MPEG_2_5_AUDIO_LAYER_1<sp/>=<sp/>0x301,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MPEG_2_5_AUDIO_LAYER_2<sp/>=<sp/>0x302,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>B_MPEG_2_5_AUDIO_LAYER_3<sp/>=<sp/>0x303,</highlight></codeline>
<codeline lineno="154"><highlight class="normal">};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>id;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}<sp/>media_mpeg_description;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>codec;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}<sp/>media_wav_description;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>codec;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}<sp/>media_aiff_description;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>file_format;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>codec;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}<sp/>media_misc_description;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_media_format_description<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_media_format_description();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~_media_format_description();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_media_format_description(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_media_format_description&amp;<sp/>other);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>_media_format_description&amp;<sp/><sp/>operator=(</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_media_format_description&amp;<sp/>other);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>media_format_family<sp/>family;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>_reserved_[3];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_beos_description<sp/>beos;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_quicktime_description<sp/>quicktime;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_avi_description<sp/>avi;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_asf_description<sp/>asf;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_mpeg_description<sp/>mpeg;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_wav_description<sp/>wav;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_aiff_description<sp/>aiff;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_misc_description<sp/>misc;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_avr_description<sp/>avr;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>_reserved_[12];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>u;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}<sp/>media_format_description;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BMediaFormats<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMediaFormats();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~BMediaFormats();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitCheck();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>you<sp/>memset()<sp/>your<sp/>descs<sp/>to<sp/>0<sp/>before<sp/>you<sp/>start<sp/>filling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>them<sp/>in!<sp/>Else<sp/>you<sp/>may<sp/>register<sp/>some<sp/>bogus<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>make_format_flags<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_EXCLUSIVE<sp/>=<sp/>0x1,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>if<sp/>this<sp/>format<sp/>has<sp/>already<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>registered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_NO_MERGE<sp/>=<sp/>0x2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>re-number<sp/>any<sp/>formats<sp/>if<sp/>there<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiple<sp/>clashing<sp/>previous<sp/>registrations,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>fail<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_SET_DEFAULT<sp/>=<sp/>0x4<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>first<sp/>format<sp/>to<sp/>be<sp/>the<sp/>default<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>format<sp/>family<sp/>(when<sp/>registering<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>one<sp/>in<sp/>the<sp/>same<sp/>family).<sp/>Only<sp/>use<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encoder<sp/>add-ons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeFormatFor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_format_description*</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptions,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>descriptionCount,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_format*<sp/>_inOutFormat,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>flags<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>_reserved<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetFormatFor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_format_description&amp;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description,<sp/>media_format*<sp/>_outFormat);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetCodeFor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_format&amp;<sp/>format,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_format_family<sp/>family,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_format_description*<sp/>_outDescription);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RewindFormats();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetNextFormat(media_format*<sp/>_outFormat,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_format_description*<sp/>_outDescription);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>need<sp/>to<sp/>lock/unlock<sp/>(only)<sp/>when<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RewindFormats()/GetNextFormat().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lock();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Unlock();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>convenience<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetBeOSFormatFor(<ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>fourcc,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_format*<sp/>_outFormat,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_type<sp/>type<sp/>=<sp/>B_MEDIA_UNKNOWN_TYPE);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetAVIFormatFor(<ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>fourcc,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_format*<sp/>_outFormat,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_type<sp/>type<sp/>=<sp/>B_MEDIA_UNKNOWN_TYPE);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetQuicktimeFormatFor(<ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>vendor,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>fourcc,<sp/>media_format*<sp/>_outFormat,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_type<sp/>type<sp/>=<sp/>B_MEDIA_UNKNOWN_TYPE);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deprecated:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeFormatFor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_format_description&amp;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_format&amp;<sp/>inFormat,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_format*<sp/>_outFormat);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fIteratorIndex;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_reserved[30];</highlight></codeline>
<codeline lineno="267"><highlight class="normal">};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="GraphicsDefs_8h_1ae17def8dffab817ab89fb8d53999f11a" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_format_description&amp;<sp/>a,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_format_description&amp;<sp/>b);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="Messenger_8h_1a51b1f8270e728dfe799b7e6558590996" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_format_description&amp;<sp/>a,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>media_format_description&amp;<sp/>b);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="GraphicsDefs_8h_1ae17def8dffab817ab89fb8d53999f11a" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GUID&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GUID&amp;<sp/>b);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="Messenger_8h_1a51b1f8270e728dfe799b7e6558590996" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GUID&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GUID&amp;<sp/>b);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>_MEDIA_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/boot/home/src/haiku/headers/os/media/MediaFormats.h"/>
  </compounddef>
</doxygen>
