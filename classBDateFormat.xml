<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBDateFormat" kind="class" language="C++" prot="public">
    <compoundname>BDateFormat</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BFormat</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBDateFormat_1a34192a2dd6c0fddf349f4bf8a6cea819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BDateFormat::BDateFormat</definition>
        <argsstring>(const BDateFormat &amp;other)</argsstring>
        <name>BDateFormat</name>
        <qualifiedname>BDateFormat::BDateFormat</qualifiedname>
        <param>
          <type>const <ref refid="classBDateFormat" kindref="compound">BDateFormat</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBDateFormat" kindref="compound">BDateFormat</ref> object to copy from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1a1ae923cd57baac144afaeb9ec730bed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BDateFormat::BDateFormat</definition>
        <argsstring>(const BLanguage &amp;language, const BFormattingConventions &amp;format)</argsstring>
        <name>BDateFormat</name>
        <qualifiedname>BDateFormat::BDateFormat</qualifiedname>
        <param>
          <type>const BLanguage &amp;</type>
          <declname>language</declname>
        </param>
        <param>
          <type>const BFormattingConventions &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Language and formatting convention constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>language</emphasis> to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The formatting convention to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1a73f4f100f3f6d4909cbff0ad940fda08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BDateFormat::BDateFormat</definition>
        <argsstring>(const BLocale *locale=NULL)</argsstring>
        <name>BDateFormat</name>
        <qualifiedname>BDateFormat::BDateFormat</qualifiedname>
        <param>
          <type>const <ref refid="classBLocale" kindref="compound">BLocale</ref> *</type>
          <declname>locale</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Locale constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>locale</parametername>
</parameternamelist>
<parameterdescription>
<para>The locale to use, can be <computeroutput>NULL</computeroutput> for the default locale.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1a4e1fd346005ccd2ffd4ee51da087b35b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BDateFormat::~BDateFormat</definition>
        <argsstring>()</argsstring>
        <name>~BDateFormat</name>
        <qualifiedname>BDateFormat::~BDateFormat</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="46" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1a44640a60b0d4934254d7cf78ff814c29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BDateFormat::Format</definition>
        <argsstring>(BString &amp;string, const BDate &amp;time, const BDateFormatStyle style, const BTimeZone *timeZone=NULL) const</argsstring>
        <name>Format</name>
        <qualifiedname>BDateFormat::Format</qualifiedname>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const BDate &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const BDateFormatStyle</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const <ref refid="classBTimeZone" kindref="compound">BTimeZone</ref> *</type>
          <declname>timeZone</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="61" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1aa240a7355abcf2f69e5f7c40223033d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BDateFormat::Format</definition>
        <argsstring>(BString &amp;string, const time_t time, const BDateFormatStyle style, const BTimeZone *timeZone=NULL) const</argsstring>
        <name>Format</name>
        <qualifiedname>BDateFormat::Format</qualifiedname>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const time_t</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const BDateFormatStyle</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const <ref refid="classBTimeZone" kindref="compound">BTimeZone</ref> *</type>
          <declname>timeZone</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Fills in <emphasis>string</emphasis> with a formatted date for the given <emphasis>time</emphasis>, <emphasis>style</emphasis>, and <emphasis>timeZone</emphasis> for the locale. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string buffer to fill with the formatted date. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time (in seconds since epoch) to format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the long format (with day name, full month name) or the short format, 08/12/2010 or similar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeZone</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the time zone to use, if <computeroutput>NULL</computeroutput>, use the system default time zone (usually UTC).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went fine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while creating the object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="58" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1af74b53bd1f3653dabdb7803d51ffda04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BDateFormat::Format</definition>
        <argsstring>(BString &amp;string, int *&amp;fieldPositions, int &amp;fieldCount, const time_t time, const BDateFormatStyle style) const</argsstring>
        <name>Format</name>
        <qualifiedname>BDateFormat::Format</qualifiedname>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int *&amp;</type>
          <declname>fieldPositions</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>fieldCount</declname>
        </param>
        <param>
          <type>const time_t</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const BDateFormatStyle</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Fills in <emphasis>string</emphasis> with a custom formatted date according to the given parameters for the locale and fills out an array of <emphasis>fieldPositions</emphasis> which must be freed by the caller and a <emphasis>fieldCount</emphasis> which contains the number of positions. </para>
        </briefdescription>
        <detaileddescription>
<para>The positions are offsets in the string at which each element of the date (day, month, year, etc) and the separator starting positions. These can be used, for example, to split the string into parts to use in a locale-aware set of BMenuFields to edit the date in the local format.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string buffer to fill with the formatted date. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldPositions</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of date field positions to be filled out. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of <emphasis>fields</emphasis> in <emphasis>fieldPositions</emphasis> to be filled out. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time (in seconds since epoch) to format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the long format (with day name, full month name) or the short format, 08/12/2010 or similar.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went fine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while creating the <emphasis>string</emphasis> buffer or <emphasis>fieldPositions</emphasis> array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para>There was not enough space to store the result.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="64" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1a080f552db87ba9240bb8a13b1f236c29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t BDateFormat::Format</definition>
        <argsstring>(char *string, const size_t maxSize, const time_t time, const BDateFormatStyle style) const</argsstring>
        <name>Format</name>
        <qualifiedname>BDateFormat::Format</qualifiedname>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxSize</declname>
        </param>
        <param>
          <type>const time_t</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const BDateFormatStyle</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Fills in <emphasis>string</emphasis> with a formatted date up to <emphasis>maxSize</emphasis> bytes for the given <emphasis>time</emphasis> and <emphasis>style</emphasis> for the locale. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string buffer to fill with the formatted date. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time (in seconds since epoch) to format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the long format (with day name, full month name) or the short format, 08/12/2010 or similar.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes written during the date formatting. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while creating the object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para>There was not enough space to store the result.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="55" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1a8975b4d86097931936fb0841405d4b03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BDateFormat::GetDateFormat</definition>
        <argsstring>(BDateFormatStyle style, BString &amp;outFormat) const</argsstring>
        <name>GetDateFormat</name>
        <qualifiedname>BDateFormat::GetDateFormat</qualifiedname>
        <param>
          <type>BDateFormatStyle</type>
          <declname>style</declname>
        </param>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>outFormat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="48" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1ae1f680c56a19276f211d271cdd2f973a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BDateFormat::GetDayName</definition>
        <argsstring>(int day, BString &amp;outName, const BDateFormatStyle style=B_FULL_DATE_FORMAT) const</argsstring>
        <name>GetDayName</name>
        <qualifiedname>BDateFormat::GetDayName</qualifiedname>
        <param>
          <type>int</type>
          <declname>day</declname>
        </param>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>outName</declname>
        </param>
        <param>
          <type>const BDateFormatStyle</type>
          <declname>style</declname>
          <defval>B_FULL_DATE_FORMAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="77" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1a8d147bfab995cd48604a211732afe30c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BDateFormat::GetFields</definition>
        <argsstring>(BDateElement *&amp;fields, int &amp;fieldCount, BDateFormatStyle style) const</argsstring>
        <name>GetFields</name>
        <qualifiedname>BDateFormat::GetFields</qualifiedname>
        <param>
          <type>BDateElement *&amp;</type>
          <declname>fields</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>fieldCount</declname>
        </param>
        <param>
          <type>BDateFormatStyle</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Get the type of each field in the date format of the locale. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is most often used in combination with the version of <ref refid="classBDateFormat_1a080f552db87ba9240bb8a13b1f236c29" kindref="member">Format()</ref> that takes a fieldPositions parameter. <ref refid="classBDateFormat_1a080f552db87ba9240bb8a13b1f236c29" kindref="member">Format()</ref> gives you the offset of each field in a formatted string, and <ref refid="classBDateFormat_1a8d147bfab995cd48604a211732afe30c" kindref="member">GetFields()</ref> gives you the type of the field at a given offset. With these informations, you can handle the formatted date string as a list of fields that you can split and alter at will.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fields</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of BDateElement objects. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of fields in <emphasis>fields</emphasis>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the long format (with day name, full month name) or the short format, &quot;08/12/2010&quot; or similar.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went fine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while creating the object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para>Bad or invalid <emphasis>fields</emphasis> data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>BDateFormat::GetFields(BDateElement*&amp;, int&amp;, BTimeFormatStyle) const </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBDateFormat_1af74b53bd1f3653dabdb7803d51ffda04" kindref="member">BDateFormat::Format(BString&amp;, int*&amp;, int&amp;, const time_t,
	const BDateFormatStyle) const</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="69" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1a65d1f0a9cf86aa553d06a7d3d95a2404" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BDateFormat::GetMonthName</definition>
        <argsstring>(int month, BString &amp;outName, const BDateFormatStyle style=B_FULL_DATE_FORMAT) const</argsstring>
        <name>GetMonthName</name>
        <qualifiedname>BDateFormat::GetMonthName</qualifiedname>
        <param>
          <type>int</type>
          <declname>month</declname>
        </param>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>outName</declname>
        </param>
        <param>
          <type>const BDateFormatStyle</type>
          <declname>style</declname>
          <defval>B_FULL_DATE_FORMAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="74" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1a27a5359c2a3e28cb9bca2058d402f57e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BDateFormat::GetStartOfWeek</definition>
        <argsstring>(BWeekday *weekday) const</argsstring>
        <name>GetStartOfWeek</name>
        <qualifiedname>BDateFormat::GetStartOfWeek</qualifiedname>
        <param>
          <type>BWeekday *</type>
          <declname>weekday</declname>
          <defname>startOfWeek</defname>
        </param>
        <briefdescription>
<para>Returns the day used as the start of week in this locale. </para>
        </briefdescription>
        <detaileddescription>
<para>Possible values for <emphasis>startOfWeek</emphasis> include:<itemizedlist>
<listitem><para><computeroutput>B_WEEKDAY_SUNDAY</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WEEKDAY_MONDAY</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WEEKDAY_TUESDAY</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WEEKDAY_WEDNESDAY</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WEEKDAY_THURSDAY</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WEEKDAY_FRIDAY</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WEEKDAY_SATURDAY</computeroutput> </para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went fine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>startOfWeek</emphasis> is <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref> or another error occurred.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="73" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1aa309faca4eee84adfa22e065b98e0181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BDateFormat::Parse</definition>
        <argsstring>(BString source, BDateFormatStyle style, BDate &amp;output)</argsstring>
        <name>Parse</name>
        <qualifiedname>BDateFormat::Parse</qualifiedname>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type>BDateFormatStyle</type>
          <declname>style</declname>
        </param>
        <param>
          <type>BDate &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="83" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1abcb76f02878c6b24d48d497d1febdcd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BDateFormat::SetDateFormat</definition>
        <argsstring>(BDateFormatStyle style, const BString &amp;format)</argsstring>
        <name>SetDateFormat</name>
        <qualifiedname>BDateFormat::SetDateFormat</qualifiedname>
        <param>
          <type>BDateFormatStyle</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const <ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="50" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBDateFormat_1a85b62f197d39b477055403013566dc0f" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BDateFormat::_ConvertDayNumberToICU</definition>
        <argsstring>(int day) const</argsstring>
        <name>_ConvertDayNumberToICU</name>
        <qualifiedname>BDateFormat::_ConvertDayNumberToICU</qualifiedname>
        <param>
          <type>int</type>
          <declname>day</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="87" column="4" bodyfile="/boot/home/src/haiku/headers/os/locale/DateFormat.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classBDateFormat_1aa61bd56f1f3f086d76fbe8e223a1ceb3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>U_ICU_NAMESPACE::DateFormat *</type>
        <definition>U_ICU_NAMESPACE::DateFormat * BDateFormat::_CreateDateFormatter</definition>
        <argsstring>(const BDateFormatStyle style) const</argsstring>
        <name>_CreateDateFormatter</name>
        <qualifiedname>BDateFormat::_CreateDateFormatter</qualifiedname>
        <param>
          <type>const BDateFormatStyle</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="89" column="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Formatter for dates. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/locale/DateFormat.h" line="40" column="1" bodyfile="/boot/home/src/haiku/headers/os/locale/DateFormat.h" bodystart="40" bodyend="92"/>
    <listofallmembers>
      <member refid="classBDateFormat_1a85b62f197d39b477055403013566dc0f" prot="private" virt="non-virtual"><scope>BDateFormat</scope><name>_ConvertDayNumberToICU</name></member>
      <member refid="classBDateFormat_1aa61bd56f1f3f086d76fbe8e223a1ceb3" prot="private" virt="non-virtual"><scope>BDateFormat</scope><name>_CreateDateFormatter</name></member>
      <member refid="classBDateFormat_1a73f4f100f3f6d4909cbff0ad940fda08" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>BDateFormat</name></member>
      <member refid="classBDateFormat_1a1ae923cd57baac144afaeb9ec730bed3" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>BDateFormat</name></member>
      <member refid="classBDateFormat_1a34192a2dd6c0fddf349f4bf8a6cea819" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>BDateFormat</name></member>
      <member refid="classBFormat_1a1ff84e6b18584d40445fea46931bafd0" prot="protected" virt="non-virtual"><scope>BDateFormat</scope><name>BFormat</name></member>
      <member refid="classBFormat_1acd966f960c76ac04a64eb65399d73c85" prot="protected" virt="non-virtual"><scope>BDateFormat</scope><name>BFormat</name></member>
      <member refid="classBFormat_1ab5d495c8408849155a7ff7fc16161e75" prot="protected" virt="non-virtual"><scope>BDateFormat</scope><name>BFormat</name></member>
      <member refid="classBFormat_1acb27d863a711eb8b2aeb62ca56024e36" prot="protected" virt="non-virtual"><scope>BDateFormat</scope><name>fConventions</name></member>
      <member refid="classBFormat_1a50d5bddcf4f91d741d4fbba1ac090de5" prot="protected" virt="non-virtual"><scope>BDateFormat</scope><name>fInitStatus</name></member>
      <member refid="classBFormat_1a9ccf84a90e0dbc89623f03e7bb325e7e" prot="protected" virt="non-virtual"><scope>BDateFormat</scope><name>fLanguage</name></member>
      <member refid="classBDateFormat_1a080f552db87ba9240bb8a13b1f236c29" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>Format</name></member>
      <member refid="classBDateFormat_1aa240a7355abcf2f69e5f7c40223033d7" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>Format</name></member>
      <member refid="classBDateFormat_1a44640a60b0d4934254d7cf78ff814c29" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>Format</name></member>
      <member refid="classBDateFormat_1af74b53bd1f3653dabdb7803d51ffda04" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>Format</name></member>
      <member refid="classBDateFormat_1a8975b4d86097931936fb0841405d4b03" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>GetDateFormat</name></member>
      <member refid="classBDateFormat_1ae1f680c56a19276f211d271cdd2f973a" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>GetDayName</name></member>
      <member refid="classBDateFormat_1a8d147bfab995cd48604a211732afe30c" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>GetFields</name></member>
      <member refid="classBDateFormat_1a65d1f0a9cf86aa553d06a7d3d95a2404" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>GetMonthName</name></member>
      <member refid="classBDateFormat_1a27a5359c2a3e28cb9bca2058d402f57e" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>GetStartOfWeek</name></member>
      <member refid="classBFormat_1a1c2b885fb22f2c3da84e098bc5e3e95f" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>InitCheck</name></member>
      <member refid="classBDateFormat_1aa309faca4eee84adfa22e065b98e0181" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>Parse</name></member>
      <member refid="classBDateFormat_1abcb76f02878c6b24d48d497d1febdcd6" prot="public" virt="non-virtual"><scope>BDateFormat</scope><name>SetDateFormat</name></member>
      <member refid="classBDateFormat_1a4e1fd346005ccd2ffd4ee51da087b35b" prot="public" virt="virtual"><scope>BDateFormat</scope><name>~BDateFormat</name></member>
      <member refid="classBFormat_1a2824e15e80fac46c80cfd0d19e9f45fc" prot="protected" virt="virtual"><scope>BDateFormat</scope><name>~BFormat</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
