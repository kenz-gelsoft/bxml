<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="SupportDefs_8h" kind="file" language="C++">
    <compoundname>SupportDefs.h</compoundname>
    <includes local="no">BeBuild.h</includes>
    <includes refid="Errors_8h" local="no">Errors.h</includes>
    <includes local="no">inttypes.h</includes>
    <includes local="no">sys/types.h</includes>
    <includedby refid="Archivable_8h" local="no">Archivable.h</includedby>
    <includedby refid="Beep_8h" local="no">Beep.h</includedby>
    <includedby refid="ByteOrder_8h" local="no">ByteOrder.h</includedby>
    <includedby refid="Catalog_8h" local="no">Catalog.h</includedby>
    <includedby refid="CatalogData_8h" local="no">CatalogData.h</includedby>
    <includedby refid="Collator_8h" local="no">Collator.h</includedby>
    <includedby refid="Country_8h" local="no">Country.h</includedby>
    <includedby refid="DataIO_8h" local="no">DataIO.h</includedby>
    <includedby refid="DiskDeviceDefs_8h" local="no">DiskDeviceDefs.h</includedby>
    <includedby refid="Entry_8h" local="no">Entry.h</includedby>
    <includedby refid="EntryList_8h" local="no">EntryList.h</includedby>
    <includedby refid="ErrorsExt_8h" local="no">ErrorsExt.h</includedby>
    <includedby refid="Flattenable_8h" local="no">Flattenable.h</includedby>
    <includedby refid="Font_8h" local="no">Font.h</includedby>
    <includedby refid="Format_8h" local="no">Format.h</includedby>
    <includedby refid="FormattingConventions_8h" local="no">FormattingConventions.h</includedby>
    <includedby refid="GameSoundDefs_8h" local="no">GameSoundDefs.h</includedby>
    <includedby refid="GraphicsDefs_8h" local="no">GraphicsDefs.h</includedby>
    <includedby refid="Joystick_8h" local="no">Joystick.h</includedby>
    <includedby refid="Language_8h" local="no">Language.h</includedby>
    <includedby refid="List_8h" local="no">List.h</includedby>
    <includedby refid="Mime_8h" local="no">Mime.h</includedby>
    <includedby refid="MimeType_8h" local="no">MimeType.h</includedby>
    <includedby refid="NetAddress_8h" local="no">NetAddress.h</includedby>
    <includedby refid="NetBuffer_8h" local="no">NetBuffer.h</includedby>
    <includedby refid="NetEndpoint_8h" local="no">NetEndpoint.h</includedby>
    <includedby refid="NetworkAddressResolver_8h" local="no">NetworkAddressResolver.h</includedby>
    <includedby refid="NetworkNotifications_8h" local="no">NetworkNotifications.h</includedby>
    <includedby refid="NodeInfo_8h" local="no">NodeInfo.h</includedby>
    <includedby refid="ObjectList_8h" local="no">ObjectList.h</includedby>
    <includedby refid="Point_8h" local="no">Point.h</includedby>
    <includedby refid="PropertyInfo_8h" local="no">PropertyInfo.h</includedby>
    <includedby refid="RealtimeAlloc_8h" local="no">RealtimeAlloc.h</includedby>
    <includedby refid="Referenceable_8h" local="no">Referenceable.h</includedby>
    <includedby refid="RelativeDateTimeFormat_8h" local="no">RelativeDateTimeFormat.h</includedby>
    <includedby refid="Size_8h" local="no">Size.h</includedby>
    <includedby refid="Statable_8h" local="no">Statable.h</includedby>
    <includedby refid="StopWatch_8h" local="no">StopWatch.h</includedby>
    <includedby refid="StreamingGameSound_8h" local="no">StreamingGameSound.h</includedby>
    <includedby refid="String_8h" local="no">String.h</includedby>
    <includedby refid="TLS_8h" local="no">TLS.h</includedby>
    <includedby refid="TimeCode_8h" local="no">TimeCode.h</includedby>
    <includedby refid="TimeUnitFormat_8h" local="no">TimeUnitFormat.h</includedby>
    <includedby refid="TranslationDefs_8h" local="no">TranslationDefs.h</includedby>
    <includedby refid="TranslationUtils_8h" local="no">TranslationUtils.h</includedby>
    <includedby refid="USB__spec_8h" local="no">USB_spec.h</includedby>
    <includedby refid="UTF8_8h" local="no">UTF8.h</includedby>
    <includedby refid="UnicodeChar_8h" local="no">UnicodeChar.h</includedby>
    <includedby refid="Volume_8h" local="no">Volume.h</includedby>
    <includedby refid="VolumeRoster_8h" local="no">VolumeRoster.h</includedby>
    <includedby refid="WindowScreen_8h" local="no">WindowScreen.h</includedby>
    <includedby refid="net__settings_8h" local="no">net_settings.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>SupportDefs.h</label>
        <link refid="SupportDefs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>BeBuild.h</label>
      </node>
      <node id="3">
        <label>inttypes.h</label>
      </node>
      <node id="4">
        <label>sys/types.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11">
        <label>Application.h</label>
        <link refid="Application_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>Clipboard.h</label>
        <link refid="Clipboard_8h"/>
      </node>
      <node id="8">
        <label>Cursor.h</label>
        <link refid="Cursor_8h"/>
      </node>
      <node id="9">
        <label>Handler.h</label>
        <link refid="Handler_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>Invoker.h</label>
        <link refid="Invoker_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>Key.h</label>
        <link refid="Key_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>KeyStore.h</label>
        <link refid="KeyStore_8h"/>
      </node>
      <node id="10">
        <label>Looper.h</label>
        <link refid="Looper_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>Message.h</label>
        <link refid="Message_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>MessageFilter.h</label>
        <link refid="MessageFilter_8h"/>
      </node>
      <node id="89">
        <label>MessageQueue.h</label>
        <link refid="MessageQueue_8h"/>
      </node>
      <node id="95">
        <label>MessageRunner.h</label>
        <link refid="MessageRunner_8h"/>
      </node>
      <node id="90">
        <label>Messenger.h</label>
        <link refid="Messenger_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>Notification.h</label>
        <link refid="Notification_8h"/>
      </node>
      <node id="115">
        <label>PropertyInfo.h</label>
        <link refid="PropertyInfo_8h"/>
      </node>
      <node id="98">
        <label>Roster.h</label>
        <link refid="Roster_8h"/>
      </node>
      <node id="126">
        <label>Joystick.h</label>
        <link refid="Joystick_8h"/>
      </node>
      <node id="145">
        <label>USB3.h</label>
        <link refid="USB3_8h"/>
      </node>
      <node id="144">
        <label>USB_spec.h</label>
        <link refid="USB__spec_8h"/>
        <childnode refid="145" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>DirectWindow.h</label>
        <link refid="DirectWindow_8h"/>
      </node>
      <node id="84">
        <label>FileGameSound.h</label>
        <link refid="FileGameSound_8h"/>
      </node>
      <node id="114">
        <label>AffineTransform.h</label>
        <link refid="AffineTransform_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Alert.h</label>
        <link refid="Alert_8h"/>
      </node>
      <node id="122">
        <label>Alignment.h</label>
        <link refid="Alignment_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Bitmap.h</label>
        <link refid="Bitmap_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Box.h</label>
        <link refid="Box_8h"/>
      </node>
      <node id="24">
        <label>Button.h</label>
        <link refid="Button_8h"/>
      </node>
      <node id="22">
        <label>CardView.h</label>
        <link refid="CardView_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>ChannelControl.h</label>
        <link refid="ChannelControl_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ChannelSlider.h</label>
        <link refid="ChannelSlider_8h"/>
      </node>
      <node id="27">
        <label>CheckBox.h</label>
        <link refid="CheckBox_8h"/>
      </node>
      <node id="28">
        <label>ColorControl.h</label>
        <link refid="ColorControl_8h"/>
      </node>
      <node id="23">
        <label>Control.h</label>
        <link refid="Control_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>Deskbar.h</label>
        <link refid="Deskbar_8h"/>
      </node>
      <node id="33">
        <label>Dragger.h</label>
        <link refid="Dragger_8h"/>
      </node>
      <node id="119">
        <label>Font.h</label>
        <link refid="Font_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>GraphicsDefs.h</label>
        <link refid="GraphicsDefs_8h"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>GridLayoutBuilder.h</label>
        <link refid="GridLayoutBuilder_8h"/>
      </node>
      <node id="34">
        <label>GridView.h</label>
        <link refid="GridView_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>GroupLayoutBuilder.h</label>
        <link refid="GroupLayoutBuilder_8h"/>
      </node>
      <node id="36">
        <label>GroupView.h</label>
        <link refid="GroupView_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>IconUtils.h</label>
        <link refid="IconUtils_8h"/>
      </node>
      <node id="93">
        <label>Input.h</label>
        <link refid="Input_8h"/>
      </node>
      <node id="121">
        <label>InterfaceDefs.h</label>
        <link refid="InterfaceDefs_8h"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>Layout.h</label>
        <link refid="Layout_8h"/>
      </node>
      <node id="18">
        <label>LayoutBuilder.h</label>
        <link refid="LayoutBuilder_8h"/>
      </node>
      <node id="56">
        <label>LayoutItem.h</label>
        <link refid="LayoutItem_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>ListItem.h</label>
        <link refid="ListItem_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ListView.h</label>
        <link refid="ListView_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>Menu.h</label>
        <link refid="Menu_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>MenuBar.h</label>
        <link refid="MenuBar_8h"/>
      </node>
      <node id="42">
        <label>MenuField.h</label>
        <link refid="MenuField_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>MenuItem.h</label>
        <link refid="MenuItem_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>OptionControl.h</label>
        <link refid="OptionControl_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>OptionPopUp.h</label>
        <link refid="OptionPopUp_8h"/>
      </node>
      <node id="39">
        <label>OutlineListView.h</label>
        <link refid="OutlineListView_8h"/>
      </node>
      <node id="61">
        <label>Picture.h</label>
        <link refid="Picture_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>PictureButton.h</label>
        <link refid="PictureButton_8h"/>
      </node>
      <node id="129">
        <label>Point.h</label>
        <link refid="Point_8h"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>Polygon.h</label>
        <link refid="Polygon_8h"/>
      </node>
      <node id="45">
        <label>PopUpMenu.h</label>
        <link refid="PopUpMenu_8h"/>
      </node>
      <node id="4">
        <label>RadioButton.h</label>
        <link refid="RadioButton_8h"/>
      </node>
      <node id="130">
        <label>Rect.h</label>
        <link refid="Rect_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>Region.h</label>
        <link refid="Region_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>Screen.h</label>
        <link refid="Screen_8h"/>
      </node>
      <node id="46">
        <label>ScrollBar.h</label>
        <link refid="ScrollBar_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>ScrollView.h</label>
        <link refid="ScrollView_8h"/>
      </node>
      <node id="44">
        <label>SeparatorItem.h</label>
        <link refid="SeparatorItem_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>SeparatorView.h</label>
        <link refid="SeparatorView_8h"/>
      </node>
      <node id="62">
        <label>Shape.h</label>
        <link refid="Shape_8h"/>
      </node>
      <node id="134">
        <label>Size.h</label>
        <link refid="Size_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>SpaceLayoutItem.h</label>
        <link refid="SpaceLayoutItem_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>SplitLayoutBuilder.h</label>
        <link refid="SplitLayoutBuilder_8h"/>
      </node>
      <node id="49">
        <label>SplitView.h</label>
        <link refid="SplitView_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>StatusBar.h</label>
        <link refid="StatusBar_8h"/>
      </node>
      <node id="59">
        <label>StringItem.h</label>
        <link refid="StringItem_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>StringView.h</label>
        <link refid="StringView_8h"/>
      </node>
      <node id="53">
        <label>TabView.h</label>
        <link refid="TabView_8h"/>
      </node>
      <node id="32">
        <label>TextControl.h</label>
        <link refid="TextControl_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>TextView.h</label>
        <link refid="TextView_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>View.h</label>
        <link refid="View_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Window.h</label>
        <link refid="Window_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>Catalog.h</label>
        <link refid="Catalog_8h"/>
      </node>
      <node id="5">
        <label>Collator.h</label>
        <link refid="Collator_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>Country.h</label>
        <link refid="Country_8h"/>
      </node>
      <node id="7">
        <label>DurationFormat.h</label>
        <link refid="DurationFormat_8h"/>
      </node>
      <node id="6">
        <label>Locale.h</label>
        <link refid="Locale_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>LocaleRoster.h</label>
        <link refid="LocaleRoster_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>TimeZone.h</label>
        <link refid="TimeZone_8h"/>
      </node>
      <node id="146">
        <label>UnicodeChar.h</label>
        <link refid="UnicodeChar_8h"/>
      </node>
      <node id="88">
        <label>MailComponent.h</label>
        <link refid="MailComponent_8h"/>
      </node>
      <node id="100">
        <label>MidiConsumer.h</label>
        <link refid="MidiConsumer_8h"/>
      </node>
      <node id="99">
        <label>MidiEndpoint.h</label>
        <link refid="MidiEndpoint_8h"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>MidiProducer.h</label>
        <link refid="MidiProducer_8h"/>
      </node>
      <node id="12">
        <label>MidiRoster.h</label>
        <link refid="MidiRoster_8h"/>
      </node>
      <node id="71">
        <label>AbstractSocket.h</label>
        <link refid="AbstractSocket_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>DatagramSocket.h</label>
        <link refid="DatagramSocket_8h"/>
      </node>
      <node id="81">
        <label>AppFileInfo.h</label>
        <link refid="AppFileInfo_8h"/>
      </node>
      <node id="107">
        <label>Directory.h</label>
        <link refid="Directory_8h"/>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>Entry.h</label>
        <link refid="Entry_8h"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>EntryList.h</label>
        <link refid="EntryList_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>File.h</label>
        <link refid="File_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>FilePanel.h</label>
        <link refid="FilePanel_8h"/>
      </node>
      <node id="78">
        <label>Mime.h</label>
        <link refid="Mime_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>MimeType.h</label>
        <link refid="MimeType_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>Node.h</label>
        <link refid="Node_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>NodeInfo.h</label>
        <link refid="NodeInfo_8h"/>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>NodeMonitor.h</label>
        <link refid="NodeMonitor_8h"/>
      </node>
      <node id="102">
        <label>Path.h</label>
        <link refid="Path_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>PathFinder.h</label>
        <link refid="PathFinder_8h"/>
      </node>
      <node id="97">
        <label>Query.h</label>
        <link refid="Query_8h"/>
      </node>
      <node id="83">
        <label>Resources.h</label>
        <link refid="Resources_8h"/>
      </node>
      <node id="135">
        <label>Statable.h</label>
        <link refid="Statable_8h"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>SymLink.h</label>
        <link refid="SymLink_8h"/>
      </node>
      <node id="82">
        <label>Volume.h</label>
        <link refid="Volume_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>VolumeRoster.h</label>
        <link refid="VolumeRoster_8h"/>
      </node>
      <node id="117">
        <label>Architecture.h</label>
        <link refid="Architecture_8h"/>
      </node>
      <node id="2">
        <label>Archivable.h</label>
        <link refid="Archivable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Autolock.h</label>
        <link refid="Autolock_8h"/>
      </node>
      <node id="67">
        <label>Beep.h</label>
        <link refid="Beep_8h"/>
      </node>
      <node id="74">
        <label>BufferIO.h</label>
        <link refid="BufferIO_8h"/>
      </node>
      <node id="75">
        <label>BufferedDataIO.h</label>
        <link refid="BufferedDataIO_8h"/>
      </node>
      <node id="70">
        <label>DataIO.h</label>
        <link refid="DataIO_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>Flattenable.h</label>
        <link refid="Flattenable_8h"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>List.h</label>
        <link refid="List_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>ObjectList.h</label>
        <link refid="ObjectList_8h"/>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>Referenceable.h</label>
        <link refid="Referenceable_8h"/>
      </node>
      <node id="138">
        <label>StopWatch.h</label>
        <link refid="StopWatch_8h"/>
      </node>
      <node id="139">
        <label>String.h</label>
        <link refid="String_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>StringList.h</label>
        <link refid="StringList_8h"/>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>SupportDefs.h</label>
        <link refid="SupportDefs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>TLS.h</label>
        <link refid="TLS_8h"/>
      </node>
      <node id="65">
        <label>Url.h</label>
        <link refid="Url_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>BitmapStream.h</label>
        <link refid="BitmapStream_8h"/>
      </node>
      <node id="143">
        <label>TranslationDefs.h</label>
        <link refid="TranslationDefs_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>Translator.h</label>
        <link refid="Translator_8h"/>
      </node>
      <node id="125">
        <label>TranslatorFormats.h</label>
        <link refid="TranslatorFormats_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>TranslatorRoster.h</label>
        <link refid="TranslatorRoster_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>ErrorsExt.h</label>
        <link refid="ErrorsExt_8h"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>ExclusiveBorrow.h</label>
        <link refid="ExclusiveBorrow_8h"/>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>HttpFields.h</label>
        <link refid="HttpFields_8h"/>
      </node>
      <node id="111">
        <label>HttpRequest.h</label>
        <link refid="HttpRequest_8h"/>
      </node>
      <node id="140">
        <label>HttpResult.h</label>
        <link refid="HttpResult_8h"/>
      </node>
      <node id="92">
        <label>HttpSession.h</label>
        <link refid="HttpSession_8h"/>
      </node>
      <node id="112">
        <label>HttpTime.h</label>
        <link refid="HttpTime_8h"/>
      </node>
      <node id="66">
        <label>NetServicesDefs.h</label>
        <link refid="NetServicesDefs_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <header>Format strings for printf() and scanf() for integer types</header>
      <memberdef kind="define" id="SupportDefs_8h_1a0969fa9dac055f91eebe733902dd928a" prot="public" static="no">
        <name>B_PRId16</name>
        <initializer>&quot;d&quot;</initializer>
        <briefdescription>
<para>printf() constant for i16 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="68" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a466bfe69cb03f9688b1b84a29b637cc8" prot="public" static="no">
        <name>B_PRId32</name>
        <initializer>__HAIKU_PRI_PREFIX_32 &quot;d&quot;</initializer>
        <briefdescription>
<para>printf() constant for i32 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="70" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a135b59c53616335468d415a6073e80be" prot="public" static="no">
        <name>B_PRId64</name>
        <initializer>__HAIKU_PRI_PREFIX_64 &quot;d&quot;</initializer>
        <briefdescription>
<para>printf() constant for i64 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="72" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1acbc6dadea25d119db18c3678e1eec366" prot="public" static="no">
        <name>B_PRId8</name>
        <initializer>&quot;d&quot;</initializer>
        <briefdescription>
<para>printf() constant for i8 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="66" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a09bffd2c44cb4d8f6d09579313618194" prot="public" static="no">
        <name>B_PRIi16</name>
        <initializer>&quot;i&quot;</initializer>
        <briefdescription>
<para>printf() constant for i16 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="69" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a6e31a508d063c7277f37fdcdc009f6da" prot="public" static="no">
        <name>B_PRIi32</name>
        <initializer>__HAIKU_PRI_PREFIX_32 &quot;i&quot;</initializer>
        <briefdescription>
<para>printf() constant for i32 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="71" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a9678888dd3d4f924fdeac1a4f6bec416" prot="public" static="no">
        <name>B_PRIi64</name>
        <initializer>__HAIKU_PRI_PREFIX_64 &quot;i&quot;</initializer>
        <briefdescription>
<para>printf() constant for i64 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="73" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a4473e6eba578daa3fdc9d88d2c6c1015" prot="public" static="no">
        <name>B_PRIi8</name>
        <initializer>&quot;i&quot;</initializer>
        <briefdescription>
<para>printf() constant for i8 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="67" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a9d8651a6122e17a1fb2c59f475b60894" prot="public" static="no">
        <name>B_PRIo16</name>
        <initializer>&quot;o&quot;</initializer>
        <briefdescription>
<para>printf() constant for u16 as octal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="79" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a307911ed45caaf4959909cccd203965f" prot="public" static="no">
        <name>B_PRIo32</name>
        <initializer>__HAIKU_PRI_PREFIX_32 &quot;o&quot;</initializer>
        <briefdescription>
<para>printf() constant for u32 as octal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="83" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ad9cc24d8e64a15198bdf472f6f5dceee" prot="public" static="no">
        <name>B_PRIo64</name>
        <initializer>__HAIKU_PRI_PREFIX_64 &quot;o&quot;</initializer>
        <briefdescription>
<para>printf() constant for u64 as octal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="87" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ab60a1113b2ed48a4151034b90355cdf8" prot="public" static="no">
        <name>B_PRIo8</name>
        <initializer>&quot;o&quot;</initializer>
        <briefdescription>
<para>printf() constant for u8 as octal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="75" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a7ab0775c878a8db2cbf7ac22832391e7" prot="public" static="no">
        <name>B_PRIu16</name>
        <initializer>&quot;u&quot;</initializer>
        <briefdescription>
<para>printf() constant for u16 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="78" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a4d1fe122ec8153875477c9df6886ed2f" prot="public" static="no">
        <name>B_PRIu32</name>
        <initializer>__HAIKU_PRI_PREFIX_32 &quot;u&quot;</initializer>
        <briefdescription>
<para>printf() constant for u32 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="82" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1aac66ac68bbcc8f9cb0eafd4a7e4add86" prot="public" static="no">
        <name>B_PRIu64</name>
        <initializer>__HAIKU_PRI_PREFIX_64 &quot;u&quot;</initializer>
        <briefdescription>
<para>printf() constant for u64 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="86" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1af4c992f053b17655b80554e14569a888" prot="public" static="no">
        <name>B_PRIu8</name>
        <initializer>&quot;u&quot;</initializer>
        <briefdescription>
<para>printf() constant for u8 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="74" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a078e7d80a8ac385bcd5eaf2e53068cae" prot="public" static="no">
        <name>B_PRIx16</name>
        <initializer>&quot;x&quot;</initializer>
        <briefdescription>
<para>printf() constant for u16 as lowercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="80" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a0d29d8851643064656546996ce43ae2a" prot="public" static="no">
        <name>B_PRIX16</name>
        <initializer>&quot;X&quot;</initializer>
        <briefdescription>
<para>printf() constant for u16 as uppercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="81" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a2f2ff944a35de233b4dc629bd70874d0" prot="public" static="no">
        <name>B_PRIx32</name>
        <initializer>__HAIKU_PRI_PREFIX_32 &quot;x&quot;</initializer>
        <briefdescription>
<para>printf() constant for u32 as lowercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="84" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1aef93b378755e1402917fe1b1f1fc6bd5" prot="public" static="no">
        <name>B_PRIX32</name>
        <initializer>__HAIKU_PRI_PREFIX_32 &quot;X&quot;</initializer>
        <briefdescription>
<para>printf() constant for u32 as uppercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="85" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a8b7becabbcfbc60ede68a5830e7cc2cf" prot="public" static="no">
        <name>B_PRIx64</name>
        <initializer>__HAIKU_PRI_PREFIX_64 &quot;x&quot;</initializer>
        <briefdescription>
<para>printf() constant for u64 as lowercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="88" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a2d827ab72fa0c26b24a82ca6e5499568" prot="public" static="no">
        <name>B_PRIX64</name>
        <initializer>__HAIKU_PRI_PREFIX_64 &quot;X&quot;</initializer>
        <briefdescription>
<para>printf() constant for u64 as uppercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="89" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a6fb9ff42ef818cab485ecc3d073f61df" prot="public" static="no">
        <name>B_PRIx8</name>
        <initializer>&quot;x&quot;</initializer>
        <briefdescription>
<para>printf() constant for u8 as lowercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="76" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1aaedb55c5812b63ed5f62248b267cad92" prot="public" static="no">
        <name>B_PRIX8</name>
        <initializer>&quot;X&quot;</initializer>
        <briefdescription>
<para>printf() constant for u8 as uppercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="77" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ab0751714b80eab3704d60055d4ededc7" prot="public" static="no">
        <name>B_SCNd16</name>
        <initializer>&quot;hd&quot;</initializer>
        <briefdescription>
<para>scanf() constant for i16 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="93" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a9cac12b39c59661b7a6e20d67767deb1" prot="public" static="no">
        <name>B_SCNd32</name>
        <initializer>__HAIKU_PRI_PREFIX_32 &quot;d&quot;</initializer>
        <briefdescription>
<para>scanf() constant for i32 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="95" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a0b0dbd4be15682e50e017b7efe33200e" prot="public" static="no">
        <name>B_SCNd64</name>
        <initializer>__HAIKU_PRI_PREFIX_64 &quot;d&quot;</initializer>
        <briefdescription>
<para>scanf() constant for i64 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="97" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a6e9904c7f07c910dca7176a59d9de0a1" prot="public" static="no">
        <name>B_SCNd8</name>
        <initializer>&quot;hhd&quot;</initializer>
        <briefdescription>
<para>scanf() constant for i8 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="91" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a1c502b40d8922a1a4d5d206657e82bb6" prot="public" static="no">
        <name>B_SCNi16</name>
        <initializer>&quot;hi&quot;</initializer>
        <briefdescription>
<para>scanf() constant for i16 as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="94" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a77670868cb09746804ed03f6cc9ff6aa" prot="public" static="no">
        <name>B_SCNi32</name>
        <initializer>__HAIKU_PRI_PREFIX_32 &quot;i&quot;</initializer>
        <briefdescription>
<para>scanf() constant for i32 as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="96" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ab158ae035462cfdf562ab69ce4bc7c13" prot="public" static="no">
        <name>B_SCNi64</name>
        <initializer>__HAIKU_PRI_PREFIX_64 &quot;i&quot;</initializer>
        <briefdescription>
<para>scanf() constant for i64 as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="98" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a370309923a271181bffc2a56cd83dc74" prot="public" static="no">
        <name>B_SCNi8</name>
        <initializer>&quot;hhi&quot;</initializer>
        <briefdescription>
<para>scanf() constant for i8 as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="92" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1af578199b116510ee57eba509f70d6927" prot="public" static="no">
        <name>B_SCNo16</name>
        <initializer>&quot;ho&quot;</initializer>
        <briefdescription>
<para>scanf() constant for u16 as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="103" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ac624d783b1c4a86563b527855b24239a" prot="public" static="no">
        <name>B_SCNo32</name>
        <initializer>__HAIKU_PRI_PREFIX_32 &quot;o&quot;</initializer>
        <briefdescription>
<para>scanf() constant for u32 as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="106" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1aa513a9a5ce812e4d9b6b5de407629f9e" prot="public" static="no">
        <name>B_SCNo64</name>
        <initializer>__HAIKU_PRI_PREFIX_64 &quot;o&quot;</initializer>
        <briefdescription>
<para>scanf() constant for u64 as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="109" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1abebc6507f1872e9cd31ed4a6b2cc38f9" prot="public" static="no">
        <name>B_SCNo8</name>
        <initializer>&quot;hho&quot;</initializer>
        <briefdescription>
<para>scanf() constant for u8 as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="100" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1af89965848189ec4c0fea5888ba98b260" prot="public" static="no">
        <name>B_SCNu16</name>
        <initializer>&quot;hu&quot;</initializer>
        <briefdescription>
<para>scanf() constant for u16 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="102" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a36f3ac95b363a030db3b39d1d4597402" prot="public" static="no">
        <name>B_SCNu32</name>
        <initializer>__HAIKU_PRI_PREFIX_32 &quot;u&quot;</initializer>
        <briefdescription>
<para>scanf() constant for u32 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="105" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ae1f5f8ff87165c559cda9ed031647f3d" prot="public" static="no">
        <name>B_SCNu64</name>
        <initializer>__HAIKU_PRI_PREFIX_64 &quot;u&quot;</initializer>
        <briefdescription>
<para>scanf() constant for u64 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="108" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a57a0f912c30734b01ea57ba92615b21b" prot="public" static="no">
        <name>B_SCNu8</name>
        <initializer>&quot;hhu&quot;</initializer>
        <briefdescription>
<para>scanf() constant for u8 as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="99" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a66731c80621bef85b57e293147591541" prot="public" static="no">
        <name>B_SCNx16</name>
        <initializer>&quot;hx&quot;</initializer>
        <briefdescription>
<para>scanf() constant for u16 as hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="104" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a2ba1057fa2df1ab7b56916e281285083" prot="public" static="no">
        <name>B_SCNx32</name>
        <initializer>__HAIKU_PRI_PREFIX_32 &quot;x&quot;</initializer>
        <briefdescription>
<para>scanf() constant for u32 as hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="107" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a92e2b65e928d096524876ef3904ebfcb" prot="public" static="no">
        <name>B_SCNx64</name>
        <initializer>__HAIKU_PRI_PREFIX_64 &quot;x&quot;</initializer>
        <briefdescription>
<para>scanf() constant for u64 as hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="110" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a047814351c801a73bdecdff90e4486da" prot="public" static="no">
        <name>B_SCNx8</name>
        <initializer>&quot;hhx&quot;</initializer>
        <briefdescription>
<para>scanf() constant for u8 as hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="101" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Format strings for several standard types</header>
      <memberdef kind="define" id="SupportDefs_8h_1a7a26f8e3cfa1341eb38ab4810ab4e95c" prot="public" static="no">
        <name>B_PRIdBIGTIME</name>
        <initializer><ref refid="SupportDefs_8h_1a135b59c53616335468d415a6073e80be" kindref="member">B_PRId64</ref></initializer>
        <briefdescription>
<para>printf() constant for bigtime_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="187" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a679627a83346a2cde3b3c43cffc72b90" prot="public" static="no">
        <name>B_PRIdDEV</name>
        <initializer><ref refid="SupportDefs_8h_1a466bfe69cb03f9688b1b84a29b637cc8" kindref="member">B_PRId32</ref></initializer>
        <briefdescription>
<para>printf() constant for dev_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="170" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a2e448abf20a9a2c980b7ae34af49f50f" prot="public" static="no">
        <name>B_PRIdINO</name>
        <initializer><ref refid="SupportDefs_8h_1a135b59c53616335468d415a6073e80be" kindref="member">B_PRId64</ref></initializer>
        <briefdescription>
<para>printf() constant for ino_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="174" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1afa94cafc5ab7693759a4c32388f9171a" prot="public" static="no">
        <name>B_PRIdOFF</name>
        <initializer><ref refid="SupportDefs_8h_1a135b59c53616335468d415a6073e80be" kindref="member">B_PRId64</ref></initializer>
        <briefdescription>
<para>printf() constant for off_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="161" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ae6e9c98f4fc728493097d574ab1724c4" prot="public" static="no">
        <name>B_PRIdSSIZE</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;d&quot;</initializer>
        <briefdescription>
<para>printf() constant for ssize_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="124" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ac98f87a212d41138a12de9cf91d74aa4" prot="public" static="no">
        <name>B_PRIdTIME</name>
        <initializer><ref refid="SupportDefs_8h_1a135b59c53616335468d415a6073e80be" kindref="member">B_PRId64</ref></initializer>
        <briefdescription>
<para>printf() constant for time_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="182" column="11" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ae4ac42504b04bc9f934758440e6217cd" prot="public" static="no">
        <name>B_PRIiBIGTIME</name>
        <initializer><ref refid="SupportDefs_8h_1a9678888dd3d4f924fdeac1a4f6bec416" kindref="member">B_PRIi64</ref></initializer>
        <briefdescription>
<para>printf() constant for bigtime_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="188" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ade8a5a4a5e624fcfa59c06696caefe05" prot="public" static="no">
        <name>B_PRIiDEV</name>
        <initializer><ref refid="SupportDefs_8h_1a6e31a508d063c7277f37fdcdc009f6da" kindref="member">B_PRIi32</ref></initializer>
        <briefdescription>
<para>printf() constant for dev_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="171" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1aee4e8ad4d80940def8446803bbab2e1d" prot="public" static="no">
        <name>B_PRIiINO</name>
        <initializer><ref refid="SupportDefs_8h_1a9678888dd3d4f924fdeac1a4f6bec416" kindref="member">B_PRIi64</ref></initializer>
        <briefdescription>
<para>printf() constant for ino_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="175" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a819a1f6c2e6d6d261176765da7b2a0c5" prot="public" static="no">
        <name>B_PRIiOFF</name>
        <initializer><ref refid="SupportDefs_8h_1a9678888dd3d4f924fdeac1a4f6bec416" kindref="member">B_PRIi64</ref></initializer>
        <briefdescription>
<para>printf() constant for off_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="162" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a6bca556f9e4f779c571e445cc85d18f2" prot="public" static="no">
        <name>B_PRIiSSIZE</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;i&quot;</initializer>
        <briefdescription>
<para>printf() constant for ssize_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="125" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a10b3d67aaddccf7768a03bdfb51ea442" prot="public" static="no">
        <name>B_PRIiTIME</name>
        <initializer><ref refid="SupportDefs_8h_1a9678888dd3d4f924fdeac1a4f6bec416" kindref="member">B_PRIi64</ref></initializer>
        <briefdescription>
<para>printf() constant for time_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="183" column="10" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a9076cc27722ca7ffe13595041d14a056" prot="public" static="no">
        <name>B_PRINTF_POINTER_WIDTH</name>
        <initializer>8</initializer>
        <briefdescription>
<para>printf() argument for printed width of a pointer with the p format (minus 0x prefix). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="195" column="11" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a98bbec1c3164a5a2a94aa28e052d2c5f" prot="public" static="no">
        <name>B_PRIoADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;o&quot;</initializer>
        <briefdescription>
<para>printf() constant for addr_t as octal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="132" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ade45e0f62e4d44cbadfc5d34b9edbe76" prot="public" static="no">
        <name>B_PRIoGENADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_GENERIC_ADDR &quot;o&quot;</initializer>
        <briefdescription>
<para>printf() constant for generic_addr_t as octal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="152" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a8437caa1d7cdd4fef67988955844f993" prot="public" static="no">
        <name>B_PRIoPHYSADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_PHYS_ADDR &quot;o&quot;</initializer>
        <briefdescription>
<para>printf() constant for phys_addr_t as octal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="142" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ac66ce4da727fa72d19d1a2946505c913" prot="public" static="no">
        <name>B_PRIoSIZE</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;o&quot;</initializer>
        <briefdescription>
<para>printf() constant for size_t as octal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="115" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a8facab064b5a655b8d4eacc33b6666ff" prot="public" static="no">
        <name>B_PRIuADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;u&quot;</initializer>
        <briefdescription>
<para>printf() constant for addr_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="131" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a6a0f386df221a79c89b7de1bfeec79a5" prot="public" static="no">
        <name>B_PRIuGENADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_GENERIC_ADDR &quot;u&quot;</initializer>
        <briefdescription>
<para>printf() constant for generic_addr_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="151" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1adcccadefe4aa5459dab42509d4959ba8" prot="public" static="no">
        <name>B_PRIuPHYSADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_PHYS_ADDR &quot;u&quot;</initializer>
        <briefdescription>
<para>printf() constant for phys_addr_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="141" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ada4f6c2206c0e2ca102851a414398508" prot="public" static="no">
        <name>B_PRIuSIZE</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;u&quot;</initializer>
        <briefdescription>
<para>printf() constant for size_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="114" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1abfc495c5c7e693533c8b72da398bfa8f" prot="public" static="no">
        <name>B_PRIxADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;x&quot;</initializer>
        <briefdescription>
<para>printf() constant for addr_t as lowercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="133" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a877a70ee7312f94be24473c320f2c47b" prot="public" static="no">
        <name>B_PRIXADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;X&quot;</initializer>
        <briefdescription>
<para>printf() constant for addr_t as uppercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="134" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ab1f989ac01b0ba940069b16d4bbf0017" prot="public" static="no">
        <name>B_PRIxGENADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_GENERIC_ADDR &quot;x&quot;</initializer>
        <briefdescription>
<para>printf() constant for generic_addr_t as lowercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="153" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a9d7d1626d7f24bcb07a650345a326334" prot="public" static="no">
        <name>B_PRIXGENADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_GENERIC_ADDR &quot;X&quot;</initializer>
        <briefdescription>
<para>printf() constant for generic_addr_t as uppercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="154" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a74685041d6ecd11ed18c8610d87ec602" prot="public" static="no">
        <name>B_PRIxOFF</name>
        <initializer><ref refid="SupportDefs_8h_1a8b7becabbcfbc60ede68a5830e7cc2cf" kindref="member">B_PRIx64</ref></initializer>
        <briefdescription>
<para>printf() constant for off_t as lowercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="163" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a73b326ca82a0fbbbefefb99a7c43e1eb" prot="public" static="no">
        <name>B_PRIxPHYSADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_PHYS_ADDR &quot;x&quot;</initializer>
        <briefdescription>
<para>printf() constant for phys_addr_t as lowercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="143" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1adcca499248478d39dbb03eb5da1ad113" prot="public" static="no">
        <name>B_PRIXPHYSADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_PHYS_ADDR &quot;X&quot;</initializer>
        <briefdescription>
<para>printf() constant for phys_addr_t as uppercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="144" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a43839ef9884f7d4f06bba8966a8ae57a" prot="public" static="no">
        <name>B_PRIxSIZE</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;x&quot;</initializer>
        <briefdescription>
<para>printf() constant for size_t as lowercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="116" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ad80c597e6eeb9ee0e970370cfa1cf4b1" prot="public" static="no">
        <name>B_PRIXSIZE</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;X&quot;</initializer>
        <briefdescription>
<para>printf() constant for size_t as uppercase hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="117" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ae046fa2511020e477b539aa829ed9b6d" prot="public" static="no">
        <name>B_SCNdOFF</name>
        <initializer><ref refid="SupportDefs_8h_1a0b0dbd4be15682e50e017b7efe33200e" kindref="member">B_SCNd64</ref></initializer>
        <briefdescription>
<para>scanf() constant for off_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="165" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a868d40ae557b55ffa9342ef93e2f0a53" prot="public" static="no">
        <name>B_SCNdSSIZE</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;d&quot;</initializer>
        <briefdescription>
<para>scanf() constant for ssize_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="127" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a3166be461ad503f422b002aced95d2d2" prot="public" static="no">
        <name>B_SCNiOFF</name>
        <initializer><ref refid="SupportDefs_8h_1ab158ae035462cfdf562ab69ce4bc7c13" kindref="member">B_SCNi64</ref></initializer>
        <briefdescription>
<para>scanf() constant for off_t as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="166" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1affa60fbe6a10ceaa4d716d2f6336e8a9" prot="public" static="no">
        <name>B_SCNiSSIZE</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;i&quot;</initializer>
        <briefdescription>
<para>scanf() constant for ssize_t as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="128" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a6e499c161c75c1c56305b3a72dcf2997" prot="public" static="no">
        <name>B_SCNoADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;o&quot;</initializer>
        <briefdescription>
<para>scanf() constant for addr_t as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="137" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1ad086009f43e6c2c5873fdc5f8baaa28f" prot="public" static="no">
        <name>B_SCNoGENADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_GENERIC_ADDR &quot;o&quot;</initializer>
        <briefdescription>
<para>scanf() constant for generic_addr_t as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="157" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1acb1592bdcf9e44c87177835b9568331a" prot="public" static="no">
        <name>B_SCNoPHYSADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_PHYS_ADDR &quot;o&quot;</initializer>
        <briefdescription>
<para>scanf() constant for phys_addr_t as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="147" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a3cef2aecd4fc37660bc2e9dbe7081cf4" prot="public" static="no">
        <name>B_SCNoSIZE</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;o&quot;</initializer>
        <briefdescription>
<para>scanf() constant for size_t as decimal, octal or hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="120" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1aa8de012df257344b326c1cd3f0ee680a" prot="public" static="no">
        <name>B_SCNuADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;u&quot;</initializer>
        <briefdescription>
<para>scanf() constant for addr_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="136" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a41d92167b6b89dfb60dec102b440a2a8" prot="public" static="no">
        <name>B_SCNuGENADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_GENERIC_ADDR &quot;u&quot;</initializer>
        <briefdescription>
<para>scanf() constant for generic_addr_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="156" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1acf1d00b87543459323824692511f0ecc" prot="public" static="no">
        <name>B_SCNuPHYSADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_PHYS_ADDR &quot;u&quot;</initializer>
        <briefdescription>
<para>scanf() constant for phys_addr_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="146" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1af83f441281c45938d49eb4027deb1140" prot="public" static="no">
        <name>B_SCNuSIZE</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;u&quot;</initializer>
        <briefdescription>
<para>scanf() constant for size_t as decimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="119" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a7def8efe8b78ef5022c52b84727ddf07" prot="public" static="no">
        <name>B_SCNxADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;x&quot;</initializer>
        <briefdescription>
<para>scanf() constant for addr_t as hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="138" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a433842ef64965efa7befb63fdc13154c" prot="public" static="no">
        <name>B_SCNxGENADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_GENERIC_ADDR &quot;x&quot;</initializer>
        <briefdescription>
<para>scanf() constant for generic_addr_t as hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="158" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a205e704473153ee409597ecabdf0b9b2" prot="public" static="no">
        <name>B_SCNxOFF</name>
        <initializer><ref refid="SupportDefs_8h_1a92e2b65e928d096524876ef3904ebfcb" kindref="member">B_SCNx64</ref></initializer>
        <briefdescription>
<para>scanf() constant for off_t as octal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="167" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a54495a0a683979950f1726c541f33d00" prot="public" static="no">
        <name>B_SCNxPHYSADDR</name>
        <initializer>__HAIKU_PRI_PREFIX_PHYS_ADDR &quot;x&quot;</initializer>
        <briefdescription>
<para>scanf() constant for phys_addr_t as hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="148" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1aa933fd36fe66bc7a8044d4a030d147fd" prot="public" static="no">
        <name>B_SCNxSIZE</name>
        <initializer>__HAIKU_PRI_PREFIX_ADDR &quot;x&quot;</initializer>
        <briefdescription>
<para>scanf() constant for size_t as hexadecimal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="121" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Deprecated defines</header>
      <memberdef kind="define" id="SupportDefs_8h_1aa93f0eb578d23995850d61f7d61c55c1" prot="public" static="no">
        <name>FALSE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Obsolete. Use <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="248" column="10" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" prot="public" static="no">
        <name>TRUE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Obsolete. Use <computeroutput>true</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="251" column="10" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Fixed-Size Integer Types</header>
      <memberdef kind="typedef" id="SupportDefs_8h_1acadaa1c2888dd031d14fed9b272333a7" prot="public" static="no">
        <type>__haiku_int16</type>
        <definition>typedef __haiku_int16 int16</definition>
        <argsstring></argsstring>
        <name>int16</name>
        <briefdescription>
<para>2-bytes signed integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="22" column="21" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" prot="public" static="no">
        <type>__haiku_int32</type>
        <definition>typedef __haiku_int32 int32</definition>
        <argsstring></argsstring>
        <name>int32</name>
        <briefdescription>
<para>4-bytes signed integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="24" column="21" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" prot="public" static="no">
        <type>__haiku_int64</type>
        <definition>typedef __haiku_int64 int64</definition>
        <argsstring></argsstring>
        <name>int64</name>
        <briefdescription>
<para>8-bytes signed integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="26" column="21" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1ac69a93dcc865c5e4aa2072cac9002aeb" prot="public" static="no">
        <type>__haiku_int8</type>
        <definition>typedef __haiku_int8 int8</definition>
        <argsstring></argsstring>
        <name>int8</name>
        <briefdescription>
<para>1-byte signed integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="20" column="20" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1ac267cdaa9a4909f02aa2fc83cc7da477" prot="public" static="no">
        <type>__haiku_uint16</type>
        <definition>typedef __haiku_uint16 uint16</definition>
        <argsstring></argsstring>
        <name>uint16</name>
        <briefdescription>
<para>2-bytes unsigned integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="23" column="23" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" prot="public" static="no">
        <type>__haiku_uint32</type>
        <definition>typedef __haiku_uint32 uint32</definition>
        <argsstring></argsstring>
        <name>uint32</name>
        <briefdescription>
<para>4-bytes unsigned integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="25" column="23" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" prot="public" static="no">
        <type>__haiku_uint64</type>
        <definition>typedef __haiku_uint64 uint64</definition>
        <argsstring></argsstring>
        <name>uint64</name>
        <briefdescription>
<para>8-bytes unsigned integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="27" column="23" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1ac56eeb3040e225fafe52dc1872233eeb" prot="public" static="no">
        <type>__haiku_uint8</type>
        <definition>typedef __haiku_uint8 uint8</definition>
        <argsstring></argsstring>
        <name>uint8</name>
        <briefdescription>
<para>1-byte unsigned integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="21" column="22" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Fixed-size Volatile Types</header>
      <memberdef kind="typedef" id="SupportDefs_8h_1af210709d21a1c5b93e6313ae2e3132a5" prot="public" static="no">
        <type>volatile <ref refid="SupportDefs_8h_1acadaa1c2888dd031d14fed9b272333a7" kindref="member">int16</ref></type>
        <definition>typedef volatile int16 vint16</definition>
        <argsstring></argsstring>
        <name>vint16</name>
        <briefdescription>
<para>2-bytes volatile signed integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="32" column="23" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1adf83762eea0b8a8c073aacab58cbcf9c" prot="public" static="no">
        <type>volatile <ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>typedef volatile int32 vint32</definition>
        <argsstring></argsstring>
        <name>vint32</name>
        <briefdescription>
<para>4-bytes volatile signed integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="34" column="23" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a7864afde07627641b17df7afbe9853d4" prot="public" static="no">
        <type>volatile <ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
        <definition>typedef volatile int64 vint64</definition>
        <argsstring></argsstring>
        <name>vint64</name>
        <briefdescription>
<para>8-bytes volatile signed integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="36" column="23" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a86481a6d93b553c50d604c7309f5ef66" prot="public" static="no">
        <type>volatile <ref refid="SupportDefs_8h_1ac69a93dcc865c5e4aa2072cac9002aeb" kindref="member">int8</ref></type>
        <definition>typedef volatile int8 vint8</definition>
        <argsstring></argsstring>
        <name>vint8</name>
        <briefdescription>
<para>1-byte volatile signed integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="30" column="22" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a8170fa7d9071cf27ef5f9bd8baa60bcc" prot="public" static="no">
        <type>volatile <ref refid="SupportDefs_8h_1ac267cdaa9a4909f02aa2fc83cc7da477" kindref="member">uint16</ref></type>
        <definition>typedef volatile uint16 vuint16</definition>
        <argsstring></argsstring>
        <name>vuint16</name>
        <briefdescription>
<para>2-bytes volatile unsigned integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="33" column="24" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a922617de9890c61faf2354b09832141e" prot="public" static="no">
        <type>volatile <ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>typedef volatile uint32 vuint32</definition>
        <argsstring></argsstring>
        <name>vuint32</name>
        <briefdescription>
<para>4-bytes volatile unsigned integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="35" column="24" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1abecb528ccfa1bfa51b80587ec1ade08a" prot="public" static="no">
        <type>volatile <ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref></type>
        <definition>typedef volatile uint64 vuint64</definition>
        <argsstring></argsstring>
        <name>vuint64</name>
        <briefdescription>
<para>8-bytes volatile unsigned integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="37" column="24" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1aa535537fa6c83a394c5f89640c423617" prot="public" static="no">
        <type>volatile <ref refid="SupportDefs_8h_1ac56eeb3040e225fafe52dc1872233eeb" kindref="member">uint8</ref></type>
        <definition>typedef volatile uint8 vuint8</definition>
        <argsstring></argsstring>
        <name>vuint8</name>
        <briefdescription>
<para>1-byte volatile unsigned integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="31" column="23" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Short-hand Volatile Type Names</header>
      <memberdef kind="typedef" id="SupportDefs_8h_1a0185b1aeb65681c33cb657764ab1380e" prot="public" static="no">
        <type>volatile char</type>
        <definition>typedef volatile char vchar</definition>
        <argsstring></argsstring>
        <name>vchar</name>
        <briefdescription>
<para>Volatile signed char. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="42" column="22" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a645cdc646c422e53a9f5fa68eabfffa1" prot="public" static="no">
        <type>volatile int</type>
        <definition>typedef volatile int vint</definition>
        <argsstring></argsstring>
        <name>vint</name>
        <briefdescription>
<para>Volatile signed int. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="40" column="21" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1ad3ea6701fa476297d1297b0d519d7087" prot="public" static="no">
        <type>volatile long</type>
        <definition>typedef volatile long vlong</definition>
        <argsstring></argsstring>
        <name>vlong</name>
        <briefdescription>
<para>Volatile signed long. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="39" column="22" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a3fd99bccbf44d13ef081a62243127e97" prot="public" static="no">
        <type>volatile short</type>
        <definition>typedef volatile short vshort</definition>
        <argsstring></argsstring>
        <name>vshort</name>
        <briefdescription>
<para>Volatile signed short. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="41" column="23" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1ab80e518e0204bdd69af46f618742811f" prot="public" static="no">
        <type>volatile unsigned char</type>
        <definition>typedef volatile unsigned char vuchar</definition>
        <argsstring></argsstring>
        <name>vuchar</name>
        <briefdescription>
<para>Volatile unsigned char. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="47" column="31" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1ac61b4c541f7d83ffdd9c3f3e1601bd00" prot="public" static="no">
        <type>volatile unsigned int</type>
        <definition>typedef volatile unsigned int vuint</definition>
        <argsstring></argsstring>
        <name>vuint</name>
        <briefdescription>
<para>Volatile unsigned int. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="45" column="30" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1aed7af8ab3c715eec0856610de1e5ac8a" prot="public" static="no">
        <type>volatile unsigned long</type>
        <definition>typedef volatile unsigned long vulong</definition>
        <argsstring></argsstring>
        <name>vulong</name>
        <briefdescription>
<para>Volatile unsigned long. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="44" column="31" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a2aedc7cff41eb3df15a0c8fbef31a220" prot="public" static="no">
        <type>volatile unsigned short</type>
        <definition>typedef volatile unsigned short vushort</definition>
        <argsstring></argsstring>
        <name>vushort</name>
        <briefdescription>
<para>Volatile unsigned short. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="46" column="32" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Character Type Formats</header>
      <memberdef kind="typedef" id="SupportDefs_8h_1a65f85814a8290f9797005d3b28e7e5fc" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char uchar</definition>
        <argsstring></argsstring>
        <name>uchar</name>
        <briefdescription>
<para>Unsigned 1-byte wide character. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="49" column="22" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Descriptive Type Formats</header>
      <memberdef kind="typedef" id="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" prot="public" static="no">
        <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
        <definition>typedef int64 bigtime_t</definition>
        <argsstring></argsstring>
        <name>bigtime_t</name>
        <briefdescription>
<para>Represents time in microseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="53" column="14" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a4725626079eb499d1846f7c85bb8772e" prot="public" static="no">
        <type>__haiku_generic_addr_t</type>
        <definition>typedef __haiku_generic_addr_t generic_addr_t</definition>
        <argsstring></argsstring>
        <name>generic_addr_t</name>
        <briefdescription>
<para>Represents a generic address. </para>
        </briefdescription>
        <detaileddescription>
<para>A generic address is wide enough to store both physical and virtual addresses.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="61" column="30" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a09fccb04407a72fb40c559692e9c86e2" prot="public" static="no">
        <type><ref refid="SupportDefs_8h_1a4725626079eb499d1846f7c85bb8772e" kindref="member">generic_addr_t</ref></type>
        <definition>typedef generic_addr_t generic_size_t</definition>
        <argsstring></argsstring>
        <name>generic_size_t</name>
        <briefdescription>
<para>Represents a size of generic memory. </para>
        </briefdescription>
        <detaileddescription>
<para>A generic address is wide enough to store both physical and virtual addresses.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="62" column="22" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a0b97275e3285da224f034b8c85b77069" prot="public" static="no">
        <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
        <definition>typedef int64 nanotime_t</definition>
        <argsstring></argsstring>
        <name>nanotime_t</name>
        <briefdescription>
<para>Represents time in nanoseconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="54" column="14" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" prot="public" static="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>typedef uint32 perform_code</definition>
        <argsstring></argsstring>
        <name>perform_code</name>
        <briefdescription>
<para>Defined to support &apos;hidden&apos; commands or extensions to classes. </para>
        </briefdescription>
        <detaileddescription>
<para>The Haiku API has none of these.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="56" column="15" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a7cc3278721fbe4920855844165754c06" prot="public" static="no">
        <type>__haiku_phys_addr_t</type>
        <definition>typedef __haiku_phys_addr_t phys_addr_t</definition>
        <argsstring></argsstring>
        <name>phys_addr_t</name>
        <briefdescription>
<para>Represents a physical address. </para>
        </briefdescription>
        <detaileddescription>
<para>This has the length of 4 bytes on a 32 bit platform, and 8 bytes on a 64 bit platform.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="58" column="28" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a7bf8719e9c5a5a55f7f55e3542619ffa" prot="public" static="no">
        <type><ref refid="SupportDefs_8h_1a7cc3278721fbe4920855844165754c06" kindref="member">phys_addr_t</ref></type>
        <definition>typedef phys_addr_t phys_size_t</definition>
        <argsstring></argsstring>
        <name>phys_size_t</name>
        <briefdescription>
<para>Represents a size of physical memory. </para>
        </briefdescription>
        <detaileddescription>
<para>This has the length of 4 bytes on a 32 bit platform, and 8 bytes on a 64 bit platform.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="59" column="20" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" prot="public" static="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>typedef int32 status_t</definition>
        <argsstring></argsstring>
        <name>status_t</name>
        <briefdescription>
<para>Represents one of the status codes defined in Errors.h. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="52" column="14" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SupportDefs_8h_1a3b69a2260ff2e376327f0f05542b9536" prot="public" static="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>typedef uint32 type_code</definition>
        <argsstring></argsstring>
        <name>type_code</name>
        <briefdescription>
<para>Represents a certain type of data. See <ref refid="TypeConstants_8h" kindref="compound">TypeConstants.h</ref> for possible values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="55" column="15" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="SupportDefs_8h_1ab446cb00349fafce7c29daffb169939f" prot="public" static="no">
        <name>B_COUNT_OF</name>
        <param><defname>a</defname></param>
        <initializer>(sizeof(a) / sizeof(a[0]))</initializer>
        <briefdescription>
<para>Count items in an array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set to (sizeof(a) / sizeof(a[0])).</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="242" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a68a0f2848fd396d7266da2e2c23d6ff6" prot="public" static="no">
        <name>max_c</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a)&gt;(b)?(a):(b))</initializer>
        <briefdescription>
<para>Returns the maximum of values a and b. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>When including this header in a C file, use the C equivalent called <computeroutput>max(a,b)</computeroutput>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="217" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1aac8c3093261fbc3f067492f61a9109e5" prot="public" static="no">
        <name>min_c</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a)&gt;(b)?(b):(a))</initializer>
        <briefdescription>
<para>Returns the minimum of the values a and b. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>When including this header in a C file, use the C equivalent called <computeroutput>min(a,b)</computeroutput>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="216" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" prot="public" static="no">
        <name>NULL</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>Defines the constant <computeroutput>NULL</computeroutput> if it hasn&apos;t already been defined. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="226" column="10" bodyfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="SupportDefs_8h_1ad830d69229cd76e5095af3a12a69f901" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * B_EMPTY_STRING</definition>
        <argsstring></argsstring>
        <name>B_EMPTY_STRING</name>
        <briefdescription>
<para>Defines an empty string. Currently defined as the string &quot;&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="201" column="19" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="201" declcolumn="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__support__globals_1ga8a7c9722b2dcc2d6a92da0d8e6809390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 atomic_add</definition>
        <argsstring>(int32 *value, int32 addValue)</argsstring>
        <name>atomic_add</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>addValue</declname>
        </param>
        <briefdescription>
<para>Atomically add the value of <emphasis>addValue</emphasis> to <emphasis>value</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of performing the <computeroutput>*value</computeroutput> <computeroutput>+=</computeroutput> <computeroutput>addValue</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case.</para>
<para><simplesect kind="return"><para>The original value of <computeroutput>value</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga3cc98e39c62b37089aa6ce270244f636" kindref="member">atomic_add64()</ref> for a version that works on <computeroutput>long</computeroutput> <computeroutput>long</computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga07b69379f20df5cfc6a7506a69364d80" kindref="member">atomic_get_and_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad6d9cc999081f5f54afe500b8ab22a31" kindref="member">atomic_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad5e8491539af69445d3eaea7818166e4" kindref="member">atomic_test_and_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gac0f5dbcaa491161a6ab6f16ac1c1bca3" kindref="member">atomic_and()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga7ea6205f09f65652dd5b35987e570a20" kindref="member">atomic_or()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga61648da3ddc2f3df3c0b08b14b5dd09e" kindref="member">atomic_get()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="372" column="13" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="372" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1ga3cc98e39c62b37089aa6ce270244f636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
        <definition>int64 atomic_add64</definition>
        <argsstring>(int64 *value, int64 addValue)</argsstring>
        <name>atomic_add64</name>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
          <declname>addValue</declname>
        </param>
        <briefdescription>
<para>Atomically add the value of <emphasis>addValue</emphasis> to <emphasis>value</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of performing the <computeroutput>*value</computeroutput> <computeroutput>+=</computeroutput> <computeroutput>addValue</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case.</para>
<para><simplesect kind="return"><para>The original value of <computeroutput>value</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga8a7c9722b2dcc2d6a92da0d8e6809390" kindref="member">atomic_add()</ref> for a version that works on an <computeroutput><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gaa28eab35df67e1b51685340a00c61484" kindref="member">atomic_get_and_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga90492800f50ed0520d6b82408436b551" kindref="member">atomic_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga18987c30eda4e56c0111528af4dd8d9c" kindref="member">atomic_test_and_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga2ffe7f5af9390fa80744a35be7796177" kindref="member">atomic_and64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga58bc6786c1eab83a64b31bdb44db5634" kindref="member">atomic_or64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gae15a75fb3937e2497baf8989cf6206af" kindref="member">atomic_get64()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="380" column="13" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="380" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1gac0f5dbcaa491161a6ab6f16ac1c1bca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 atomic_and</definition>
        <argsstring>(int32 *value, int32 andValue)</argsstring>
        <name>atomic_and</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>andValue</declname>
        </param>
        <briefdescription>
<para>Atomically perform a bitwise AND operation of <emphasis>andValue</emphasis> to the variable <emphasis>andValue</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of performing the <computeroutput>*value</computeroutput> <computeroutput>&amp;=</computeroutput> <computeroutput>andValue</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case.</para>
<para><simplesect kind="return"><para>The original value of <computeroutput>value</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga2ffe7f5af9390fa80744a35be7796177" kindref="member">atomic_and64()</ref> for a version that works on <computeroutput>long</computeroutput> <computeroutput>long</computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga07b69379f20df5cfc6a7506a69364d80" kindref="member">atomic_get_and_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad6d9cc999081f5f54afe500b8ab22a31" kindref="member">atomic_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad5e8491539af69445d3eaea7818166e4" kindref="member">atomic_test_and_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga8a7c9722b2dcc2d6a92da0d8e6809390" kindref="member">atomic_add()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga7ea6205f09f65652dd5b35987e570a20" kindref="member">atomic_or()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga61648da3ddc2f3df3c0b08b14b5dd09e" kindref="member">atomic_get()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="373" column="13" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="373" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1ga2ffe7f5af9390fa80744a35be7796177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
        <definition>int64 atomic_and64</definition>
        <argsstring>(int64 *value, int64 andValue)</argsstring>
        <name>atomic_and64</name>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
          <declname>andValue</declname>
        </param>
        <briefdescription>
<para>Atomically perform a bitwise AND operation of <emphasis>andValue</emphasis> to the variable <emphasis>andValue</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of performing the <computeroutput>*value</computeroutput> <computeroutput>&amp;=</computeroutput> <computeroutput>andValue</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case.</para>
<para><simplesect kind="return"><para>The original value of <computeroutput>value</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gac0f5dbcaa491161a6ab6f16ac1c1bca3" kindref="member">atomic_and()</ref> for a version that works on an <computeroutput><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gaa28eab35df67e1b51685340a00c61484" kindref="member">atomic_get_and_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga90492800f50ed0520d6b82408436b551" kindref="member">atomic_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga18987c30eda4e56c0111528af4dd8d9c" kindref="member">atomic_test_and_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga3cc98e39c62b37089aa6ce270244f636" kindref="member">atomic_add64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga58bc6786c1eab83a64b31bdb44db5634" kindref="member">atomic_or64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gae15a75fb3937e2497baf8989cf6206af" kindref="member">atomic_get64()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="381" column="13" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="381" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1ga61648da3ddc2f3df3c0b08b14b5dd09e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 atomic_get</definition>
        <argsstring>(int32 *value)</argsstring>
        <name>atomic_get</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Atomically return the value of <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of reading the contents of the <computeroutput>value</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case. The variable must be naturally aligned.</para>
<para><simplesect kind="return"><para>The original value of <computeroutput>value</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gae15a75fb3937e2497baf8989cf6206af" kindref="member">atomic_get64()</ref> for a version that works on <computeroutput>long</computeroutput> <computeroutput>long</computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga07b69379f20df5cfc6a7506a69364d80" kindref="member">atomic_get_and_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad6d9cc999081f5f54afe500b8ab22a31" kindref="member">atomic_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad5e8491539af69445d3eaea7818166e4" kindref="member">atomic_test_and_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga8a7c9722b2dcc2d6a92da0d8e6809390" kindref="member">atomic_add()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gac0f5dbcaa491161a6ab6f16ac1c1bca3" kindref="member">atomic_and()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga7ea6205f09f65652dd5b35987e570a20" kindref="member">atomic_or()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="375" column="13" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="375" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1gae15a75fb3937e2497baf8989cf6206af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
        <definition>int64 atomic_get64</definition>
        <argsstring>(int64 *value)</argsstring>
        <name>atomic_get64</name>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Atomically return the value of <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of reading the contents of the <computeroutput>value</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case. The variable must be naturally aligned.</para>
<para><simplesect kind="return"><para>The original value of <computeroutput>value</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga61648da3ddc2f3df3c0b08b14b5dd09e" kindref="member">atomic_get()</ref> for a version that works on an <computeroutput><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gaa28eab35df67e1b51685340a00c61484" kindref="member">atomic_get_and_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga90492800f50ed0520d6b82408436b551" kindref="member">atomic_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga18987c30eda4e56c0111528af4dd8d9c" kindref="member">atomic_test_and_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga3cc98e39c62b37089aa6ce270244f636" kindref="member">atomic_add64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga2ffe7f5af9390fa80744a35be7796177" kindref="member">atomic_and64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga58bc6786c1eab83a64b31bdb44db5634" kindref="member">atomic_or64()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="383" column="13" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="383" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1ga07b69379f20df5cfc6a7506a69364d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 atomic_get_and_set</definition>
        <argsstring>(int32 *value, int32 newValue)</argsstring>
        <name>atomic_get_and_set</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Atomically set the variable <emphasis>value</emphasis> to <emphasis>newvalue</emphasis> and return the old value. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of performing the <computeroutput>*value</computeroutput> <computeroutput>=</computeroutput> <computeroutput>newValue</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case.</para>
<para><simplesect kind="return"><para>The original value of <computeroutput>value</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gaa28eab35df67e1b51685340a00c61484" kindref="member">atomic_get_and_set64()</ref> for a version that works on <computeroutput>long</computeroutput> <computeroutput>long</computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad6d9cc999081f5f54afe500b8ab22a31" kindref="member">atomic_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad5e8491539af69445d3eaea7818166e4" kindref="member">atomic_test_and_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga8a7c9722b2dcc2d6a92da0d8e6809390" kindref="member">atomic_add()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gac0f5dbcaa491161a6ab6f16ac1c1bca3" kindref="member">atomic_and()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga7ea6205f09f65652dd5b35987e570a20" kindref="member">atomic_or()</ref>, </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga61648da3ddc2f3df3c0b08b14b5dd09e" kindref="member">atomic_get()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="370" column="13" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="370" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1gaa28eab35df67e1b51685340a00c61484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
        <definition>int64 atomic_get_and_set64</definition>
        <argsstring>(int64 *value, int64 newValue)</argsstring>
        <name>atomic_get_and_set64</name>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Atomically set the variable <emphasis>value</emphasis> to <emphasis>newvalue</emphasis> and return the old value. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of performing the <computeroutput>*value</computeroutput> <computeroutput>=</computeroutput> <computeroutput>newValue</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case.</para>
<para><simplesect kind="return"><para>The original value of <computeroutput>value</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga07b69379f20df5cfc6a7506a69364d80" kindref="member">atomic_get_and_set()</ref> for a version that works on an <computeroutput><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga90492800f50ed0520d6b82408436b551" kindref="member">atomic_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga18987c30eda4e56c0111528af4dd8d9c" kindref="member">atomic_test_and_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga3cc98e39c62b37089aa6ce270244f636" kindref="member">atomic_add64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga2ffe7f5af9390fa80744a35be7796177" kindref="member">atomic_and64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga58bc6786c1eab83a64b31bdb44db5634" kindref="member">atomic_or64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gae15a75fb3937e2497baf8989cf6206af" kindref="member">atomic_get64()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="378" column="13" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="378" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1ga7ea6205f09f65652dd5b35987e570a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 atomic_or</definition>
        <argsstring>(int32 *value, int32 orValue)</argsstring>
        <name>atomic_or</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>orValue</declname>
        </param>
        <briefdescription>
<para>Atomically perform a bitwise OR operation of <emphasis>orValue</emphasis> to the variable <emphasis>andValue</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of performing the <computeroutput>*value</computeroutput> <computeroutput></computeroutput>|= <computeroutput>orValue</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case.</para>
<para><simplesect kind="return"><para>The original value of <computeroutput>value</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga58bc6786c1eab83a64b31bdb44db5634" kindref="member">atomic_or64()</ref> for a version that works on <computeroutput>long</computeroutput> <computeroutput>long</computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga07b69379f20df5cfc6a7506a69364d80" kindref="member">atomic_get_and_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad6d9cc999081f5f54afe500b8ab22a31" kindref="member">atomic_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad5e8491539af69445d3eaea7818166e4" kindref="member">atomic_test_and_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga8a7c9722b2dcc2d6a92da0d8e6809390" kindref="member">atomic_add()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gac0f5dbcaa491161a6ab6f16ac1c1bca3" kindref="member">atomic_and()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga61648da3ddc2f3df3c0b08b14b5dd09e" kindref="member">atomic_get()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="374" column="13" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="374" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1ga58bc6786c1eab83a64b31bdb44db5634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
        <definition>int64 atomic_or64</definition>
        <argsstring>(int64 *value, int64 orValue)</argsstring>
        <name>atomic_or64</name>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
          <declname>orValue</declname>
        </param>
        <briefdescription>
<para>Atomically perform a bitwise OR operation of <emphasis>orValue</emphasis> to the variable <emphasis>andValue</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of performing the <computeroutput>*value</computeroutput> <computeroutput></computeroutput>|= <computeroutput>orValue</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case.</para>
<para><simplesect kind="return"><para>The original value of <computeroutput>value</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga7ea6205f09f65652dd5b35987e570a20" kindref="member">atomic_or()</ref> for a version that works on an <computeroutput><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gaa28eab35df67e1b51685340a00c61484" kindref="member">atomic_get_and_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga90492800f50ed0520d6b82408436b551" kindref="member">atomic_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga18987c30eda4e56c0111528af4dd8d9c" kindref="member">atomic_test_and_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga3cc98e39c62b37089aa6ce270244f636" kindref="member">atomic_add64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga2ffe7f5af9390fa80744a35be7796177" kindref="member">atomic_and64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gae15a75fb3937e2497baf8989cf6206af" kindref="member">atomic_get64()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="382" column="13" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="382" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1gad6d9cc999081f5f54afe500b8ab22a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atomic_set</definition>
        <argsstring>(int32 *value, int32 newValue)</argsstring>
        <name>atomic_set</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Atomically set the variable <emphasis>value</emphasis> to <emphasis>newvalue</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of performing the <computeroutput>*value</computeroutput> <computeroutput>=</computeroutput> <computeroutput>newValue</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case. The variable must be naturally aligned.</para>
<para><simplesect kind="see"><para><ref refid="group__support__globals_1ga90492800f50ed0520d6b82408436b551" kindref="member">atomic_set64()</ref> for a version that works on <computeroutput>long</computeroutput> <computeroutput>long</computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad5e8491539af69445d3eaea7818166e4" kindref="member">atomic_test_and_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga8a7c9722b2dcc2d6a92da0d8e6809390" kindref="member">atomic_add()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gac0f5dbcaa491161a6ab6f16ac1c1bca3" kindref="member">atomic_and()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga7ea6205f09f65652dd5b35987e570a20" kindref="member">atomic_or()</ref>, </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga61648da3ddc2f3df3c0b08b14b5dd09e" kindref="member">atomic_get()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="369" column="12" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="369" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1ga90492800f50ed0520d6b82408436b551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atomic_set64</definition>
        <argsstring>(int64 *value, int64 newValue)</argsstring>
        <name>atomic_set64</name>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Atomically set the variable <emphasis>value</emphasis> to <emphasis>newvalue</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of performing the <computeroutput>*value</computeroutput> <computeroutput>=</computeroutput> <computeroutput>newValue</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case. The variable must be naturally aligned.</para>
<para><simplesect kind="see"><para><ref refid="group__support__globals_1gad6d9cc999081f5f54afe500b8ab22a31" kindref="member">atomic_set()</ref> for a version that works on an <computeroutput><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gaa28eab35df67e1b51685340a00c61484" kindref="member">atomic_get_and_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga18987c30eda4e56c0111528af4dd8d9c" kindref="member">atomic_test_and_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga3cc98e39c62b37089aa6ce270244f636" kindref="member">atomic_add64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga2ffe7f5af9390fa80744a35be7796177" kindref="member">atomic_and64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga58bc6786c1eab83a64b31bdb44db5634" kindref="member">atomic_or64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gae15a75fb3937e2497baf8989cf6206af" kindref="member">atomic_get64()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="377" column="12" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="377" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1gad5e8491539af69445d3eaea7818166e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 atomic_test_and_set</definition>
        <argsstring>(int32 *value, int32 newValue, int32 testAgainst)</argsstring>
        <name>atomic_test_and_set</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>testAgainst</declname>
        </param>
        <briefdescription>
<para>Atomically set the variable <emphasis>value</emphasis> to <emphasis>newValue</emphasis> if the current value is <emphasis>testAgainst</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of conditionally performing the <computeroutput>*value</computeroutput> <computeroutput>+=</computeroutput> <computeroutput>newValue</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case.</para>
<para><simplesect kind="return"><para>The original value of <computeroutput>value</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga18987c30eda4e56c0111528af4dd8d9c" kindref="member">atomic_test_and_set64()</ref> for a version that works on <computeroutput>long</computeroutput> <computeroutput>long</computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga07b69379f20df5cfc6a7506a69364d80" kindref="member">atomic_get_and_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad6d9cc999081f5f54afe500b8ab22a31" kindref="member">atomic_set()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga8a7c9722b2dcc2d6a92da0d8e6809390" kindref="member">atomic_add()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gac0f5dbcaa491161a6ab6f16ac1c1bca3" kindref="member">atomic_and()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga7ea6205f09f65652dd5b35987e570a20" kindref="member">atomic_or()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga61648da3ddc2f3df3c0b08b14b5dd09e" kindref="member">atomic_get()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="371" column="13" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="371" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__support__globals_1ga18987c30eda4e56c0111528af4dd8d9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
        <definition>int64 atomic_test_and_set64</definition>
        <argsstring>(int64 *value, int64 newValue, int64 testAgainst)</argsstring>
        <name>atomic_test_and_set64</name>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></type>
          <declname>testAgainst</declname>
        </param>
        <briefdescription>
<para>Atomically set the variable <emphasis>value</emphasis> to <emphasis>newValue</emphasis> if the current value is <emphasis>testAgainst</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a thread-safe way of conditionally performing the <computeroutput>*value</computeroutput> <computeroutput>+=</computeroutput> <computeroutput>newValue</computeroutput> operation. You should use these function when two or more threads might access the variable simultaneously. You don&apos;t have to use a semaphore or a mutex in this case.</para>
<para><simplesect kind="return"><para>The original value of <computeroutput>value</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gad5e8491539af69445d3eaea7818166e4" kindref="member">atomic_test_and_set()</ref> for a version that works on an <computeroutput><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gaa28eab35df67e1b51685340a00c61484" kindref="member">atomic_get_and_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga90492800f50ed0520d6b82408436b551" kindref="member">atomic_set64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga3cc98e39c62b37089aa6ce270244f636" kindref="member">atomic_add64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga2ffe7f5af9390fa80744a35be7796177" kindref="member">atomic_and64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga58bc6786c1eab83a64b31bdb44db5634" kindref="member">atomic_or64()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1gae15a75fb3937e2497baf8989cf6206af" kindref="member">atomic_get64()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="379" column="13" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="379" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="SupportDefs_8h_1ad30827f90f9a982d2246b53123dd44c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * get_stack_frame</definition>
        <argsstring>(void)</argsstring>
        <name>get_stack_frame</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Internal function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h" line="235" column="12" declfile="/boot/home/src/haiku/headers/os/support/SupportDefs.h" declline="235" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines basic types and definitions for the Haiku API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2004-2010<sp/>Haiku,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>MIT<sp/>License.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Author:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Erik<sp/>Jaesler<sp/>(erik@cgsoftware.com)</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SUPPORT_DEFS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SUPPORT_DEFS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;BeBuild.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Errors.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fixed-size<sp/>integer<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="SupportDefs_8h_1ac69a93dcc865c5e4aa2072cac9002aeb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__haiku_int8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ac69a93dcc865c5e4aa2072cac9002aeb" kindref="member">int8</ref>;</highlight></codeline>
<codeline lineno="21" refid="SupportDefs_8h_1ac56eeb3040e225fafe52dc1872233eeb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__haiku_uint8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ac56eeb3040e225fafe52dc1872233eeb" kindref="member">uint8</ref>;</highlight></codeline>
<codeline lineno="22" refid="SupportDefs_8h_1acadaa1c2888dd031d14fed9b272333a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__haiku_int16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1acadaa1c2888dd031d14fed9b272333a7" kindref="member">int16</ref>;</highlight></codeline>
<codeline lineno="23" refid="SupportDefs_8h_1ac267cdaa9a4909f02aa2fc83cc7da477" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__haiku_uint16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ac267cdaa9a4909f02aa2fc83cc7da477" kindref="member">uint16</ref>;</highlight></codeline>
<codeline lineno="24" refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__haiku_int32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>;</highlight></codeline>
<codeline lineno="25" refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__haiku_uint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref>;</highlight></codeline>
<codeline lineno="26" refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__haiku_int64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref>;</highlight></codeline>
<codeline lineno="27" refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__haiku_uint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>shorthand<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="SupportDefs_8h_1a86481a6d93b553c50d604c7309f5ef66" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1ac69a93dcc865c5e4aa2072cac9002aeb" kindref="member">int8</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a86481a6d93b553c50d604c7309f5ef66" kindref="member">vint8</ref>;</highlight></codeline>
<codeline lineno="31" refid="SupportDefs_8h_1aa535537fa6c83a394c5f89640c423617" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1ac56eeb3040e225fafe52dc1872233eeb" kindref="member">uint8</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1aa535537fa6c83a394c5f89640c423617" kindref="member">vuint8</ref>;</highlight></codeline>
<codeline lineno="32" refid="SupportDefs_8h_1af210709d21a1c5b93e6313ae2e3132a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1acadaa1c2888dd031d14fed9b272333a7" kindref="member">int16</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1af210709d21a1c5b93e6313ae2e3132a5" kindref="member">vint16</ref>;</highlight></codeline>
<codeline lineno="33" refid="SupportDefs_8h_1a8170fa7d9071cf27ef5f9bd8baa60bcc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1ac267cdaa9a4909f02aa2fc83cc7da477" kindref="member">uint16</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a8170fa7d9071cf27ef5f9bd8baa60bcc" kindref="member">vuint16</ref>;</highlight></codeline>
<codeline lineno="34" refid="SupportDefs_8h_1adf83762eea0b8a8c073aacab58cbcf9c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1adf83762eea0b8a8c073aacab58cbcf9c" kindref="member">vint32</ref>;</highlight></codeline>
<codeline lineno="35" refid="SupportDefs_8h_1a922617de9890c61faf2354b09832141e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a922617de9890c61faf2354b09832141e" kindref="member">vuint32</ref>;</highlight></codeline>
<codeline lineno="36" refid="SupportDefs_8h_1a7864afde07627641b17df7afbe9853d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a7864afde07627641b17df7afbe9853d4" kindref="member">vint64</ref>;</highlight></codeline>
<codeline lineno="37" refid="SupportDefs_8h_1abecb528ccfa1bfa51b80587ec1ade08a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1abecb528ccfa1bfa51b80587ec1ade08a" kindref="member">vuint64</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="SupportDefs_8h_1ad3ea6701fa476297d1297b0d519d7087" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ad3ea6701fa476297d1297b0d519d7087" kindref="member">vlong</ref>;</highlight></codeline>
<codeline lineno="40" refid="SupportDefs_8h_1a645cdc646c422e53a9f5fa68eabfffa1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a645cdc646c422e53a9f5fa68eabfffa1" kindref="member">vint</ref>;</highlight></codeline>
<codeline lineno="41" refid="SupportDefs_8h_1a3fd99bccbf44d13ef081a62243127e97" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a3fd99bccbf44d13ef081a62243127e97" kindref="member">vshort</ref>;</highlight></codeline>
<codeline lineno="42" refid="SupportDefs_8h_1a0185b1aeb65681c33cb657764ab1380e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a0185b1aeb65681c33cb657764ab1380e" kindref="member">vchar</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="SupportDefs_8h_1aed7af8ab3c715eec0856610de1e5ac8a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><ref refid="SupportDefs_8h_1aed7af8ab3c715eec0856610de1e5ac8a" kindref="member">vulong</ref>;</highlight></codeline>
<codeline lineno="45" refid="SupportDefs_8h_1ac61b4c541f7d83ffdd9c3f3e1601bd00" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ac61b4c541f7d83ffdd9c3f3e1601bd00" kindref="member">vuint</ref>;</highlight></codeline>
<codeline lineno="46" refid="SupportDefs_8h_1a2aedc7cff41eb3df15a0c8fbef31a220" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a2aedc7cff41eb3df15a0c8fbef31a220" kindref="member">vushort</ref>;</highlight></codeline>
<codeline lineno="47" refid="SupportDefs_8h_1ab80e518e0204bdd69af46f618742811f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><ref refid="SupportDefs_8h_1ab80e518e0204bdd69af46f618742811f" kindref="member">vuchar</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="SupportDefs_8h_1a65f85814a8290f9797005d3b28e7e5fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>descriptive<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref>;</highlight></codeline>
<codeline lineno="53" refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref>;</highlight></codeline>
<codeline lineno="54" refid="SupportDefs_8h_1a0b97275e3285da224f034b8c85b77069" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a0b97275e3285da224f034b8c85b77069" kindref="member">nanotime_t</ref>;</highlight></codeline>
<codeline lineno="55" refid="SupportDefs_8h_1a3b69a2260ff2e376327f0f05542b9536" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a3b69a2260ff2e376327f0f05542b9536" kindref="member">type_code</ref>;</highlight></codeline>
<codeline lineno="56" refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" kindref="member">perform_code</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="SupportDefs_8h_1a7cc3278721fbe4920855844165754c06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__haiku_phys_addr_t<sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a7cc3278721fbe4920855844165754c06" kindref="member">phys_addr_t</ref>;</highlight></codeline>
<codeline lineno="59" refid="SupportDefs_8h_1a7bf8719e9c5a5a55f7f55e3542619ffa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a7cc3278721fbe4920855844165754c06" kindref="member">phys_addr_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a7bf8719e9c5a5a55f7f55e3542619ffa" kindref="member">phys_size_t</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="SupportDefs_8h_1a4725626079eb499d1846f7c85bb8772e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__haiku_generic_addr_t<sp/><sp/><ref refid="SupportDefs_8h_1a4725626079eb499d1846f7c85bb8772e" kindref="member">generic_addr_t</ref>;</highlight></codeline>
<codeline lineno="62" refid="SupportDefs_8h_1a09fccb04407a72fb40c559692e9c86e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a4725626079eb499d1846f7c85bb8772e" kindref="member">generic_addr_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1a09fccb04407a72fb40c559692e9c86e2" kindref="member">generic_size_t</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>printf()/scanf()<sp/>format<sp/>strings<sp/>for<sp/>[u]int*<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="SupportDefs_8h_1acbc6dadea25d119db18c3678e1eec366" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRId8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="SupportDefs_8h_1a4473e6eba578daa3fdc9d88d2c6c1015" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIi8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;i&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="SupportDefs_8h_1a0969fa9dac055f91eebe733902dd928a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRId16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="SupportDefs_8h_1a09bffd2c44cb4d8f6d09579313618194" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIi16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;i&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="SupportDefs_8h_1a466bfe69cb03f9688b1b84a29b637cc8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRId32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_32<sp/>&quot;d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="SupportDefs_8h_1a6e31a508d063c7277f37fdcdc009f6da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIi32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_32<sp/>&quot;i&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="SupportDefs_8h_1a135b59c53616335468d415a6073e80be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRId64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_64<sp/>&quot;d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="SupportDefs_8h_1a9678888dd3d4f924fdeac1a4f6bec416" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIi64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_64<sp/>&quot;i&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="SupportDefs_8h_1af4c992f053b17655b80554e14569a888" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIu8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="SupportDefs_8h_1ab60a1113b2ed48a4151034b90355cdf8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIo8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="SupportDefs_8h_1a6fb9ff42ef818cab485ecc3d073f61df" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIx8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="SupportDefs_8h_1aaedb55c5812b63ed5f62248b267cad92" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIX8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="SupportDefs_8h_1a7ab0775c878a8db2cbf7ac22832391e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIu16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="SupportDefs_8h_1a9d8651a6122e17a1fb2c59f475b60894" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIo16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="SupportDefs_8h_1a078e7d80a8ac385bcd5eaf2e53068cae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIx16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="SupportDefs_8h_1a0d29d8851643064656546996ce43ae2a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIX16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="SupportDefs_8h_1a4d1fe122ec8153875477c9df6886ed2f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIu32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_32<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="SupportDefs_8h_1a307911ed45caaf4959909cccd203965f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIo32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_32<sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="SupportDefs_8h_1a2f2ff944a35de233b4dc629bd70874d0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIx32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_32<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="SupportDefs_8h_1aef93b378755e1402917fe1b1f1fc6bd5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIX32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_32<sp/>&quot;X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="SupportDefs_8h_1aac66ac68bbcc8f9cb0eafd4a7e4add86" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIu64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_64<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="SupportDefs_8h_1ad9cc24d8e64a15198bdf472f6f5dceee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIo64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_64<sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="SupportDefs_8h_1a8b7becabbcfbc60ede68a5830e7cc2cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIx64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_64<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="SupportDefs_8h_1a2d827ab72fa0c26b24a82ca6e5499568" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIX64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_64<sp/>&quot;X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="SupportDefs_8h_1a6e9904c7f07c910dca7176a59d9de0a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNd8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;hhd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="SupportDefs_8h_1a370309923a271181bffc2a56cd83dc74" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNi8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;hhi&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="SupportDefs_8h_1ab0751714b80eab3704d60055d4ededc7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNd16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;hd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="SupportDefs_8h_1a1c502b40d8922a1a4d5d206657e82bb6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNi16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;hi&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="SupportDefs_8h_1a9cac12b39c59661b7a6e20d67767deb1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNd32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_32<sp/>&quot;d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="SupportDefs_8h_1a77670868cb09746804ed03f6cc9ff6aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNi32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_32<sp/>&quot;i&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="SupportDefs_8h_1a0b0dbd4be15682e50e017b7efe33200e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNd64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_64<sp/>&quot;d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="SupportDefs_8h_1ab158ae035462cfdf562ab69ce4bc7c13" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNi64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_64<sp/>&quot;i&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="SupportDefs_8h_1a57a0f912c30734b01ea57ba92615b21b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNu8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;hhu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="SupportDefs_8h_1abebc6507f1872e9cd31ed4a6b2cc38f9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNo8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;hho&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="SupportDefs_8h_1a047814351c801a73bdecdff90e4486da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNx8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;hhx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="SupportDefs_8h_1af89965848189ec4c0fea5888ba98b260" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNu16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;hu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="SupportDefs_8h_1af578199b116510ee57eba509f70d6927" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNo16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;ho&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="SupportDefs_8h_1a66731c80621bef85b57e293147591541" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNx16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;hx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="SupportDefs_8h_1a36f3ac95b363a030db3b39d1d4597402" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNu32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_32<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="SupportDefs_8h_1ac624d783b1c4a86563b527855b24239a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNo32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_32<sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="SupportDefs_8h_1a2ba1057fa2df1ab7b56916e281285083" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNx32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_32<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="SupportDefs_8h_1ae1f5f8ff87165c559cda9ed031647f3d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNu64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_64<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="SupportDefs_8h_1aa513a9a5ce812e4d9b6b5de407629f9e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNo64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_64<sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="SupportDefs_8h_1a92e2b65e928d096524876ef3904ebfcb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNx64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_64<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>printf()/scanf()<sp/>format<sp/>strings<sp/>for<sp/>some<sp/>standard<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>size_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="SupportDefs_8h_1ada4f6c2206c0e2ca102851a414398508" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIuSIZE<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="SupportDefs_8h_1ac66ce4da727fa72d19d1a2946505c913" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIoSIZE<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="SupportDefs_8h_1a43839ef9884f7d4f06bba8966a8ae57a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIxSIZE<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="SupportDefs_8h_1ad80c597e6eeb9ee0e970370cfa1cf4b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIXSIZE<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="SupportDefs_8h_1af83f441281c45938d49eb4027deb1140" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNuSIZE<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="SupportDefs_8h_1a3cef2aecd4fc37660bc2e9dbe7081cf4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNoSIZE<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="SupportDefs_8h_1aa933fd36fe66bc7a8044d4a030d147fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNxSIZE<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ssize_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="SupportDefs_8h_1ae6e9c98f4fc728493097d574ab1724c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIdSSIZE<sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="SupportDefs_8h_1a6bca556f9e4f779c571e445cc85d18f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIiSSIZE<sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;i&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="SupportDefs_8h_1a868d40ae557b55ffa9342ef93e2f0a53" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNdSSIZE<sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="SupportDefs_8h_1affa60fbe6a10ceaa4d716d2f6336e8a9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNiSSIZE<sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;i&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>addr_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="SupportDefs_8h_1a8facab064b5a655b8d4eacc33b6666ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIuADDR<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="SupportDefs_8h_1a98bbec1c3164a5a2a94aa28e052d2c5f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIoADDR<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="SupportDefs_8h_1abfc495c5c7e693533c8b72da398bfa8f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIxADDR<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="SupportDefs_8h_1a877a70ee7312f94be24473c320f2c47b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIXADDR<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="SupportDefs_8h_1aa8de012df257344b326c1cd3f0ee680a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNuADDR<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="SupportDefs_8h_1a6e499c161c75c1c56305b3a72dcf2997" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNoADDR<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="SupportDefs_8h_1a7def8efe8b78ef5022c52b84727ddf07" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNxADDR<sp/><sp/><sp/><sp/><sp/><sp/>__HAIKU_PRI_PREFIX_ADDR<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>phys_addr_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="SupportDefs_8h_1adcccadefe4aa5459dab42509d4959ba8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIuPHYSADDR<sp/><sp/>__HAIKU_PRI_PREFIX_PHYS_ADDR<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="SupportDefs_8h_1a8437caa1d7cdd4fef67988955844f993" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIoPHYSADDR<sp/><sp/>__HAIKU_PRI_PREFIX_PHYS_ADDR<sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="SupportDefs_8h_1a73b326ca82a0fbbbefefb99a7c43e1eb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIxPHYSADDR<sp/><sp/>__HAIKU_PRI_PREFIX_PHYS_ADDR<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="SupportDefs_8h_1adcca499248478d39dbb03eb5da1ad113" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIXPHYSADDR<sp/><sp/>__HAIKU_PRI_PREFIX_PHYS_ADDR<sp/>&quot;X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="SupportDefs_8h_1acf1d00b87543459323824692511f0ecc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNuPHYSADDR<sp/><sp/>__HAIKU_PRI_PREFIX_PHYS_ADDR<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="SupportDefs_8h_1acb1592bdcf9e44c87177835b9568331a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNoPHYSADDR<sp/><sp/>__HAIKU_PRI_PREFIX_PHYS_ADDR<sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="SupportDefs_8h_1a54495a0a683979950f1726c541f33d00" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNxPHYSADDR<sp/><sp/>__HAIKU_PRI_PREFIX_PHYS_ADDR<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>generic_addr_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="SupportDefs_8h_1a6a0f386df221a79c89b7de1bfeec79a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIuGENADDR<sp/><sp/><sp/>__HAIKU_PRI_PREFIX_GENERIC_ADDR<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="SupportDefs_8h_1ade45e0f62e4d44cbadfc5d34b9edbe76" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIoGENADDR<sp/><sp/><sp/>__HAIKU_PRI_PREFIX_GENERIC_ADDR<sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="SupportDefs_8h_1ab1f989ac01b0ba940069b16d4bbf0017" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIxGENADDR<sp/><sp/><sp/>__HAIKU_PRI_PREFIX_GENERIC_ADDR<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="SupportDefs_8h_1a9d7d1626d7f24bcb07a650345a326334" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIXGENADDR<sp/><sp/><sp/>__HAIKU_PRI_PREFIX_GENERIC_ADDR<sp/>&quot;X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="SupportDefs_8h_1a41d92167b6b89dfb60dec102b440a2a8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNuGENADDR<sp/><sp/><sp/>__HAIKU_PRI_PREFIX_GENERIC_ADDR<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="SupportDefs_8h_1ad086009f43e6c2c5873fdc5f8baaa28f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNoGENADDR<sp/><sp/><sp/>__HAIKU_PRI_PREFIX_GENERIC_ADDR<sp/>&quot;o&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="SupportDefs_8h_1a433842ef64965efa7befb63fdc13154c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNxGENADDR<sp/><sp/><sp/>__HAIKU_PRI_PREFIX_GENERIC_ADDR<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>off_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="SupportDefs_8h_1afa94cafc5ab7693759a4c32388f9171a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIdOFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_PRId64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="SupportDefs_8h_1a819a1f6c2e6d6d261176765da7b2a0c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIiOFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_PRIi64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="SupportDefs_8h_1a74685041d6ecd11ed18c8610d87ec602" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIxOFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_PRIx64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="SupportDefs_8h_1ae046fa2511020e477b539aa829ed9b6d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNdOFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_SCNd64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="SupportDefs_8h_1a3166be461ad503f422b002aced95d2d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNiOFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_SCNi64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="SupportDefs_8h_1a205e704473153ee409597ecabdf0b9b2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SCNxOFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_SCNx64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dev_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="SupportDefs_8h_1a679627a83346a2cde3b3c43cffc72b90" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIdDEV<sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_PRId32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="SupportDefs_8h_1ade8a5a4a5e624fcfa59c06696caefe05" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIiDEV<sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_PRIi32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ino_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="SupportDefs_8h_1a2e448abf20a9a2c980b7ae34af49f50f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIdINO<sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_PRId64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="SupportDefs_8h_1aee4e8ad4d80940def8446803bbab2e1d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIiINO<sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_PRIi64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>time_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__i386__)<sp/>&amp;&amp;<sp/>!defined(__x86_64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>B_PRIdTIME<sp/><sp/><sp/>B_PRId32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>B_PRIiTIME<sp/><sp/><sp/>B_PRIi32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="SupportDefs_8h_1ac98f87a212d41138a12de9cf91d74aa4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>B_PRIdTIME<sp/><sp/><sp/>B_PRId64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="SupportDefs_8h_1a10b3d67aaddccf7768a03bdfb51ea442" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>B_PRIiTIME<sp/><sp/><sp/>B_PRIi64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>bigtime_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="SupportDefs_8h_1a7a26f8e3cfa1341eb38ab4810ab4e95c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIdBIGTIME<sp/><sp/><sp/>B_PRId64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="SupportDefs_8h_1ae4ac42504b04bc9f934758440e6217cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_PRIiBIGTIME<sp/><sp/><sp/>B_PRIi64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Printed<sp/>width<sp/>of<sp/>a<sp/>pointer<sp/>with<sp/>the<sp/>%p<sp/>format<sp/>(minus<sp/>0x<sp/>prefix).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>B_HAIKU_64_BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>B_PRINTF_POINTER_WIDTH<sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="SupportDefs_8h_1a9076cc27722ca7ffe13595041d14a056" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>B_PRINTF_POINTER_WIDTH<sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Empty<sp/>string<sp/>(&quot;&quot;)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="SupportDefs_8h_1ad830d69229cd76e5095af3a12a69f901" kindref="member">B_EMPTY_STRING</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>min<sp/>and<sp/>max<sp/>comparisons<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifndef<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>min(a,b)<sp/>((a)&gt;(b)?(b):(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifndef<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>max(a,b)<sp/>((a)&gt;(b)?(a):(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>min()<sp/>and<sp/>max()<sp/>are<sp/>functions<sp/>in<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="SupportDefs_8h_1aac8c3093261fbc3f067492f61a9109e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>min_c(a,b)<sp/>((a)&gt;(b)?(b):(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="SupportDefs_8h_1a68a0f2848fd396d7266da2e2c23d6ff6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>max_c(a,b)<sp/>((a)&gt;(b)?(a):(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Grandfathering<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>NULL<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Other<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="SupportDefs_8h_1ad30827f90f9a982d2246b53123dd44c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><ref refid="SupportDefs_8h_1ad30827f90f9a982d2246b53123dd44c0" kindref="member">get_stack_frame</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Count<sp/>items<sp/>in<sp/>an<sp/>array,<sp/>count_of<sp/>is<sp/>a<sp/>common<sp/>define<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="SupportDefs_8h_1ab446cb00349fafce7c29daffb169939f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_COUNT_OF(a)<sp/>(sizeof(a)<sp/>/<sp/>sizeof(a[0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Obsolete<sp/>or<sp/>discouraged<sp/>API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>use<sp/>&apos;true&apos;<sp/>and<sp/>&apos;false&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FALSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="SupportDefs_8h_1aa93f0eb578d23995850d61f7d61c55c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>FALSE<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TRUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="SupportDefs_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>TRUE<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Use<sp/>the<sp/>built-in<sp/>atomic<sp/>functions,<sp/>if<sp/>requested<sp/>and<sp/>available.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;<sp/>4<sp/>||<sp/>(__GNUC__<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>7)<sp/>||<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><ref refid="group__support__globals_1gad6d9cc999081f5f54afe500b8ab22a31" kindref="member">atomic_set</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>newValue)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>__atomic_store_n(value,<sp/>newValue,<sp/>__ATOMIC_RELEASE);</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><ref refid="group__support__globals_1ga07b69379f20df5cfc6a7506a69364d80" kindref="member">atomic_get_and_set</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>newValue)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__atomic_exchange_n(value,<sp/>newValue,<sp/>__ATOMIC_SEQ_CST);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><ref refid="group__support__globals_1gad5e8491539af69445d3eaea7818166e4" kindref="member">atomic_test_and_set</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>newValue,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>testAgainst)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>__atomic_compare_exchange_n(value,<sp/>&amp;testAgainst,<sp/>newValue,<sp/>1,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ATOMIC_SEQ_CST,<sp/>__ATOMIC_SEQ_CST);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>testAgainst;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><ref refid="group__support__globals_1ga8a7c9722b2dcc2d6a92da0d8e6809390" kindref="member">atomic_add</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>addValue)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__atomic_fetch_add(value,<sp/>addValue,<sp/>__ATOMIC_SEQ_CST);</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><ref refid="group__support__globals_1gac0f5dbcaa491161a6ab6f16ac1c1bca3" kindref="member">atomic_and</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>andValue)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__atomic_fetch_and(value,<sp/>andValue,<sp/>__ATOMIC_SEQ_CST);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="group__support__globals_1ga7ea6205f09f65652dd5b35987e570a20" kindref="member">atomic_or</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>orValue)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__atomic_fetch_or(value,<sp/>orValue,<sp/>__ATOMIC_SEQ_CST);</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><ref refid="group__support__globals_1ga61648da3ddc2f3df3c0b08b14b5dd09e" kindref="member">atomic_get</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__atomic_load_n(value,<sp/>__ATOMIC_ACQUIRE);</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><ref refid="group__support__globals_1ga90492800f50ed0520d6b82408436b551" kindref="member">atomic_set64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>newValue)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>__atomic_store_n(value,<sp/>newValue,<sp/>__ATOMIC_RELEASE);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><ref refid="group__support__globals_1gaa28eab35df67e1b51685340a00c61484" kindref="member">atomic_get_and_set64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>newValue)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__atomic_exchange_n(value,<sp/>newValue,<sp/>__ATOMIC_SEQ_CST);</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><ref refid="group__support__globals_1ga18987c30eda4e56c0111528af4dd8d9c" kindref="member">atomic_test_and_set64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>newValue,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>testAgainst)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>__atomic_compare_exchange_n(value,<sp/>&amp;testAgainst,<sp/>newValue,<sp/>1,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ATOMIC_SEQ_CST,<sp/>__ATOMIC_SEQ_CST);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>testAgainst;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><ref refid="group__support__globals_1ga3cc98e39c62b37089aa6ce270244f636" kindref="member">atomic_add64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>addValue)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__atomic_fetch_add(value,<sp/>addValue,<sp/>__ATOMIC_SEQ_CST);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><ref refid="group__support__globals_1ga2ffe7f5af9390fa80744a35be7796177" kindref="member">atomic_and64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>andValue)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__atomic_fetch_and(value,<sp/>andValue,<sp/>__ATOMIC_SEQ_CST);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><ref refid="group__support__globals_1ga58bc6786c1eab83a64b31bdb44db5634" kindref="member">atomic_or64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>orValue)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__atomic_fetch_or(value,<sp/>orValue,<sp/>__ATOMIC_SEQ_CST);</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__inline__<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><ref refid="group__support__globals_1gae15a75fb3937e2497baf8989cf6206af" kindref="member">atomic_get64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__atomic_load_n(value,<sp/>__ATOMIC_ACQUIRE);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__GNUC__<sp/>&gt;<sp/>4<sp/>||<sp/>(__GNUC__<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>7)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Atomic<sp/>functions;<sp/>previous<sp/>value<sp/>is<sp/>returned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="group__support__globals_1gad6d9cc999081f5f54afe500b8ab22a31" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1gad6d9cc999081f5f54afe500b8ab22a31" kindref="member">atomic_set</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>newValue);</highlight></codeline>
<codeline lineno="370" refid="group__support__globals_1ga07b69379f20df5cfc6a7506a69364d80" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1ga07b69379f20df5cfc6a7506a69364d80" kindref="member">atomic_get_and_set</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>newValue);</highlight></codeline>
<codeline lineno="371" refid="group__support__globals_1gad5e8491539af69445d3eaea7818166e4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1gad5e8491539af69445d3eaea7818166e4" kindref="member">atomic_test_and_set</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>*value,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>newValue,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>testAgainst);</highlight></codeline>
<codeline lineno="372" refid="group__support__globals_1ga8a7c9722b2dcc2d6a92da0d8e6809390" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1ga8a7c9722b2dcc2d6a92da0d8e6809390" kindref="member">atomic_add</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>*value,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>addValue);</highlight></codeline>
<codeline lineno="373" refid="group__support__globals_1gac0f5dbcaa491161a6ab6f16ac1c1bca3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1gac0f5dbcaa491161a6ab6f16ac1c1bca3" kindref="member">atomic_and</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>*value,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>andValue);</highlight></codeline>
<codeline lineno="374" refid="group__support__globals_1ga7ea6205f09f65652dd5b35987e570a20" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1ga7ea6205f09f65652dd5b35987e570a20" kindref="member">atomic_or</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>*value,<sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>orValue);</highlight></codeline>
<codeline lineno="375" refid="group__support__globals_1ga61648da3ddc2f3df3c0b08b14b5dd09e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1ga61648da3ddc2f3df3c0b08b14b5dd09e" kindref="member">atomic_get</ref>(<ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>*value);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="group__support__globals_1ga90492800f50ed0520d6b82408436b551" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1ga90492800f50ed0520d6b82408436b551" kindref="member">atomic_set64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>newValue);</highlight></codeline>
<codeline lineno="378" refid="group__support__globals_1gaa28eab35df67e1b51685340a00c61484" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1gaa28eab35df67e1b51685340a00c61484" kindref="member">atomic_get_and_set64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref>*<sp/>value,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>newValue);</highlight></codeline>
<codeline lineno="379" refid="group__support__globals_1ga18987c30eda4e56c0111528af4dd8d9c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1ga18987c30eda4e56c0111528af4dd8d9c" kindref="member">atomic_test_and_set64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>*value,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>newValue,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>testAgainst);</highlight></codeline>
<codeline lineno="380" refid="group__support__globals_1ga3cc98e39c62b37089aa6ce270244f636" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1ga3cc98e39c62b37089aa6ce270244f636" kindref="member">atomic_add64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>*value,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>addValue);</highlight></codeline>
<codeline lineno="381" refid="group__support__globals_1ga2ffe7f5af9390fa80744a35be7796177" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1ga2ffe7f5af9390fa80744a35be7796177" kindref="member">atomic_and64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>*value,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>andValue);</highlight></codeline>
<codeline lineno="382" refid="group__support__globals_1ga58bc6786c1eab83a64b31bdb44db5634" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1ga58bc6786c1eab83a64b31bdb44db5634" kindref="member">atomic_or64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>*value,<sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>orValue);</highlight></codeline>
<codeline lineno="383" refid="group__support__globals_1gae15a75fb3937e2497baf8989cf6206af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/><sp/><sp/><sp/><ref refid="group__support__globals_1gae15a75fb3937e2497baf8989cf6206af" kindref="member">atomic_get64</ref>(<ref refid="SupportDefs_8h_1abfe468d3544c044c1b17902a4876e7f0" kindref="member">int64</ref><sp/>*value);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>_SUPPORT_DEFS_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/boot/home/src/haiku/headers/os/support/SupportDefs.h"/>
  </compounddef>
</doxygen>
