<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBMenu" kind="class" language="C++" prot="public">
    <compoundname>BMenu</compoundname>
    <basecompoundref refid="classBView" prot="public" virt="non-virtual">BView</basecompoundref>
    <derivedcompoundref refid="classBMenuBar" prot="public" virt="non-virtual">BMenuBar</derivedcompoundref>
    <derivedcompoundref refid="classBPopUpMenu" prot="public" virt="non-virtual">BPopUpMenu</derivedcompoundref>
      <sectiondef kind="user-defined">
      <header>Archiving</header>
      <memberdef kind="function" id="classBMenu_1a71bed24f541bdfb690863118ce3f716b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMenu::Archive</definition>
        <argsstring>(BMessage *archive, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BMenu::Archive</qualifiedname>
        <reimplements refid="classBView_1ab6de1b48cbc3ef15a0d02113036f002d">Archive</reimplements>
        <reimplementedby refid="classBMenuBar_1af4ae9bcc3c1cbe560e745c9868fb9c5f">Archive</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1af81e6dc2ddcc3063eb33a1a5cf3b9088">Archive</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
          <defname>data</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Archives the the <ref refid="classBMenu" kindref="compound">BMenu</ref> object into the <emphasis>data</emphasis> message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="classBMessage" kindref="compound">BMessage</ref> to archive the object into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deep</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to archive attached menu items as well.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code, <computeroutput>B_OK</computeroutput> if everything went well or an error code otherwise. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The object was archived successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while archiving the object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="59" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1aabd77aafaee5d7185890e33c73b8d09e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>BArchivable * BMenu::Instantiate</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BMenu::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classBMenu" kindref="compound">BMenu</ref> object from an <emphasis>archive</emphasis> message. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A newly created <ref refid="classBMenu" kindref="compound">BMenu</ref> object or <computeroutput>NULL</computeroutput> if the message doesn&apos;t contain an archived <ref refid="classBMenu" kindref="compound">BMenu</ref>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="58" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Hook Methods</header>
      <memberdef kind="function" id="classBMenu_1af38b2e6bf69d918e37bcf1e18711bb37" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenu::AttachedToWindow</definition>
        <argsstring>()</argsstring>
        <name>AttachedToWindow</name>
        <qualifiedname>BMenu::AttachedToWindow</qualifiedname>
        <reimplements refid="classBView_1ae8117cb4634f4a4413988eea07cf75a0">AttachedToWindow</reimplements>
        <reimplementedby refid="classBMenuBar_1a48b3c56f65222c9dc3e5faca5eb80319">AttachedToWindow</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1a2bb158bea8366e9afc2f10c440042585">AttachedToWindow</reimplementedby>
        <briefdescription>
<para>Lays out the menu items and resizes the menu to fit. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="62" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a239982fa92e2f5a9c2ed0c267b7470b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenu::Draw</definition>
        <argsstring>(BRect updateRect)</argsstring>
        <name>Draw</name>
        <qualifiedname>BMenu::Draw</qualifiedname>
        <reimplements refid="classBView_1aa55014241fc2f5556415850692b52db2">Draw</reimplements>
        <reimplementedby refid="classBMenuBar_1a50f02992ee792e7f66b8f3148e75dcc8">Draw</reimplementedby>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>updateRect</declname>
        </param>
        <briefdescription>
<para>Draws the menu. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>updateRect</parametername>
</parameternamelist>
<parameterdescription>
<para>The area to draw in.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="67" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1aca12e6b863279cc62772ac13ef286d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenu::MessageReceived</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>MessageReceived</name>
        <qualifiedname>BMenu::MessageReceived</qualifiedname>
        <reimplements refid="classBView_1aca0a16b0e04288e1fdc0b63690ea7a6d">MessageReceived</reimplements>
        <reimplementedby refid="classBMenuBar_1a7d7c1d1674e059b56c82c81e381d4455">MessageReceived</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1a4b5937dbd7baa9d98b5368d6de9ca23c">MessageReceived</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Handles a <emphasis>message</emphasis> received by the associated looper. </para>
        </briefdescription>
        <detaileddescription>
<para>Responds to mouse wheel events scrolling the menu if it is too long to fit in the window. Hold <computeroutput>B_SHIFT_KEY</computeroutput> to cause the menu to scroll faster.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>message</emphasis> received by the associated looper.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="69" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a6c50b44b2da8caf0280854c5a250b8c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenu::KeyDown</definition>
        <argsstring>(const char *bytes, int32 numBytes)</argsstring>
        <name>KeyDown</name>
        <qualifiedname>BMenu::KeyDown</qualifiedname>
        <reimplements refid="classBView_1abea50ea665ce5fcb76b32f1302a6852d">KeyDown</reimplements>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>numBytes</declname>
        </param>
        <briefdescription>
<para>Hook method that is called when a keyboard key is pressed. </para>
        </briefdescription>
        <detaileddescription>
<para>Handles keyboard navigation and triggers.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes of the key combination pressed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes in <emphasis>bytes</emphasis>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="70" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classBMenu_1a016bd4db389c9daf5119905039b28371" prot="public" static="no" strong="no">
        <type></type>
        <name>add_state</name>
        <qualifiedname>BMenu::add_state</qualifiedname>
        <enumvalue id="classBMenu_1a016bd4db389c9daf5119905039b28371af5ea94801b213916ac9887ca910c0179" prot="public">
          <name>B_INITIAL_ADD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBMenu_1a016bd4db389c9daf5119905039b28371a826c4d7d11b9c0c09d083e6e4b798879" prot="public">
          <name>B_PROCESSING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBMenu_1a016bd4db389c9daf5119905039b28371a4c907fcfe2abf86721f24ff6e86e7636" prot="public">
          <name>B_ABORT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="162" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="162" bodyend="166"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBMenu_1a27cf427e74ff68a89a454b12844a4727" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t _init_interface_kit_</definition>
        <argsstring>()</argsstring>
        <name>_init_interface_kit_</name>
        <qualifiedname>BMenu::_init_interface_kit_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="183" column="17"/>
      </memberdef>
      <memberdef kind="friend" id="classBMenu_1ae17ce55a82dbd8f404ae1c4b9186f5b6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BMenuBar</definition>
        <argsstring></argsstring>
        <name>BMenuBar</name>
        <qualifiedname>BMenu::BMenuBar</qualifiedname>
        <param>
          <type><ref refid="classBMenuBar" kindref="compound">BMenuBar</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="180" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBMenu_1a4273e92472cb103315b4674672ebc440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BPrivate::MenuPrivate</definition>
        <argsstring></argsstring>
        <name>BPrivate::MenuPrivate</name>
        <qualifiedname>BMenu::MenuPrivate</qualifiedname>
        <param>
          <type>BPrivate::MenuPrivate</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="182" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBMenu_1a6de094b54553cc1b27c6da36f42d2534" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BSeparatorItem</definition>
        <argsstring></argsstring>
        <name>BSeparatorItem</name>
        <qualifiedname>BMenu::BSeparatorItem</qualifiedname>
        <param>
          <type><ref refid="classBSeparatorItem" kindref="compound">BSeparatorItem</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="181" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBMenu_1a0caceb1a556af014bf8d86d8af015234" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t get_menu_info</definition>
        <argsstring>(menu_info *info)</argsstring>
        <name>get_menu_info</name>
        <qualifiedname>BMenu::get_menu_info</qualifiedname>
        <param>
          <type><ref refid="structmenu__info" kindref="compound">menu_info</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="185" column="16"/>
      </memberdef>
      <memberdef kind="friend" id="classBMenu_1a064153830120d34f3b89222a6fdad35f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t set_menu_info</definition>
        <argsstring>(menu_info *info)</argsstring>
        <name>set_menu_info</name>
        <qualifiedname>BMenu::set_menu_info</qualifiedname>
        <param>
          <type><ref refid="structmenu__info" kindref="compound">menu_info</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="184" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classBMenu_1a496474e8328dc686ccf9be59fc36ac1b" prot="private" static="yes" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMenu::sCommandKey</definition>
        <argsstring></argsstring>
        <name>sCommandKey</name>
        <qualifiedname>BMenu::sCommandKey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="297" column="13" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a152e62bfa68659d216503aac3a028ba3" prot="private" static="yes" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMenu::sControlKey</definition>
        <argsstring></argsstring>
        <name>sControlKey</name>
        <qualifiedname>BMenu::sControlKey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="295" column="13" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1ab6a97a61265f1b681495157cb874fde2" prot="private" static="yes" mutable="no">
        <type><ref refid="structmenu__info" kindref="compound">menu_info</ref></type>
        <definition>menu_info BMenu::sMenuInfo</definition>
        <argsstring></argsstring>
        <name>sMenuInfo</name>
        <qualifiedname>BMenu::sMenuInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="290" column="16" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a0b8a1d412c68cfcc2c7a6ea5145b72db" prot="private" static="yes" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMenu::sMenuKey</definition>
        <argsstring></argsstring>
        <name>sMenuKey</name>
        <qualifiedname>BMenu::sMenuKey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="298" column="13" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1ae60464aeee0c7d169453101e13bbaa5e" prot="private" static="yes" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMenu::sOptionKey</definition>
        <argsstring></argsstring>
        <name>sOptionKey</name>
        <qualifiedname>BMenu::sOptionKey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="296" column="13" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1adbf542f8be7572a7451c31d3c97184c7" prot="private" static="yes" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMenu::sShiftKey</definition>
        <argsstring></argsstring>
        <name>sShiftKey</name>
        <qualifiedname>BMenu::sShiftKey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="294" column="13" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBMenu_1aa8517043d0522f946e478bf0b57a7d53" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BMenu::_reserved</definition>
        <argsstring></argsstring>
        <name>_reserved</name>
        <qualifiedname>BMenu::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="320" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a814d128d9e742d96310c36e5651a5a15" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float BMenu::fAscent</definition>
        <argsstring></argsstring>
        <name>fAscent</name>
        <qualifiedname>BMenu::fAscent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="308" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a492105f82e9eb45be0915ba8aa93436b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenu::fAttachAborted</definition>
        <argsstring></argsstring>
        <name>fAttachAborted</name>
        <qualifiedname>BMenu::fAttachAborted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="333" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1afff756b58b3982f2d038b6a3e60105ec" prot="private" static="no" mutable="no">
        <type>BPrivate::BMenuWindow *</type>
        <definition>BPrivate::BMenuWindow* BMenu::fCachedMenuWindow</definition>
        <argsstring></argsstring>
        <name>fCachedMenuWindow</name>
        <qualifiedname>BMenu::fCachedMenuWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="304" column="23" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a811873d3a33fde577a47867f6dc280af" prot="private" static="no" mutable="no">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem* BMenu::fChosenItem</definition>
        <argsstring></argsstring>
        <name>fChosenItem</name>
        <qualifiedname>BMenu::fChosenItem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="300" column="10" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1adfb5e1aa2a5f1a94cb4a217bcef7959c" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float BMenu::fDescent</definition>
        <argsstring></argsstring>
        <name>fDescent</name>
        <qualifiedname>BMenu::fDescent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="309" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1aff52ea57e773a554a22a7aa9ce011912" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenu::fDynamicName</definition>
        <argsstring></argsstring>
        <name>fDynamicName</name>
        <qualifiedname>BMenu::fDynamicName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="326" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a6b9bb52b9905344999de1ee96ab5148e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenu::fEnabled</definition>
        <argsstring></argsstring>
        <name>fEnabled</name>
        <qualifiedname>BMenu::fEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="325" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1ad198807ec409724a3c86710f7f2f3585" prot="private" static="no" mutable="no">
        <type>BPrivate::ExtraMenuData *</type>
        <definition>BPrivate::ExtraMenuData* BMenu::fExtraMenuData</definition>
        <argsstring></argsstring>
        <name>fExtraMenuData</name>
        <qualifiedname>BMenu::fExtraMenuData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="316" column="25" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a336b18860c2bbbcc21d81e65cc906773" prot="private" static="no" mutable="no">
        <type><ref refid="classBRect" kindref="compound">BRect</ref> *</type>
        <definition>BRect* BMenu::fExtraRect</definition>
        <argsstring></argsstring>
        <name>fExtraRect</name>
        <qualifiedname>BMenu::fExtraRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="313" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a95d1a8e55b7e7847e7dab781b6fb10cb" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float BMenu::fFontHeight</definition>
        <argsstring></argsstring>
        <name>fFontHeight</name>
        <qualifiedname>BMenu::fFontHeight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="310" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1adfbb732b46cb7b2d1054b191b721b6f1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenu::fHasSubmenus</definition>
        <argsstring></argsstring>
        <name>fHasSubmenus</name>
        <qualifiedname>BMenu::fHasSubmenus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="332" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1ae1ac137a67cb6db4824cdb2e79d379dd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenu::fIgnoreHidden</definition>
        <argsstring></argsstring>
        <name>fIgnoreHidden</name>
        <qualifiedname>BMenu::fIgnoreHidden</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="330" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a4d4348cbda0950749d7eb99e8bb29b8a" prot="private" static="no" mutable="no">
        <type><ref refid="classBPoint" kindref="compound">BPoint</ref> *</type>
        <definition>BPoint* BMenu::fInitMatrixSize</definition>
        <argsstring></argsstring>
        <name>fInitMatrixSize</name>
        <qualifiedname>BMenu::fInitMatrixSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="315" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a0c40ad3bc0ddef89962dd17b014a1e57" prot="private" static="no" mutable="no">
        <type><ref refid="classBList" kindref="compound">BList</ref></type>
        <definition>BList BMenu::fItems</definition>
        <argsstring></argsstring>
        <name>fItems</name>
        <qualifiedname>BMenu::fItems</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="301" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1af83b1e30a93090f4a716e4f74e695462" prot="private" static="no" mutable="no">
        <type><ref refid="Menu_8h_1a238c8bed18e01ae53d0db0dcc2a148e1" kindref="member">menu_layout</ref></type>
        <definition>menu_layout BMenu::fLayout</definition>
        <argsstring></argsstring>
        <name>fLayout</name>
        <qualifiedname>BMenu::fLayout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="312" column="12" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a9c7e2f7b71c012b106d0328361b76842" prot="private" static="no" mutable="no">
        <type>LayoutData *</type>
        <definition>LayoutData* BMenu::fLayoutData</definition>
        <argsstring></argsstring>
        <name>fLayoutData</name>
        <qualifiedname>BMenu::fLayoutData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="318" column="11" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1ad393ef60fe60becd1eb8e3b4a615e485" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float BMenu::fMaxContentWidth</definition>
        <argsstring></argsstring>
        <name>fMaxContentWidth</name>
        <qualifiedname>BMenu::fMaxContentWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="314" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1ab151f6d866672e9642544b1d431e20ca" prot="private" static="no" mutable="no">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BMenu::fPad</definition>
        <argsstring></argsstring>
        <name>fPad</name>
        <qualifiedname>BMenu::fPad</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="302" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1aa1c9fd8e91a7de60ef9f5e4c6b2ad56c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenu::fRadioMode</definition>
        <argsstring></argsstring>
        <name>fRadioMode</name>
        <qualifiedname>BMenu::fRadioMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="327" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a84b751e44a2cf64b8d21196d5534255b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenu::fResizeToFit</definition>
        <argsstring></argsstring>
        <name>fResizeToFit</name>
        <qualifiedname>BMenu::fResizeToFit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="323" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1ab0ef8fbe1a7bd9760858178d905fe75c" prot="private" static="no" mutable="no">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem* BMenu::fSelected</definition>
        <argsstring></argsstring>
        <name>fSelected</name>
        <qualifiedname>BMenu::fSelected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="303" column="10" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1ae3ed02af2cefa22b5ab8b3b0d5df6bda" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMenu::fState</definition>
        <argsstring></argsstring>
        <name>fState</name>
        <qualifiedname>BMenu::fState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="311" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a121b709d15f6fc37c2ab77eeff050ace" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenu::fStickyMode</definition>
        <argsstring></argsstring>
        <name>fStickyMode</name>
        <qualifiedname>BMenu::fStickyMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="329" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a5e2ac3af7dcd5a9a5b6a6ec92f6d63e7" prot="private" static="no" mutable="no">
        <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
        <definition>BMenu* BMenu::fSuper</definition>
        <argsstring></argsstring>
        <name>fSuper</name>
        <qualifiedname>BMenu::fSuper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="305" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a9b506394b64480a135a00d1f342a8e25" prot="private" static="no" mutable="no">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BMenu::fSuperbounds</definition>
        <argsstring></argsstring>
        <name>fSuperbounds</name>
        <qualifiedname>BMenu::fSuperbounds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="307" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a72e5387e725b2324e8f66888360f3699" prot="private" static="no" mutable="no">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem* BMenu::fSuperitem</definition>
        <argsstring></argsstring>
        <name>fSuperitem</name>
        <qualifiedname>BMenu::fSuperitem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="306" column="10" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1ae63419f99c54abb700a8065a06d9be1c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenu::fTrackNewBounds</definition>
        <argsstring></argsstring>
        <name>fTrackNewBounds</name>
        <qualifiedname>BMenu::fTrackNewBounds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="328" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a938d8ca2b70b0f0a72a15af95c44a510" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char BMenu::fTrigger</definition>
        <argsstring></argsstring>
        <name>fTrigger</name>
        <qualifiedname>BMenu::fTrigger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="322" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1a62ecd1d27afaa2f08a0ae11450e35755" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenu::fTriggerEnabled</definition>
        <argsstring></argsstring>
        <name>fTriggerEnabled</name>
        <qualifiedname>BMenu::fTriggerEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="331" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenu_1aacbb89051072cefeb95c2acde5b24481" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenu::fUseCachedMenuLayout</definition>
        <argsstring></argsstring>
        <name>fUseCachedMenuLayout</name>
        <qualifiedname>BMenu::fUseCachedMenuLayout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="324" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBMenu_1a66018a8f741b47ff198cd0308bf75bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMenu::BMenu</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>BMenu</name>
        <qualifiedname>BMenu::BMenu</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>Archive constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>archive</parametername>
</parameternamelist>
<parameterdescription>
<para>The message data to construct the menu from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ab6ace1b9965547b7e2019818effc3e15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMenu::BMenu</definition>
        <argsstring>(const char *name, float width, float height)</argsstring>
        <name>BMenu</name>
        <qualifiedname>BMenu::BMenu</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Creates a new menu object with a <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout and the specified <emphasis>name</emphasis>, <emphasis>width</emphasis>, and <emphasis>height</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The menu&apos;s <emphasis>name</emphasis>, serves as a label for submenus. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The menu <emphasis>width</emphasis>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>The menu <emphasis>height</emphasis>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a7a674ff3dbf2620a038bb1728edd4378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMenu::BMenu</definition>
        <argsstring>(const char *name, menu_layout layout=B_ITEMS_IN_COLUMN)</argsstring>
        <name>BMenu</name>
        <qualifiedname>BMenu::BMenu</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="Menu_8h_1a238c8bed18e01ae53d0db0dcc2a148e1" kindref="member">menu_layout</ref></type>
          <declname>layout</declname>
          <defval><ref refid="Menu_8h_1a238c8bed18e01ae53d0db0dcc2a148e1afc4cc2730a05fa356d7286faefd042d0" kindref="member">B_ITEMS_IN_COLUMN</ref></defval>
        </param>
        <briefdescription>
<para>Creates a new menu object with the specified <emphasis>name</emphasis> and <emphasis>layout</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Don&apos;t pass <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> into <emphasis>layout</emphasis> with this method, use <ref refid="classBMenu_1ab6ace1b9965547b7e2019818effc3e15" kindref="member">BMenu::BMenu(const char* name, float width, float height)</ref> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The menu&apos;s <emphasis>name</emphasis>, serves as a label for submenus. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The menu layout, possibilities include:<itemizedlist>
<listitem><para><computeroutput>B_ITEMS_IN_ROW</computeroutput> items are displayed in a single row,</para>
</listitem><listitem><para><computeroutput>B_ITEMS_IN_COLUMN</computeroutput> items are displayed in a single column.</para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ad986f4d6a7b9c5a99f51535b55bdd4df" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BMenu::~BMenu</definition>
        <argsstring>()</argsstring>
        <name>~BMenu</name>
        <qualifiedname>BMenu::~BMenu</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Also frees the memory used by any attached menu items and submenus.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="56" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a23bb62b2d8ebf6ebd539218273e31eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BMenu::AddDynamicItem</definition>
        <argsstring>(add_state state)</argsstring>
        <name>AddDynamicItem</name>
        <qualifiedname>BMenu::AddDynamicItem</qualifiedname>
        <param>
          <type>add_state</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Implemented by subclasses to Add a dynamic item to the menu. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Possibilities include:<itemizedlist>
<listitem><para><computeroutput>B_INITIAL_ADD</computeroutput>,</para>
</listitem><listitem><para><computeroutput>B_PROCESSING</computeroutput>,</para>
</listitem><listitem><para><computeroutput>B_ABORT</computeroutput> </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the dynamic item was added, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="167" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a28e2ee1c1f97b5d7ab4b397493c1b37e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::AddItem</definition>
        <argsstring>(BMenu *menu)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BMenu::AddItem</qualifiedname>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
          <defname>submenu</defname>
        </param>
        <briefdescription>
<para>Add a <emphasis>submenu</emphasis> to the end of the list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>submenu</parametername>
</parameternamelist>
<parameterdescription>
<para>The submenu to add.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not the <emphasis>submenu</emphasis> was added to the menu.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="89" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ae9d684a3d4ad604e19b0727939a1e1b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::AddItem</definition>
        <argsstring>(BMenu *menu, BRect frame)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BMenu::AddItem</qualifiedname>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
          <defname>submenu</defname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Adds a <emphasis>submenu</emphasis> in the specified <emphasis>frame</emphasis> rectangle within the menu. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>submenu</parametername>
</parameternamelist>
<parameterdescription>
<para>The submenu to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>frame</emphasis> rectangle where to add the submenu to the menu.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not the <emphasis>submenu</emphasis> was added to the menu.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="91" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a627295137a1fb9d6567a03243cab27f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::AddItem</definition>
        <argsstring>(BMenu *menu, int32 index)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BMenu::AddItem</qualifiedname>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
          <defname>submenu</defname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Add a <emphasis>submenu</emphasis> at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>submenu</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>submenu</emphasis> to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> where to add the <emphasis>submenu</emphasis> to the menu.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not the <emphasis>submenu</emphasis> was added to the menu.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="90" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a93b3441be6f675d4f04b396a460f3edb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::AddItem</definition>
        <argsstring>(BMenuItem *item)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BMenu::AddItem</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Adds a menu <emphasis>item</emphasis> to the end of the list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The menu <emphasis>item</emphasis> to add.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not the <emphasis>item</emphasis> was added to the menu.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="86" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1af7369a0039d85b80bb43a87e069babf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::AddItem</definition>
        <argsstring>(BMenuItem *item, BRect frame)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BMenu::AddItem</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Adds a menu <emphasis>item</emphasis> in the specified <emphasis>frame</emphasis> rectangle within the menu. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The menu <emphasis>item</emphasis> to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>frame</emphasis> rectangle where to add the <emphasis>item</emphasis> to the menu.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not the <emphasis>item</emphasis> was added to the menu.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="88" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a54b0803984953195bf425f439f2877f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::AddItem</definition>
        <argsstring>(BMenuItem *item, int32 index)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BMenu::AddItem</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Adds a menu <emphasis>item</emphasis> at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The menu <emphasis>item</emphasis> to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> where to add the <emphasis>item</emphasis> to the menu.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not the <emphasis>item</emphasis> was added to the menu.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="87" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a7e9495276526fabf009db1f923fcc036" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::AddList</definition>
        <argsstring>(BList *list, int32 index)</argsstring>
        <name>AddList</name>
        <qualifiedname>BMenu::AddList</qualifiedname>
        <param>
          <type><ref refid="classBList" kindref="compound">BList</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Add a <emphasis>list</emphasis> of menu items at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>list</emphasis> of menu items to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> where to add the <emphasis>list</emphasis> to the menu.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not the <emphasis>list</emphasis> of menu items was added to the menu.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="92" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a9101f4977ee547e81e6a2544f891e493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::AddSeparatorItem</definition>
        <argsstring>()</argsstring>
        <name>AddSeparatorItem</name>
        <qualifiedname>BMenu::AddSeparatorItem</qualifiedname>
        <briefdescription>
<para>Adds a separator item to the end of the menu. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_ROW</computeroutput> or <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<simplesect kind="return"><para>Whether or not the separator item was added to the menu.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="94" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a2540cab39de9a2ed1a3e71e2c8ec52dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::AllAttached</definition>
        <argsstring>()</argsstring>
        <name>AllAttached</name>
        <qualifiedname>BMenu::AllAttached</qualifiedname>
        <reimplements refid="classBView_1a6d6379e0993bd525f2cac5f848718870">AllAttached</reimplements>
        <reimplementedby refid="classBMenuBar_1ac02982cd861af6eb4771f260fcf50ed8">AllAttached</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1ae9b5eaf528d9fc3924e29ba05b0c5675">AllAttached</reimplementedby>
        <briefdescription>
<para>Similar to <ref refid="classBMenu_1af38b2e6bf69d918e37bcf1e18711bb37" kindref="member">AttachedToWindow()</ref> but this method is triggered after all child views have already been attached to a window. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="64" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a40c41c3d2d1a8e23dfad97039615b208" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::AllDetached</definition>
        <argsstring>()</argsstring>
        <name>AllDetached</name>
        <qualifiedname>BMenu::AllDetached</qualifiedname>
        <reimplements refid="classBView_1a19dd2213f4b953b54524d7f523d9b406">AllDetached</reimplements>
        <reimplementedby refid="classBMenuBar_1a0c548adc7796603d8d686a401817d0d9">AllDetached</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1a6dda50def6c5f6fd880595d1ac0d7ce1">AllDetached</reimplementedby>
        <briefdescription>
<para>Similar to <ref refid="classBMenu_1af38b2e6bf69d918e37bcf1e18711bb37" kindref="member">AttachedToWindow()</ref> but this method is triggered after all child views have already been detached from a window. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="65" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a97d2138f50a3fd757b31407627e12eea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::AreTriggersEnabled</definition>
        <argsstring>() const</argsstring>
        <name>AreTriggersEnabled</name>
        <qualifiedname>BMenu::AreTriggersEnabled</qualifiedname>
        <briefdescription>
<para>Returns whether or not triggers are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if triggers are enabled, <computeroutput>false</computeroutput> if triggers are disabled.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="121" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ae2328de69b20f84bd925dc943e3ae3cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BMenu::CountItems</definition>
        <argsstring>() const</argsstring>
        <name>CountItems</name>
        <qualifiedname>BMenu::CountItems</qualifiedname>
        <briefdescription>
<para>Returns the number of items added to the menu. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of items added to the menu.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="104" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a51b79eb8595e20234f2fefabf7899e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::DetachedFromWindow</definition>
        <argsstring>()</argsstring>
        <name>DetachedFromWindow</name>
        <qualifiedname>BMenu::DetachedFromWindow</qualifiedname>
        <reimplements refid="classBView_1a8abc2ea500951a0a22cf018e958ba791">DetachedFromWindow</reimplements>
        <reimplementedby refid="classBMenuBar_1aaf4b5448201a1d30c969ddc20f1d492d">DetachedFromWindow</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1a9b5a2a077b54a2c9e451d0f916358420">DetachedFromWindow</reimplementedby>
        <briefdescription>
<para>Hook method called when the object is detached from a window. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="63" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a981691c987e0f0a82a8f056284280032" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::DoLayout</definition>
        <argsstring>()</argsstring>
        <name>DoLayout</name>
        <qualifiedname>BMenu::DoLayout</qualifiedname>
        <reimplements refid="classBView_1a9d766a06d0885200c6ababba4c87808b">DoLayout</reimplements>
        <briefdescription>
<para>Layout view within the layout context. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="78" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ae315f78a12586d80ea7db6247d7d8f1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenu::DrawBackground</definition>
        <argsstring>(BRect updateRect)</argsstring>
        <name>DrawBackground</name>
        <qualifiedname>BMenu::DrawBackground</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>updateRect</declname>
        </param>
        <briefdescription>
<para>Draw the menu background within the bounds of <emphasis>updateRect</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>updateRect</parametername>
</parameternamelist>
<parameterdescription>
<para>The area to draw the background in.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="168" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a28dc785b54ef7b7c820c173e607610ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem * BMenu::FindItem</definition>
        <argsstring>(const char *name) const</argsstring>
        <name>FindItem</name>
        <qualifiedname>BMenu::FindItem</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <defname>label</defname>
        </param>
        <briefdescription>
<para>Returns a pointer to the menu item with the specified <emphasis>label</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>label</emphasis> of the menu item to find.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to a menu item or <computeroutput>NULL</computeroutput> if not found.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="108" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a8a9b9f676fb940ad648c76499219ee63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem * BMenu::FindItem</definition>
        <argsstring>(uint32 command) const</argsstring>
        <name>FindItem</name>
        <qualifiedname>BMenu::FindItem</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>command</declname>
        </param>
        <briefdescription>
<para>Returns a pointer to the menu item with the specified <emphasis>command</emphasis> for its associated message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>command</emphasis> of the associated message of the menu item to find.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to a menu item or <computeroutput>NULL</computeroutput> if not found.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="107" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a359ed911cbf2e38b93fdc8a7bcbd5439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem * BMenu::FindMarked</definition>
        <argsstring>()</argsstring>
        <name>FindMarked</name>
        <qualifiedname>BMenu::FindMarked</qualifiedname>
        <briefdescription>
<para>Return a pointer to the first marked menu item. </para>
        </briefdescription>
        <detaileddescription>
<para>The index starts at the left for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> layout going right or at the top for a menu in <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout going down.</para>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<simplesect kind="return"><para>A pointer to the first marked menu item or <computeroutput>NULL</computeroutput> if not found.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="125" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a79ac06123571bb519ae25cd15482497c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BMenu::FindMarkedIndex</definition>
        <argsstring>()</argsstring>
        <name>FindMarkedIndex</name>
        <qualifiedname>BMenu::FindMarkedIndex</qualifiedname>
        <briefdescription>
<para>Return the index of the first marked menu item. </para>
        </briefdescription>
        <detaileddescription>
<para>The index starts at the left for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> layout going right or at the top for a menu in <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout going down.</para>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<simplesect kind="return"><para>The index of the first marked menu item or -1 if not found.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="126" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ab14bf3dc8b6f082f2609094c1f964577" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::FrameMoved</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>FrameMoved</name>
        <qualifiedname>BMenu::FrameMoved</qualifiedname>
        <reimplements refid="classBView_1a551c22b45301e13a3ba959eece3cec7f">FrameMoved</reimplements>
        <reimplementedby refid="classBMenuBar_1aa711264d76e8f5faa0f974ca66d01ccf">FrameMoved</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1a29c0fbffd038df9bd3f79f328e074151">FrameMoved</reimplementedby>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>newPosition</declname>
        </param>
        <briefdescription>
<para>Hook method called when the view is moved. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>The point of the top left corner of the frame that the view has been moved to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="79" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ad6d6eac1f12e9456b9db896aee122181" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::FrameResized</definition>
        <argsstring>(float width, float height)</argsstring>
        <name>FrameResized</name>
        <qualifiedname>BMenu::FrameResized</qualifiedname>
        <reimplements refid="classBView_1a85d88f9c2bb6800560874b2061378fa0">FrameResized</reimplements>
        <reimplementedby refid="classBMenuBar_1ad3dcc7b2c1eeada95ef6986a21754324">FrameResized</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1a68d7f27c2a0e69a6b0396af02579217e">FrameResized</reimplementedby>
        <param>
          <type>float</type>
          <declname>newWidth</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newHeight</declname>
        </param>
        <briefdescription>
<para>Hook method called when the view is resized. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>The new width of the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>The new height of the view.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="80" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1af60a7b8ec6f92749fd46ce2e9179dc17" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::GetPreferredSize</definition>
        <argsstring>(float *_width, float *_height)</argsstring>
        <name>GetPreferredSize</name>
        <qualifiedname>BMenu::GetPreferredSize</qualifiedname>
        <reimplements refid="classBView_1a089c3ff794c454388a9388c7b6568478">GetPreferredSize</reimplements>
        <reimplementedby refid="classBMenuBar_1ab4dd370f1363d89c1fb2918877595b02">GetPreferredSize</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1a68b1cc4ed9432b21e755bfe7b142efd3">GetPreferredSize</reimplementedby>
        <param>
          <type>float *</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_height</declname>
        </param>
        <briefdescription>
<para>Fill out the preferred width and height of the view into the <emphasis>_width</emphasis> and <emphasis>_height</emphasis> parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>Derived classes should override this method to set the preferred size of object.</para>
<para><simplesect kind="remark"><para>Either the <emphasis>_width</emphasis> or <emphasis>_height</emphasis> parameter may be set to <computeroutput>NULL</computeroutput> if you only want to get the other one.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a float to store the width of the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a float to store the height of the view.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="75" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a2aa0277374bacf3b7644f738bc064637" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMenu::GetSupportedSuites</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>GetSupportedSuites</name>
        <qualifiedname>BMenu::GetSupportedSuites</qualifiedname>
        <reimplements refid="classBView_1a772462d751d457f63ee0fc56d8ba02d1">GetSupportedSuites</reimplements>
        <reimplementedby refid="classBMenuBar_1ad635f7e68997f901cbd4b15491b5f2a3">GetSupportedSuites</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1aab6d894d982b8841569be6d5766b88e2">GetSupportedSuites</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reports the suites of messages and specifiers that derived classes understand.  </para>
<para><simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="135" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a515c29525463092462e64105469dcdcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BMenu::IndexOf</definition>
        <argsstring>(BMenu *menu) const</argsstring>
        <name>IndexOf</name>
        <qualifiedname>BMenu::IndexOf</qualifiedname>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
          <defname>submenu</defname>
        </param>
        <briefdescription>
<para>Returns the index of the specified <emphasis>submenu</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The index starts at the left for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> layout going right or at the top for a menu in <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout going down.</para>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<simplesect kind="return"><para>The index of the <emphasis>submenu</emphasis> or <computeroutput>B_ERROR</computeroutput> of not found.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="106" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a93256bdb0b477bf1ba52e6bd75f86694" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BMenu::IndexOf</definition>
        <argsstring>(BMenuItem *item) const</argsstring>
        <name>IndexOf</name>
        <qualifiedname>BMenu::IndexOf</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the index of the specified menu <emphasis>item</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The index starts at the left for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> layout going right or start at the top for a menu in <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout going down.</para>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<simplesect kind="return"><para>The index of the menu <emphasis>item</emphasis> or <computeroutput>B_ERROR</computeroutput> of not found.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="105" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a133e0d3f810cf9d0e0f2f206189deb50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::InvalidateLayout</definition>
        <argsstring>()</argsstring>
        <name>InvalidateLayout</name>
        <qualifiedname>BMenu::InvalidateLayout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="82" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a374ec27870b0d21e0f16d77e5aa12535" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::IsEnabled</definition>
        <argsstring>() const</argsstring>
        <name>IsEnabled</name>
        <qualifiedname>BMenu::IsEnabled</qualifiedname>
        <briefdescription>
<para>Returns whether or not the menu is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if menu is enabled, <computeroutput>false</computeroutput> if it is disabled.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="119" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ac2a915d6b9b323c3d12d29df7a2b5571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::IsLabelFromMarked</definition>
        <argsstring>()</argsstring>
        <name>IsLabelFromMarked</name>
        <qualifiedname>BMenu::IsLabelFromMarked</qualifiedname>
        <briefdescription>
<para>Returns whether or not the menu is in label-from-marked mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if menu is in label-from-marked mode, <computeroutput>false</computeroutput> if not.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="118" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a85e16e170b2d5e16a91c5608b31865fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::IsRadioMode</definition>
        <argsstring>() const</argsstring>
        <name>IsRadioMode</name>
        <qualifiedname>BMenu::IsRadioMode</qualifiedname>
        <briefdescription>
<para>Returns whether or not the menu is in radio mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if menu is in radio mode, <computeroutput>false</computeroutput> if not.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="120" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1aca1162897b36710a15957b7148907d24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::IsRedrawAfterSticky</definition>
        <argsstring>() const</argsstring>
        <name>IsRedrawAfterSticky</name>
        <qualifiedname>BMenu::IsRedrawAfterSticky</qualifiedname>
        <briefdescription>
<para>Returns whether or not the menu is in redraw-after-sticky mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if menu is in redraw-after-sticky mode, <computeroutput>false</computeroutput> if not.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="122" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a1612e6c652a53451bbd7da8ab52d0668" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem * BMenu::ItemAt</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>ItemAt</name>
        <qualifiedname>BMenu::ItemAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns a pointer to the menu item at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<simplesect kind="return"><para>A pointer to a menu item or <computeroutput>NULL</computeroutput> if not found.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="102" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a1465ef5881a0b85729118534d8ee3a15" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::MakeFocus</definition>
        <argsstring>(bool focus=true)</argsstring>
        <name>MakeFocus</name>
        <qualifiedname>BMenu::MakeFocus</qualifiedname>
        <reimplements refid="classBView_1a266a368d81c6e1668b2b9b22b5016853">MakeFocus</reimplements>
        <reimplementedby refid="classBMenuBar_1a170fbfdd3be7b9bdc750777f31c216c0">MakeFocus</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1a134b3710cbd69229b093803ddb11ba27">MakeFocus</reimplementedby>
        <param>
          <type>bool</type>
          <declname>focus</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Makes the view the current focus view of the window or gives up being the window&apos;s focus view. </para>
        </briefdescription>
        <detaileddescription>
<para>The focus view handles selections and KeyDown events when the the attached window is active. There can be only one focus view at a time per window.</para>
<para>When called with <emphasis>focus</emphasis> set to <computeroutput>true</computeroutput> this method first calls <ref refid="classBMenu_1a1465ef5881a0b85729118534d8ee3a15" kindref="member">MakeFocus()</ref> on the previously focused view with <emphasis>focus</emphasis> set to <computeroutput>false</computeroutput>.</para>
<para>The focus doesn&apos;t automatically change when <ref refid="classBView_1a5f5bd975d15df94f2ebbc80eb79cc3f6" kindref="member">MouseDown()</ref> is called so calling <ref refid="classBMenu_1a1465ef5881a0b85729118534d8ee3a15" kindref="member">MakeFocus()</ref> is the only way to make a view the focus view of a window. Classes derived from <ref refid="classBView" kindref="compound">BView</ref> that can display the current selection, or that can accept pasted data should call <ref refid="classBMenu_1a1465ef5881a0b85729118534d8ee3a15" kindref="member">MakeFocus()</ref> in their <ref refid="classBView_1a5f5bd975d15df94f2ebbc80eb79cc3f6" kindref="member">MouseDown()</ref> method to update the focus view of the window on click.</para>
<para>If the view isn&apos;t attached to a window this method has no effect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>focus</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>true</emphasis> to set focus, <emphasis>false</emphasis> to remove it.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="84" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ae35fd8bf7622196e8c1c7400cdad2823" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BMenu::MaxContentWidth</definition>
        <argsstring>() const</argsstring>
        <name>MaxContentWidth</name>
        <qualifiedname>BMenu::MaxContentWidth</qualifiedname>
        <briefdescription>
<para>Return the maximum width of the menu items&apos; content area. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The maximum width of the menu items&apos; content area as a float.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBMenu_1ae0ccabdfaa67f0ffa7ec3e6e8efdcd03" kindref="member">SetMaxContentWidth()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="123" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a5f94df489ae102d0e377df3b63d9864a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>virtual BSize BMenu::MaxSize</definition>
        <argsstring>()</argsstring>
        <name>MaxSize</name>
        <qualifiedname>BMenu::MaxSize</qualifiedname>
        <reimplements refid="classBView_1ad1f1843a380e850948cf7e4ed2d5f1ba">MaxSize</reimplements>
        <reimplementedby refid="classBMenuBar_1ad0dc5e934924d2511d82718d31da2740">MaxSize</reimplementedby>
        <briefdescription>
<para>Return the maximum size of the view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="return"><para>The maximum size of the view as a <ref refid="classBSize" kindref="compound">BSize</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBAbstractLayout_1ad1ea5d04a5c8028f8295efde7106a66c" kindref="member">BAbstractLayout::MaxSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="73" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a659643414ede82d0233e62ce9da4c01e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>virtual BSize BMenu::MinSize</definition>
        <argsstring>()</argsstring>
        <name>MinSize</name>
        <qualifiedname>BMenu::MinSize</qualifiedname>
        <reimplements refid="classBView_1acfb0cffde35b853dab6bc5d1bb03265f">MinSize</reimplements>
        <reimplementedby refid="classBMenuBar_1ae0781646adecf0bd08123868c40ee218">MinSize</reimplementedby>
        <briefdescription>
<para>Return the minimum size of the view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="return"><para>The minimum size of the view as a <ref refid="classBSize" kindref="compound">BSize</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBAbstractLayout_1a3f692cb3306ce726e3cc6d2771824cd5" kindref="member">BAbstractLayout::MinSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="72" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a52f15cd54ebd73143c0c0f68e7eb5a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::MoveItem</definition>
        <argsstring>(int32 indexFrom, int32 indexTo)</argsstring>
        <name>MoveItem</name>
        <qualifiedname>BMenu::MoveItem</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>indexFrom</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>indexTo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="177" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a6dedb98c6ba5ffbc44893ff43785c93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMenu::Perform</definition>
        <argsstring>(perform_code d, void *arg)</argsstring>
        <name>Perform</name>
        <qualifiedname>BMenu::Perform</qualifiedname>
        <reimplements refid="classBView_1a512a6c8dca1a62b14cdcb1c22070129b">Perform</reimplements>
        <reimplementedby refid="classBPopUpMenu_1a8f92a8866c4ffd63cdfcf07957f5ba22">Perform</reimplementedby>
        <reimplementedby refid="classBMenuBar_1a4b8a4e16ace175bc3bad9d6ef6b42daf">Perform</reimplementedby>
        <param>
          <type><ref refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" kindref="member">perform_code</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defname>_data</defname>
        </param>
        <briefdescription>
<para>Perform some action. (Internal Method) </para>
        </briefdescription>
        <detaileddescription>
<para>This method is available to allow classes to be extended while maintaining binary compatibility.</para>
<para>The following perform codes are recognized:<itemizedlist>
<listitem><para><computeroutput>PERFORM_CODE_MIN_SIZE:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_MAX_SIZE:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_PREFERRED_SIZE:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_LAYOUT_ALIGNMENT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_HAS_HEIGHT_FOR_WIDTH:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_GET_HEIGHT_FOR_WIDTH:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_SET_LAYOUT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_INVALIDATE_LAYOUT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_DO_LAYOUT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_GET_TOOL_TIP_AT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_ALL_UNARCHIVED:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_ALL_ARCHIVED:</computeroutput> </para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The perform code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to store some data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="137" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a03aad94d2eb22836823045530e58c052" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>virtual BSize BMenu::PreferredSize</definition>
        <argsstring>()</argsstring>
        <name>PreferredSize</name>
        <qualifiedname>BMenu::PreferredSize</qualifiedname>
        <reimplements refid="classBView_1a7f51d63e71b60a2721d04436ffbcfe36">PreferredSize</reimplements>
        <reimplementedby refid="classBMenuBar_1ae3e3832dbc024a802a18c4253f01b05a">PreferredSize</reimplementedby>
        <briefdescription>
<para>Return the preferred size of the view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="return"><para>The preferred size of the view as a <ref refid="classBSize" kindref="compound">BSize</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBAbstractLayout_1af5f21d9900c85ca053dba3938bef3fd3" kindref="member">BAbstractLayout::PreferredSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="74" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ab221333103579b6c7a5d08c7c6005e20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::RemoveItem</definition>
        <argsstring>(BMenu *menu)</argsstring>
        <name>RemoveItem</name>
        <qualifiedname>BMenu::RemoveItem</qualifiedname>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
          <defname>submenu</defname>
        </param>
        <briefdescription>
<para>Remove and delete a <emphasis>submenu</emphasis> from the menu. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>submenu</parametername>
</parameternamelist>
<parameterdescription>
<para>The submenu to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not the <emphasis>submenu</emphasis> was removed from the menu.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="100" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a5bddcfe7908198f10046fd58e517d906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::RemoveItem</definition>
        <argsstring>(BMenuItem *item)</argsstring>
        <name>RemoveItem</name>
        <qualifiedname>BMenu::RemoveItem</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Remove and delete the specified <emphasis>item</emphasis> from the menu. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether or not the <emphasis>item</emphasis> was removed from the menu.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="96" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a3b28ecdc6fa0e04f8da5fea0a295d667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem * BMenu::RemoveItem</definition>
        <argsstring>(int32 index)</argsstring>
        <name>RemoveItem</name>
        <qualifiedname>BMenu::RemoveItem</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Remove the item at the specified <emphasis>index</emphasis> from the menu. </para>
        </briefdescription>
        <detaileddescription>
<para>The menu item object is not deleted.</para>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of where to remove the menu item.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The menu item object or <computeroutput>NULL</computeroutput> if not found.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="97" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a21410c37d9ff94ce58f00a4741126a7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::RemoveItems</definition>
        <argsstring>(int32 index, int32 count, bool deleteItems=false)</argsstring>
        <name>RemoveItems</name>
        <qualifiedname>BMenu::RemoveItems</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deleteItems</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Remove <emphasis>count</emphasis> number of items from the menu starting at the specified <emphasis>index</emphasis> and delete them if <emphasis>deleteItems</emphasis> is <computeroutput>true</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of where to start removing menu items. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of items to remove. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deleteItems</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to delete the items after removing them.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not the items were removed from the menu.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="98" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a90a8228da7623e8e991a2fc7dc0e8898" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::ResizeToPreferred</definition>
        <argsstring>()</argsstring>
        <name>ResizeToPreferred</name>
        <qualifiedname>BMenu::ResizeToPreferred</qualifiedname>
        <reimplements refid="classBView_1abe8c63c85555e800e063388e7cf3e1a7">ResizeToPreferred</reimplements>
        <reimplementedby refid="classBMenuBar_1a7e846a6abc075a0db6305e86cbed1760">ResizeToPreferred</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1a9983fca5936e0ebcf728ac5af7cc1004">ResizeToPreferred</reimplementedby>
        <briefdescription>
<para>Resizes the view to its preferred size keeping the position of the left top corner constant. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>It is not recommended to use this method for views that are part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="77" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1adfd2e1d211f34a8ac748abb989adac48" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
        <definition>virtual BHandler * BMenu::ResolveSpecifier</definition>
        <argsstring>(BMessage *message, int32 index, BMessage *specifier, int32 form, const char *property)</argsstring>
        <name>ResolveSpecifier</name>
        <qualifiedname>BMenu::ResolveSpecifier</qualifiedname>
        <reimplements refid="classBView_1a4c0c6d3b21ae92056e5e40fe4d3ec175">ResolveSpecifier</reimplements>
        <reimplementedby refid="classBMenuBar_1ab8e2eb06afc52455be926b3cde21f935">ResolveSpecifier</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1acefc54d0514f6efbe059d9a36b837fe1">ResolveSpecifier</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>form</declname>
          <defname>what</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine the proper handler for a scripting message.  </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The scripting message to determine the handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the specifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The message which contains the specifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>what</parametername>
</parameternamelist>
<parameterdescription>
<para>The &apos;what&apos; field of the specifier message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the target property.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the proper <ref refid="classBHandler" kindref="compound">BHandler</ref> for the given scripting message.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="132" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a68c7fe3263da4d1cb254bd0b6ee1f01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenu::SetEnabled</definition>
        <argsstring>(bool enable)</argsstring>
        <name>SetEnabled</name>
        <qualifiedname>BMenu::SetEnabled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enables or disables the menu. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to enable, <computeroutput>false</computeroutput> to disable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="112" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a6575006958cc1fd049fea76fed4c40ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::SetLabelFromMarked</definition>
        <argsstring>(bool on)</argsstring>
        <name>SetLabelFromMarked</name>
        <qualifiedname>BMenu::SetLabelFromMarked</qualifiedname>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
<para>Sets whether or not the label of the menu is set according to the marked item. </para>
        </briefdescription>
        <detaileddescription>
<para>Turning label-from-marked mode on also turns radio mode on.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>on</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to turn label-from-marked mode on, <computeroutput>false</computeroutput> to turn it off.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="117" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ae0ccabdfaa67f0ffa7ec3e6e8efdcd03" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenu::SetMaxContentWidth</definition>
        <argsstring>(float maxWidth)</argsstring>
        <name>SetMaxContentWidth</name>
        <qualifiedname>BMenu::SetMaxContentWidth</qualifiedname>
        <param>
          <type>float</type>
          <declname>maxWidth</declname>
          <defname>width</defname>
        </param>
        <briefdescription>
<para>Sets the maximum width of the menu items&apos; content area. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the maximum width that a menu item can draw in. Note that menu items have built-in margins on the left and right sides that are not included as part of the maximum content width.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum width for the menu item contents to draw in.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="115" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a71036007fd11439ac43bccc05e833938" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenu::SetRadioMode</definition>
        <argsstring>(bool on)</argsstring>
        <name>SetRadioMode</name>
        <qualifiedname>BMenu::SetRadioMode</qualifiedname>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
<para>Turns radio mode on or off. </para>
        </briefdescription>
        <detaileddescription>
<para>Turning radio mode off also turns off label-from-marked mode.</para>
<para>Radio mode means that only one menu item can be set as marked at a time. Marking a menu item automatically unmarks all other menu items and draws a check mark on the left side of the marked menu item. You don&apos;t have to call <ref refid="classBMenuItem_1a0b896795700a46215ee7884940b39119" kindref="member">BMenuItem::SetMarked()</ref> yourself for a menu in radio mode, this is done for you automatically.</para>
<para>Radio mode does not work recursively, only the current menu is considered. If you want to make a menu work in radio mode recursively you&apos;ll have to turn radio mode off and iterate through each menu marking and unmarking the items yourself.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>on</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to turn radio mode on, <computeroutput>false</computeroutput> to turn it off.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="113" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ab11e3f007322fc75a9943a1443339ac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMenu::SetTargetForItems</definition>
        <argsstring>(BHandler *target)</argsstring>
        <name>SetTargetForItems</name>
        <qualifiedname>BMenu::SetTargetForItems</qualifiedname>
        <param>
          <type><ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
          <declname>target</declname>
          <defname>handler</defname>
        </param>
        <briefdescription>
<para>Set the target to <emphasis>handler</emphasis> for each item in the menu. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a convenient way to set the target for all the items in a menu.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBHandler" kindref="compound">BHandler</ref> object to set the target of the menu item to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This method doesn&apos;t descend into submenus recursively and only acts on items that have already been added to the menu.</para>
<para><simplesect kind="return"><para><computeroutput>B_OK</computeroutput> on success or an error code on error.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="110" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1aa6075b7d5ed82ba117904f3b5cec61ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMenu::SetTargetForItems</definition>
        <argsstring>(BMessenger messenger)</argsstring>
        <name>SetTargetForItems</name>
        <qualifiedname>BMenu::SetTargetForItems</qualifiedname>
        <param>
          <type><ref refid="classBMessenger" kindref="compound">BMessenger</ref></type>
          <declname>messenger</declname>
        </param>
        <briefdescription>
<para>Set the target to <emphasis>messenger</emphasis> for each item in the menu. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a convenient way to set the target for all the items in a menu.</para>
<para>This method doesn&apos;t descend into submenus recursively and only acts on items that have already been added to the menu.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>messenger</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBMessenger" kindref="compound">BMessenger</ref> object to set the target of the menu item to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>B_OK</computeroutput> on success or an error code on error.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="111" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a7718aab1bf69711c4eb1043424eb2a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::SetTrackingHook</definition>
        <argsstring>(menu_tracking_hook hook, void *state)</argsstring>
        <name>SetTrackingHook</name>
        <qualifiedname>BMenu::SetTrackingHook</qualifiedname>
        <param>
          <type><ref refid="Menu_8h_1a2a742d1064f59e7d84000e78daccd381" kindref="member">menu_tracking_hook</ref></type>
          <declname>hook</declname>
          <defname>func</defname>
        </param>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Sets a hook function that is called when tracking begins. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>The hook function to call. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>A variable passed to the hook function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="170" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a67da7ae008cbe0f38196e5aafd79fe53" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenu::SetTriggersEnabled</definition>
        <argsstring>(bool enable)</argsstring>
        <name>SetTriggersEnabled</name>
        <qualifiedname>BMenu::SetTriggersEnabled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enables or disables triggers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to enable triggers, <computeroutput>false</computeroutput> to disable triggers.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="114" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a4a3000f320f707d70da1e72da79fca72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::SortItems</definition>
        <argsstring>(int(*compare)(const BMenuItem *, const BMenuItem *))</argsstring>
        <name>SortItems</name>
        <qualifiedname>BMenu::SortItems</qualifiedname>
        <param>
          <type>int(*)(const <ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *, const <ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *)</type>
          <declname>compare</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="174" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a51cad9f6d981ce27ca0094f74540ce29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
        <definition>BMenu * BMenu::SubmenuAt</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>SubmenuAt</name>
        <qualifiedname>BMenu::SubmenuAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns a pointer to a submenu at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method should only be used for a menu in <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> layout, it is an error to use this method for a menu in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</simplesect>
<simplesect kind="return"><para>A pointer to a submenu or <computeroutput>NULL</computeroutput> if not found.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="103" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a544cdc1fc6d05c535d677a65ad1ee3d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem * BMenu::Superitem</definition>
        <argsstring>() const</argsstring>
        <name>Superitem</name>
        <qualifiedname>BMenu::Superitem</qualifiedname>
        <briefdescription>
<para>Returns the pointer to the menu item that this menu it attached to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to a <ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> object or <computeroutput>NULL</computeroutput> if not found.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="129" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a205d32b63c8fc5a5a3a49249838af057" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
        <definition>BMenu * BMenu::Supermenu</definition>
        <argsstring>() const</argsstring>
        <name>Supermenu</name>
        <qualifiedname>BMenu::Supermenu</qualifiedname>
        <briefdescription>
<para>Returns the pointer to the menu that this menu it attached to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to a <ref refid="classBMenu" kindref="compound">BMenu</ref> object or <computeroutput>NULL</computeroutput> if not found.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="128" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a717c241c8234cbec4327e6f55b5df1b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::SwapItems</definition>
        <argsstring>(int32 indexA, int32 indexB)</argsstring>
        <name>SwapItems</name>
        <qualifiedname>BMenu::SwapItems</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>indexA</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>indexB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="176" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBMenu_1ad70c71bed508876fa919b63072bb5c72" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMenu::BMenu</definition>
        <argsstring>(BRect frame, const char *name, uint32 resizeMask, uint32 flags, menu_layout layout, bool resizeToFit)</argsstring>
        <name>BMenu</name>
        <qualifiedname>BMenu::BMenu</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>resizeMask</declname>
          <defname>resizingMode</defname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="Menu_8h_1a238c8bed18e01ae53d0db0dcc2a148e1" kindref="member">menu_layout</ref></type>
          <declname>layout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>resizeToFit</declname>
        </param>
        <briefdescription>
<para>Implemented by derived classes to create a new menu object. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is intended to be used by derived classes that don&apos;t simply wish to utilize different sorts of menu items or arrange them in a different way, but wish to invent a different kind of menu altogether.</para>
<para>If the <emphasis>layout</emphasis> is set to <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> the <emphasis>resizeToFit</emphasis> flag should be set to <computeroutput>false</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>frame</emphasis> rectangle to create the menu in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The menu&apos;s <emphasis>name</emphasis>, serves as a label for submenus. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resizingMode</parametername>
</parameternamelist>
<parameterdescription>
<para>The resizing mode flags, see <ref refid="classBView" kindref="compound">BView</ref> for more details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The view <emphasis>flags</emphasis>, see <ref refid="classBView" kindref="compound">BView</ref> for more details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The menu layout, possibilities include:<itemizedlist>
<listitem><para><computeroutput>B_ITEMS_IN_ROW</computeroutput> items are displayed in a single row,</para>
</listitem><listitem><para><computeroutput>B_ITEMS_IN_COLUMN</computeroutput> items are displayed in a single column,</para>
</listitem><listitem><para><computeroutput>B_ITEMS_IN_MATRIX</computeroutput> items are displayed in a custom matrix. </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resizeToFit</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the menu should automatically resize itself to fit its contents, this will not work in <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a20cd1eadfb72b0e5484ede360521e297" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::DrawItems</definition>
        <argsstring>(BRect updateRect)</argsstring>
        <name>DrawItems</name>
        <qualifiedname>BMenu::DrawItems</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>updateRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="242" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a46adc5db4b9a629a93c198a41a57ca36" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::GetItemMargins</definition>
        <argsstring>(float *_left, float *_top, float *_right, float *_bottom) const</argsstring>
        <name>GetItemMargins</name>
        <qualifiedname>BMenu::GetItemMargins</qualifiedname>
        <param>
          <type>float *</type>
          <declname>_left</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_top</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_right</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_bottom</declname>
        </param>
        <briefdescription>
<para>Fill out the margins into the passed in float pointers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left margin to fill out, can be <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_top</parametername>
</parameternamelist>
<parameterdescription>
<para>The top margin to fill out, can be <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right margin to fill out, can be <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>The bottom margin to fill out, can be <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="150" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1acebb809699f7efa7d72346f2ba0b869f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenu::Hide</definition>
        <argsstring>()</argsstring>
        <name>Hide</name>
        <qualifiedname>BMenu::Hide</qualifiedname>
        <reimplements refid="classBView_1a7688dc04178a2955950154ee3670d029">Hide</reimplements>
        <reimplementedby refid="classBMenuBar_1a7dfa53005734435d3b805161e3495e99">Hide</reimplementedby>
        <briefdescription>
<para>Hides the view without removing it from the view hierarchy. </para>
        </briefdescription>
        <detaileddescription>
<para>Calls to <ref refid="classBMenu_1acebb809699f7efa7d72346f2ba0b869f" kindref="member">Hide()</ref> and <ref refid="classBMenu_1a880d9a96919d389e03106e978709bf9b" kindref="member">Show()</ref> are cumulative. A visible view becomes hidden once the number of <ref refid="classBMenu_1acebb809699f7efa7d72346f2ba0b869f" kindref="member">Hide()</ref> calls exceeds the number of <ref refid="classBMenu_1a880d9a96919d389e03106e978709bf9b" kindref="member">Show()</ref> calls.</para>
<para><simplesect kind="see"><para><ref refid="classBMenu_1a880d9a96919d389e03106e978709bf9b" kindref="member">Show()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBWindow_1a53b85e4d43d34e5259b3b16ff6c52b32" kindref="member">BWindow::Hide()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBView_1a33a65050c2315b19b4c5af16c48e3cdb" kindref="member">IsHidden()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="157" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a0a7706c4966b183b9790822bc512fd4e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Menu_8h_1a238c8bed18e01ae53d0db0dcc2a148e1" kindref="member">menu_layout</ref></type>
        <definition>menu_layout BMenu::Layout</definition>
        <argsstring>() const</argsstring>
        <name>Layout</name>
        <qualifiedname>BMenu::Layout</qualifiedname>
        <briefdescription>
<para>Returns the current menu_layout constant. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="153" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ab5474abecef27e68bade9c58721caeed" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::LayoutInvalidated</definition>
        <argsstring>(bool descendants)</argsstring>
        <name>LayoutInvalidated</name>
        <qualifiedname>BMenu::LayoutInvalidated</qualifiedname>
        <reimplements refid="classBView_1a0a552cc0d8678939c619f98dcc80d254">LayoutInvalidated</reimplements>
        <param>
          <type>bool</type>
          <declname>descendants</declname>
        </param>
        <briefdescription>
<para>Hook method called when the layout is invalidated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>descendants</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not child views have also been invalidated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="144" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a8a63e94a031a323ed5ff904f00fefb7f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
        <definition>virtual BPoint BMenu::ScreenLocation</definition>
        <argsstring>()</argsstring>
        <name>ScreenLocation</name>
        <qualifiedname>BMenu::ScreenLocation</qualifiedname>
        <reimplementedby refid="classBPopUpMenu_1a18e64426e0a70b61b65f50b0c5d6f849">ScreenLocation</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="146" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a2f12a6614dfdea3b27e248b29be764dc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::SetItemMargins</definition>
        <argsstring>(float left, float top, float right, float bottom)</argsstring>
        <name>SetItemMargins</name>
        <qualifiedname>BMenu::SetItemMargins</qualifiedname>
        <param>
          <type>float</type>
          <declname>left</declname>
        </param>
        <param>
          <type>float</type>
          <declname>top</declname>
        </param>
        <param>
          <type>float</type>
          <declname>right</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
<para>Set the menu item margins. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left margin to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>top</parametername>
</parameternamelist>
<parameterdescription>
<para>The top margin to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right margin to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>The bottom margin to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="148" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a880d9a96919d389e03106e978709bf9b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::Show</definition>
        <argsstring>()</argsstring>
        <name>Show</name>
        <qualifiedname>BMenu::Show</qualifiedname>
        <reimplements refid="classBView_1a06e0584057d6c7a7c7e048b6272b7016">Show</reimplements>
        <reimplementedby refid="classBMenuBar_1ac0b9dafc30dd338e8f67b26eff7168f0">Show</reimplementedby>
        <briefdescription>
<para>Shows the view making it visible. </para>
        </briefdescription>
        <detaileddescription>
<para>Calls to <ref refid="classBMenu_1acebb809699f7efa7d72346f2ba0b869f" kindref="member">Hide()</ref> and <ref refid="classBMenu_1a880d9a96919d389e03106e978709bf9b" kindref="member">Show()</ref> are cumulative. A hidden view becomes visible again once the number of <ref refid="classBMenu_1a880d9a96919d389e03106e978709bf9b" kindref="member">Show()</ref> calls matches the number of <ref refid="classBMenu_1acebb809699f7efa7d72346f2ba0b869f" kindref="member">Hide()</ref> calls.</para>
<para><simplesect kind="see"><para><ref refid="classBMenu_1acebb809699f7efa7d72346f2ba0b869f" kindref="member">Hide()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBWindow_1af7009117df50add72cf0e799ff7d0fa5" kindref="member">BWindow::Show()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBView_1a33a65050c2315b19b4c5af16c48e3cdb" kindref="member">IsHidden()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="155" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ab2fba7cc5470c72b47b052c4fdb78d85" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::Show</definition>
        <argsstring>(bool selectFirstItem)</argsstring>
        <name>Show</name>
        <qualifiedname>BMenu::Show</qualifiedname>
        <param>
          <type>bool</type>
          <declname>selectFirstItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="156" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a22254e7fa893fea5c381ff59b2c8c3a8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem * BMenu::Track</definition>
        <argsstring>(bool startOpened=false, BRect *specialRect=NULL)</argsstring>
        <name>Track</name>
        <qualifiedname>BMenu::Track</qualifiedname>
        <param>
          <type>bool</type>
          <declname>startOpened</declname>
          <defname>sticky</defname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> *</type>
          <declname>specialRect</declname>
          <defname>clickToOpenRect</defname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Initiates tracking the cursor within the menu. </para>
        </briefdescription>
        <detaileddescription>
<para>This method passes tracking control to submenus hierarchically depending on where the user moves their mouse.</para>
<para>You only need to call this method yourself if you are implementing a menu that needs to track the cursor under nonstandard circumstances.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sticky</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>true</computeroutput> <ref refid="classBMenu_1a22254e7fa893fea5c381ff59b2c8c3a8" kindref="member">Track()</ref> leaves the menu open even after the mouse button is no longer held down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clickToOpenRect</parametername>
</parameternamelist>
<parameterdescription>
<para>If <emphasis>sticky</emphasis> is <computeroutput>true</computeroutput>, leave the menu open even if the user releases the mouse button while the cursor is inside <emphasis>clickToOpenRect</emphasis>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> object if the user ends tracking by invoking an item or <computeroutput>NULL</computeroutput> if the user didn&apos;t invoke an item.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="158" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBMenu_1acd9eca18812f6e9561521cc8496164e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::_AddDynamicItems</definition>
        <argsstring>(bool keyDown=false)</argsstring>
        <name>_AddDynamicItems</name>
        <qualifiedname>BMenu::_AddDynamicItems</qualifiedname>
        <param>
          <type>bool</type>
          <declname>keyDown</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="280" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1acbd0fbb17eae5ddfd7fd68ca0ccaba12" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::_AddItem</definition>
        <argsstring>(BMenuItem *item, int32 index)</argsstring>
        <name>_AddItem</name>
        <qualifiedname>BMenu::_AddItem</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="224" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a536f20a3a364ea999201309d18029913" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_CacheFontInfo</definition>
        <argsstring>()</argsstring>
        <name>_CacheFontInfo</name>
        <qualifiedname>BMenu::_CacheFontInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="252" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a3617c15713bf276df2a0c6491a5407b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BMenu::_CalcFrame</definition>
        <argsstring>(BPoint where, bool *scrollOn)</argsstring>
        <name>_CalcFrame</name>
        <qualifiedname>BMenu::_CalcFrame</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>scrollOn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="239" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a07b00119651e402209d55dc4adeec97d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_CalcTriggers</definition>
        <argsstring>()</argsstring>
        <name>_CalcTriggers</name>
        <qualifiedname>BMenu::_CalcTriggers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="275" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ab3a37a8bd8654651cb6cc640dafbbcd0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::_ChooseTrigger</definition>
        <argsstring>(const char *title, int32 &amp;index, uint32 &amp;trigger, BPrivate::TriggerList &amp;triggers)</argsstring>
        <name>_ChooseTrigger</name>
        <qualifiedname>BMenu::_ChooseTrigger</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> &amp;</type>
          <declname>trigger</declname>
        </param>
        <param>
          <type>BPrivate::TriggerList &amp;</type>
          <declname>triggers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="276" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a5b1e8bfae0c10f57cc05650b45678219" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_ComputeColumnLayout</definition>
        <argsstring>(int32 index, bool bestFit, bool moveItems, BRect *override, BRect &amp;outRect)</argsstring>
        <name>_ComputeColumnLayout</name>
        <qualifiedname>BMenu::_ComputeColumnLayout</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bestFit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>moveItems</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> *</type>
          <declname>override</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>outRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="233" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a2948704d8859c743dc350ac2d239059f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_ComputeLayout</definition>
        <argsstring>(int32 index, bool bestFit, bool moveItems, float *width, float *height)</argsstring>
        <name>_ComputeLayout</name>
        <qualifiedname>BMenu::_ComputeLayout</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bestFit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>moveItems</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="230" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ab810ffe8a12d2eacb9e92a083b1ba2f7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_ComputeMatrixLayout</definition>
        <argsstring>(BRect &amp;outRect)</argsstring>
        <name>_ComputeMatrixLayout</name>
        <qualifiedname>BMenu::_ComputeMatrixLayout</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>outRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="237" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1aca17a86bf9c285f5da9c61f97bd1d36e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_ComputeRowLayout</definition>
        <argsstring>(int32 index, bool bestFit, bool moveItems, BRect &amp;outRect)</argsstring>
        <name>_ComputeRowLayout</name>
        <qualifiedname>BMenu::_ComputeRowLayout</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bestFit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>moveItems</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>outRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="235" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a7f173484a2ccf9429db954c676322e9c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::_CustomTrackingWantsToQuit</definition>
        <argsstring>()</argsstring>
        <name>_CustomTrackingWantsToQuit</name>
        <qualifiedname>BMenu::_CustomTrackingWantsToQuit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="284" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a29af75c19c2f820d2cb1619fcae194b0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_DeleteMenuWindow</definition>
        <argsstring>()</argsstring>
        <name>_DeleteMenuWindow</name>
        <qualifiedname>BMenu::_DeleteMenuWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="248" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a57dc11770e2a4a1cea1115c244bbbbc6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_GetCommandKey</definition>
        <argsstring>(uint32 &amp;value) const</argsstring>
        <name>_GetCommandKey</name>
        <qualifiedname>BMenu::_GetCommandKey</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="271" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a786be0346e35fe9812bac89f462131cc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_GetControlKey</definition>
        <argsstring>(uint32 &amp;value) const</argsstring>
        <name>_GetControlKey</name>
        <qualifiedname>BMenu::_GetControlKey</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="270" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ac72dfa4fa143041ee5b822fbe352c781" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_GetMenuKey</definition>
        <argsstring>(uint32 &amp;value) const</argsstring>
        <name>_GetMenuKey</name>
        <qualifiedname>BMenu::_GetMenuKey</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="273" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a7bb3b3a3d4df7e0472c318892fcd7cf2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_GetOptionKey</definition>
        <argsstring>(uint32 &amp;value) const</argsstring>
        <name>_GetOptionKey</name>
        <qualifiedname>BMenu::_GetOptionKey</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="272" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a5d4a3f92b4d06afeec054056696c3b5d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_GetShiftKey</definition>
        <argsstring>(uint32 &amp;value) const</argsstring>
        <name>_GetShiftKey</name>
        <qualifiedname>BMenu::_GetShiftKey</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="269" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1aa6af1768ef57059f6d88364c3c89b4de" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_Hide</definition>
        <argsstring>()</argsstring>
        <name>_Hide</name>
        <qualifiedname>BMenu::_Hide</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="199" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1aff662b2ded1b5db811eab288739dfb8a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem * BMenu::_HitTestItems</definition>
        <argsstring>(BPoint where, BPoint slop=B_ORIGIN) const</argsstring>
        <name>_HitTestItems</name>
        <qualifiedname>BMenu::_HitTestItems</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>slop</declname>
          <defval><ref refid="Point_8h_1a9d03b82df6546886ad17a85805497030" kindref="member">B_ORIGIN</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="249" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ae9ef1f8b15fb7ea7b24b8d32d970de1b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_InitData</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>_InitData</name>
        <qualifiedname>BMenu::_InitData</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="196" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a25785e8e2331b7b3144c853e4ccc1bfd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMenu::_InsertItemAtSpecifier</definition>
        <argsstring>(const BMessage &amp;specifier, int32 what, BMenuItem *item)</argsstring>
        <name>_InsertItemAtSpecifier</name>
        <qualifiedname>BMenu::_InsertItemAtSpecifier</qualifiedname>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> &amp;</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>what</declname>
        </param>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="207" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a1900306aae919382133a03c6c7fc0ef4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_Install</definition>
        <argsstring>(BWindow *target)</argsstring>
        <name>_Install</name>
        <qualifiedname>BMenu::_Install</qualifiedname>
        <param>
          <type><ref refid="classBWindow" kindref="compound">BWindow</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="255" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ae766da3de7ef6cf1a155ce1bcb6c4b6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_InvokeItem</definition>
        <argsstring>(BMenuItem *item, bool now=false)</argsstring>
        <name>_InvokeItem</name>
        <qualifiedname>BMenu::_InvokeItem</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>now</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="287" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a1aa9bdd39087542eb49c41c8ebe98527" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::_IsStickyMode</definition>
        <argsstring>() const</argsstring>
        <name>_IsStickyMode</name>
        <qualifiedname>BMenu::_IsStickyMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="266" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a40eac057f452ba0ac9a88741b29f4efb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_ItemMarked</definition>
        <argsstring>(BMenuItem *item)</argsstring>
        <name>_ItemMarked</name>
        <qualifiedname>BMenu::_ItemMarked</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="254" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a6c1676a4fd6e4052d716a12e754578b6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_ItemScriptReceived</definition>
        <argsstring>(BMessage *message, BMenuItem *item)</argsstring>
        <name>_ItemScriptReceived</name>
        <qualifiedname>BMenu::_ItemScriptReceived</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="202" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a58acfa1ff3437ee4a3e34aba00eb6026" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_LayoutItems</definition>
        <argsstring>(int32 index)</argsstring>
        <name>_LayoutItems</name>
        <qualifiedname>BMenu::_LayoutItems</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="228" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a3f9082b727c96947184533bb3b396508" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BPrivate::BMenuWindow *</type>
        <definition>BPrivate::BMenuWindow * BMenu::_MenuWindow</definition>
        <argsstring>()</argsstring>
        <name>_MenuWindow</name>
        <qualifiedname>BMenu::_MenuWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="247" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a72b184c5e6357b4ff8549e20f279da85" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem * BMenu::_NextItem</definition>
        <argsstring>(BMenuItem *item, bool forward) const</argsstring>
        <name>_NextItem</name>
        <qualifiedname>BMenu::_NextItem</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forward</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="262" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a05618354501f4f249afafa7bba719fe5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::_OkToProceed</definition>
        <argsstring>(BMenuItem *item, bool keyDown=false)</argsstring>
        <name>_OkToProceed</name>
        <qualifiedname>BMenu::_OkToProceed</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keyDown</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="281" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ac68e023867ef13f3b3d3882b7d824183" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::_OverSubmenu</definition>
        <argsstring>(BMenuItem *item, BPoint loc)</argsstring>
        <name>_OverSubmenu</name>
        <qualifiedname>BMenu::_OverSubmenu</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="246" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a4faa4d8b914493ba6a55e79ae5a71ada" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::_OverSuper</definition>
        <argsstring>(BPoint loc)</argsstring>
        <name>_OverSuper</name>
        <qualifiedname>BMenu::_OverSuper</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="245" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a1958b11f003a85a2595f48ca1d152f8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_QuitTracking</definition>
        <argsstring>(bool onlyThis=true)</argsstring>
        <name>_QuitTracking</name>
        <qualifiedname>BMenu::_QuitTracking</qualifiedname>
        <param>
          <type>bool</type>
          <declname>onlyThis</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="288" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a3c1fe429a252cb853902c8cfeca9d6f4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::_RelayoutIfNeeded</definition>
        <argsstring>()</argsstring>
        <name>_RelayoutIfNeeded</name>
        <qualifiedname>BMenu::_RelayoutIfNeeded</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="227" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a31498eb3140309f334a9b8ffec9c4aac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::_RemoveItems</definition>
        <argsstring>(int32 index, int32 count, BMenuItem *item, bool deleteItems=false)</argsstring>
        <name>_RemoveItems</name>
        <qualifiedname>BMenu::_RemoveItems</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deleteItems</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="225" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a2a1b9cdc653b5f668c2ffce8793f4cab" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::_ReservedMenu3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedMenu3</name>
        <qualifiedname>BMenu::_ReservedMenu3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="189" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ab4fe5d1dc2ec1290f082636e57cada25" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::_ReservedMenu4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedMenu4</name>
        <qualifiedname>BMenu::_ReservedMenu4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="190" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1aa38a9df06363bd04b2aa4e12911320e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::_ReservedMenu5</definition>
        <argsstring>()</argsstring>
        <name>_ReservedMenu5</name>
        <qualifiedname>BMenu::_ReservedMenu5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="191" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1aa047cba7bdfec237424cf6b0bce6da8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenu::_ReservedMenu6</definition>
        <argsstring>()</argsstring>
        <name>_ReservedMenu6</name>
        <qualifiedname>BMenu::_ReservedMenu6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="192" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1aeb2ff10be355078e65df1c2faaf13300" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMenu::_ResolveItemSpecifier</definition>
        <argsstring>(const BMessage &amp;specifier, int32 what, BMenuItem *&amp;item, int32 *index=NULL)</argsstring>
        <name>_ResolveItemSpecifier</name>
        <qualifiedname>BMenu::_ResolveItemSpecifier</qualifiedname>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> &amp;</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>what</declname>
        </param>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *&amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>index</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="204" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1abcf34b96367bc22c78b0480489233050" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_ScriptReceived</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>_ScriptReceived</name>
        <qualifiedname>BMenu::_ScriptReceived</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="201" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a3f1fc6f30fe316bbdf0608e9f9586334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_SelectItem</definition>
        <argsstring>(BMenuItem *item, bool showSubmenu=true, bool selectFirstItem=false, bool keyDown=false)</argsstring>
        <name>_SelectItem</name>
        <qualifiedname>BMenu::_SelectItem</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>showSubmenu</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>selectFirstItem</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keyDown</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="257" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a45d8888ee58fee7857af32cafbc449dc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::_SelectNextItem</definition>
        <argsstring>(BMenuItem *item, bool forward)</argsstring>
        <name>_SelectNextItem</name>
        <qualifiedname>BMenu::_SelectNextItem</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forward</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="261" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a0f13e006f1e0d75138dc656d07b5a0ce" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_SetIgnoreHidden</definition>
        <argsstring>(bool ignoreHidden)</argsstring>
        <name>_SetIgnoreHidden</name>
        <qualifiedname>BMenu::_SetIgnoreHidden</qualifiedname>
        <param>
          <type>bool</type>
          <declname>ignoreHidden</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="263" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="263" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ad54647e0c3eb73d6da350d3a0900311a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_SetStickyMode</definition>
        <argsstring>(bool on)</argsstring>
        <name>_SetStickyMode</name>
        <qualifiedname>BMenu::_SetStickyMode</qualifiedname>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="265" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a754b46f9d7659aff86cc2a6063e84886" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenu::_Show</definition>
        <argsstring>(bool selectFirstItem=false, bool keyDown=false)</argsstring>
        <name>_Show</name>
        <qualifiedname>BMenu::_Show</qualifiedname>
        <param>
          <type>bool</type>
          <declname>selectFirstItem</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keyDown</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="197" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a992683e18c8691358af4e5bbbf3667a2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BMenu::_State</definition>
        <argsstring>(BMenuItem **_item=NULL) const</argsstring>
        <name>_State</name>
        <qualifiedname>BMenu::_State</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> **</type>
          <declname>_item</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="286" column="4"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a04b4fef75f36554eb7faf997fe6605af" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BMenu::_Superbounds</definition>
        <argsstring>() const</argsstring>
        <name>_Superbounds</name>
        <qualifiedname>BMenu::_Superbounds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="251" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1aae1f7d599e5ccabfc809f69b8b76f4ba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem * BMenu::_Track</definition>
        <argsstring>(int *action, long start=-1)</argsstring>
        <name>_Track</name>
        <qualifiedname>BMenu::_Track</qualifiedname>
        <param>
          <type>int *</type>
          <declname>action</declname>
        </param>
        <param>
          <type>long</type>
          <declname>start</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="200" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a7ced4a1885c6eb029105604d7e16ff7a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_Uninstall</definition>
        <argsstring>()</argsstring>
        <name>_Uninstall</name>
        <qualifiedname>BMenu::_Uninstall</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="256" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a1ff0e1932aa647471add29de380708fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_UpdateNavigationArea</definition>
        <argsstring>(BPoint position, BRect &amp;navAreaRectAbove, BRect &amp;navAreaBelow)</argsstring>
        <name>_UpdateNavigationArea</name>
        <qualifiedname>BMenu::_UpdateNavigationArea</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>navAreaRectAbove</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>navAreaBelow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="211" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a3934ff1fd2563cb784f90460f43962ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_UpdateStateClose</definition>
        <argsstring>(BMenuItem *item, const BPoint &amp;where, const uint32 &amp;buttons)</argsstring>
        <name>_UpdateStateClose</name>
        <qualifiedname>BMenu::_UpdateStateClose</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classBPoint" kindref="compound">BPoint</ref> &amp;</type>
          <declname>where</declname>
        </param>
        <param>
          <type>const <ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> &amp;</type>
          <declname>buttons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="220" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1ad2ef47c603e400180871baa5cc788a2d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_UpdateStateOpenSelect</definition>
        <argsstring>(BMenuItem *item, BPoint position, BRect &amp;navAreaRectAbove, BRect &amp;navAreaBelow, bigtime_t &amp;selectedTime, bigtime_t &amp;navigationAreaTime)</argsstring>
        <name>_UpdateStateOpenSelect</name>
        <qualifiedname>BMenu::_UpdateStateOpenSelect</qualifiedname>
        <param>
          <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>navAreaRectAbove</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>navAreaBelow</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref> &amp;</type>
          <declname>selectedTime</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref> &amp;</type>
          <declname>navigationAreaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="215" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1a8536e7aa7867573efc36e55ffc23c7ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenu::_UpdateWindowViewSize</definition>
        <argsstring>(const bool &amp;updatePosition)</argsstring>
        <name>_UpdateWindowViewSize</name>
        <qualifiedname>BMenu::_UpdateWindowViewSize</qualifiedname>
        <param>
          <type>const bool &amp;</type>
          <declname>updatePosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="279" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1af33a874312b57c8aed1b166aaf21cf9d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>BSize BMenu::_ValidatePreferredSize</definition>
        <argsstring>()</argsstring>
        <name>_ValidatePreferredSize</name>
        <qualifiedname>BMenu::_ValidatePreferredSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="229" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenu_1abc0add282b5694a1053eedbbdd6e83ae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenu" kindref="compound">BMenu</ref> &amp;</type>
        <definition>BMenu &amp; BMenu::operator=</definition>
        <argsstring>(const BMenu &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BMenu::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBMenu" kindref="compound">BMenu</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="194" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Displays a list of menu items including additional menus arranged hierarchically. </para>
    </briefdescription>
    <detaileddescription>
<para>A newly created <ref refid="classBMenu" kindref="compound">BMenu</ref> object doesn&apos;t contain any menu items, you need to call <ref refid="classBMenu_1a93b3441be6f675d4f04b396a460f3edb" kindref="member">AddItem()</ref> or <ref refid="classBMenu_1a7e9495276526fabf009db1f923fcc036" kindref="member">AddList()</ref> to add some.</para>
<para>In addition to <ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> objects you can also add additional <ref refid="classBMenu" kindref="compound">BMenu</ref> objects in order to create a menu hierarchy. Unlike menus in other operating systems you can always select both the submenu and menu items, although selecting the submenu might not actually produce any action other than to close the menu. The name of a submenu is used to draw its label.</para>
<para><image type="html" name="BMenu_example.png"></image>
</para>
<para><ref refid="classBMenu" kindref="compound">BMenu</ref> is the basis of several other Interface Kit classes including <ref refid="classBMenuBar" kindref="compound">BMenuBar</ref> and <ref refid="classBPopUpMenu" kindref="compound">BPopUpMenu</ref>. See <ref refid="classBMenu_1a71036007fd11439ac43bccc05e833938" kindref="member">BMenu::SetRadioMode()</ref> and <ref refid="classBMenu_1a6575006958cc1fd049fea76fed4c40ba" kindref="member">BMenu::SetLabelFromMarked()</ref> for additional details on how <ref refid="classBMenu" kindref="compound">BMenu</ref> and <ref refid="classBPopUpMenu" kindref="compound">BPopUpMenu</ref> are related.</para>
<para>Menus arrange their items in one of three possible layouts: <table rows="3" cols="2"><row>
<entry thead="no"><para><computeroutput>B_ITEMS_IN_COLUMN</computeroutput>  </para>
</entry><entry thead="no"><para>The menu items are stacked vertically in a column, one on top of another, as in a typical pop-up menu.   </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>B_ITEMS_IN_ROW</computeroutput>  </para>
</entry><entry thead="no"><para>The menu items are laid out horizontally in a row, from end to end, as in a typical menu bar.   </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>B_ITEMS_IN_MATRIX</computeroutput>  </para>
</entry><entry thead="no"><para>The menu items are arranged in a free-form arrangement that you create, such as a matrix.   </para>
</entry></row>
</table>
</para>
<para>Either <computeroutput>B_ITEMS_IN_COLUMN</computeroutput> or <computeroutput>B_ITEMS_IN_ROW</computeroutput> can be passed into the default constructor, but, you should use the constructor that allows you to set the height and width of the menu in order to utilize the <computeroutput>B_ITEMS_IN_MATRIX</computeroutput> layout.</para>
<para>Several methods will only work in some layouts as noted in the method description below.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="3">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BMenu</label>
        <link refid="classBMenu"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BMenuBar</label>
        <link refid="classBMenuBar"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BPopUpMenu</label>
        <link refid="classBPopUpMenu"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="3">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BMenu</label>
        <link refid="classBMenu"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/interface/Menu.h" line="48" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/Menu.h" bodystart="48" bodyend="334"/>
    <listofallmembers>
      <member refid="classBMenu_1acd9eca18812f6e9561521cc8496164e9" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_AddDynamicItems</name></member>
      <member refid="classBMenu_1acbd0fbb17eae5ddfd7fd68ca0ccaba12" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_AddItem</name></member>
      <member refid="classBMenu_1a536f20a3a364ea999201309d18029913" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_CacheFontInfo</name></member>
      <member refid="classBMenu_1a3617c15713bf276df2a0c6491a5407b1" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_CalcFrame</name></member>
      <member refid="classBMenu_1a07b00119651e402209d55dc4adeec97d" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_CalcTriggers</name></member>
      <member refid="classBMenu_1ab3a37a8bd8654651cb6cc640dafbbcd0" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_ChooseTrigger</name></member>
      <member refid="classBMenu_1a5b1e8bfae0c10f57cc05650b45678219" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_ComputeColumnLayout</name></member>
      <member refid="classBMenu_1a2948704d8859c743dc350ac2d239059f" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_ComputeLayout</name></member>
      <member refid="classBMenu_1ab810ffe8a12d2eacb9e92a083b1ba2f7" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_ComputeMatrixLayout</name></member>
      <member refid="classBMenu_1aca17a86bf9c285f5da9c61f97bd1d36e" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_ComputeRowLayout</name></member>
      <member refid="classBMenu_1a7f173484a2ccf9429db954c676322e9c" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_CustomTrackingWantsToQuit</name></member>
      <member refid="classBMenu_1a29af75c19c2f820d2cb1619fcae194b0" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_DeleteMenuWindow</name></member>
      <member refid="classBMenu_1a57dc11770e2a4a1cea1115c244bbbbc6" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_GetCommandKey</name></member>
      <member refid="classBMenu_1a786be0346e35fe9812bac89f462131cc" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_GetControlKey</name></member>
      <member refid="classBMenu_1ac72dfa4fa143041ee5b822fbe352c781" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_GetMenuKey</name></member>
      <member refid="classBMenu_1a7bb3b3a3d4df7e0472c318892fcd7cf2" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_GetOptionKey</name></member>
      <member refid="classBMenu_1a5d4a3f92b4d06afeec054056696c3b5d" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_GetShiftKey</name></member>
      <member refid="classBMenu_1aa6af1768ef57059f6d88364c3c89b4de" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_Hide</name></member>
      <member refid="classBMenu_1aff662b2ded1b5db811eab288739dfb8a" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_HitTestItems</name></member>
      <member refid="classBMenu_1a27cf427e74ff68a89a454b12844a4727" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_init_interface_kit_</name></member>
      <member refid="classBMenu_1ae9ef1f8b15fb7ea7b24b8d32d970de1b" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_InitData</name></member>
      <member refid="classBMenu_1a25785e8e2331b7b3144c853e4ccc1bfd" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_InsertItemAtSpecifier</name></member>
      <member refid="classBMenu_1a1900306aae919382133a03c6c7fc0ef4" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_Install</name></member>
      <member refid="classBMenu_1ae766da3de7ef6cf1a155ce1bcb6c4b6e" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_InvokeItem</name></member>
      <member refid="classBMenu_1a1aa9bdd39087542eb49c41c8ebe98527" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_IsStickyMode</name></member>
      <member refid="classBMenu_1a40eac057f452ba0ac9a88741b29f4efb" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_ItemMarked</name></member>
      <member refid="classBMenu_1a6c1676a4fd6e4052d716a12e754578b6" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_ItemScriptReceived</name></member>
      <member refid="classBMenu_1a58acfa1ff3437ee4a3e34aba00eb6026" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_LayoutItems</name></member>
      <member refid="classBMenu_1a3f9082b727c96947184533bb3b396508" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_MenuWindow</name></member>
      <member refid="classBMenu_1a72b184c5e6357b4ff8549e20f279da85" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_NextItem</name></member>
      <member refid="classBMenu_1a05618354501f4f249afafa7bba719fe5" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_OkToProceed</name></member>
      <member refid="classBMenu_1ac68e023867ef13f3b3d3882b7d824183" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_OverSubmenu</name></member>
      <member refid="classBMenu_1a4faa4d8b914493ba6a55e79ae5a71ada" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_OverSuper</name></member>
      <member refid="classBMenu_1a1958b11f003a85a2595f48ca1d152f8b" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_QuitTracking</name></member>
      <member refid="classBMenu_1a3c1fe429a252cb853902c8cfeca9d6f4" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_RelayoutIfNeeded</name></member>
      <member refid="classBMenu_1a31498eb3140309f334a9b8ffec9c4aac" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_RemoveItems</name></member>
      <member refid="classBMenu_1aa8517043d0522f946e478bf0b57a7d53" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_reserved</name></member>
      <member refid="classBMenu_1a2a1b9cdc653b5f668c2ffce8793f4cab" prot="private" virt="virtual"><scope>BMenu</scope><name>_ReservedMenu3</name></member>
      <member refid="classBMenu_1ab4fe5d1dc2ec1290f082636e57cada25" prot="private" virt="virtual"><scope>BMenu</scope><name>_ReservedMenu4</name></member>
      <member refid="classBMenu_1aa38a9df06363bd04b2aa4e12911320e0" prot="private" virt="virtual"><scope>BMenu</scope><name>_ReservedMenu5</name></member>
      <member refid="classBMenu_1aa047cba7bdfec237424cf6b0bce6da8b" prot="private" virt="virtual"><scope>BMenu</scope><name>_ReservedMenu6</name></member>
      <member refid="classBMenu_1aeb2ff10be355078e65df1c2faaf13300" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_ResolveItemSpecifier</name></member>
      <member refid="classBMenu_1abcf34b96367bc22c78b0480489233050" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_ScriptReceived</name></member>
      <member refid="classBMenu_1a3f1fc6f30fe316bbdf0608e9f9586334" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_SelectItem</name></member>
      <member refid="classBMenu_1a45d8888ee58fee7857af32cafbc449dc" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_SelectNextItem</name></member>
      <member refid="classBMenu_1a0f13e006f1e0d75138dc656d07b5a0ce" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_SetIgnoreHidden</name></member>
      <member refid="classBMenu_1ad54647e0c3eb73d6da350d3a0900311a" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_SetStickyMode</name></member>
      <member refid="classBMenu_1a754b46f9d7659aff86cc2a6063e84886" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_Show</name></member>
      <member refid="classBMenu_1a992683e18c8691358af4e5bbbf3667a2" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_State</name></member>
      <member refid="classBMenu_1a04b4fef75f36554eb7faf997fe6605af" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_Superbounds</name></member>
      <member refid="classBMenu_1aae1f7d599e5ccabfc809f69b8b76f4ba" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_Track</name></member>
      <member refid="classBMenu_1a7ced4a1885c6eb029105604d7e16ff7a" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_Uninstall</name></member>
      <member refid="classBMenu_1a1ff0e1932aa647471add29de380708fe" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_UpdateNavigationArea</name></member>
      <member refid="classBMenu_1a3934ff1fd2563cb784f90460f43962ad" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_UpdateStateClose</name></member>
      <member refid="classBMenu_1ad2ef47c603e400180871baa5cc788a2d" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_UpdateStateOpenSelect</name></member>
      <member refid="classBMenu_1a8536e7aa7867573efc36e55ffc23c7ce" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_UpdateWindowViewSize</name></member>
      <member refid="classBMenu_1af33a874312b57c8aed1b166aaf21cf9d" prot="private" virt="non-virtual"><scope>BMenu</scope><name>_ValidatePreferredSize</name></member>
      <member refid="classBMenu_1a016bd4db389c9daf5119905039b28371" prot="public" virt="non-virtual"><scope>BMenu</scope><name>add_state</name></member>
      <member refid="classBView_1ab6382c582e5e1be527d3199459d05e8f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AddChild</name></member>
      <member refid="classBView_1a5d30ae4fa0119bf5286f52f83c2f351c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AddChild</name></member>
      <member refid="classBMenu_1a23bb62b2d8ebf6ebd539218273e31eb0" prot="public" virt="virtual"><scope>BMenu</scope><name>AddDynamicItem</name></member>
      <member refid="classBHandler_1a862bea548363faac6f883b348cbed838" prot="public" virt="virtual"><scope>BMenu</scope><name>AddFilter</name></member>
      <member refid="classBMenu_1a93b3441be6f675d4f04b396a460f3edb" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AddItem</name></member>
      <member refid="classBMenu_1a54b0803984953195bf425f439f2877f3" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AddItem</name></member>
      <member refid="classBMenu_1af7369a0039d85b80bb43a87e069babf7" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AddItem</name></member>
      <member refid="classBMenu_1a28e2ee1c1f97b5d7ab4b397493c1b37e" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AddItem</name></member>
      <member refid="classBMenu_1a627295137a1fb9d6567a03243cab27f4" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AddItem</name></member>
      <member refid="classBMenu_1ae9d684a3d4ad604e19b0727939a1e1b3" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AddItem</name></member>
      <member refid="classBView_1a88440336a66ee9b1a4b1661e9ba9e59c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AddLine</name></member>
      <member refid="classBMenu_1a7e9495276526fabf009db1f923fcc036" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AddList</name></member>
      <member refid="classBMenu_1a9101f4977ee547e81e6a2544f891e493" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AddSeparatorItem</name></member>
      <member refid="classBView_1ac780f029d415ee0a915792b4e756fa77" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AdoptParentColors</name></member>
      <member refid="classBView_1a0e429a82fe06e9ab390b06d993ee31be" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AdoptSystemColors</name></member>
      <member refid="classBView_1ab68ad7103708884f9e6fd84e8a579746" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AdoptViewColors</name></member>
      <member refid="classBView_1a561e82ed41cbb93d3bacf371787497bf" prot="public" virt="virtual"><scope>BMenu</scope><name>AllArchived</name></member>
      <member refid="classBMenu_1a2540cab39de9a2ed1a3e71e2c8ec52dc" prot="public" virt="virtual"><scope>BMenu</scope><name>AllAttached</name></member>
      <member refid="classBMenu_1a40c41c3d2d1a8e23dfad97039615b208" prot="public" virt="virtual"><scope>BMenu</scope><name>AllDetached</name></member>
      <member refid="classBView_1ab7bd04272afed8b28bf57d1de33cbe05" prot="public" virt="virtual"><scope>BMenu</scope><name>AllUnarchived</name></member>
      <member refid="classBView_1a2d73d2f2b0b35390929cf54fbfa5ecff" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AppendToPicture</name></member>
      <member refid="classBMenu_1a71bed24f541bdfb690863118ce3f716b" prot="public" virt="virtual"><scope>BMenu</scope><name>Archive</name></member>
      <member refid="classBMenu_1a97d2138f50a3fd757b31407627e12eea" prot="public" virt="non-virtual"><scope>BMenu</scope><name>AreTriggersEnabled</name></member>
      <member refid="classBMenu_1af38b2e6bf69d918e37bcf1e18711bb37" prot="public" virt="virtual"><scope>BMenu</scope><name>AttachedToWindow</name></member>
      <member refid="classBMenu_1a016bd4db389c9daf5119905039b28371a4c907fcfe2abf86721f24ff6e86e7636" prot="public" virt="non-virtual"><scope>BMenu</scope><name>B_ABORT</name></member>
      <member refid="classBMenu_1a016bd4db389c9daf5119905039b28371af5ea94801b213916ac9887ca910c0179" prot="public" virt="non-virtual"><scope>BMenu</scope><name>B_INITIAL_ADD</name></member>
      <member refid="classBMenu_1a016bd4db389c9daf5119905039b28371a826c4d7d11b9c0c09d083e6e4b798879" prot="public" virt="non-virtual"><scope>BMenu</scope><name>B_PROCESSING</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BArchivable</name></member>
      <member refid="classBView_1abe65757b7c83c8db390bf0c87457a343" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BeginLayer</name></member>
      <member refid="classBView_1ab3f2e9f54d2b93952b27e182ac552983" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BeginLineArray</name></member>
      <member refid="classBView_1a14155192773aad22ebe47a9975afac5f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BeginPicture</name></member>
      <member refid="classBView_1ac1eb1eeee67ec97205a4acc6955185bd" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BeginRectTracking</name></member>
      <member refid="classBHandler_1a2142e21fe781b24f914ec2086e5f05b7" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BHandler</name></member>
      <member refid="classBHandler_1add8fa081a7bb8633581e78777b215d0b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BHandler</name></member>
      <member refid="classBMenu_1a7a674ff3dbf2620a038bb1728edd4378" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BMenu</name></member>
      <member refid="classBMenu_1ab6ace1b9965547b7e2019818effc3e15" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BMenu</name></member>
      <member refid="classBMenu_1a66018a8f741b47ff198cd0308bf75bb5" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BMenu</name></member>
      <member refid="classBMenu_1ad70c71bed508876fa919b63072bb5c72" prot="protected" virt="non-virtual"><scope>BMenu</scope><name>BMenu</name></member>
      <member refid="classBView_1acbb8ea442346e91428689163db9d633e" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Bounds</name></member>
      <member refid="classBView_1ab148f59c41c9a22ced87bf7a0221ed62" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BView</name></member>
      <member refid="classBView_1ae3a1b2a66dc19690e766623be65c37e2" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BView</name></member>
      <member refid="classBView_1ae982fac35c278cc64990c506efe3965e" prot="public" virt="non-virtual"><scope>BMenu</scope><name>BView</name></member>
      <member refid="classBView_1aaf91592f50f2f44d16f23e7504f494cb" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ChildAt</name></member>
      <member refid="classBView_1ae7582b9a2b0b446a1de16c681f23baf9" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ClearViewBitmap</name></member>
      <member refid="classBView_1a0ae48f37c3f56b422841638971488cc0" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ClearViewOverlay</name></member>
      <member refid="classBView_1a18d61bcae2a7ca8a1a0977ac23d15171" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ClipToInversePicture</name></member>
      <member refid="classBView_1ad1762d160500ec3ce90c7bd73944d8a7" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ClipToInverseRect</name></member>
      <member refid="classBView_1a17dcb4f2e92994cde9a9ece9caa619c2" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ClipToInverseShape</name></member>
      <member refid="classBView_1a9c92c9e8e306d00dbfef81f2b0282339" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ClipToPicture</name></member>
      <member refid="classBView_1a22ff147a2f0a0bd65de494c9a039acee" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ClipToRect</name></member>
      <member refid="classBView_1ac0884c62949361a7eb6a4834f46b902c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ClipToShape</name></member>
      <member refid="classBView_1a656b8d82a6a7c7c6ab33c3dd08aad6ec" prot="public" virt="virtual"><scope>BMenu</scope><name>ConstrainClippingRegion</name></member>
      <member refid="classBView_1a43c16140dd4491a6a6f7bad11bbea1f9" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1aa3201bdf5c489fbab7d67afe3453466d" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1ab2aeeb14409a18f950173e7cb22e147c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1a45b405f10c29442aea8b70161410565f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1a4b794ccd899dc6a0cafd886169122df5" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a75f1d68cf77bccc03930eb8e273f2967" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a3fbc496f437925cb02ccf9e817406e4e" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a44c3b5174e4ccfa4c123e0d5d54e9408" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1ab20700567eabd5f8135be179b4232e2c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1a91e6a7edab78547be47cb8dc84cfdecf" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1ac7bd2e0e7aac40d1be9a47999b5701a9" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1ae3b385e4d1b9f70bc848bf2fd0b7753c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1aefefb1242613b869feb6b8e0cc119518" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1af90cdeb62cc60adf64eb9a669c37c153" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1ad99f5af006f28c485f02484752a2ac5d" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1ae60c56c306d0cf3f504d710fac8b9bed" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1a8ace5c5cc811c4ad16acf281ffd1a48d" prot="public" virt="non-virtual"><scope>BMenu</scope><name>CopyBits</name></member>
      <member refid="classBView_1ae30d094a1cb1f3357c4aa7caa4b0e29d" prot="public" virt="non-virtual"><scope>BMenu</scope><name>CountChildren</name></member>
      <member refid="classBMenu_1ae2328de69b20f84bd925dc943e3ae3cc" prot="public" virt="non-virtual"><scope>BMenu</scope><name>CountItems</name></member>
      <member refid="classBView_1ae2a9da1ca04489dd60ef8aefa86331ed" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DelayedInvalidate</name></member>
      <member refid="classBView_1a6389a46cf1842eb0d412b44958955e61" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DelayedInvalidate</name></member>
      <member refid="classBMenu_1a51b79eb8595e20234f2fefabf7899e21" prot="public" virt="virtual"><scope>BMenu</scope><name>DetachedFromWindow</name></member>
      <member refid="classBView_1aa165cbaac7d6915feaae6048c4378c85" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DisableLayoutInvalidation</name></member>
      <member refid="classBMenu_1a981691c987e0f0a82a8f056284280032" prot="public" virt="virtual"><scope>BMenu</scope><name>DoLayout</name></member>
      <member refid="classBView_1a1f4f0c3c5946df1d14e6031e5e12f40b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DragMessage</name></member>
      <member refid="classBView_1a466287a3d939759cc09e4a6d1c9982cd" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DragMessage</name></member>
      <member refid="classBView_1ae1caa1d0bef9452db00c2adc8e3280b4" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DragMessage</name></member>
      <member refid="classBMenu_1a239982fa92e2f5a9c2ed0c267b7470b3" prot="public" virt="virtual"><scope>BMenu</scope><name>Draw</name></member>
      <member refid="classBView_1abb50623b4236926b068fc5a2264f6a48" prot="public" virt="virtual"><scope>BMenu</scope><name>DrawAfterChildren</name></member>
      <member refid="classBMenu_1ae315f78a12586d80ea7db6247d7d8f1a" prot="public" virt="virtual"><scope>BMenu</scope><name>DrawBackground</name></member>
      <member refid="classBView_1a6171150993fbf7c73966c7c302a95573" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a63db7245fd9b9fefd461d7596c15f9cc" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1abce81666128d183d59b5cf2ed75c7f07" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a1c8b6e3e9218388a68ae43dd408a187c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a769c3e3dee7d86ed50308f7a3f46ef91" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1ae66727344d35f05c56b6163ad70e360c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a0ef432afa41aefcb3fdd537e2d290001" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1aa3275b791787a66f3638611cd6a5ae09" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a6931c5fe803eb5fa9e66438d347c4b6d" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1ab50fba0500357abebb9f3ef3832f2e68" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a02ba5c68f21d4345ec3ee683496ce851" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawChar</name></member>
      <member refid="classBView_1a2ed7c3628692426116fc0bb450c0f0c7" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawChar</name></member>
      <member refid="classBView_1ae7953a2e451fb6e5a439df9e9dc8451a" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawingMode</name></member>
      <member refid="classBMenu_1a20cd1eadfb72b0e5484ede360521e297" prot="protected" virt="non-virtual"><scope>BMenu</scope><name>DrawItems</name></member>
      <member refid="classBView_1ae4b252943befd9f0b62e30517b3ecec2" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a2fdf36421cccce9136cdd9966a971955" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a9f5781a2b37113c55950c93b621984a7" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a65498927c21d6681a0e77c4e3d29efba" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a05881f8b07989e1e9db0bd41f8181341" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a7f2fde4e7719bded5af33805b8242b06" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a5c261dbbb4e8157799e85d6ad1530920" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawString</name></member>
      <member refid="classBView_1a83d77965bd9cda6212189d92b97d8198" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawString</name></member>
      <member refid="classBView_1ad3830d09ed0300a1144d47ac78cd2dde" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawString</name></member>
      <member refid="classBView_1a4e1f1c59352a1373ccace7255a0ccf23" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawString</name></member>
      <member refid="classBView_1a5dacf5d193a0c492f296bc1e402e6370" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawString</name></member>
      <member refid="classBView_1a135868eb5cd1b35ee1c2d03517b9a33f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawString</name></member>
      <member refid="classBView_1a8848d931fd0354860a0e71934e66cb03" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawTiledBitmap</name></member>
      <member refid="classBView_1ad281a4e40f212e3cb56c23fa6e574a84" prot="public" virt="non-virtual"><scope>BMenu</scope><name>DrawTiledBitmapAsync</name></member>
      <member refid="classBView_1ad43cc5c22f83d95632d3d81eff73f425" prot="public" virt="non-virtual"><scope>BMenu</scope><name>EnableLayoutInvalidation</name></member>
      <member refid="classBView_1a9f54d4478a12823f116168a45af30898" prot="public" virt="non-virtual"><scope>BMenu</scope><name>EndLayer</name></member>
      <member refid="classBView_1a24ba922f9698936bc27f48b3c51349a1" prot="public" virt="non-virtual"><scope>BMenu</scope><name>EndLineArray</name></member>
      <member refid="classBView_1ae01506892a9b2d39f6df13726be9d0af" prot="public" virt="non-virtual"><scope>BMenu</scope><name>EndPicture</name></member>
      <member refid="classBView_1a7bcc3532c03eeeb929278de8fcc1fd25" prot="public" virt="non-virtual"><scope>BMenu</scope><name>EndRectTracking</name></member>
      <member refid="classBView_1a8851d500773c732ddbb1a4b31f0ad664" prot="public" virt="non-virtual"><scope>BMenu</scope><name>EventMask</name></member>
      <member refid="classBView_1a1f078f5c987061c5cf3059f7091bcb1a" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ExplicitAlignment</name></member>
      <member refid="classBView_1a4e63cc8ca1f604ccb20f5891adade70f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ExplicitMaxSize</name></member>
      <member refid="classBView_1a1b24db754473008766cdd0fd9c4ee3b7" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ExplicitMinSize</name></member>
      <member refid="classBView_1a218cd0d238104a6ff31c1d72ae2d9e6e" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ExplicitPreferredSize</name></member>
      <member refid="classBMenu_1a814d128d9e742d96310c36e5651a5a15" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fAscent</name></member>
      <member refid="classBMenu_1a492105f82e9eb45be0915ba8aa93436b" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fAttachAborted</name></member>
      <member refid="classBMenu_1afff756b58b3982f2d038b6a3e60105ec" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fCachedMenuWindow</name></member>
      <member refid="classBMenu_1a811873d3a33fde577a47867f6dc280af" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fChosenItem</name></member>
      <member refid="classBMenu_1adfb5e1aa2a5f1a94cb4a217bcef7959c" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fDescent</name></member>
      <member refid="classBMenu_1aff52ea57e773a554a22a7aa9ce011912" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fDynamicName</name></member>
      <member refid="classBMenu_1a6b9bb52b9905344999de1ee96ab5148e" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fEnabled</name></member>
      <member refid="classBMenu_1ad198807ec409724a3c86710f7f2f3585" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fExtraMenuData</name></member>
      <member refid="classBMenu_1a336b18860c2bbbcc21d81e65cc906773" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fExtraRect</name></member>
      <member refid="classBMenu_1a95d1a8e55b7e7847e7dab781b6fb10cb" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fFontHeight</name></member>
      <member refid="classBMenu_1adfbb732b46cb7b2d1054b191b721b6f1" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fHasSubmenus</name></member>
      <member refid="classBMenu_1ae1ac137a67cb6db4824cdb2e79d379dd" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fIgnoreHidden</name></member>
      <member refid="classBView_1af0e5d362474d39199116045aa9621aa5" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillArc</name></member>
      <member refid="classBView_1ac216c652253a21f0f28a7caef07deb77" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillArc</name></member>
      <member refid="classBView_1a49017edefe45ca5c74954e1227e673bb" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillArc</name></member>
      <member refid="classBView_1a4304fe45708f72d0ba20b579870c24ce" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillArc</name></member>
      <member refid="classBView_1a531ad43e129d810ee64208123b550193" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillBezier</name></member>
      <member refid="classBView_1a7cf8a5eaa5451b2c7df0d6fa392012bd" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillBezier</name></member>
      <member refid="classBView_1a06942f0dd4c13175bcfff6a88eae7cc0" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a98a73cbccb42edfc61b93f9aa6f4a13b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a2738cf2f3d39f560d0cff90543f45afa" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a86de91f260577187eaf22ba0fdf32fba" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillEllipse</name></member>
      <member refid="classBView_1ae72733cae8a1fc2da8feb47c0c2149fa" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillPolygon</name></member>
      <member refid="classBView_1adc7d96f2d60a819f03685eb11b6945e2" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a1bdc02a311b2a051ad7fbdbf1789e958" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a96cdb60a8c87e4958380a3077a2197a5" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a22a5ce1f024e622b6eade6a9176ff1f7" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a57b0870cd6a0109c347d80c34ca2f34a" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a4d074663998c7ba922a9d981d0cfe086" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillRect</name></member>
      <member refid="classBView_1aae6a3ff6683bb15ac8c647c946475e8f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillRect</name></member>
      <member refid="classBView_1a4810086c415d90bffa25ab2963716936" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillRegion</name></member>
      <member refid="classBView_1a56828d13947717462b661e1645305509" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillRegion</name></member>
      <member refid="classBView_1a38d7e7b15a13591c20020599886402b5" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillRoundRect</name></member>
      <member refid="classBView_1a73956d28b356b2eee83ebc19bd6e398b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillRoundRect</name></member>
      <member refid="classBView_1a3a2fd2d7313a9bb7dff359a4f4362a5f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillRule</name></member>
      <member refid="classBView_1a91b9ce4b8b8ee13ff5f1071e1fb0d829" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillShape</name></member>
      <member refid="classBView_1a9a82da733397e97b985875be941f77a6" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillShape</name></member>
      <member refid="classBView_1a46ec16609a402d03baa322a04d8c50e2" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillTriangle</name></member>
      <member refid="classBView_1af512b76752705cba87f89c8dac313005" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillTriangle</name></member>
      <member refid="classBView_1a5dd1c64839c11a79e80581e37656cc26" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillTriangle</name></member>
      <member refid="classBView_1a0878dea14a61d58c951bd8e11c0a2ef6" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FillTriangle</name></member>
      <member refid="classBHandler_1a909662a049856f6863a934cf18161554" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FilterList</name></member>
      <member refid="classBMenu_1a8a9b9f676fb940ad648c76499219ee63" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FindItem</name></member>
      <member refid="classBMenu_1a28dc785b54ef7b7c820c173e607610ed" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FindItem</name></member>
      <member refid="classBMenu_1a359ed911cbf2e38b93fdc8a7bcbd5439" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FindMarked</name></member>
      <member refid="classBMenu_1a79ac06123571bb519ae25cd15482497c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FindMarkedIndex</name></member>
      <member refid="classBView_1ab83ef89f1876913174c825ff7cd02c4a" prot="public" virt="non-virtual"><scope>BMenu</scope><name>FindView</name></member>
      <member refid="classBMenu_1a4d4348cbda0950749d7eb99e8bb29b8a" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fInitMatrixSize</name></member>
      <member refid="classBMenu_1a0c40ad3bc0ddef89962dd17b014a1e57" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fItems</name></member>
      <member refid="classBView_1a561b10abf94dd65a26b02253af667508" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Flags</name></member>
      <member refid="classBMenu_1af83b1e30a93090f4a716e4f74e695462" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fLayout</name></member>
      <member refid="classBMenu_1a9c7e2f7b71c012b106d0328361b76842" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fLayoutData</name></member>
      <member refid="classBView_1a15465930f84d2d01f7818bd79bc91c3e" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Flush</name></member>
      <member refid="classBMenu_1ad393ef60fe60becd1eb8e3b4a615e485" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fMaxContentWidth</name></member>
      <member refid="classBView_1a424161ccf6f52a354fdd67ed1376d196" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ForceFontAliasing</name></member>
      <member refid="classBMenu_1ab151f6d866672e9642544b1d431e20ca" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fPad</name></member>
      <member refid="classBMenu_1aa1c9fd8e91a7de60ef9f5e4c6b2ad56c" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fRadioMode</name></member>
      <member refid="classBView_1a487b04a3aaffdd1a1afb730dca36a7e2" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Frame</name></member>
      <member refid="classBMenu_1ab14bf3dc8b6f082f2609094c1f964577" prot="public" virt="virtual"><scope>BMenu</scope><name>FrameMoved</name></member>
      <member refid="classBMenu_1ad6d6eac1f12e9456b9db896aee122181" prot="public" virt="virtual"><scope>BMenu</scope><name>FrameResized</name></member>
      <member refid="classBMenu_1a84b751e44a2cf64b8d21196d5534255b" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fResizeToFit</name></member>
      <member refid="classBMenu_1ab0ef8fbe1a7bd9760858178d905fe75c" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fSelected</name></member>
      <member refid="classBMenu_1ae3ed02af2cefa22b5ab8b3b0d5df6bda" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fState</name></member>
      <member refid="classBMenu_1a121b709d15f6fc37c2ab77eeff050ace" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fStickyMode</name></member>
      <member refid="classBMenu_1a5e2ac3af7dcd5a9a5b6a6ec92f6d63e7" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fSuper</name></member>
      <member refid="classBMenu_1a9b506394b64480a135a00d1f342a8e25" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fSuperbounds</name></member>
      <member refid="classBMenu_1a72e5387e725b2324e8f66888360f3699" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fSuperitem</name></member>
      <member refid="classBMenu_1ae63419f99c54abb700a8065a06d9be1c" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fTrackNewBounds</name></member>
      <member refid="classBMenu_1a938d8ca2b70b0f0a72a15af95c44a510" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fTrigger</name></member>
      <member refid="classBMenu_1a62ecd1d27afaa2f08a0ae11450e35755" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fTriggerEnabled</name></member>
      <member refid="classBMenu_1aacbb89051072cefeb95c2acde5b24481" prot="private" virt="non-virtual"><scope>BMenu</scope><name>fUseCachedMenuLayout</name></member>
      <member refid="classBMenu_1a0caceb1a556af014bf8d86d8af015234" prot="private" virt="non-virtual"><scope>BMenu</scope><name>get_menu_info</name></member>
      <member refid="classBView_1ad50d5ba2249fdf3dd8640b3573c2a2e8" prot="public" virt="non-virtual"><scope>BMenu</scope><name>GetBlendingMode</name></member>
      <member refid="classBView_1acf50a063c9621f35a84b1d0245b12d69" prot="public" virt="non-virtual"><scope>BMenu</scope><name>GetClippingRegion</name></member>
      <member refid="classBView_1af244d01f85e6d9ae7f5fcca4637dc78c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>GetFont</name></member>
      <member refid="classBView_1a5bf95d66754634c647b2ddf7d39b4dfb" prot="public" virt="non-virtual"><scope>BMenu</scope><name>GetFontHeight</name></member>
      <member refid="classBView_1ad34bee968b1ec98a0bf89343340b6b07" prot="public" virt="virtual"><scope>BMenu</scope><name>GetHeightForWidth</name></member>
      <member refid="classBMenu_1a46adc5db4b9a629a93c198a41a57ca36" prot="protected" virt="non-virtual"><scope>BMenu</scope><name>GetItemMargins</name></member>
      <member refid="classBView_1aec2975b51966c397aa52b9e3eebd2c85" prot="public" virt="non-virtual"><scope>BMenu</scope><name>GetLayout</name></member>
      <member refid="classBView_1a830ce9cf2ac2ffb5f73f526ee5d6e53d" prot="public" virt="non-virtual"><scope>BMenu</scope><name>GetMouse</name></member>
      <member refid="classBMenu_1af60a7b8ec6f92749fd46ce2e9179dc17" prot="public" virt="virtual"><scope>BMenu</scope><name>GetPreferredSize</name></member>
      <member refid="classBView_1aaae0dc93bc61d7f221465fbe0aecd30a" prot="public" virt="non-virtual"><scope>BMenu</scope><name>GetStringWidths</name></member>
      <member refid="classBMenu_1a2aa0277374bacf3b7644f738bc064637" prot="public" virt="virtual"><scope>BMenu</scope><name>GetSupportedSuites</name></member>
      <member refid="classBView_1afb826fe9b8964e4d843cae190170badf" prot="protected" virt="virtual"><scope>BMenu</scope><name>GetToolTipAt</name></member>
      <member refid="classBView_1a606e0e7e03516dccb53bf073827460a8" prot="public" virt="non-virtual"><scope>BMenu</scope><name>HasDefaultColors</name></member>
      <member refid="classBView_1abd411461b7e23ad17e7294f8f5e1cbeb" prot="public" virt="virtual"><scope>BMenu</scope><name>HasHeightForWidth</name></member>
      <member refid="classBView_1aa9aacc95606b650e6a8d776b51cb902b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>HasSystemColors</name></member>
      <member refid="classBMenu_1acebb809699f7efa7d72346f2ba0b869f" prot="protected" virt="virtual"><scope>BMenu</scope><name>Hide</name></member>
      <member refid="classBView_1af75bbc1131ad6a90e299c6cbcf623fa7" prot="public" virt="non-virtual"><scope>BMenu</scope><name>HideToolTip</name></member>
      <member refid="classBView_1abda3583967fba9f6ed9524058d00a6e9" prot="public" virt="non-virtual"><scope>BMenu</scope><name>HighColor</name></member>
      <member refid="classBView_1aa86f548fba2e82d022066198be6d5af6" prot="public" virt="non-virtual"><scope>BMenu</scope><name>HighUIColor</name></member>
      <member refid="classBMenu_1a93256bdb0b477bf1ba52e6bd75f86694" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IndexOf</name></member>
      <member refid="classBMenu_1a515c29525463092462e64105469dcdcf" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IndexOf</name></member>
      <member refid="classBMenu_1aabd77aafaee5d7185890e33c73b8d09e" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Instantiate</name></member>
      <member refid="classBView_1a8c767d948dc9435c006cabdcab1cd08e" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Invalidate</name></member>
      <member refid="classBView_1ac70b682819c0f9b008c428e02015b19b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Invalidate</name></member>
      <member refid="classBView_1adfced0dcb244e199f872fdbd48349a05" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Invalidate</name></member>
      <member refid="classBMenu_1a133e0d3f810cf9d0e0f2f206189deb50" prot="public" virt="non-virtual"><scope>BMenu</scope><name>InvalidateLayout</name></member>
      <member refid="classBView_1a4a711316094e43076a3f5478d937accf" prot="public" virt="non-virtual" ambiguityscope="BView::"><scope>BMenu</scope><name>InvalidateLayout</name></member>
      <member refid="classBView_1af7e5ebc41cd5a471dcdcfa1f3db801a5" prot="public" virt="non-virtual"><scope>BMenu</scope><name>InvertRect</name></member>
      <member refid="classBMenu_1a374ec27870b0d21e0f16d77e5aa12535" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IsEnabled</name></member>
      <member refid="classBView_1a165719de682845f80735042a499692ff" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IsFocus</name></member>
      <member refid="classBView_1a33a65050c2315b19b4c5af16c48e3cdb" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IsHidden</name></member>
      <member refid="classBView_1a95cfa8ee585230ea8fb224e88eddc503" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IsHidden</name></member>
      <member refid="classBMenu_1ac2a915d6b9b323c3d12d29df7a2b5571" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IsLabelFromMarked</name></member>
      <member refid="classBView_1a4e86b719129a12afbda7c10371eeca47" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IsLayoutInvalidationDisabled</name></member>
      <member refid="classBView_1a00a5d5d6edee7d488d77df03945b3e94" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IsLayoutValid</name></member>
      <member refid="classBView_1a8e3f1722e40fdf01c5131e49199ec3ff" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IsPrinting</name></member>
      <member refid="classBMenu_1a85e16e170b2d5e16a91c5608b31865fc" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IsRadioMode</name></member>
      <member refid="classBMenu_1aca1162897b36710a15957b7148907d24" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IsRedrawAfterSticky</name></member>
      <member refid="classBHandler_1a581b84f0f067afa88768ce6a0c07f59f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>IsWatched</name></member>
      <member refid="classBMenu_1a1612e6c652a53451bbd7da8ab52d0668" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ItemAt</name></member>
      <member refid="classBMenu_1a6c50b44b2da8caf0280854c5a250b8c2" prot="public" virt="virtual"><scope>BMenu</scope><name>KeyDown</name></member>
      <member refid="classBView_1acbc528bb70be49993bd99aa136dbb089" prot="public" virt="virtual"><scope>BMenu</scope><name>KeyUp</name></member>
      <member refid="classBMenu_1a0a7706c4966b183b9790822bc512fd4e" prot="protected" virt="non-virtual"><scope>BMenu</scope><name>Layout</name></member>
      <member refid="classBView_1a854b6ca54eeca610db9eab8b58d68a8b" prot="public" virt="non-virtual" ambiguityscope="BView::"><scope>BMenu</scope><name>Layout</name></member>
      <member refid="classBView_1a2f74b3e7c602045d8c927f923f45eefa" prot="public" virt="virtual"><scope>BMenu</scope><name>LayoutAlignment</name></member>
      <member refid="classBView_1ada521f848e4c800cd02eb4fe529e7ea0" prot="protected" virt="virtual"><scope>BMenu</scope><name>LayoutChanged</name></member>
      <member refid="classBView_1ae066513c0a788a9544744d409f28cada" prot="public" virt="non-virtual"><scope>BMenu</scope><name>LayoutContext</name></member>
      <member refid="classBMenu_1ab5474abecef27e68bade9c58721caeed" prot="protected" virt="virtual"><scope>BMenu</scope><name>LayoutInvalidated</name></member>
      <member refid="classBView_1a5d252dfe28eee049be2192d1a01ed6e3" prot="public" virt="non-virtual"><scope>BMenu</scope><name>LeftTop</name></member>
      <member refid="classBView_1a551f5961188e4f26ef310eb5eea7c926" prot="public" virt="non-virtual"><scope>BMenu</scope><name>LineCapMode</name></member>
      <member refid="classBView_1a0aa47adb29d91b4cc6c4924b7f436012" prot="public" virt="non-virtual"><scope>BMenu</scope><name>LineJoinMode</name></member>
      <member refid="classBView_1ab1cd7cf77a4fa01755d186a05163cfbe" prot="public" virt="non-virtual"><scope>BMenu</scope><name>LineMiterLimit</name></member>
      <member refid="classBHandler_1a9d64bf66b4914918e24390d117e83477" prot="public" virt="non-virtual"><scope>BMenu</scope><name>LockLooper</name></member>
      <member refid="classBHandler_1afa0099ff6defcb6d64e3ee1c2fb47afe" prot="public" virt="non-virtual"><scope>BMenu</scope><name>LockLooperWithTimeout</name></member>
      <member refid="classBHandler_1ac8e949959b12e602e3b0c4f023c60e6c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Looper</name></member>
      <member refid="classBView_1a423c54f22ab95745b28b583af999e554" prot="public" virt="non-virtual"><scope>BMenu</scope><name>LowColor</name></member>
      <member refid="classBView_1ae32ca6d8f106d44b5b51df82a7eb64c5" prot="public" virt="non-virtual"><scope>BMenu</scope><name>LowUIColor</name></member>
      <member refid="classBMenu_1a1465ef5881a0b85729118534d8ee3a15" prot="public" virt="virtual"><scope>BMenu</scope><name>MakeFocus</name></member>
      <member refid="classBMenu_1ae35fd8bf7622196e8c1c7400cdad2823" prot="public" virt="non-virtual"><scope>BMenu</scope><name>MaxContentWidth</name></member>
      <member refid="classBMenu_1a5f94df489ae102d0e377df3b63d9864a" prot="public" virt="virtual"><scope>BMenu</scope><name>MaxSize</name></member>
      <member refid="classBMenu_1aca12e6b863279cc62772ac13ef286d31" prot="public" virt="virtual"><scope>BMenu</scope><name>MessageReceived</name></member>
      <member refid="classBMenu_1a659643414ede82d0233e62ce9da4c01e" prot="public" virt="virtual"><scope>BMenu</scope><name>MinSize</name></member>
      <member refid="classBView_1a5f5bd975d15df94f2ebbc80eb79cc3f6" prot="public" virt="virtual"><scope>BMenu</scope><name>MouseDown</name></member>
      <member refid="classBView_1ac8b20516e42bab2f1eeb130e2432bde0" prot="public" virt="virtual"><scope>BMenu</scope><name>MouseMoved</name></member>
      <member refid="classBView_1acdb92b30069157b2e3c522a3ef9d6ae4" prot="public" virt="virtual"><scope>BMenu</scope><name>MouseUp</name></member>
      <member refid="classBView_1a6e122baca4494f6ce739a507054fa81f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>MoveBy</name></member>
      <member refid="classBMenu_1a52f15cd54ebd73143c0c0f68e7eb5a43" prot="public" virt="non-virtual"><scope>BMenu</scope><name>MoveItem</name></member>
      <member refid="classBView_1a979f8f0090284919b6e7c6c04d91cbde" prot="public" virt="non-virtual"><scope>BMenu</scope><name>MovePenBy</name></member>
      <member refid="classBView_1acb61254a2121f569f6223a95cd835abd" prot="public" virt="non-virtual"><scope>BMenu</scope><name>MovePenTo</name></member>
      <member refid="classBView_1ae32d7951a4ce9cff6b81899f5208a25f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>MovePenTo</name></member>
      <member refid="classBView_1acce9c93118a3db24078f16bdabc6fbec" prot="public" virt="non-virtual"><scope>BMenu</scope><name>MoveTo</name></member>
      <member refid="classBView_1a1c9b2df47ba1b9f3a1ce3286995fb8bd" prot="public" virt="non-virtual"><scope>BMenu</scope><name>MoveTo</name></member>
      <member refid="classBHandler_1a40b246ac272e09b2f641d1290be21200" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Name</name></member>
      <member refid="classBHandler_1a92855d8f88f6072e7225bde292feaa38" prot="public" virt="non-virtual"><scope>BMenu</scope><name>NextHandler</name></member>
      <member refid="classBView_1a76e7d862fe78e4d2766573bf073b9d30" prot="public" virt="non-virtual"><scope>BMenu</scope><name>NextSibling</name></member>
      <member refid="classBMenu_1abc0add282b5694a1053eedbbdd6e83ae" prot="private" virt="non-virtual"><scope>BMenu</scope><name>operator=</name></member>
      <member refid="classBView_1aefbf71a7a403900e960ffa3943dc9901" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Origin</name></member>
      <member refid="classBView_1a332f34d9862000dbc859fd4e308839dd" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Parent</name></member>
      <member refid="classBView_1a2774e13c2b12c6a5fee333e95b76b07d" prot="public" virt="non-virtual"><scope>BMenu</scope><name>PenLocation</name></member>
      <member refid="classBView_1a69d8657d26b49773fa2de914f263b204" prot="public" virt="non-virtual"><scope>BMenu</scope><name>PenSize</name></member>
      <member refid="classBMenu_1a6dedb98c6ba5ffbc44893ff43785c93c" prot="public" virt="virtual"><scope>BMenu</scope><name>Perform</name></member>
      <member refid="classBView_1abc0d202fe13366b80703afbdb3832951" prot="public" virt="non-virtual"><scope>BMenu</scope><name>PopState</name></member>
      <member refid="classBMenu_1a03aad94d2eb22836823045530e58c052" prot="public" virt="virtual"><scope>BMenu</scope><name>PreferredSize</name></member>
      <member refid="classBView_1a2a46f78756eacca3f3d4c90d31c758b1" prot="public" virt="non-virtual"><scope>BMenu</scope><name>PreviousSibling</name></member>
      <member refid="classBView_1a0ae8ec3e94ee3d41cb329e3df6966566" prot="public" virt="virtual"><scope>BMenu</scope><name>Pulse</name></member>
      <member refid="classBView_1a1dcb914cd0c6ef8d1291aa8492968d40" prot="public" virt="non-virtual"><scope>BMenu</scope><name>PushState</name></member>
      <member refid="classBView_1a2cf4e698a4322ecfb946e440e0f7ac62" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Relayout</name></member>
      <member refid="classBView_1a5f93a23d06267da83c128bce222ceb17" prot="public" virt="non-virtual"><scope>BMenu</scope><name>RemoveChild</name></member>
      <member refid="classBHandler_1a2b608135b27f283802648e7c6f8cdc83" prot="public" virt="virtual"><scope>BMenu</scope><name>RemoveFilter</name></member>
      <member refid="classBMenu_1a5bddcfe7908198f10046fd58e517d906" prot="public" virt="non-virtual"><scope>BMenu</scope><name>RemoveItem</name></member>
      <member refid="classBMenu_1a3b28ecdc6fa0e04f8da5fea0a295d667" prot="public" virt="non-virtual"><scope>BMenu</scope><name>RemoveItem</name></member>
      <member refid="classBMenu_1ab221333103579b6c7a5d08c7c6005e20" prot="public" virt="non-virtual"><scope>BMenu</scope><name>RemoveItem</name></member>
      <member refid="classBMenu_1a21410c37d9ff94ce58f00a4741126a7d" prot="public" virt="non-virtual"><scope>BMenu</scope><name>RemoveItems</name></member>
      <member refid="classBView_1a87e0848b1760a9f28aad4516467a03ed" prot="public" virt="non-virtual"><scope>BMenu</scope><name>RemoveSelf</name></member>
      <member refid="classBView_1a127933a3820f0bfe0497b5e7ddfa191f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ResetLayoutInvalidation</name></member>
      <member refid="classBView_1ace23acc948bbc9b9272da8dc7f01d3ce" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ResizeBy</name></member>
      <member refid="classBView_1a742bccd6034ef9ade65b0e596fba55f2" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ResizeTo</name></member>
      <member refid="classBView_1a6134097569f75679616257a361086d7a" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ResizeTo</name></member>
      <member refid="classBMenu_1a90a8228da7623e8e991a2fc7dc0e8898" prot="public" virt="virtual"><scope>BMenu</scope><name>ResizeToPreferred</name></member>
      <member refid="classBView_1a1e93df523fc9edc807274ac6cfd2dc8d" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ResizingMode</name></member>
      <member refid="classBMenu_1adfd2e1d211f34a8ac748abb989adac48" prot="public" virt="virtual"><scope>BMenu</scope><name>ResolveSpecifier</name></member>
      <member refid="classBView_1a02ab6b6196b140b20ae516a55680e30b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>RotateBy</name></member>
      <member refid="classBView_1a50e12d6b8080b3bc6bc617d31d1ab200" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Scale</name></member>
      <member refid="classBView_1ac83f9fdfb882f849e3ac79bfb06a0fd6" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ScaleBy</name></member>
      <member refid="classBMenu_1a496474e8328dc686ccf9be59fc36ac1b" prot="private" virt="non-virtual"><scope>BMenu</scope><name>sCommandKey</name></member>
      <member refid="classBMenu_1a152e62bfa68659d216503aac3a028ba3" prot="private" virt="non-virtual"><scope>BMenu</scope><name>sControlKey</name></member>
      <member refid="classBMenu_1a8a63e94a031a323ed5ff904f00fefb7f" prot="protected" virt="virtual"><scope>BMenu</scope><name>ScreenLocation</name></member>
      <member refid="classBView_1a0878bc7981ba814190b822349599a120" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ScrollBar</name></member>
      <member refid="classBView_1ae20e2a3c46fc30a2a292c832eead7387" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ScrollBy</name></member>
      <member refid="classBView_1a33ed2a9eeff474a756b548996a82b964" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ScrollTo</name></member>
      <member refid="classBView_1a2b76ddc60289ce92e1fb706332edbafc" prot="public" virt="virtual"><scope>BMenu</scope><name>ScrollTo</name></member>
      <member refid="classBView_1a54991372110199183fed775598ae1912" prot="protected" virt="non-virtual"><scope>BMenu</scope><name>ScrollWithMouseWheelDelta</name></member>
      <member refid="classBHandler_1a71bf72dc17a64bcd42656722271a9e0c" prot="public" virt="virtual"><scope>BMenu</scope><name>SendNotices</name></member>
      <member refid="classBMenu_1a064153830120d34f3b89222a6fdad35f" prot="private" virt="non-virtual"><scope>BMenu</scope><name>set_menu_info</name></member>
      <member refid="classBView_1ad01fc0fd68e4683af9b9386bf33abf63" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetBlendingMode</name></member>
      <member refid="classBView_1a8ba0fe3a3dbeec1b7fd8c9655070ef64" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetDiskMode</name></member>
      <member refid="classBView_1a0c392ed0e36213e1007322a9cbca71c0" prot="public" virt="virtual"><scope>BMenu</scope><name>SetDrawingMode</name></member>
      <member refid="classBMenu_1a68c7fe3263da4d1cb254bd0b6ee1f01f" prot="public" virt="virtual"><scope>BMenu</scope><name>SetEnabled</name></member>
      <member refid="classBView_1a5d8d6b469a8a11a577d1d138cfc31162" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetEventMask</name></member>
      <member refid="classBView_1a6906e47d4fdd6923dd51edb60a83ccea" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetExplicitAlignment</name></member>
      <member refid="classBView_1acd759dd7505050f9cbd8213c71991b8b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetExplicitMaxSize</name></member>
      <member refid="classBView_1abfcb5c761f9b06da3b4a6788aad5d0ee" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetExplicitMinSize</name></member>
      <member refid="classBView_1a98b7d450210099ed59b7cd34f2575e20" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetExplicitPreferredSize</name></member>
      <member refid="classBView_1aeef8a27a5577db87251412ce44421494" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetExplicitSize</name></member>
      <member refid="classBView_1a2019def93337069c0b7d416e103522e9" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetFillRule</name></member>
      <member refid="classBHandler_1a503344dc801858e1f5f419be3919e9cf" prot="public" virt="virtual"><scope>BMenu</scope><name>SetFilterList</name></member>
      <member refid="classBView_1a4740f9a1e1163073b042102a421a2e33" prot="public" virt="virtual"><scope>BMenu</scope><name>SetFlags</name></member>
      <member refid="classBView_1a9247127c151153542a3e6bc1f3904433" prot="public" virt="virtual"><scope>BMenu</scope><name>SetFont</name></member>
      <member refid="classBView_1a443e4d9ff182f85a6b1c8478ef22ffe8" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetFontSize</name></member>
      <member refid="classBView_1ab5482f91a642d545bc3fcefe199f95e9" prot="public" virt="virtual"><scope>BMenu</scope><name>SetHighColor</name></member>
      <member refid="classBView_1aff9e1ab5e88f33027e72b39874868e9b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetHighColor</name></member>
      <member refid="classBView_1a54eefc28bf7a4bc30612cf83aff2963b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetHighUIColor</name></member>
      <member refid="classBMenu_1a2f12a6614dfdea3b27e248b29be764dc" prot="protected" virt="non-virtual"><scope>BMenu</scope><name>SetItemMargins</name></member>
      <member refid="classBMenu_1a6575006958cc1fd049fea76fed4c40ba" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetLabelFromMarked</name></member>
      <member refid="classBView_1acac1ebbba8c76e543e1b06e84dffab02" prot="public" virt="virtual"><scope>BMenu</scope><name>SetLayout</name></member>
      <member refid="classBView_1ae97bfe6c0c93fce98bc7bbd93761dbfb" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetLineMode</name></member>
      <member refid="classBView_1af0426243110fb150ad7ef0705209a12c" prot="public" virt="virtual"><scope>BMenu</scope><name>SetLowColor</name></member>
      <member refid="classBView_1a929fb1ca47a00220c355ae55a0ea6077" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetLowColor</name></member>
      <member refid="classBView_1a879ab88d4e64345069f1041d3a7b652f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetLowUIColor</name></member>
      <member refid="classBMenu_1ae0ccabdfaa67f0ffa7ec3e6e8efdcd03" prot="public" virt="virtual"><scope>BMenu</scope><name>SetMaxContentWidth</name></member>
      <member refid="classBView_1ae7705783d064a8613dcc6f36a2866ab2" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetMouseEventMask</name></member>
      <member refid="classBHandler_1abf861126df4b6e71b9261a99da4ad0eb" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetName</name></member>
      <member refid="classBHandler_1a02f78779c8141987d6030e73c22e734a" prot="public" virt="virtual"><scope>BMenu</scope><name>SetNextHandler</name></member>
      <member refid="classBView_1a769e5fa6486adf12e7a3511ed372a06c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetOrigin</name></member>
      <member refid="classBView_1a7cf4e3ac5b0759b9c38d7b36517f2337" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetOrigin</name></member>
      <member refid="classBView_1a80ea4cb97d2e6e2c3088e610a9e157e6" prot="public" virt="virtual"><scope>BMenu</scope><name>SetPenSize</name></member>
      <member refid="classBMenu_1a71036007fd11439ac43bccc05e833938" prot="public" virt="virtual"><scope>BMenu</scope><name>SetRadioMode</name></member>
      <member refid="classBView_1a38d29ea581880c3978d7e50dcc851696" prot="public" virt="virtual"><scope>BMenu</scope><name>SetResizingMode</name></member>
      <member refid="classBView_1a077136ea06f0a6b39aa0b8b24311cce8" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetScale</name></member>
      <member refid="classBMenu_1ab11e3f007322fc75a9943a1443339ac2" prot="public" virt="virtual"><scope>BMenu</scope><name>SetTargetForItems</name></member>
      <member refid="classBMenu_1aa6075b7d5ed82ba117904f3b5cec61ef" prot="public" virt="virtual"><scope>BMenu</scope><name>SetTargetForItems</name></member>
      <member refid="classBView_1a75fb825a3ef69c1c6fbf3535ee2260ab" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetToolTip</name></member>
      <member refid="classBView_1aa377bad64048a2d3cd1c2b272ae3079b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetToolTip</name></member>
      <member refid="classBMenu_1a7718aab1bf69711c4eb1043424eb2a59" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetTrackingHook</name></member>
      <member refid="classBView_1afbd9b8f35226ba89980c450f7626fc85" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetTransform</name></member>
      <member refid="classBMenu_1a67da7ae008cbe0f38196e5aafd79fe53" prot="public" virt="virtual"><scope>BMenu</scope><name>SetTriggersEnabled</name></member>
      <member refid="classBView_1ac247ddc58f1cb719d60e354a77c51c1e" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetViewBitmap</name></member>
      <member refid="classBView_1a046a9c1656823db5401e530cf8121734" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetViewBitmap</name></member>
      <member refid="classBView_1ae8dde0e0330b394db016f3e609e7fb6a" prot="public" virt="virtual"><scope>BMenu</scope><name>SetViewColor</name></member>
      <member refid="classBView_1a7dace2963c85b5ce55b7d8e96946625c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetViewColor</name></member>
      <member refid="classBView_1a39b4878773b4436e3c76aee51c4fbc09" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetViewCursor</name></member>
      <member refid="classBView_1a576100502a8c6dfb46ff36b08cbe9405" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetViewOverlay</name></member>
      <member refid="classBView_1a9770c1bb97d7ffd797f7c40ca1339f98" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetViewOverlay</name></member>
      <member refid="classBView_1a34f020c4bb1008cef972cf1eec7dba0f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SetViewUIColor</name></member>
      <member refid="classBMenu_1a880d9a96919d389e03106e978709bf9b" prot="protected" virt="virtual"><scope>BMenu</scope><name>Show</name></member>
      <member refid="classBMenu_1ab2fba7cc5470c72b47b052c4fdb78d85" prot="protected" virt="non-virtual"><scope>BMenu</scope><name>Show</name></member>
      <member refid="classBView_1a61d28f55d6fdc55b59c38c44b9788205" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ShowToolTip</name></member>
      <member refid="classBMenu_1ab6a97a61265f1b681495157cb874fde2" prot="private" virt="non-virtual"><scope>BMenu</scope><name>sMenuInfo</name></member>
      <member refid="classBMenu_1a0b8a1d412c68cfcc2c7a6ea5145b72db" prot="private" virt="non-virtual"><scope>BMenu</scope><name>sMenuKey</name></member>
      <member refid="classBMenu_1ae60464aeee0c7d169453101e13bbaa5e" prot="private" virt="non-virtual"><scope>BMenu</scope><name>sOptionKey</name></member>
      <member refid="classBMenu_1a4a3000f320f707d70da1e72da79fca72" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SortItems</name></member>
      <member refid="classBMenu_1adbf542f8be7572a7451c31d3c97184c7" prot="private" virt="non-virtual"><scope>BMenu</scope><name>sShiftKey</name></member>
      <member refid="classBHandler_1af7d600e33a0586af7444d9abc8500504" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a20713ff6ee9df49a014f391374eaf689" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a58d7c8d30e47fbb7590f10dea1f21166" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a31927c51d89e0e3b3bf609a786ee6c3b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a9d1f0d55b3dc7337058aba769b4e4f93" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1ad3544be491270f856a0af8d36ce02d78" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1a199c167e0dcee95aa65d09435804b3d9" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StopWatchingAll</name></member>
      <member refid="classBHandler_1a8b9a424ce63f5932666094b6eadf10cf" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StopWatchingAll</name></member>
      <member refid="classBView_1adef480de8a8bcd2fff3129660501616e" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StringWidth</name></member>
      <member refid="classBView_1aef3638cf597407e6a9f31bc75cd42097" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StringWidth</name></member>
      <member refid="classBView_1a57222cd40096dfe23e1df86a01277041" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokeArc</name></member>
      <member refid="classBView_1a9c958b9399925a8a0ea333afd337ebfd" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokeArc</name></member>
      <member refid="classBView_1a64ea2ad06018b0b3b156113d201c7ad7" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokeBezier</name></member>
      <member refid="classBView_1a042703445263f1d9a9213757fcf27414" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokeEllipse</name></member>
      <member refid="classBView_1ae7727ca808873634363e5306fdbcc09a" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokeEllipse</name></member>
      <member refid="classBView_1a909ee03901fac4ae5504f7faf5e41a7c" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokeLine</name></member>
      <member refid="classBView_1ab713fc42e330d0a091a9774edfb9626f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokeLine</name></member>
      <member refid="classBView_1ae871d03592c1bba5d6be3d5d982ea747" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1a1638c58553467f3ebe5ee2b3683d4905" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1a1482fddababe3dd1377f86a038f7119b" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1ad3893af66d3891855f9db7072bfb4de7" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokeRect</name></member>
      <member refid="classBView_1acf743b2ba22b82c8bc38eb514513df55" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokeRoundRect</name></member>
      <member refid="classBView_1a507e9b732e880ac8e6379e19e74d5757" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokeShape</name></member>
      <member refid="classBView_1a8221cce8942e590c2fea954f57933e78" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokeTriangle</name></member>
      <member refid="classBView_1ae59fc9e9cfaba5e2d6e79a90723a3330" prot="public" virt="non-virtual"><scope>BMenu</scope><name>StrokeTriangle</name></member>
      <member refid="classBMenu_1a51cad9f6d981ce27ca0094f74540ce29" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SubmenuAt</name></member>
      <member refid="classBMenu_1a544cdc1fc6d05c535d677a65ad1ee3d9" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Superitem</name></member>
      <member refid="classBMenu_1a205d32b63c8fc5a5a3a49249838af057" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Supermenu</name></member>
      <member refid="classBMenu_1a717c241c8234cbec4327e6f55b5df1b7" prot="public" virt="non-virtual"><scope>BMenu</scope><name>SwapItems</name></member>
      <member refid="classBView_1a27e217abb3fefa45b6e4ceb7a54cb362" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Sync</name></member>
      <member refid="classBView_1a668a4ed5419c86a7f2696ca7ece28df7" prot="public" virt="virtual"><scope>BMenu</scope><name>TargetedByScrollView</name></member>
      <member refid="classBView_1a127ceec2101b12c0fbe1e0e66a7b9dc1" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ToolTip</name></member>
      <member refid="classBMenu_1a22254e7fa893fea5c381ff59b2c8c3a8" prot="protected" virt="non-virtual"><scope>BMenu</scope><name>Track</name></member>
      <member refid="classBView_1ab16cc72cf8ae3b40abcf1f714e7e9b74" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Transform</name></member>
      <member refid="classBView_1a98597d70ae48b2576683f25078135534" prot="public" virt="non-virtual"><scope>BMenu</scope><name>TransformTo</name></member>
      <member refid="classBView_1a8ae6d4e1cdfeeee33b753d56bee6ae7f" prot="public" virt="non-virtual"><scope>BMenu</scope><name>TranslateBy</name></member>
      <member refid="classBView_1ac2e293fbdd999e4857b44b6e4d4c3820" prot="public" virt="non-virtual"><scope>BMenu</scope><name>TruncateString</name></member>
      <member refid="classBHandler_1ab131af7eb7aa2b9eea3a11ac1bfd4c03" prot="public" virt="non-virtual"><scope>BMenu</scope><name>UnlockLooper</name></member>
      <member refid="classBView_1a8b2b1d9e08ce0c1763dd6a077ed02fdd" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ViewColor</name></member>
      <member refid="classBView_1aec6c89446eb4f5ded151adced9126df8" prot="public" virt="non-virtual"><scope>BMenu</scope><name>ViewUIColor</name></member>
      <member refid="classBView_1a32733d357b76bc3504cae326d174f4a2" prot="public" virt="non-virtual"><scope>BMenu</scope><name>Window</name></member>
      <member refid="classBView_1a5b7aeff0b2608ec63e2c01153a7717f6" prot="public" virt="virtual"><scope>BMenu</scope><name>WindowActivated</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BMenu</scope><name>~BArchivable</name></member>
      <member refid="classBHandler_1a928254034959d19ef588b7898a6f8194" prot="public" virt="virtual"><scope>BMenu</scope><name>~BHandler</name></member>
      <member refid="classBMenu_1ad986f4d6a7b9c5a99f51535b55bdd4df" prot="public" virt="virtual"><scope>BMenu</scope><name>~BMenu</name></member>
      <member refid="classBView_1a7df0d7eaeb97a3c8a800f9e321f23f67" prot="public" virt="virtual"><scope>BMenu</scope><name>~BView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
