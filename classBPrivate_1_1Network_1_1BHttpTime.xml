<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBPrivate_1_1Network_1_1BHttpTime" kind="class" language="C++" prot="public">
    <compoundname>BPrivate::Network::BHttpTime</compoundname>
    <innerclass refid="classBPrivate_1_1Network_1_1BHttpTime_1_1InvalidInput" prot="public">BPrivate::Network::BHttpTime::InvalidInput</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBPrivate_1_1Network_1_1BHttpTime_1aa5e73e3f3e2d3658d4ac2c5a42a0381b" prot="private" static="no" mutable="no">
        <type>BDateTime</type>
        <definition>BDateTime BPrivate::Network::BHttpTime::fDate</definition>
        <argsstring></argsstring>
        <name>fDate</name>
        <qualifiedname>BPrivate::Network::BHttpTime::fDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="46" column="10" bodyfile="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBPrivate_1_1Network_1_1BHttpTime_1ab55b9426293b4696385bb6509988fb2d" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceBPrivate_1_1Network_1a9b49062e24f11190deacce6b0ab82a5e" kindref="member">BHttpTimeFormat</ref></type>
        <definition>BHttpTimeFormat BPrivate::Network::BHttpTime::fDateFormat</definition>
        <argsstring></argsstring>
        <name>fDateFormat</name>
        <qualifiedname>BPrivate::Network::BHttpTime::fDateFormat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="47" column="16" bodyfile="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BHttpTime_1a828931a80f511cc15b98c8e930dde2a0" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>BPrivate::Network::BHttpTime::BHttpTime</definition>
        <argsstring>() noexcept</argsstring>
        <name>BHttpTime</name>
        <qualifiedname>BPrivate::Network::BHttpTime::BHttpTime</qualifiedname>
        <briefdescription>
<para>Constructs a new object and sets the timestamp to the current time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BHttpTime_1af7b0356a07fc11bbef1079a4e07d23fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BPrivate::Network::BHttpTime::BHttpTime</definition>
        <argsstring>(BDateTime date)</argsstring>
        <name>BHttpTime</name>
        <qualifiedname>BPrivate::Network::BHttpTime::BHttpTime</qualifiedname>
        <param>
          <type>BDateTime</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Constructs a new object and sets the timestamp to <emphasis>date</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid BDateTime object for the desired timestamp.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classBPrivate_1_1Network_1_1BHttpTime_1_1InvalidInput" kindref="compound">BHttpTime::InvalidInput</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>date</emphasis> does not contain a valid timestamp.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BHttpTime_1a4c8625d39a63bca0f677e39d50d26ba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BPrivate::Network::BHttpTime::BHttpTime</definition>
        <argsstring>(const BString &amp;dateString)</argsstring>
        <name>BHttpTime</name>
        <qualifiedname>BPrivate::Network::BHttpTime::BHttpTime</qualifiedname>
        <param>
          <type>const <ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>dateString</declname>
        </param>
        <briefdescription>
<para>Constructs a new object and parses the timestamp from <emphasis>dateString</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dateString</parametername>
</parameternamelist>
<parameterdescription>
<para>A string that contains a valid HTTP timestamp. The <emphasis>dateString</emphasis> must not contain any characters, other than the timestamp. It is up to the caller to sanitize any input, including trimming whitespace at the beginning and end of the string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classBPrivate_1_1Network_1_1BHttpTime_1_1InvalidInput" kindref="compound">BHttpTime::InvalidInput</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>dateString</emphasis> cannot be parsed as a valid timestamp.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BHttpTime_1a288063850b49d6aad2554178303f02aa" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>BDateTime</type>
        <definition>BDateTime BPrivate::Network::BHttpTime::DateTime</definition>
        <argsstring>() const noexcept</argsstring>
        <name>DateTime</name>
        <qualifiedname>BPrivate::Network::BHttpTime::DateTime</qualifiedname>
        <briefdescription>
<para>Get the current timestamp. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A valid BDateTime object that contains the timestamp that this object is currently set to.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="38" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BHttpTime_1a57c8a3c869c450814a0ee5f7ce003f5d" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceBPrivate_1_1Network_1a9b49062e24f11190deacce6b0ab82a5e" kindref="member">BHttpTimeFormat</ref></type>
        <definition>BHttpTimeFormat BPrivate::Network::BHttpTime::DateTimeFormat</definition>
        <argsstring>() const noexcept</argsstring>
        <name>DateTimeFormat</name>
        <qualifiedname>BPrivate::Network::BHttpTime::DateTimeFormat</qualifiedname>
        <briefdescription>
<para>Get the format that the current timestamp parsed from. </para>
        </briefdescription>
        <detaileddescription>
<para>If the timestamp was parsed from a string, this method supplies a bit of information about what format the original string was in. Note that for both the RFC 1132 and RFC 850 formats, the parsing is slightly less strict than the RFC prescribes. This may mean that if you parse a non-canonical string, and then format it back using the same format specifier, the two strings may differ in content.</para>
<para>If the timestamp was set by setting it to a BDateTime object, then this will always return <computeroutput>BHttpTimeFormat::RFC1123</computeroutput>.</para>
<para><simplesect kind="return"><para>The <ref refid="namespaceBPrivate_1_1Network_1a9b49062e24f11190deacce6b0ab82a5e" kindref="member">BHttpTimeFormat</ref> that describes the format the input string was in, or <computeroutput>BHttpTimeFormat::RFC1123</computeroutput> if the timestamp was set by a BDateTime.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="39" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BHttpTime_1a2c9b2c4cf24f24a0ec7962332659a69f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BPrivate::Network::BHttpTime::SetTo</definition>
        <argsstring>(BDateTime date)</argsstring>
        <name>SetTo</name>
        <qualifiedname>BPrivate::Network::BHttpTime::SetTo</qualifiedname>
        <param>
          <type>BDateTime</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Set the current timestamp to <emphasis>date</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid BDateTime object for the desired timestamp.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classBPrivate_1_1Network_1_1BHttpTime_1_1InvalidInput" kindref="compound">BHttpTime::InvalidInput</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>date</emphasis> does not contain a valid timestamp.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="34" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BHttpTime_1a5fa42216d0c23cad9437a883445487aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BPrivate::Network::BHttpTime::SetTo</definition>
        <argsstring>(const BString &amp;string)</argsstring>
        <name>SetTo</name>
        <qualifiedname>BPrivate::Network::BHttpTime::SetTo</qualifiedname>
        <param>
          <type>const <ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Set the current timestamp by parsing <emphasis>string</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>A string that contains a valid HTTP timestamp. The <emphasis>dateString</emphasis> must not contain any characters, other than the timestamp. It is up to the caller to sanitize any input, including trimming whitespace at the beginning and end of the string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classBPrivate_1_1Network_1_1BHttpTime_1_1InvalidInput" kindref="compound">BHttpTime::InvalidInput</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>dateString</emphasis> cannot be parsed as a valid timestamp.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="33" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BHttpTime_1a10ee3127792f468ac943ef70c7e5c380" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BPrivate::Network::BHttpTime::ToString</definition>
        <argsstring>(BHttpTimeFormat outputFormat=BHttpTimeFormat::RFC1123) const</argsstring>
        <name>ToString</name>
        <qualifiedname>BPrivate::Network::BHttpTime::ToString</qualifiedname>
        <param>
          <type><ref refid="namespaceBPrivate_1_1Network_1a9b49062e24f11190deacce6b0ab82a5e" kindref="member">BHttpTimeFormat</ref></type>
          <declname>outputFormat</declname>
          <defval>BHttpTimeFormat::RFC1123</defval>
        </param>
        <briefdescription>
<para>Formats the timestamp to a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>The requested outputformat. The default is the recommended RFC 1123 format.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A string that contains the formatted timestamp.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>In the future this method may throw this exception when the memory for the output string cannot be allocated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="40" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BHttpTime_1a3faae02da759e918984ebd77304978a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BPrivate::Network::BHttpTime::_Parse</definition>
        <argsstring>(const BString &amp;dateString)</argsstring>
        <name>_Parse</name>
        <qualifiedname>BPrivate::Network::BHttpTime::_Parse</qualifiedname>
        <param>
          <type>const <ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>dateString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="44" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility class that can parse and format HTTP Date strings. </para>
    </briefdescription>
    <detaileddescription>
<para>See the description of the module in <ref refid="HttpTime_8h" kindref="compound">HttpTime.h</ref> for more information about HTTP timestamps.</para>
<para>Note that for quick conversions of a BDateTime into a <ref refid="classBString" kindref="compound">BString</ref> and vice versa, you can also use the <ref refid="namespaceBPrivate_1_1Network_1adf43cae73e73f416b4ec05923e81a772" kindref="member">format_http_time()</ref> and <ref refid="namespaceBPrivate_1_1Network_1a564db27874e23e8e080df76f21d39ed8" kindref="member">parse_http_time()</ref> utilities.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="21" column="1" bodyfile="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" bodystart="22" bodyend="48"/>
    <listofallmembers>
      <member refid="classBPrivate_1_1Network_1_1BHttpTime_1a3faae02da759e918984ebd77304978a8" prot="private" virt="non-virtual"><scope>BPrivate::Network::BHttpTime</scope><name>_Parse</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpTime_1a828931a80f511cc15b98c8e930dde2a0" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpTime</scope><name>BHttpTime</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpTime_1af7b0356a07fc11bbef1079a4e07d23fa" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpTime</scope><name>BHttpTime</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpTime_1a4c8625d39a63bca0f677e39d50d26ba3" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpTime</scope><name>BHttpTime</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpTime_1a288063850b49d6aad2554178303f02aa" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpTime</scope><name>DateTime</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpTime_1a57c8a3c869c450814a0ee5f7ce003f5d" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpTime</scope><name>DateTimeFormat</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpTime_1aa5e73e3f3e2d3658d4ac2c5a42a0381b" prot="private" virt="non-virtual"><scope>BPrivate::Network::BHttpTime</scope><name>fDate</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpTime_1ab55b9426293b4696385bb6509988fb2d" prot="private" virt="non-virtual"><scope>BPrivate::Network::BHttpTime</scope><name>fDateFormat</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpTime_1a5fa42216d0c23cad9437a883445487aa" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpTime</scope><name>SetTo</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpTime_1a2c9b2c4cf24f24a0ec7962332659a69f" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpTime</scope><name>SetTo</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpTime_1a10ee3127792f468ac943ef70c7e5c380" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpTime</scope><name>ToString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
