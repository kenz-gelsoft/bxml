<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBSymLink" kind="class" language="C++" prot="public">
    <compoundname>BSymLink</compoundname>
    <basecompoundref refid="classBNode" prot="public" virt="non-virtual">BNode</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBSymLink_1a9bdb83ee070ef43daaaadc2f5325a4c0" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BSymLink::_reservedData[4]</definition>
        <argsstring>[4]</argsstring>
        <name>_reservedData</name>
        <qualifiedname>BSymLink::_reservedData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="44" column="7" bodyfile="/boot/home/src/haiku/headers/os/storage/SymLink.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBSymLink_1a5d4234106735f3c2048e67535f0a8dc7" prot="private" static="no" mutable="no">
        <type><ref refid="classBEntry" kindref="compound">BEntry</ref> *</type>
        <definition>BEntry* BSymLink::fSecretEntry</definition>
        <argsstring></argsstring>
        <name>fSecretEntry</name>
        <qualifiedname>BSymLink::fSecretEntry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="45" column="7" bodyfile="/boot/home/src/haiku/headers/os/storage/SymLink.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBSymLink_1abd9f5260a2d6eab5228c3eadde628fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSymLink::BSymLink</definition>
        <argsstring>()</argsstring>
        <name>BSymLink</name>
        <qualifiedname>BSymLink::BSymLink</qualifiedname>
        <briefdescription>
<para>Creates an uninitialized <ref refid="classBSymLink" kindref="compound">BSymLink</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1ae215c7aa183934a2455fac2d4ee6371c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSymLink::BSymLink</definition>
        <argsstring>(const BDirectory *dir, const char *path)</argsstring>
        <name>BSymLink</name>
        <qualifiedname>BSymLink::BSymLink</qualifiedname>
        <param>
          <type>const <ref refid="classBDirectory" kindref="compound">BDirectory</ref> *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classBSymLink" kindref="compound">BSymLink</ref> object and initializes it to the symbolic link referred to by the supplied path name relative to the specified <ref refid="classBDirectory" kindref="compound">BDirectory</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base <ref refid="classBDirectory" kindref="compound">BDirectory</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the symbolic link relative to <emphasis>dir</emphasis>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a6a53a371d2868114de466a0ae879b93b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSymLink::BSymLink</definition>
        <argsstring>(const BEntry *entry)</argsstring>
        <name>BSymLink</name>
        <qualifiedname>BSymLink::BSymLink</qualifiedname>
        <param>
          <type>const <ref refid="classBEntry" kindref="compound">BEntry</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classBSymLink" kindref="compound">BSymLink</ref> object and initializes it to the symbolic link referred to by the supplied <ref refid="classBEntry" kindref="compound">BEntry</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBEntry" kindref="compound">BEntry</ref> referring to the symbolic link.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a3de9f6734c8808aedbefc19c534f11b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSymLink::BSymLink</definition>
        <argsstring>(const BSymLink &amp;other)</argsstring>
        <name>BSymLink</name>
        <qualifiedname>BSymLink::BSymLink</qualifiedname>
        <param>
          <type>const <ref refid="classBSymLink" kindref="compound">BSymLink</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Creates a copy of the supplied <ref refid="classBSymLink" kindref="compound">BSymLink</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBSymLink" kindref="compound">BSymLink</ref> object to be copied.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a41e53ec12d210408c9bb3465578ffeed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSymLink::BSymLink</definition>
        <argsstring>(const char *path)</argsstring>
        <name>BSymLink</name>
        <qualifiedname>BSymLink::BSymLink</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classBSymLink" kindref="compound">BSymLink</ref> object and initializes it to the symbolic link referred to by the supplied path name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the symbolic link.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a735411fb0f3ec98f05586055aa459f30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSymLink::BSymLink</definition>
        <argsstring>(const entry_ref *ref)</argsstring>
        <name>BSymLink</name>
        <qualifiedname>BSymLink::BSymLink</qualifiedname>
        <param>
          <type>const <ref refid="structentry__ref" kindref="compound">entry_ref</ref> *</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classBSymLink" kindref="compound">BSymLink</ref> object and initializes it to the symbolic link referred to by the supplied <ref refid="structentry__ref" kindref="compound">entry_ref</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structentry__ref" kindref="compound">entry_ref</ref> referring to the symbolic link.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a055b338bfed61a7193bae55f96b2e897" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BSymLink::~BSymLink</definition>
        <argsstring>()</argsstring>
        <name>~BSymLink</name>
        <qualifiedname>BSymLink::~BSymLink</qualifiedname>
        <briefdescription>
<para>Destroys the object and frees all allocated resources. </para>
        </briefdescription>
        <detaileddescription>
<para>If the <ref refid="classBSymLink" kindref="compound">BSymLink</ref> was properly initialized, the file descriptor of the symbolic link is also closed.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="25" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a2d8b53ea3a285a302fa0e074188bd307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BSymLink::IsAbsolute</definition>
        <argsstring>()</argsstring>
        <name>IsAbsolute</name>
        <qualifiedname>BSymLink::IsAbsolute</qualifiedname>
        <briefdescription>
<para>Returns whether or not the object refers to an absolute path. </para>
        </briefdescription>
        <detaileddescription>
<para>/return <computeroutput>true</computeroutput> if the object is properly initialized and the symbolic link refers to an absolute path, <computeroutput>false</computeroutput> otherwise.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="34" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a280b28f0830a84aa0654475b0c032d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t BSymLink::MakeLinkedPath</definition>
        <argsstring>(const BDirectory *dir, BPath *path)</argsstring>
        <name>MakeLinkedPath</name>
        <qualifiedname>BSymLink::MakeLinkedPath</qualifiedname>
        <param>
          <type>const <ref refid="classBDirectory" kindref="compound">BDirectory</ref> *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="classBPath" kindref="compound">BPath</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Combines a directory path and the contents of this symbolic link to form an absolute path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The base <ref refid="classBDirectory" kindref="compound">BDirectory</ref> object to combine with the symbolic link. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classBPath" kindref="compound">BPath</ref> object to be set to the resulting absolute path.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the resulting path name or an error code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>dir</emphasis> or <emphasis>path</emphasis> was <computeroutput>NULL</computeroutput> or the object didn&apos;t refer to a symbolic link. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_FILE_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>The object was not initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NAME_TOO_LONG</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting path name was too long to fit.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="31" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a9169315b35636ef0adcd075fcce8958f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t BSymLink::MakeLinkedPath</definition>
        <argsstring>(const char *dirPath, BPath *path)</argsstring>
        <name>MakeLinkedPath</name>
        <qualifiedname>BSymLink::MakeLinkedPath</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>dirPath</declname>
        </param>
        <param>
          <type><ref refid="classBPath" kindref="compound">BPath</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Combines a directory path and the contents of this symbolic link to form an absolute path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dirPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The base directory path to combine with the symbolic link. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBPath" kindref="compound">BPath</ref> object to be set to the resulting absolute path.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the resulting path name or an error code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>dirPath</emphasis> or <emphasis>path</emphasis> was <computeroutput>NULL</computeroutput> or the object didn&apos;t refer to a symbolic link. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_FILE_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>The object was not initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NAME_TOO_LONG</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting path name was too long to fit.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="29" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a29306832c7d34d68265a3f65da11d5d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t BSymLink::ReadLink</definition>
        <argsstring>(char *buf, size_t size)</argsstring>
        <name>ReadLink</name>
        <qualifiedname>BSymLink::ReadLink</qualifiedname>
        <param>
          <type>char *</type>
          <declname>buf</declname>
          <defname>buffer</defname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Reads the contents of the symbolic link into <emphasis>buffer</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The string written to the buffer is guaranteed to be <computeroutput>NULL</computeroutput> terminated.</para>
<para>This function does not return the number of bytes written into the provided buffer. It returns the length of the symlink&apos;s contents, even if that contents does not fit within the provided buffer. If the buffer cannot contain the entire contents then it will be truncated to <emphasis>size</emphasis>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to read the symlink&apos;s contents into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of <emphasis>buffer</emphasis>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the symlink&apos;s contents or an error code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>buf</emphasis> was <computeroutput>NULL</computeroutput> or the object didn&apos;t refer to a symbolic link. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_FILE_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>The object was not initialized.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="27" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBSymLink_1aba32b5da620c87cbf633977d5b7a2897" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSymLink::_MissingSymLink1</definition>
        <argsstring>()</argsstring>
        <name>_MissingSymLink1</name>
        <qualifiedname>BSymLink::_MissingSymLink1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="37" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a208bf2b2dccbffae1cfa04fb64adf11e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSymLink::_MissingSymLink2</definition>
        <argsstring>()</argsstring>
        <name>_MissingSymLink2</name>
        <qualifiedname>BSymLink::_MissingSymLink2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="38" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a25d3b61545621dec502fb7bf55dc5eb6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSymLink::_MissingSymLink3</definition>
        <argsstring>()</argsstring>
        <name>_MissingSymLink3</name>
        <qualifiedname>BSymLink::_MissingSymLink3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="39" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a5ec2ffbbd4f161cb15aa0011f64d3db9" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSymLink::_MissingSymLink4</definition>
        <argsstring>()</argsstring>
        <name>_MissingSymLink4</name>
        <qualifiedname>BSymLink::_MissingSymLink4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="40" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a3d7cf83e84d5094ca63681f9f9203b44" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSymLink::_MissingSymLink5</definition>
        <argsstring>()</argsstring>
        <name>_MissingSymLink5</name>
        <qualifiedname>BSymLink::_MissingSymLink5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="41" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1aef74831eba3233fcb158a7b8d549417d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSymLink::_MissingSymLink6</definition>
        <argsstring>()</argsstring>
        <name>_MissingSymLink6</name>
        <qualifiedname>BSymLink::_MissingSymLink6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="42" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSymLink_1a905a18165b3a6b1db1d9386c3bfee785" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BSymLink::get_fd</definition>
        <argsstring>() const</argsstring>
        <name>get_fd</name>
        <qualifiedname>BSymLink::get_fd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="48" column="4"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides an interface for creating, manipulating, and accessing the contents of symbolic links. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BNode</label>
        <link refid="classBNode"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BStatable</label>
        <link refid="classBStatable"/>
      </node>
      <node id="1">
        <label>BSymLink</label>
        <link refid="classBSymLink"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BNode</label>
        <link refid="classBNode"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BStatable</label>
        <link refid="classBStatable"/>
      </node>
      <node id="1">
        <label>BSymLink</label>
        <link refid="classBSymLink"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/storage/SymLink.h" line="16" column="1" bodyfile="/boot/home/src/haiku/headers/os/storage/SymLink.h" bodystart="16" bodyend="49"/>
    <listofallmembers>
      <member refid="classBSymLink_1aba32b5da620c87cbf633977d5b7a2897" prot="private" virt="virtual"><scope>BSymLink</scope><name>_MissingSymLink1</name></member>
      <member refid="classBSymLink_1a208bf2b2dccbffae1cfa04fb64adf11e" prot="private" virt="virtual"><scope>BSymLink</scope><name>_MissingSymLink2</name></member>
      <member refid="classBSymLink_1a25d3b61545621dec502fb7bf55dc5eb6" prot="private" virt="virtual"><scope>BSymLink</scope><name>_MissingSymLink3</name></member>
      <member refid="classBSymLink_1a5ec2ffbbd4f161cb15aa0011f64d3db9" prot="private" virt="virtual"><scope>BSymLink</scope><name>_MissingSymLink4</name></member>
      <member refid="classBSymLink_1a3d7cf83e84d5094ca63681f9f9203b44" prot="private" virt="virtual"><scope>BSymLink</scope><name>_MissingSymLink5</name></member>
      <member refid="classBSymLink_1aef74831eba3233fcb158a7b8d549417d" prot="private" virt="virtual"><scope>BSymLink</scope><name>_MissingSymLink6</name></member>
      <member refid="classBSymLink_1a9bdb83ee070ef43daaaadc2f5325a4c0" prot="private" virt="non-virtual"><scope>BSymLink</scope><name>_reservedData</name></member>
      <member refid="classBNode_1a4c41333d8fc73a6c9f37f77ae7418528" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>BNode</name></member>
      <member refid="classBNode_1a3ba1cd7e2d530124350485de1ccffbf6" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>BNode</name></member>
      <member refid="classBNode_1a2c8fd63c3e0e0d6d7596c1ca9c02cfc7" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>BNode</name></member>
      <member refid="classBNode_1acfd887aa410f42347482347672de19c0" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>BNode</name></member>
      <member refid="classBNode_1a959e6d749cdd455524fec3a5feca6008" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>BNode</name></member>
      <member refid="classBNode_1a4cb06c36614e334a2ce3f132188f0b33" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>BNode</name></member>
      <member refid="classBSymLink_1abd9f5260a2d6eab5228c3eadde628fc3" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>BSymLink</name></member>
      <member refid="classBSymLink_1a3de9f6734c8808aedbefc19c534f11b7" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>BSymLink</name></member>
      <member refid="classBSymLink_1a735411fb0f3ec98f05586055aa459f30" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>BSymLink</name></member>
      <member refid="classBSymLink_1a6a53a371d2868114de466a0ae879b93b" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>BSymLink</name></member>
      <member refid="classBSymLink_1a41e53ec12d210408c9bb3465578ffeed" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>BSymLink</name></member>
      <member refid="classBSymLink_1ae215c7aa183934a2455fac2d4ee6371c" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>BSymLink</name></member>
      <member refid="classBNode_1a74637e73a9f75f68eb8455ad2b1d920a" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>Dup</name></member>
      <member refid="classBSymLink_1a5d4234106735f3c2048e67535f0a8dc7" prot="private" virt="non-virtual"><scope>BSymLink</scope><name>fSecretEntry</name></member>
      <member refid="classBSymLink_1a905a18165b3a6b1db1d9386c3bfee785" prot="private" virt="non-virtual"><scope>BSymLink</scope><name>get_fd</name></member>
      <member refid="classBStatable_1a55dea9fb7be6e844b6515f73ee0a929a" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>GetAccessTime</name></member>
      <member refid="classBNode_1a57b7c93cbf40df5b76b3c1aae2ad0201" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>GetAttrInfo</name></member>
      <member refid="classBStatable_1ac80b82a49b8c757d4bf0034d70c33eb1" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>GetCreationTime</name></member>
      <member refid="classBStatable_1ab27d67f089c0c4bd14cdc48f57c51a17" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>GetGroup</name></member>
      <member refid="classBStatable_1a5571998c1d3ca9a59ad521556b3dee63" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>GetModificationTime</name></member>
      <member refid="classBNode_1a7ce18e673746f0f2c385ec533f10a015" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>GetNextAttrName</name></member>
      <member refid="classBStatable_1ad22f2b8b8b11b151bc94d63caeb16c95" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>GetNodeRef</name></member>
      <member refid="classBStatable_1ae8cb57200fbeac9941622a33705d64a4" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>GetOwner</name></member>
      <member refid="classBStatable_1a6a8b0225646734f4528858c72a5f9073" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>GetPermissions</name></member>
      <member refid="classBStatable_1a52975e361937ae26f7c854da34e6e51a" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>GetSize</name></member>
      <member refid="classBNode_1aa8c7b4e488e8077aabc8f5fbe4504189" prot="public" virt="virtual"><scope>BSymLink</scope><name>GetStat</name></member>
      <member refid="classBStatable_1a2488e774eaa96bf07ae6156ea320fc0a" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>GetVolume</name></member>
      <member refid="classBNode_1a8d1e28412f778e344e539946268fd03a" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>InitCheck</name></member>
      <member refid="classBSymLink_1a2d8b53ea3a285a302fa0e074188bd307" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>IsAbsolute</name></member>
      <member refid="classBStatable_1a853345d2d3673b47f59dd655b6a3adca" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>IsDirectory</name></member>
      <member refid="classBStatable_1acaa5a30c8a6ee1f8854a787958d13eaf" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>IsFile</name></member>
      <member refid="classBStatable_1aa07af7f2d36c453d00e101bc6c6a487e" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>IsSymLink</name></member>
      <member refid="classBNode_1ac323c1303a20a0eb21c11185bfc18039" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>Lock</name></member>
      <member refid="classBSymLink_1a9169315b35636ef0adcd075fcce8958f" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>MakeLinkedPath</name></member>
      <member refid="classBSymLink_1a280b28f0830a84aa0654475b0c032d3c" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>MakeLinkedPath</name></member>
      <member refid="classBNode_1a9fd78c56dd4a25fffc5d9f8f4ce7a594" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>operator!=</name></member>
      <member refid="classBNode_1a690260cffeb7310ecb0461ecc118e402" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>operator=</name></member>
      <member refid="classBNode_1a19e5f2559d1a8649ad103cb559150897" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>operator==</name></member>
      <member refid="classBNode_1a6ae0c729e21a32902b13d0c00b53abc2" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>ReadAttr</name></member>
      <member refid="classBNode_1a92f9e44a87a4c5b2f20d8f6a2be89d5b" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>ReadAttrString</name></member>
      <member refid="classBSymLink_1a29306832c7d34d68265a3f65da11d5d7" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>ReadLink</name></member>
      <member refid="classBNode_1a29fec4dac3d10f0459f7d3eb333aaf76" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>RemoveAttr</name></member>
      <member refid="classBNode_1adacbbc1aef867abbf05c1f64941561bb" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>RenameAttr</name></member>
      <member refid="classBNode_1a8848d2958c140f67e616415836835260" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>RewindAttrs</name></member>
      <member refid="classBStatable_1aab2c65df1f1459d014a0a2ba9638411e" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>SetAccessTime</name></member>
      <member refid="classBStatable_1a6a92b04cda608babf49f70ef4e3a2f36" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>SetCreationTime</name></member>
      <member refid="classBStatable_1af6e5ac17688536b3de2940a82349d043" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>SetGroup</name></member>
      <member refid="classBStatable_1a1f2b84cea7b32a238b41f97e0264a048" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>SetModificationTime</name></member>
      <member refid="classBStatable_1a640ef9862775efaa6720691ed4b58256" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>SetOwner</name></member>
      <member refid="classBStatable_1aaf215f1b31486d4fd65dd96229b26f97" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>SetPermissions</name></member>
      <member refid="classBNode_1aa19fa8eac744cbbe8ef0cd67842fb350" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>SetTo</name></member>
      <member refid="classBNode_1a6a9ed4db588ce169e9d5f464e0db43c4" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>SetTo</name></member>
      <member refid="classBNode_1a11cc1bc7f4765f2ec5665f4d6f8c68fb" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>SetTo</name></member>
      <member refid="classBNode_1aab2e862a78de7dac70ce8d6139b4e2a0" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>SetTo</name></member>
      <member refid="classBNode_1a14e67d77c99a4ede2a0bc2fe2bc46da5" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>Sync</name></member>
      <member refid="classBNode_1af1aed40f239513e1001af2ee543dd9ec" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>Unlock</name></member>
      <member refid="classBNode_1a53045ffc7e7c8bf97487d0de2e925cc2" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>Unset</name></member>
      <member refid="classBNode_1a48b845ef1eafdc729ca672bb112bf873" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>WriteAttr</name></member>
      <member refid="classBNode_1aae3517eb2583c13ccf60e9488d5a198d" prot="public" virt="non-virtual"><scope>BSymLink</scope><name>WriteAttrString</name></member>
      <member refid="classBNode_1a2be9ef05bc8dc34f17982736a38e1adf" prot="public" virt="virtual"><scope>BSymLink</scope><name>~BNode</name></member>
      <member refid="classBSymLink_1a055b338bfed61a7193bae55f96b2e897" prot="public" virt="virtual"><scope>BSymLink</scope><name>~BSymLink</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
