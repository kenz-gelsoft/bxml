<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBMenuField" kind="class" language="C++" prot="public">
    <compoundname>BMenuField</compoundname>
    <basecompoundref refid="classBView" prot="public" virt="non-virtual">BView</basecompoundref>
      <sectiondef kind="user-defined">
      <header>Archiving</header>
      <memberdef kind="function" id="classBMenuField_1ada677e4339d5a5eca5c945c4165b6a3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMenuField::Archive</definition>
        <argsstring>(BMessage *archive, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BMenuField::Archive</qualifiedname>
        <reimplements refid="classBView_1ab6de1b48cbc3ef15a0d02113036f002d">Archive</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
          <defname>data</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Archives the the <ref refid="classBMenuField" kindref="compound">BMenuField</ref> object into the <emphasis>data</emphasis> message. </para>
        </briefdescription>
        <detaileddescription>
<para>Adds the label, divider, and current state of the <ref refid="classBMenuField" kindref="compound">BMenuField</ref> to the archive.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="classBMessage" kindref="compound">BMessage</ref> to archive the object into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deep</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to archive attached menu and menu items as well.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code, <computeroutput>B_OK</computeroutput> if everything went well or an error code otherwise. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The object was archived successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while archiving the object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="40" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a40850631d688f01232d9e71c778f0de3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>BArchivable * BMenuField::Instantiate</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BMenuField::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
          <defname>data</defname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classBMenuField" kindref="compound">BMenuField</ref> object from an <emphasis>data</emphasis> message. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A newly created <ref refid="classBMenuField" kindref="compound">BMenuField</ref> object or <computeroutput>NULL</computeroutput> if the message doesn&apos;t contain an archived <ref refid="classBMenuField" kindref="compound">BMenuField</ref>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="39" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Hook Methods</header>
      <memberdef kind="function" id="classBMenuField_1afae9ce554a41405c5d272c349e7fee57" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenuField::Draw</definition>
        <argsstring>(BRect updateRect)</argsstring>
        <name>Draw</name>
        <qualifiedname>BMenuField::Draw</qualifiedname>
        <reimplements refid="classBView_1aa55014241fc2f5556415850692b52db2">Draw</reimplements>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>updateRect</declname>
        </param>
        <briefdescription>
<para>Draws the area of the menu field that intersects <emphasis>updateRect</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The menu field is drawn differently based on whether or not it is the current focus view and whether or not it is enabled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>updateRect</parametername>
</parameternamelist>
<parameterdescription>
<para>The rectangular area to be drawn.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="43" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a63f6e3879897c8b42a6eb49667b84b2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenuField::AttachedToWindow</definition>
        <argsstring>()</argsstring>
        <name>AttachedToWindow</name>
        <qualifiedname>BMenuField::AttachedToWindow</qualifiedname>
        <reimplements refid="classBView_1ae8117cb4634f4a4413988eea07cf75a0">AttachedToWindow</reimplements>
        <briefdescription>
<para>Hook method called when the menu field is attached to a window. </para>
        </briefdescription>
        <detaileddescription>
<para>Adjusts the background color to match the background color of the parent view and adjusts the height to be the attached menu bar which depends on the user&apos;s current menu font setting.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="44" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a55e723717b6ec14973ed513cb50a42c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenuField::AllAttached</definition>
        <argsstring>()</argsstring>
        <name>AllAttached</name>
        <qualifiedname>BMenuField::AllAttached</qualifiedname>
        <reimplements refid="classBView_1a6d6379e0993bd525f2cac5f848718870">AllAttached</reimplements>
        <briefdescription>
<para>Similar to <ref refid="classBMenuField_1a63f6e3879897c8b42a6eb49667b84b2b" kindref="member">AttachedToWindow()</ref> but this method is triggered after all child views have already been attached to a window. </para>
        </briefdescription>
        <detaileddescription>
<para>If the attached menu bar is too narrow it is resized it to fit the menu items.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="45" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a0f35ede494cc2169455c429798e575ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenuField::MouseDown</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>MouseDown</name>
        <qualifiedname>BMenuField::MouseDown</qualifiedname>
        <reimplements refid="classBView_1a5f5bd975d15df94f2ebbc80eb79cc3f6">MouseDown</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Hook method called when a mouse button is pressed. </para>
        </briefdescription>
        <detaileddescription>
<para>Provides the ability to open the menu field menu using the mouse, even if the user clicks on the menu field label.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>The point on the screen where to mouse pointer is when the mouse button is pressed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="46" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a9b47c6e428138e3bfc65a1407b82f003" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenuField::KeyDown</definition>
        <argsstring>(const char *bytes, int32 numBytes)</argsstring>
        <name>KeyDown</name>
        <qualifiedname>BMenuField::KeyDown</qualifiedname>
        <reimplements refid="classBView_1abea50ea665ce5fcb76b32f1302a6852d">KeyDown</reimplements>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>numBytes</declname>
        </param>
        <briefdescription>
<para>Hook method called when a keyboard key is pressed. </para>
        </briefdescription>
        <detaileddescription>
<para>Provides for keyboard navigation allowing users to open the menu by pressing the space bar, right arrow, or down arrow.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes of the key combination pressed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes in <emphasis>bytes</emphasis>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="47" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a927eea4bf97ed4834e97f18e466bd952" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenuField::WindowActivated</definition>
        <argsstring>(bool active)</argsstring>
        <name>WindowActivated</name>
        <qualifiedname>BMenuField::WindowActivated</qualifiedname>
        <reimplements refid="classBView_1a5b7aeff0b2608ec63e2c01153a7717f6">WindowActivated</reimplements>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
<para>Hook method called when the attached window is activated or deactivated. </para>
        </briefdescription>
        <detaileddescription>
<para>Redraws the focus ring around the menu field when the window is activated and deactivated if it is the window&apos;s current focus view.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>active</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> when the window becomes activated, <computeroutput>false</computeroutput> when the window becomes deactivated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="50" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a6c44f9eb74f2ae11ac2ac308a6e9bb5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenuField::FrameResized</definition>
        <argsstring>(float width, float height)</argsstring>
        <name>FrameResized</name>
        <qualifiedname>BMenuField::FrameResized</qualifiedname>
        <reimplements refid="classBView_1a85d88f9c2bb6800560874b2061378fa0">FrameResized</reimplements>
        <param>
          <type>float</type>
          <declname>width</declname>
          <defname>newWidth</defname>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
          <defname>newHeight</defname>
        </param>
        <briefdescription>
<para>Hook method called when the menu bar is resized. </para>
        </briefdescription>
        <detaileddescription>
<para>Adjusts the menu bar size and location.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>The new width of the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>The new height of the view.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="57" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ae8acba317c58f2767aae7956974536c9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMenuField::AllArchived</definition>
        <argsstring>(BMessage *into) const</argsstring>
        <name>AllArchived</name>
        <qualifiedname>BMenuField::AllArchived</qualifiedname>
        <reimplements refid="classBView_1a561e82ed41cbb93d3bacf371787497bf">AllArchived</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>into</declname>
        </param>
        <briefdescription>
<para>Hook method called when all views have been archived. </para>
        </briefdescription>
        <detaileddescription>
<para>Also archives the label and menu bar.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>into</parametername>
</parameternamelist>
<parameterdescription>
<para>Archived data message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="95" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ad7e9ecb63a3df86c848bf8a9e7409ee7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMenuField::AllUnarchived</definition>
        <argsstring>(const BMessage *from)</argsstring>
        <name>AllUnarchived</name>
        <qualifiedname>BMenuField::AllUnarchived</qualifiedname>
        <reimplements refid="classBView_1ab7bd04272afed8b28bf57d1de33cbe05">AllUnarchived</reimplements>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Hook method called when all views have been unarchived. </para>
        </briefdescription>
        <detaileddescription>
<para>Also unarchives the label and menu bar.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>Unarchived data message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="96" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBMenuField_1a4a0b3da42b590053cfba99fad8b4658d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class _BMCMenuBar_</definition>
        <argsstring></argsstring>
        <name>_BMCMenuBar_</name>
        <qualifiedname>BMenuField::_BMCMenuBar_</qualifiedname>
        <param>
          <type>_BMCMenuBar_</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="115" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBMenuField_1a1c7915382a4b201d6e1ad91ee3413833" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class LabelLayoutItem</definition>
        <argsstring></argsstring>
        <name>LabelLayoutItem</name>
        <qualifiedname>BMenuField::LabelLayoutItem</qualifiedname>
        <param>
          <type>LabelLayoutItem</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="116" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBMenuField_1a76c92190a2ceac78e41fe81bf1b0e6f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct LayoutData</definition>
        <argsstring></argsstring>
        <name>LayoutData</name>
        <qualifiedname>BMenuField::LayoutData</qualifiedname>
        <param>
          <type>LayoutData</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="118" column="15" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBMenuField_1a421fddbf0c609a0e61bfa01850871590" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class MenuBarLayoutItem</definition>
        <argsstring></argsstring>
        <name>MenuBarLayoutItem</name>
        <qualifiedname>BMenuField::MenuBarLayoutItem</qualifiedname>
        <param>
          <type>MenuBarLayoutItem</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="117" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBMenuField_1a72ba4a58f3ec65f5fc86b9d3a8afffd7" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMenuField::_reserved[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BMenuField::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="154" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenuField_1afe3d18a8ac41ecdec3be7459977500ff" prot="private" static="no" mutable="no">
        <type>alignment</type>
        <definition>alignment BMenuField::fAlign</definition>
        <argsstring></argsstring>
        <name>fAlign</name>
        <qualifiedname>BMenuField::fAlign</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="145" column="10" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenuField_1a2d2d3152d99ad11e5e50b74bd0654012" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float BMenuField::fDivider</definition>
        <argsstring></argsstring>
        <name>fDivider</name>
        <qualifiedname>BMenuField::fDivider</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="146" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenuField_1a1e501b0a759f859ec59044c237b87a56" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenuField::fEnabled</definition>
        <argsstring></argsstring>
        <name>fEnabled</name>
        <qualifiedname>BMenuField::fEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="147" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenuField_1a85ecfe093312ffeb6492da2dd463a9a5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMenuField::fFixedSizeMB</definition>
        <argsstring></argsstring>
        <name>fFixedSizeMB</name>
        <qualifiedname>BMenuField::fFixedSizeMB</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="148" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenuField_1a167692ca194fc6f73d0b83dcfeae5e85" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* BMenuField::fLabel</definition>
        <argsstring></argsstring>
        <name>fLabel</name>
        <qualifiedname>BMenuField::fLabel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="142" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenuField_1a2850c31a67745257846ec87d3faf99a4" prot="private" static="no" mutable="no">
        <type>LayoutData *</type>
        <definition>LayoutData* BMenuField::fLayoutData</definition>
        <argsstring></argsstring>
        <name>fLayoutData</name>
        <qualifiedname>BMenuField::fLayoutData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="151" column="11" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenuField_1affa67e82609e66d7214048f3cf494ced" prot="private" static="no" mutable="no">
        <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
        <definition>BMenu* BMenuField::fMenu</definition>
        <argsstring></argsstring>
        <name>fMenu</name>
        <qualifiedname>BMenuField::fMenu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="143" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenuField_1a106e6a2fcdf7e06186444e4fbd4fe08e" prot="private" static="no" mutable="no">
        <type><ref refid="classBMenuBar" kindref="compound">BMenuBar</ref> *</type>
        <definition>BMenuBar* BMenuField::fMenuBar</definition>
        <argsstring></argsstring>
        <name>fMenuBar</name>
        <qualifiedname>BMenuField::fMenuBar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="144" column="9" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenuField_1abeee7c82988501249800aa491d0feef9" prot="private" static="no" mutable="no">
        <type>thread_id</type>
        <definition>thread_id BMenuField::fMenuTaskID</definition>
        <argsstring></argsstring>
        <name>fMenuTaskID</name>
        <qualifiedname>BMenuField::fMenuTaskID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="149" column="10" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMenuField_1a57427f35a78243b63f015d8714a742ca" prot="private" static="no" mutable="no">
        <type><ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref> *</type>
        <definition>BMessageFilter* BMenuField::fMouseDownFilter</definition>
        <argsstring></argsstring>
        <name>fMouseDownFilter</name>
        <qualifiedname>BMenuField::fMouseDownFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="152" column="15" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBMenuField_1a9e498cee713130c42b05311e131aa301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMenuField::BMenuField</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>BMenuField</name>
        <qualifiedname>BMenuField::BMenuField</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Archive constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The message <emphasis>data</emphasis> to construct the menu field from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a8abc2338403001a1a36dce1121667b29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMenuField::BMenuField</definition>
        <argsstring>(BRect frame, const char *name, const char *label, BMenu *menu, bool fixed_size, uint32 resizingMode=B_FOLLOW_LEFT_TOP, uint32 flags=B_WILL_DRAW|B_NAVIGABLE)</argsstring>
        <name>BMenuField</name>
        <qualifiedname>BMenuField::BMenuField</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fixed_size</declname>
          <defname>fixedSize</defname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>resizingMode</declname>
          <defval><ref refid="View_8h_1a8a6df90f52ddaede7f1aaf43339638e5" kindref="member">B_FOLLOW_LEFT_TOP</ref></defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval><ref refid="View_8h_1a59354fa34a5663d714649927705fd4bf" kindref="member">B_WILL_DRAW</ref>|<ref refid="View_8h_1aa81b14ef09870d992f97f6f1163dc0a9" kindref="member">B_NAVIGABLE</ref></defval>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classBMenuField" kindref="compound">BMenuField</ref> object. This constructor allows a you to create either a fixed-size or variable-size menu field. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>frame</emphasis> rectangle of the menu field including the label. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>name</emphasis> of the menu field, internal only, can be <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>label</emphasis> shown to the user, can be blank. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>menu</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>menu</emphasis> of choices shown to the user, typically a <ref refid="classBPopUpMenu" kindref="compound">BPopUpMenu</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fixedSize</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> for fixed-size, <computeroutput>false</computeroutput> for variable-size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resizingMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Defines the menu field&apos;s behavior when its parent is resized, see <ref refid="classBView" kindref="compound">BView</ref> for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The view flags, see <ref refid="classBView" kindref="compound">BView</ref> for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ac1275be35dc6153f6b491568ce559dde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMenuField::BMenuField</definition>
        <argsstring>(BRect frame, const char *name, const char *label, BMenu *menu, uint32 resizingMode=B_FOLLOW_LEFT_TOP, uint32 flags=B_WILL_DRAW|B_NAVIGABLE)</argsstring>
        <name>BMenuField</name>
        <qualifiedname>BMenuField::BMenuField</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>resizingMode</declname>
          <defval><ref refid="View_8h_1a8a6df90f52ddaede7f1aaf43339638e5" kindref="member">B_FOLLOW_LEFT_TOP</ref></defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval><ref refid="View_8h_1a59354fa34a5663d714649927705fd4bf" kindref="member">B_WILL_DRAW</ref>|<ref refid="View_8h_1aa81b14ef09870d992f97f6f1163dc0a9" kindref="member">B_NAVIGABLE</ref></defval>
        </param>
        <briefdescription>
<para>Creates a new variable-size <ref refid="classBMenuField" kindref="compound">BMenuField</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>frame</emphasis> rectangle of the menu field including the label. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>name</emphasis> of the menu field, internal only, can be <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>label</emphasis> shown to the user, can be blank. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>menu</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>menu</emphasis> of choices shown to the user, typically a <ref refid="classBPopUpMenu" kindref="compound">BPopUpMenu</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resizingMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Defines the menu field&apos;s behavior when its parent is resized, see <ref refid="classBView" kindref="compound">BView</ref> for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The view flags, see <ref refid="classBView" kindref="compound">BView</ref> for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a906b2808634575923ae718a093c0538c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMenuField::BMenuField</definition>
        <argsstring>(const char *label, BMenu *menu, uint32 flags=B_WILL_DRAW|B_NAVIGABLE)</argsstring>
        <name>BMenuField</name>
        <qualifiedname>BMenuField::BMenuField</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval><ref refid="View_8h_1a59354fa34a5663d714649927705fd4bf" kindref="member">B_WILL_DRAW</ref>|<ref refid="View_8h_1aa81b14ef09870d992f97f6f1163dc0a9" kindref="member">B_NAVIGABLE</ref></defval>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classBMenuField" kindref="compound">BMenuField</ref> object suitable as part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>. This constructor omits the internal name parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>label</emphasis> shown to the user, can be blank. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>menu</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>menu</emphasis> of choices shown to the user, typically a <ref refid="classBPopUpMenu" kindref="compound">BPopUpMenu</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The view flags, see <ref refid="classBView" kindref="compound">BView</ref> for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1acf6713e52c91b10f3478948f29290d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMenuField::BMenuField</definition>
        <argsstring>(const char *name, const char *label, BMenu *menu, bool fixed_size, uint32 flags=B_WILL_DRAW|B_NAVIGABLE)</argsstring>
        <name>BMenuField</name>
        <qualifiedname>BMenuField::BMenuField</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fixed_size</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval><ref refid="View_8h_1a59354fa34a5663d714649927705fd4bf" kindref="member">B_WILL_DRAW</ref>|<ref refid="View_8h_1aa81b14ef09870d992f97f6f1163dc0a9" kindref="member">B_NAVIGABLE</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a82ee367a1d819b4227b294b4aa47dc70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMenuField::BMenuField</definition>
        <argsstring>(const char *name, const char *label, BMenu *menu, uint32 flags=B_WILL_DRAW|B_NAVIGABLE)</argsstring>
        <name>BMenuField</name>
        <qualifiedname>BMenuField::BMenuField</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval><ref refid="View_8h_1a59354fa34a5663d714649927705fd4bf" kindref="member">B_WILL_DRAW</ref>|<ref refid="View_8h_1aa81b14ef09870d992f97f6f1163dc0a9" kindref="member">B_NAVIGABLE</ref></defval>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classBMenuField" kindref="compound">BMenuField</ref> object suitable as part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>name</emphasis> of the menu field, internal only, can be <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>label</emphasis> shown to the user, can be blank. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>menu</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>menu</emphasis> of choices shown to the user, typically a <ref refid="classBPopUpMenu" kindref="compound">BPopUpMenu</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The view flags, see <ref refid="classBView" kindref="compound">BView</ref> for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a319e85ee5d62c611ae262b0913a6b320" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BMenuField::~BMenuField</definition>
        <argsstring>()</argsstring>
        <name>~BMenuField</name>
        <qualifiedname>BMenuField::~BMenuField</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Also frees the memory used by the label and menu.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="37" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ac70109118ffe90c655fa775de5079dff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>alignment</type>
        <definition>alignment BMenuField::Alignment</definition>
        <argsstring>() const</argsstring>
        <name>Alignment</name>
        <qualifiedname>BMenuField::Alignment</qualifiedname>
        <briefdescription>
<para>Returns the label&apos;s current alignment. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The label&apos;s current alignment constant.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBMenuField_1ae269e98b9eeceb46fba16ada0b3585c8" kindref="member">SetAlignment()</ref> for more details.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="70" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a635e98f17b0268ad3454579516852c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::AllDetached</definition>
        <argsstring>()</argsstring>
        <name>AllDetached</name>
        <qualifiedname>BMenuField::AllDetached</qualifiedname>
        <reimplements refid="classBView_1a19dd2213f4b953b54524d7f523d9b406">AllDetached</reimplements>
        <briefdescription>
<para>Similar to <ref refid="classBMenuField_1a63f6e3879897c8b42a6eb49667b84b2b" kindref="member">AttachedToWindow()</ref> but this method is triggered after all child views have already been detached from a window. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="55" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a29dca98abe0b968a3781559386c771b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
        <definition>BLayoutItem * BMenuField::CreateLabelLayoutItem</definition>
        <argsstring>()</argsstring>
        <name>CreateLabelLayoutItem</name>
        <qualifiedname>BMenuField::CreateLabelLayoutItem</qualifiedname>
        <briefdescription>
<para>Returns a pointer to the label layout item. (Layout constructor only) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBMenuField_1a22dd39ba40dbc47d450f8dfe8f95d42a" kindref="member">CreateMenuBarLayoutItem()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="89" column="12"/>
        <referencedby refid="classBLayoutBuilder_1_1Grid_1aa626e7f8d7743e13be8dcbac5bed4b25" compoundref="LayoutBuilder_8h" startline="888" endline="899">BLayoutBuilder::Grid&lt; ParentBuilder &gt;::AddMenuField</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a22dd39ba40dbc47d450f8dfe8f95d42a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
        <definition>BLayoutItem * BMenuField::CreateMenuBarLayoutItem</definition>
        <argsstring>()</argsstring>
        <name>CreateMenuBarLayoutItem</name>
        <qualifiedname>BMenuField::CreateMenuBarLayoutItem</qualifiedname>
        <briefdescription>
<para>Returns a pointer to the menu bar layout item. (Layout constructor only) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBMenuField_1a29dca98abe0b968a3781559386c771b0" kindref="member">CreateLabelLayoutItem()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="90" column="12"/>
        <referencedby refid="classBLayoutBuilder_1_1Grid_1aa626e7f8d7743e13be8dcbac5bed4b25" compoundref="LayoutBuilder_8h" startline="888" endline="899">BLayoutBuilder::Grid&lt; ParentBuilder &gt;::AddMenuField</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1aeea6d476c34d48f1325956c64b4dd70d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::DetachedFromWindow</definition>
        <argsstring>()</argsstring>
        <name>DetachedFromWindow</name>
        <qualifiedname>BMenuField::DetachedFromWindow</qualifiedname>
        <reimplements refid="classBView_1a8abc2ea500951a0a22cf018e958ba791">DetachedFromWindow</reimplements>
        <briefdescription>
<para>Hook method called when the object is detached from a window. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="54" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a4c53b9f3fcc8352554505c9e0b726b69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BMenuField::Divider</definition>
        <argsstring>() const</argsstring>
        <name>Divider</name>
        <qualifiedname>BMenuField::Divider</qualifiedname>
        <briefdescription>
<para>Returns the current divider position. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current divider position as a float.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBMenuField_1a6981c770ea969f45df5317d7b8fda263" kindref="member">SetDivider()</ref> for more details.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="72" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ad35f91192f1f6986007a2234f42d6638" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::FrameMoved</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>FrameMoved</name>
        <qualifiedname>BMenuField::FrameMoved</qualifiedname>
        <reimplements refid="classBView_1a551c22b45301e13a3ba959eece3cec7f">FrameMoved</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>newPosition</declname>
        </param>
        <briefdescription>
<para>Hook method called when the view is moved. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>The point of the top left corner of the frame that the view has been moved to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="56" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a08fad29da3ccfb574bd4cf6fdc56b20b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::GetPreferredSize</definition>
        <argsstring>(float *width, float *height)</argsstring>
        <name>GetPreferredSize</name>
        <qualifiedname>BMenuField::GetPreferredSize</qualifiedname>
        <reimplements refid="classBView_1a089c3ff794c454388a9388c7b6568478">GetPreferredSize</reimplements>
        <param>
          <type>float *</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_height</declname>
        </param>
        <briefdescription>
<para>Fill out the preferred width and height of the view into the <emphasis>_width</emphasis> and <emphasis>_height</emphasis> parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>Derived classes should override this method to set the preferred size of object.</para>
<para><simplesect kind="remark"><para>Either the <emphasis>_width</emphasis> or <emphasis>_height</emphasis> parameter may be set to <computeroutput>NULL</computeroutput> if you only want to get the other one.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a float to store the width of the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a float to store the height of the view.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="83" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ad765cb012c296a6f676e070c80c929e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMenuField::GetSupportedSuites</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>GetSupportedSuites</name>
        <qualifiedname>BMenuField::GetSupportedSuites</qualifiedname>
        <reimplements refid="classBView_1a772462d751d457f63ee0fc56d8ba02d1">GetSupportedSuites</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reports the suites of messages and specifiers that derived classes understand.  </para>
<para><simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="80" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ad1c8335ca7de4c9a3b73fd7b8286173a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenuField::HidePopUpMarker</definition>
        <argsstring>()</argsstring>
        <name>HidePopUpMarker</name>
        <qualifiedname>BMenuField::HidePopUpMarker</qualifiedname>
        <briefdescription>
<para>Hides to pop-up marker. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBMenuField_1ad02c800422bc2931a7a972dc9f1d2ebc" kindref="member">ShowPopUpMarker()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="75" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a1031c6b7a2a469191cca3a17600797f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMenuField::IsEnabled</definition>
        <argsstring>() const</argsstring>
        <name>IsEnabled</name>
        <qualifiedname>BMenuField::IsEnabled</qualifiedname>
        <briefdescription>
<para>Returns whether or not the menu is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the menu is enabled, <computeroutput>false</computeroutput> if disabled.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="67" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ac718643e0506122c325f9414c44d8961" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BMenuField::Label</definition>
        <argsstring>() const</argsstring>
        <name>Label</name>
        <qualifiedname>BMenuField::Label</qualifiedname>
        <briefdescription>
<para>Returns the menu field label. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The menu field label or <computeroutput>NULL</computeroutput> if not assigned.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="64" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a14d9a763b0d621a78d0aa8abdabe1f7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenuField::MakeFocus</definition>
        <argsstring>(bool focused)</argsstring>
        <name>MakeFocus</name>
        <qualifiedname>BMenuField::MakeFocus</qualifiedname>
        <reimplements refid="classBView_1a266a368d81c6e1668b2b9b22b5016853">MakeFocus</reimplements>
        <param>
          <type>bool</type>
          <declname>focused</declname>
        </param>
        <briefdescription>
<para>Makes the view the current focus view of the window or gives up being the focus view of the window. </para>
        </briefdescription>
        <detaileddescription>
<para>Enables or disables keyboard navigation and invalidates the menu field.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>focused</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>true</emphasis> to set focus, <emphasis>false</emphasis> to remove it.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="48" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a2d7e95c1f408178fdc44973b34ac00c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>virtual BSize BMenuField::MaxSize</definition>
        <argsstring>()</argsstring>
        <name>MaxSize</name>
        <qualifiedname>BMenuField::MaxSize</qualifiedname>
        <reimplements refid="classBView_1ad1f1843a380e850948cf7e4ed2d5f1ba">MaxSize</reimplements>
        <briefdescription>
<para>Return the maximum size of the view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="return"><para>The maximum size of the view as a <ref refid="classBSize" kindref="compound">BSize</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBAbstractLayout_1ad1ea5d04a5c8028f8295efde7106a66c" kindref="member">BAbstractLayout::MaxSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="86" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a87f6e185589e750903f739619c6af2bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
        <definition>BMenu * BMenuField::Menu</definition>
        <argsstring>() const</argsstring>
        <name>Menu</name>
        <qualifiedname>BMenuField::Menu</qualifiedname>
        <briefdescription>
<para>Returns a pointer to the menu attached to the menu bar that opens when the user clicks on the menu field. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="59" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1aecaf287cef4ed0ff9a0738fef65b9eff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuBar" kindref="compound">BMenuBar</ref> *</type>
        <definition>BMenuBar * BMenuField::MenuBar</definition>
        <argsstring>() const</argsstring>
        <name>MenuBar</name>
        <qualifiedname>BMenuField::MenuBar</qualifiedname>
        <briefdescription>
<para>Returns a pointer to the attached menu bar that contains the pop-up menu. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="60" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a485563579452aca7f6162be66261cbdf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuItem" kindref="compound">BMenuItem</ref> *</type>
        <definition>BMenuItem * BMenuField::MenuItem</definition>
        <argsstring>() const</argsstring>
        <name>MenuItem</name>
        <qualifiedname>BMenuField::MenuItem</qualifiedname>
        <briefdescription>
<para>Returns the first menu item attached to the menu bar containing the pop-up menu. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="61" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ab73739dc3316044b9269718bd0852d39" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::MessageReceived</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>MessageReceived</name>
        <qualifiedname>BMenuField::MessageReceived</qualifiedname>
        <reimplements refid="classBView_1aca0a16b0e04288e1fdc0b63690ea7a6d">MessageReceived</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Handle <emphasis>message</emphasis> received by the associated looper. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>message</emphasis> received by the associated looper.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBHandler_1aeecda5017e0081db617f23bbff71fb53" kindref="member">BHandler::MessageReceived()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="49" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a0587347fb25e87748d7c5207a344e3c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>virtual BSize BMenuField::MinSize</definition>
        <argsstring>()</argsstring>
        <name>MinSize</name>
        <qualifiedname>BMenuField::MinSize</qualifiedname>
        <reimplements refid="classBView_1acfb0cffde35b853dab6bc5d1bb03265f">MinSize</reimplements>
        <briefdescription>
<para>Return the minimum size of the view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="return"><para>The minimum size of the view as a <ref refid="classBSize" kindref="compound">BSize</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBAbstractLayout_1a3f692cb3306ce726e3cc6d2771824cd5" kindref="member">BAbstractLayout::MinSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="85" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1acbd5b0849384a650560940de14b6e24b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::MouseMoved</definition>
        <argsstring>(BPoint where, uint32 transit, const BMessage *dragMessage)</argsstring>
        <name>MouseMoved</name>
        <qualifiedname>BMenuField::MouseMoved</qualifiedname>
        <reimplements refid="classBView_1ac8b20516e42bab2f1eeb130e2432bde0">MouseMoved</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>dragMessage</declname>
        </param>
        <briefdescription>
<para>Hook method called when the mouse is moved. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>The new location of the mouse in the view&apos;s coordinate system. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the following:<itemizedlist>
<listitem><para><computeroutput>B_ENTERED_VIEW</computeroutput> The cursor has just entered the view.</para>
</listitem><listitem><para><computeroutput>B_INSIDE_VIEW</computeroutput> The cursor is inside the view.</para>
</listitem><listitem><para><computeroutput>B_EXITED_VIEW</computeroutput> The cursor has left the view&apos;s bounds. This only gets sent if the scope of the mouse events that the view can receive has been expanded by <ref refid="classBView_1a5d8d6b469a8a11a577d1d138cfc31162" kindref="member">SetEventMask()</ref> or <ref refid="classBView_1ae7705783d064a8613dcc6f36a2866ab2" kindref="member">SetMouseEventMask()</ref>.</para>
</listitem><listitem><para><computeroutput>B_OUTSIDE_VIEW</computeroutput> The cursor is outside the view. This only gets sent if the scope of the mouse events that the view can receive has been expanded by <ref refid="classBView_1a5d8d6b469a8a11a577d1d138cfc31162" kindref="member">SetEventMask()</ref> or <ref refid="classBView_1ae7705783d064a8613dcc6f36a2866ab2" kindref="member">SetMouseEventMask()</ref>. </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dragMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>If a drag-and-drop operation is taking place this is a pointer to a <ref refid="classBMessage" kindref="compound">BMessage</ref> that holds the drag information, otherwise the pointer is <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBView_1a5d8d6b469a8a11a577d1d138cfc31162" kindref="member">SetEventMask()</ref>, <ref refid="classBView_1ae7705783d064a8613dcc6f36a2866ab2" kindref="member">SetMouseEventMask()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBView_1a1f4f0c3c5946df1d14e6031e5e12f40b" kindref="member">DragMessage()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="52" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1aee41e24ee5b2055a9714112d61b86b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::MouseUp</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>MouseUp</name>
        <qualifiedname>BMenuField::MouseUp</qualifiedname>
        <reimplements refid="classBView_1acdb92b30069157b2e3c522a3ef9d6ae4">MouseUp</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Hook method called when a mouse button is released. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>The point on the screen where to mouse pointer is when the mouse button is released.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="51" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a78923e5f07ff7c288980a72f6a953001" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMenuField::Perform</definition>
        <argsstring>(perform_code d, void *arg)</argsstring>
        <name>Perform</name>
        <qualifiedname>BMenuField::Perform</qualifiedname>
        <reimplements refid="classBView_1a512a6c8dca1a62b14cdcb1c22070129b">Perform</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" kindref="member">perform_code</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defname>_data</defname>
        </param>
        <briefdescription>
<para>Perform some action. (Internal Method) </para>
        </briefdescription>
        <detaileddescription>
<para>This method is available to allow classes to be extended while maintaining binary compatibility.</para>
<para>The following perform codes are recognized:<itemizedlist>
<listitem><para><computeroutput>PERFORM_CODE_MIN_SIZE:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_MAX_SIZE:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_PREFERRED_SIZE:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_LAYOUT_ALIGNMENT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_HAS_HEIGHT_FOR_WIDTH:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_GET_HEIGHT_FOR_WIDTH:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_SET_LAYOUT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_INVALIDATE_LAYOUT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_DO_LAYOUT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_GET_TOOL_TIP_AT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_ALL_UNARCHIVED:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_ALL_ARCHIVED:</computeroutput> </para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The perform code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to store some data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="92" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a2930a668aaf18292c83211e4ef8386e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>virtual BSize BMenuField::PreferredSize</definition>
        <argsstring>()</argsstring>
        <name>PreferredSize</name>
        <qualifiedname>BMenuField::PreferredSize</qualifiedname>
        <reimplements refid="classBView_1a7f51d63e71b60a2721d04436ffbcfe36">PreferredSize</reimplements>
        <briefdescription>
<para>Return the preferred size of the view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="return"><para>The preferred size of the view as a <ref refid="classBSize" kindref="compound">BSize</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBAbstractLayout_1af5f21d9900c85ca053dba3938bef3fd3" kindref="member">BAbstractLayout::PreferredSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="87" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a33f83798e1f30279bba074a078a595d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::ResizeToPreferred</definition>
        <argsstring>()</argsstring>
        <name>ResizeToPreferred</name>
        <qualifiedname>BMenuField::ResizeToPreferred</qualifiedname>
        <reimplements refid="classBView_1abe8c63c85555e800e063388e7cf3e1a7">ResizeToPreferred</reimplements>
        <briefdescription>
<para>Resizes the view to its preferred size keeping the position of the left top corner constant. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>It is not recommended to use this method for views that are part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="82" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a8af84b2aecbc3e6b3041e3ef70b36cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
        <definition>virtual BHandler * BMenuField::ResolveSpecifier</definition>
        <argsstring>(BMessage *message, int32 index, BMessage *specifier, int32 form, const char *property)</argsstring>
        <name>ResolveSpecifier</name>
        <qualifiedname>BMenuField::ResolveSpecifier</qualifiedname>
        <reimplements refid="classBView_1a4c0c6d3b21ae92056e5e40fe4d3ec175">ResolveSpecifier</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>form</declname>
          <defname>what</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine the proper handler for a scripting message.  </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The scripting message to determine the handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the specifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The message which contains the specifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>what</parametername>
</parameternamelist>
<parameterdescription>
<para>The &apos;what&apos; field of the specifier message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the target property.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the proper <ref refid="classBHandler" kindref="compound">BHandler</ref> for the given scripting message.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="77" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ae269e98b9eeceb46fba16ada0b3585c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenuField::SetAlignment</definition>
        <argsstring>(alignment label)</argsstring>
        <name>SetAlignment</name>
        <qualifiedname>BMenuField::SetAlignment</qualifiedname>
        <param>
          <type>alignment</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>Set the alignment of the menu field label. The default alignment is <computeroutput>B_ALIGN_LEFT</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>For menu fields that are part of a <ref refid="classBLayout" kindref="compound">BLayout</ref> consider using <ref refid="classBLayoutItem_1a78604c5055ac0aca561f196d879d762d" kindref="member">BLayoutItem::SetExplicitAlignment()</ref> instead.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>The alignment to set, choices include:<itemizedlist>
<listitem><para><computeroutput>B_ALIGN_LEFT</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_ALIGN_CENTER</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_ALIGN_RIGHT</computeroutput> </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="69" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a6981c770ea969f45df5317d7b8fda263" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenuField::SetDivider</definition>
        <argsstring>(float position)</argsstring>
        <name>SetDivider</name>
        <qualifiedname>BMenuField::SetDivider</qualifiedname>
        <param>
          <type>float</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Sets the horizontal <emphasis>position</emphasis> of the divider that separates the label from the menu bar. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>It is not recommended to use this method for menu fields that are part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>. Instead split the label and menu bar into separate layout items using <ref refid="classBMenuField_1a29dca98abe0b968a3781559386c771b0" kindref="member">CreateLabelLayoutItem()</ref> and <ref refid="classBMenuField_1a22dd39ba40dbc47d450f8dfe8f95d42a" kindref="member">CreateMenuBarLayoutItem()</ref>. This allows you to have better control over the position of the label and menu bar portions of your menu fields.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The divider <emphasis>position</emphasis> to set, should be an integral value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="71" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1aaa9504b474e8c8e142e89413834667b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenuField::SetEnabled</definition>
        <argsstring>(bool on)</argsstring>
        <name>SetEnabled</name>
        <qualifiedname>BMenuField::SetEnabled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
<para>Enables or disables the menu field. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>on</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to enable the menu field, <computeroutput>false</computeroutput> to disable it.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="66" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a761e543a0b87692d02e26aca1195cc08" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BMenuField::SetLabel</definition>
        <argsstring>(const char *label)</argsstring>
        <name>SetLabel</name>
        <qualifiedname>BMenuField::SetLabel</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>Sets the menu field label to <emphasis>label</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>label</emphasis> to set to the menu field.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="63" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ad02c800422bc2931a7a972dc9f1d2ebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenuField::ShowPopUpMarker</definition>
        <argsstring>()</argsstring>
        <name>ShowPopUpMarker</name>
        <qualifiedname>BMenuField::ShowPopUpMarker</qualifiedname>
        <briefdescription>
<para>Shows the pop-up marker located on the right edge of the menu bar. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBMenuField_1ad1c8335ca7de4c9a3b73fd7b8286173a" kindref="member">HidePopUpMarker()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="74" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBMenuField_1ace976f3319627ec56e46c77f3b3c48de" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::DoLayout</definition>
        <argsstring>()</argsstring>
        <name>DoLayout</name>
        <qualifiedname>BMenuField::DoLayout</qualifiedname>
        <reimplements refid="classBView_1a9d766a06d0885200c6ababba4c87808b">DoLayout</reimplements>
        <briefdescription>
<para>Layout view within the layout context. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="99" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1afa552d1804b1dbb61fce69b420299c87" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::LayoutInvalidated</definition>
        <argsstring>(bool descendants)</argsstring>
        <name>LayoutInvalidated</name>
        <qualifiedname>BMenuField::LayoutInvalidated</qualifiedname>
        <reimplements refid="classBView_1a0a552cc0d8678939c619f98dcc80d254">LayoutInvalidated</reimplements>
        <param>
          <type>bool</type>
          <declname>descendants</declname>
        </param>
        <briefdescription>
<para>Hook method called when the layout is invalidated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>descendants</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not child views have also been invalidated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="98" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBMenuField_1a1ef48cdc0eb1e4cdcd6b148bd675a421" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenuField::_AddMenu</definition>
        <argsstring>(BMenu *menu)</argsstring>
        <name>_AddMenu</name>
        <qualifiedname>BMenuField::_AddMenu</qualifiedname>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="135" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a1f7a645b001348cb58a2e19b350f3614" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenuField::_DrawLabel</definition>
        <argsstring>(BRect updateRect)</argsstring>
        <name>_DrawLabel</name>
        <qualifiedname>BMenuField::_DrawLabel</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>updateRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="120" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a7023d1e5541c29eb5633c0863c9cc0b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenuField::_DrawMenuBar</definition>
        <argsstring>(BRect updateRect)</argsstring>
        <name>_DrawMenuBar</name>
        <qualifiedname>BMenuField::_DrawMenuBar</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>updateRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="121" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a472dd9ede93f10271e00a945227f0f96" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenuField::_InitMenuBar</definition>
        <argsstring>(BMenu *menu, BRect frame, bool fixedSize)</argsstring>
        <name>_InitMenuBar</name>
        <qualifiedname>BMenuField::_InitMenuBar</qualifiedname>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fixedSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="132" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a96c7a32a053380d29bf66db105081b4a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenuField::_InitMenuBar</definition>
        <argsstring>(const BMessage *archive)</argsstring>
        <name>_InitMenuBar</name>
        <qualifiedname>BMenuField::_InitMenuBar</qualifiedname>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="134" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ae6a4a85a1f5dbb621c7a1c15eafced0f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BMenuField::_MenuBarOffset</definition>
        <argsstring>() const</argsstring>
        <name>_MenuBarOffset</name>
        <qualifiedname>BMenuField::_MenuBarOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="138" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1ae220d0dcc68e2e76c5ae8a59c3d1470b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BMenuField::_MenuBarWidth</definition>
        <argsstring>() const</argsstring>
        <name>_MenuBarWidth</name>
        <qualifiedname>BMenuField::_MenuBarWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="139" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a971ad837d5c77700056dd2df1d69d786" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BMenuField::_MenuTask</definition>
        <argsstring>()</argsstring>
        <name>_MenuTask</name>
        <qualifiedname>BMenuField::_MenuTask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="128" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a708457898dfc5483c6c83b20f746b829" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::_ReservedMenuField1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedMenuField1</name>
        <qualifiedname>BMenuField::_ReservedMenuField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="103" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1abd4e55ec18d6c55b83d353f9c37fa98c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::_ReservedMenuField2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedMenuField2</name>
        <qualifiedname>BMenuField::_ReservedMenuField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="104" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a4104db2493b9ad982fb287fe53c18909" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMenuField::_ReservedMenuField3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedMenuField3</name>
        <qualifiedname>BMenuField::_ReservedMenuField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="105" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1aea4a1de398818a68b3682bef6127bd99" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenuField::_UpdateFrame</definition>
        <argsstring>()</argsstring>
        <name>_UpdateFrame</name>
        <qualifiedname>BMenuField::_UpdateFrame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="131" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1afdf88a219328c660248172c873de06f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenuField::_ValidateLayoutData</definition>
        <argsstring>()</argsstring>
        <name>_ValidateLayoutData</name>
        <qualifiedname>BMenuField::_ValidateLayoutData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="137" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a5c1e3b08fc163188eaa3351d96e8c49c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenuField::InitObject</definition>
        <argsstring>(const char *label)</argsstring>
        <name>InitObject</name>
        <qualifiedname>BMenuField::InitObject</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="123" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a1e954c02a2d677df440c79f5b3391d5c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMenuField::InitObject2</definition>
        <argsstring>()</argsstring>
        <name>InitObject2</name>
        <qualifiedname>BMenuField::InitObject2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="124" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a848fbef513bc83bc077f5ffa2a35e72a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMenuField" kindref="compound">BMenuField</ref> &amp;</type>
        <definition>BMenuField &amp; BMenuField::operator=</definition>
        <argsstring>(const BMenuField &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BMenuField::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBMenuField" kindref="compound">BMenuField</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="108" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classBMenuField_1ae733ad4c4efd31bb1181e2a1a22eebd4" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>static int32 BMenuField::_thread_entry</definition>
        <argsstring>(void *arg)</argsstring>
        <name>_thread_entry</name>
        <qualifiedname>BMenuField::_thread_entry</qualifiedname>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="129" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMenuField_1a2fc89a045c497d08b80084d440cad9dd" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void BMenuField::InitMenu</definition>
        <argsstring>(BMenu *menu)</argsstring>
        <name>InitMenu</name>
        <qualifiedname>BMenuField::InitMenu</qualifiedname>
        <param>
          <type><ref refid="classBMenu" kindref="compound">BMenu</ref> *</type>
          <declname>menu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="126" column="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A labeled pop-up menu. </para>
    </briefdescription>
    <detaileddescription>
<para>A menu field consists of a label and a menu bar. The label, if used, is located to the left of the menu bar. The frame rectangle is divided in half by default. You can call <ref refid="classBMenuField_1a6981c770ea969f45df5317d7b8fda263" kindref="member">SetDivider()</ref> to change the ratio used by the label and menu bar.</para>
<para><image type="html" name="BMenuField_example.png"></image>
</para>
<para>A fixed-size menu field&apos;s menu bar width and height are limited by the bounds set by the divider position and <emphasis>frame</emphasis> rectangle.</para>
<para>A variable-size menu field&apos;s menu bar is only as wide as it needs to be in order to fit the currently selected menu item, and its height depends on the user&apos;s menu font size preference. The height of the frame rectangle is ignored.</para>
<para>If a menu field&apos;s frame rectangle is less than 20 pixels wide, the width is unbounded, the menu bar grows as wide as it needs to in order to fit the currently selected item. If the frame rectangle is wider than 20 pixels then the divider position and the width of the frame rectangle set the maximum menu bar width.</para>
<para><simplesect kind="remark"><para>Layout-enabled menu field&apos;s are always fixed-size, however, you can make them act like variable-size menu fields by adding them to a horizontal group followed by glue.</para>
</simplesect>
If you&apos;re using the menu field as part of a <ref refid="classBLayout" kindref="compound">BLayout</ref> you can get better control over the placement of the label and menu bar by splitting the label and menu field into separate <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> objects using the <ref refid="classBMenuField_1a29dca98abe0b968a3781559386c771b0" kindref="member">CreateLabelLayoutItem()</ref> and <ref refid="classBMenuField_1a22dd39ba40dbc47d450f8dfe8f95d42a" kindref="member">CreateMenuBarLayoutItem()</ref> methods.</para>
<para>You must pass a menu object into the constructor containing the choices the user can select from. The menu is owned by the menu field and its memory will be freed when the menu field is deleted. A <ref refid="classBPopUpMenu" kindref="compound">BPopUpMenu</ref> is typically used instead of a regular <ref refid="classBMenu" kindref="compound">BMenu</ref> because it opens directly underneath the mouse pointer and is set to radio mode and label-from-marked mode by default, but, this is entirely up to you.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="3">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BMenuField</label>
        <link refid="classBMenuField"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="3">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BMenuField</label>
        <link refid="classBMenuField"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/interface/MenuField.h" line="16" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/MenuField.h" bodystart="16" bodyend="155"/>
    <listofallmembers>
      <member refid="classBMenuField_1a1ef48cdc0eb1e4cdcd6b148bd675a421" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>_AddMenu</name></member>
      <member refid="classBMenuField_1a1f7a645b001348cb58a2e19b350f3614" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>_DrawLabel</name></member>
      <member refid="classBMenuField_1a7023d1e5541c29eb5633c0863c9cc0b4" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>_DrawMenuBar</name></member>
      <member refid="classBMenuField_1a472dd9ede93f10271e00a945227f0f96" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>_InitMenuBar</name></member>
      <member refid="classBMenuField_1a96c7a32a053380d29bf66db105081b4a" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>_InitMenuBar</name></member>
      <member refid="classBMenuField_1ae6a4a85a1f5dbb621c7a1c15eafced0f" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>_MenuBarOffset</name></member>
      <member refid="classBMenuField_1ae220d0dcc68e2e76c5ae8a59c3d1470b" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>_MenuBarWidth</name></member>
      <member refid="classBMenuField_1a971ad837d5c77700056dd2df1d69d786" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>_MenuTask</name></member>
      <member refid="classBMenuField_1a72ba4a58f3ec65f5fc86b9d3a8afffd7" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>_reserved</name></member>
      <member refid="classBMenuField_1a708457898dfc5483c6c83b20f746b829" prot="private" virt="virtual"><scope>BMenuField</scope><name>_ReservedMenuField1</name></member>
      <member refid="classBMenuField_1abd4e55ec18d6c55b83d353f9c37fa98c" prot="private" virt="virtual"><scope>BMenuField</scope><name>_ReservedMenuField2</name></member>
      <member refid="classBMenuField_1a4104db2493b9ad982fb287fe53c18909" prot="private" virt="virtual"><scope>BMenuField</scope><name>_ReservedMenuField3</name></member>
      <member refid="classBMenuField_1ae733ad4c4efd31bb1181e2a1a22eebd4" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>_thread_entry</name></member>
      <member refid="classBMenuField_1aea4a1de398818a68b3682bef6127bd99" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>_UpdateFrame</name></member>
      <member refid="classBMenuField_1afdf88a219328c660248172c873de06f0" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>_ValidateLayoutData</name></member>
      <member refid="classBView_1ab6382c582e5e1be527d3199459d05e8f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>AddChild</name></member>
      <member refid="classBView_1a5d30ae4fa0119bf5286f52f83c2f351c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>AddChild</name></member>
      <member refid="classBHandler_1a862bea548363faac6f883b348cbed838" prot="public" virt="virtual"><scope>BMenuField</scope><name>AddFilter</name></member>
      <member refid="classBView_1a88440336a66ee9b1a4b1661e9ba9e59c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>AddLine</name></member>
      <member refid="classBView_1ac780f029d415ee0a915792b4e756fa77" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>AdoptParentColors</name></member>
      <member refid="classBView_1a0e429a82fe06e9ab390b06d993ee31be" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>AdoptSystemColors</name></member>
      <member refid="classBView_1ab68ad7103708884f9e6fd84e8a579746" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>AdoptViewColors</name></member>
      <member refid="classBMenuField_1ac70109118ffe90c655fa775de5079dff" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Alignment</name></member>
      <member refid="classBMenuField_1ae8acba317c58f2767aae7956974536c9" prot="protected" virt="virtual"><scope>BMenuField</scope><name>AllArchived</name></member>
      <member refid="classBMenuField_1a55e723717b6ec14973ed513cb50a42c2" prot="public" virt="virtual"><scope>BMenuField</scope><name>AllAttached</name></member>
      <member refid="classBMenuField_1a635e98f17b0268ad3454579516852c8e" prot="public" virt="virtual"><scope>BMenuField</scope><name>AllDetached</name></member>
      <member refid="classBMenuField_1ad7e9ecb63a3df86c848bf8a9e7409ee7" prot="protected" virt="virtual"><scope>BMenuField</scope><name>AllUnarchived</name></member>
      <member refid="classBView_1a2d73d2f2b0b35390929cf54fbfa5ecff" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>AppendToPicture</name></member>
      <member refid="classBMenuField_1ada677e4339d5a5eca5c945c4165b6a3e" prot="public" virt="virtual"><scope>BMenuField</scope><name>Archive</name></member>
      <member refid="classBMenuField_1a63f6e3879897c8b42a6eb49667b84b2b" prot="public" virt="virtual"><scope>BMenuField</scope><name>AttachedToWindow</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BArchivable</name></member>
      <member refid="classBView_1abe65757b7c83c8db390bf0c87457a343" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BeginLayer</name></member>
      <member refid="classBView_1ab3f2e9f54d2b93952b27e182ac552983" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BeginLineArray</name></member>
      <member refid="classBView_1a14155192773aad22ebe47a9975afac5f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BeginPicture</name></member>
      <member refid="classBView_1ac1eb1eeee67ec97205a4acc6955185bd" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BeginRectTracking</name></member>
      <member refid="classBHandler_1a2142e21fe781b24f914ec2086e5f05b7" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BHandler</name></member>
      <member refid="classBHandler_1add8fa081a7bb8633581e78777b215d0b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BHandler</name></member>
      <member refid="classBMenuField_1ac1275be35dc6153f6b491568ce559dde" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BMenuField</name></member>
      <member refid="classBMenuField_1a8abc2338403001a1a36dce1121667b29" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BMenuField</name></member>
      <member refid="classBMenuField_1a82ee367a1d819b4227b294b4aa47dc70" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BMenuField</name></member>
      <member refid="classBMenuField_1acf6713e52c91b10f3478948f29290d29" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BMenuField</name></member>
      <member refid="classBMenuField_1a906b2808634575923ae718a093c0538c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BMenuField</name></member>
      <member refid="classBMenuField_1a9e498cee713130c42b05311e131aa301" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BMenuField</name></member>
      <member refid="classBView_1acbb8ea442346e91428689163db9d633e" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Bounds</name></member>
      <member refid="classBView_1ab148f59c41c9a22ced87bf7a0221ed62" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BView</name></member>
      <member refid="classBView_1ae3a1b2a66dc19690e766623be65c37e2" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BView</name></member>
      <member refid="classBView_1ae982fac35c278cc64990c506efe3965e" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>BView</name></member>
      <member refid="classBView_1aaf91592f50f2f44d16f23e7504f494cb" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ChildAt</name></member>
      <member refid="classBView_1ae7582b9a2b0b446a1de16c681f23baf9" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ClearViewBitmap</name></member>
      <member refid="classBView_1a0ae48f37c3f56b422841638971488cc0" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ClearViewOverlay</name></member>
      <member refid="classBView_1a18d61bcae2a7ca8a1a0977ac23d15171" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ClipToInversePicture</name></member>
      <member refid="classBView_1ad1762d160500ec3ce90c7bd73944d8a7" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ClipToInverseRect</name></member>
      <member refid="classBView_1a17dcb4f2e92994cde9a9ece9caa619c2" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ClipToInverseShape</name></member>
      <member refid="classBView_1a9c92c9e8e306d00dbfef81f2b0282339" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ClipToPicture</name></member>
      <member refid="classBView_1a22ff147a2f0a0bd65de494c9a039acee" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ClipToRect</name></member>
      <member refid="classBView_1ac0884c62949361a7eb6a4834f46b902c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ClipToShape</name></member>
      <member refid="classBView_1a656b8d82a6a7c7c6ab33c3dd08aad6ec" prot="public" virt="virtual"><scope>BMenuField</scope><name>ConstrainClippingRegion</name></member>
      <member refid="classBView_1a43c16140dd4491a6a6f7bad11bbea1f9" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1aa3201bdf5c489fbab7d67afe3453466d" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1ab2aeeb14409a18f950173e7cb22e147c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1a45b405f10c29442aea8b70161410565f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1a4b794ccd899dc6a0cafd886169122df5" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a75f1d68cf77bccc03930eb8e273f2967" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a3fbc496f437925cb02ccf9e817406e4e" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a44c3b5174e4ccfa4c123e0d5d54e9408" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1ab20700567eabd5f8135be179b4232e2c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1a91e6a7edab78547be47cb8dc84cfdecf" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1ac7bd2e0e7aac40d1be9a47999b5701a9" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1ae3b385e4d1b9f70bc848bf2fd0b7753c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1aefefb1242613b869feb6b8e0cc119518" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1af90cdeb62cc60adf64eb9a669c37c153" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1ad99f5af006f28c485f02484752a2ac5d" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1ae60c56c306d0cf3f504d710fac8b9bed" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1a8ace5c5cc811c4ad16acf281ffd1a48d" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>CopyBits</name></member>
      <member refid="classBView_1ae30d094a1cb1f3357c4aa7caa4b0e29d" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>CountChildren</name></member>
      <member refid="classBMenuField_1a29dca98abe0b968a3781559386c771b0" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>CreateLabelLayoutItem</name></member>
      <member refid="classBMenuField_1a22dd39ba40dbc47d450f8dfe8f95d42a" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>CreateMenuBarLayoutItem</name></member>
      <member refid="classBView_1ae2a9da1ca04489dd60ef8aefa86331ed" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DelayedInvalidate</name></member>
      <member refid="classBView_1a6389a46cf1842eb0d412b44958955e61" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DelayedInvalidate</name></member>
      <member refid="classBMenuField_1aeea6d476c34d48f1325956c64b4dd70d" prot="public" virt="virtual"><scope>BMenuField</scope><name>DetachedFromWindow</name></member>
      <member refid="classBView_1aa165cbaac7d6915feaae6048c4378c85" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DisableLayoutInvalidation</name></member>
      <member refid="classBMenuField_1a4c53b9f3fcc8352554505c9e0b726b69" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Divider</name></member>
      <member refid="classBMenuField_1ace976f3319627ec56e46c77f3b3c48de" prot="protected" virt="virtual"><scope>BMenuField</scope><name>DoLayout</name></member>
      <member refid="classBView_1a1f4f0c3c5946df1d14e6031e5e12f40b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DragMessage</name></member>
      <member refid="classBView_1a466287a3d939759cc09e4a6d1c9982cd" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DragMessage</name></member>
      <member refid="classBView_1ae1caa1d0bef9452db00c2adc8e3280b4" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DragMessage</name></member>
      <member refid="classBMenuField_1afae9ce554a41405c5d272c349e7fee57" prot="public" virt="virtual"><scope>BMenuField</scope><name>Draw</name></member>
      <member refid="classBView_1abb50623b4236926b068fc5a2264f6a48" prot="public" virt="virtual"><scope>BMenuField</scope><name>DrawAfterChildren</name></member>
      <member refid="classBView_1a6171150993fbf7c73966c7c302a95573" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a63db7245fd9b9fefd461d7596c15f9cc" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1abce81666128d183d59b5cf2ed75c7f07" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a1c8b6e3e9218388a68ae43dd408a187c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a769c3e3dee7d86ed50308f7a3f46ef91" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1ae66727344d35f05c56b6163ad70e360c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a0ef432afa41aefcb3fdd537e2d290001" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1aa3275b791787a66f3638611cd6a5ae09" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a6931c5fe803eb5fa9e66438d347c4b6d" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1ab50fba0500357abebb9f3ef3832f2e68" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a02ba5c68f21d4345ec3ee683496ce851" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawChar</name></member>
      <member refid="classBView_1a2ed7c3628692426116fc0bb450c0f0c7" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawChar</name></member>
      <member refid="classBView_1ae7953a2e451fb6e5a439df9e9dc8451a" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawingMode</name></member>
      <member refid="classBView_1ae4b252943befd9f0b62e30517b3ecec2" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a2fdf36421cccce9136cdd9966a971955" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a9f5781a2b37113c55950c93b621984a7" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a65498927c21d6681a0e77c4e3d29efba" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a05881f8b07989e1e9db0bd41f8181341" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a7f2fde4e7719bded5af33805b8242b06" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a5c261dbbb4e8157799e85d6ad1530920" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawString</name></member>
      <member refid="classBView_1a83d77965bd9cda6212189d92b97d8198" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawString</name></member>
      <member refid="classBView_1ad3830d09ed0300a1144d47ac78cd2dde" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawString</name></member>
      <member refid="classBView_1a4e1f1c59352a1373ccace7255a0ccf23" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawString</name></member>
      <member refid="classBView_1a5dacf5d193a0c492f296bc1e402e6370" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawString</name></member>
      <member refid="classBView_1a135868eb5cd1b35ee1c2d03517b9a33f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawString</name></member>
      <member refid="classBView_1a8848d931fd0354860a0e71934e66cb03" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawTiledBitmap</name></member>
      <member refid="classBView_1ad281a4e40f212e3cb56c23fa6e574a84" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>DrawTiledBitmapAsync</name></member>
      <member refid="classBView_1ad43cc5c22f83d95632d3d81eff73f425" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>EnableLayoutInvalidation</name></member>
      <member refid="classBView_1a9f54d4478a12823f116168a45af30898" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>EndLayer</name></member>
      <member refid="classBView_1a24ba922f9698936bc27f48b3c51349a1" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>EndLineArray</name></member>
      <member refid="classBView_1ae01506892a9b2d39f6df13726be9d0af" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>EndPicture</name></member>
      <member refid="classBView_1a7bcc3532c03eeeb929278de8fcc1fd25" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>EndRectTracking</name></member>
      <member refid="classBView_1a8851d500773c732ddbb1a4b31f0ad664" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>EventMask</name></member>
      <member refid="classBView_1a1f078f5c987061c5cf3059f7091bcb1a" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ExplicitAlignment</name></member>
      <member refid="classBView_1a4e63cc8ca1f604ccb20f5891adade70f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ExplicitMaxSize</name></member>
      <member refid="classBView_1a1b24db754473008766cdd0fd9c4ee3b7" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ExplicitMinSize</name></member>
      <member refid="classBView_1a218cd0d238104a6ff31c1d72ae2d9e6e" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ExplicitPreferredSize</name></member>
      <member refid="classBMenuField_1afe3d18a8ac41ecdec3be7459977500ff" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>fAlign</name></member>
      <member refid="classBMenuField_1a2d2d3152d99ad11e5e50b74bd0654012" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>fDivider</name></member>
      <member refid="classBMenuField_1a1e501b0a759f859ec59044c237b87a56" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>fEnabled</name></member>
      <member refid="classBMenuField_1a85ecfe093312ffeb6492da2dd463a9a5" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>fFixedSizeMB</name></member>
      <member refid="classBView_1af0e5d362474d39199116045aa9621aa5" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillArc</name></member>
      <member refid="classBView_1ac216c652253a21f0f28a7caef07deb77" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillArc</name></member>
      <member refid="classBView_1a49017edefe45ca5c74954e1227e673bb" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillArc</name></member>
      <member refid="classBView_1a4304fe45708f72d0ba20b579870c24ce" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillArc</name></member>
      <member refid="classBView_1a531ad43e129d810ee64208123b550193" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillBezier</name></member>
      <member refid="classBView_1a7cf8a5eaa5451b2c7df0d6fa392012bd" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillBezier</name></member>
      <member refid="classBView_1a06942f0dd4c13175bcfff6a88eae7cc0" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a98a73cbccb42edfc61b93f9aa6f4a13b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a2738cf2f3d39f560d0cff90543f45afa" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a86de91f260577187eaf22ba0fdf32fba" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillEllipse</name></member>
      <member refid="classBView_1ae72733cae8a1fc2da8feb47c0c2149fa" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillPolygon</name></member>
      <member refid="classBView_1adc7d96f2d60a819f03685eb11b6945e2" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a1bdc02a311b2a051ad7fbdbf1789e958" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a96cdb60a8c87e4958380a3077a2197a5" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a22a5ce1f024e622b6eade6a9176ff1f7" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a57b0870cd6a0109c347d80c34ca2f34a" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a4d074663998c7ba922a9d981d0cfe086" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillRect</name></member>
      <member refid="classBView_1aae6a3ff6683bb15ac8c647c946475e8f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillRect</name></member>
      <member refid="classBView_1a4810086c415d90bffa25ab2963716936" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillRegion</name></member>
      <member refid="classBView_1a56828d13947717462b661e1645305509" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillRegion</name></member>
      <member refid="classBView_1a38d7e7b15a13591c20020599886402b5" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillRoundRect</name></member>
      <member refid="classBView_1a73956d28b356b2eee83ebc19bd6e398b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillRoundRect</name></member>
      <member refid="classBView_1a3a2fd2d7313a9bb7dff359a4f4362a5f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillRule</name></member>
      <member refid="classBView_1a91b9ce4b8b8ee13ff5f1071e1fb0d829" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillShape</name></member>
      <member refid="classBView_1a9a82da733397e97b985875be941f77a6" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillShape</name></member>
      <member refid="classBView_1a46ec16609a402d03baa322a04d8c50e2" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillTriangle</name></member>
      <member refid="classBView_1af512b76752705cba87f89c8dac313005" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillTriangle</name></member>
      <member refid="classBView_1a5dd1c64839c11a79e80581e37656cc26" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillTriangle</name></member>
      <member refid="classBView_1a0878dea14a61d58c951bd8e11c0a2ef6" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FillTriangle</name></member>
      <member refid="classBHandler_1a909662a049856f6863a934cf18161554" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FilterList</name></member>
      <member refid="classBView_1ab83ef89f1876913174c825ff7cd02c4a" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>FindView</name></member>
      <member refid="classBMenuField_1a167692ca194fc6f73d0b83dcfeae5e85" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>fLabel</name></member>
      <member refid="classBView_1a561b10abf94dd65a26b02253af667508" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Flags</name></member>
      <member refid="classBMenuField_1a2850c31a67745257846ec87d3faf99a4" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>fLayoutData</name></member>
      <member refid="classBView_1a15465930f84d2d01f7818bd79bc91c3e" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Flush</name></member>
      <member refid="classBMenuField_1affa67e82609e66d7214048f3cf494ced" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>fMenu</name></member>
      <member refid="classBMenuField_1a106e6a2fcdf7e06186444e4fbd4fe08e" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>fMenuBar</name></member>
      <member refid="classBMenuField_1abeee7c82988501249800aa491d0feef9" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>fMenuTaskID</name></member>
      <member refid="classBMenuField_1a57427f35a78243b63f015d8714a742ca" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>fMouseDownFilter</name></member>
      <member refid="classBView_1a424161ccf6f52a354fdd67ed1376d196" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ForceFontAliasing</name></member>
      <member refid="classBView_1a487b04a3aaffdd1a1afb730dca36a7e2" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Frame</name></member>
      <member refid="classBMenuField_1ad35f91192f1f6986007a2234f42d6638" prot="public" virt="virtual"><scope>BMenuField</scope><name>FrameMoved</name></member>
      <member refid="classBMenuField_1a6c44f9eb74f2ae11ac2ac308a6e9bb5f" prot="public" virt="virtual"><scope>BMenuField</scope><name>FrameResized</name></member>
      <member refid="classBView_1ad50d5ba2249fdf3dd8640b3573c2a2e8" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>GetBlendingMode</name></member>
      <member refid="classBView_1acf50a063c9621f35a84b1d0245b12d69" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>GetClippingRegion</name></member>
      <member refid="classBView_1af244d01f85e6d9ae7f5fcca4637dc78c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>GetFont</name></member>
      <member refid="classBView_1a5bf95d66754634c647b2ddf7d39b4dfb" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>GetFontHeight</name></member>
      <member refid="classBView_1ad34bee968b1ec98a0bf89343340b6b07" prot="public" virt="virtual"><scope>BMenuField</scope><name>GetHeightForWidth</name></member>
      <member refid="classBView_1aec2975b51966c397aa52b9e3eebd2c85" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>GetLayout</name></member>
      <member refid="classBView_1a830ce9cf2ac2ffb5f73f526ee5d6e53d" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>GetMouse</name></member>
      <member refid="classBMenuField_1a08fad29da3ccfb574bd4cf6fdc56b20b" prot="public" virt="virtual"><scope>BMenuField</scope><name>GetPreferredSize</name></member>
      <member refid="classBView_1aaae0dc93bc61d7f221465fbe0aecd30a" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>GetStringWidths</name></member>
      <member refid="classBMenuField_1ad765cb012c296a6f676e070c80c929e3" prot="public" virt="virtual"><scope>BMenuField</scope><name>GetSupportedSuites</name></member>
      <member refid="classBView_1afb826fe9b8964e4d843cae190170badf" prot="protected" virt="virtual"><scope>BMenuField</scope><name>GetToolTipAt</name></member>
      <member refid="classBView_1a606e0e7e03516dccb53bf073827460a8" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>HasDefaultColors</name></member>
      <member refid="classBView_1abd411461b7e23ad17e7294f8f5e1cbeb" prot="public" virt="virtual"><scope>BMenuField</scope><name>HasHeightForWidth</name></member>
      <member refid="classBView_1aa9aacc95606b650e6a8d776b51cb902b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>HasSystemColors</name></member>
      <member refid="classBView_1a7688dc04178a2955950154ee3670d029" prot="public" virt="virtual"><scope>BMenuField</scope><name>Hide</name></member>
      <member refid="classBMenuField_1ad1c8335ca7de4c9a3b73fd7b8286173a" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>HidePopUpMarker</name></member>
      <member refid="classBView_1af75bbc1131ad6a90e299c6cbcf623fa7" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>HideToolTip</name></member>
      <member refid="classBView_1abda3583967fba9f6ed9524058d00a6e9" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>HighColor</name></member>
      <member refid="classBView_1aa86f548fba2e82d022066198be6d5af6" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>HighUIColor</name></member>
      <member refid="classBMenuField_1a2fc89a045c497d08b80084d440cad9dd" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>InitMenu</name></member>
      <member refid="classBMenuField_1a5c1e3b08fc163188eaa3351d96e8c49c" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>InitObject</name></member>
      <member refid="classBMenuField_1a1e954c02a2d677df440c79f5b3391d5c" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>InitObject2</name></member>
      <member refid="classBMenuField_1a40850631d688f01232d9e71c778f0de3" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Instantiate</name></member>
      <member refid="classBView_1a8c767d948dc9435c006cabdcab1cd08e" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Invalidate</name></member>
      <member refid="classBView_1ac70b682819c0f9b008c428e02015b19b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Invalidate</name></member>
      <member refid="classBView_1adfced0dcb244e199f872fdbd48349a05" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Invalidate</name></member>
      <member refid="classBView_1a4a711316094e43076a3f5478d937accf" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>InvalidateLayout</name></member>
      <member refid="classBView_1af7e5ebc41cd5a471dcdcfa1f3db801a5" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>InvertRect</name></member>
      <member refid="classBMenuField_1a1031c6b7a2a469191cca3a17600797f9" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>IsEnabled</name></member>
      <member refid="classBView_1a165719de682845f80735042a499692ff" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>IsFocus</name></member>
      <member refid="classBView_1a33a65050c2315b19b4c5af16c48e3cdb" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>IsHidden</name></member>
      <member refid="classBView_1a95cfa8ee585230ea8fb224e88eddc503" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>IsHidden</name></member>
      <member refid="classBView_1a4e86b719129a12afbda7c10371eeca47" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>IsLayoutInvalidationDisabled</name></member>
      <member refid="classBView_1a00a5d5d6edee7d488d77df03945b3e94" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>IsLayoutValid</name></member>
      <member refid="classBView_1a8e3f1722e40fdf01c5131e49199ec3ff" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>IsPrinting</name></member>
      <member refid="classBHandler_1a581b84f0f067afa88768ce6a0c07f59f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>IsWatched</name></member>
      <member refid="classBMenuField_1a9b47c6e428138e3bfc65a1407b82f003" prot="public" virt="virtual"><scope>BMenuField</scope><name>KeyDown</name></member>
      <member refid="classBView_1acbc528bb70be49993bd99aa136dbb089" prot="public" virt="virtual"><scope>BMenuField</scope><name>KeyUp</name></member>
      <member refid="classBMenuField_1ac718643e0506122c325f9414c44d8961" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Label</name></member>
      <member refid="classBView_1a854b6ca54eeca610db9eab8b58d68a8b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Layout</name></member>
      <member refid="classBView_1a2f74b3e7c602045d8c927f923f45eefa" prot="public" virt="virtual"><scope>BMenuField</scope><name>LayoutAlignment</name></member>
      <member refid="classBView_1ada521f848e4c800cd02eb4fe529e7ea0" prot="protected" virt="virtual"><scope>BMenuField</scope><name>LayoutChanged</name></member>
      <member refid="classBView_1ae066513c0a788a9544744d409f28cada" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>LayoutContext</name></member>
      <member refid="classBMenuField_1afa552d1804b1dbb61fce69b420299c87" prot="protected" virt="virtual"><scope>BMenuField</scope><name>LayoutInvalidated</name></member>
      <member refid="classBView_1a5d252dfe28eee049be2192d1a01ed6e3" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>LeftTop</name></member>
      <member refid="classBView_1a551f5961188e4f26ef310eb5eea7c926" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>LineCapMode</name></member>
      <member refid="classBView_1a0aa47adb29d91b4cc6c4924b7f436012" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>LineJoinMode</name></member>
      <member refid="classBView_1ab1cd7cf77a4fa01755d186a05163cfbe" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>LineMiterLimit</name></member>
      <member refid="classBHandler_1a9d64bf66b4914918e24390d117e83477" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>LockLooper</name></member>
      <member refid="classBHandler_1afa0099ff6defcb6d64e3ee1c2fb47afe" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>LockLooperWithTimeout</name></member>
      <member refid="classBHandler_1ac8e949959b12e602e3b0c4f023c60e6c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Looper</name></member>
      <member refid="classBView_1a423c54f22ab95745b28b583af999e554" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>LowColor</name></member>
      <member refid="classBView_1ae32ca6d8f106d44b5b51df82a7eb64c5" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>LowUIColor</name></member>
      <member refid="classBMenuField_1a14d9a763b0d621a78d0aa8abdabe1f7b" prot="public" virt="virtual"><scope>BMenuField</scope><name>MakeFocus</name></member>
      <member refid="classBMenuField_1a2d7e95c1f408178fdc44973b34ac00c3" prot="public" virt="virtual"><scope>BMenuField</scope><name>MaxSize</name></member>
      <member refid="classBMenuField_1a87f6e185589e750903f739619c6af2bb" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Menu</name></member>
      <member refid="classBMenuField_1aecaf287cef4ed0ff9a0738fef65b9eff" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>MenuBar</name></member>
      <member refid="classBMenuField_1a485563579452aca7f6162be66261cbdf" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>MenuItem</name></member>
      <member refid="classBMenuField_1ab73739dc3316044b9269718bd0852d39" prot="public" virt="virtual"><scope>BMenuField</scope><name>MessageReceived</name></member>
      <member refid="classBMenuField_1a0587347fb25e87748d7c5207a344e3c5" prot="public" virt="virtual"><scope>BMenuField</scope><name>MinSize</name></member>
      <member refid="classBMenuField_1a0f35ede494cc2169455c429798e575ae" prot="public" virt="virtual"><scope>BMenuField</scope><name>MouseDown</name></member>
      <member refid="classBMenuField_1acbd5b0849384a650560940de14b6e24b" prot="public" virt="virtual"><scope>BMenuField</scope><name>MouseMoved</name></member>
      <member refid="classBMenuField_1aee41e24ee5b2055a9714112d61b86b9d" prot="public" virt="virtual"><scope>BMenuField</scope><name>MouseUp</name></member>
      <member refid="classBView_1a6e122baca4494f6ce739a507054fa81f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>MoveBy</name></member>
      <member refid="classBView_1a979f8f0090284919b6e7c6c04d91cbde" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>MovePenBy</name></member>
      <member refid="classBView_1acb61254a2121f569f6223a95cd835abd" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>MovePenTo</name></member>
      <member refid="classBView_1ae32d7951a4ce9cff6b81899f5208a25f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>MovePenTo</name></member>
      <member refid="classBView_1acce9c93118a3db24078f16bdabc6fbec" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>MoveTo</name></member>
      <member refid="classBView_1a1c9b2df47ba1b9f3a1ce3286995fb8bd" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>MoveTo</name></member>
      <member refid="classBHandler_1a40b246ac272e09b2f641d1290be21200" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Name</name></member>
      <member refid="classBHandler_1a92855d8f88f6072e7225bde292feaa38" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>NextHandler</name></member>
      <member refid="classBView_1a76e7d862fe78e4d2766573bf073b9d30" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>NextSibling</name></member>
      <member refid="classBMenuField_1a848fbef513bc83bc077f5ffa2a35e72a" prot="private" virt="non-virtual"><scope>BMenuField</scope><name>operator=</name></member>
      <member refid="classBView_1aefbf71a7a403900e960ffa3943dc9901" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Origin</name></member>
      <member refid="classBView_1a332f34d9862000dbc859fd4e308839dd" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Parent</name></member>
      <member refid="classBView_1a2774e13c2b12c6a5fee333e95b76b07d" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>PenLocation</name></member>
      <member refid="classBView_1a69d8657d26b49773fa2de914f263b204" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>PenSize</name></member>
      <member refid="classBMenuField_1a78923e5f07ff7c288980a72f6a953001" prot="public" virt="virtual"><scope>BMenuField</scope><name>Perform</name></member>
      <member refid="classBView_1abc0d202fe13366b80703afbdb3832951" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>PopState</name></member>
      <member refid="classBMenuField_1a2930a668aaf18292c83211e4ef8386e4" prot="public" virt="virtual"><scope>BMenuField</scope><name>PreferredSize</name></member>
      <member refid="classBView_1a2a46f78756eacca3f3d4c90d31c758b1" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>PreviousSibling</name></member>
      <member refid="classBView_1a0ae8ec3e94ee3d41cb329e3df6966566" prot="public" virt="virtual"><scope>BMenuField</scope><name>Pulse</name></member>
      <member refid="classBView_1a1dcb914cd0c6ef8d1291aa8492968d40" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>PushState</name></member>
      <member refid="classBView_1a2cf4e698a4322ecfb946e440e0f7ac62" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Relayout</name></member>
      <member refid="classBView_1a5f93a23d06267da83c128bce222ceb17" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>RemoveChild</name></member>
      <member refid="classBHandler_1a2b608135b27f283802648e7c6f8cdc83" prot="public" virt="virtual"><scope>BMenuField</scope><name>RemoveFilter</name></member>
      <member refid="classBView_1a87e0848b1760a9f28aad4516467a03ed" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>RemoveSelf</name></member>
      <member refid="classBView_1a127933a3820f0bfe0497b5e7ddfa191f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ResetLayoutInvalidation</name></member>
      <member refid="classBView_1ace23acc948bbc9b9272da8dc7f01d3ce" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ResizeBy</name></member>
      <member refid="classBView_1a742bccd6034ef9ade65b0e596fba55f2" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ResizeTo</name></member>
      <member refid="classBView_1a6134097569f75679616257a361086d7a" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ResizeTo</name></member>
      <member refid="classBMenuField_1a33f83798e1f30279bba074a078a595d3" prot="public" virt="virtual"><scope>BMenuField</scope><name>ResizeToPreferred</name></member>
      <member refid="classBView_1a1e93df523fc9edc807274ac6cfd2dc8d" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ResizingMode</name></member>
      <member refid="classBMenuField_1a8af84b2aecbc3e6b3041e3ef70b36cfd" prot="public" virt="virtual"><scope>BMenuField</scope><name>ResolveSpecifier</name></member>
      <member refid="classBView_1a02ab6b6196b140b20ae516a55680e30b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>RotateBy</name></member>
      <member refid="classBView_1a50e12d6b8080b3bc6bc617d31d1ab200" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Scale</name></member>
      <member refid="classBView_1ac83f9fdfb882f849e3ac79bfb06a0fd6" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ScaleBy</name></member>
      <member refid="classBView_1a0878bc7981ba814190b822349599a120" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ScrollBar</name></member>
      <member refid="classBView_1ae20e2a3c46fc30a2a292c832eead7387" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ScrollBy</name></member>
      <member refid="classBView_1a33ed2a9eeff474a756b548996a82b964" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ScrollTo</name></member>
      <member refid="classBView_1a2b76ddc60289ce92e1fb706332edbafc" prot="public" virt="virtual"><scope>BMenuField</scope><name>ScrollTo</name></member>
      <member refid="classBView_1a54991372110199183fed775598ae1912" prot="protected" virt="non-virtual"><scope>BMenuField</scope><name>ScrollWithMouseWheelDelta</name></member>
      <member refid="classBHandler_1a71bf72dc17a64bcd42656722271a9e0c" prot="public" virt="virtual"><scope>BMenuField</scope><name>SendNotices</name></member>
      <member refid="classBMenuField_1ae269e98b9eeceb46fba16ada0b3585c8" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetAlignment</name></member>
      <member refid="classBView_1ad01fc0fd68e4683af9b9386bf33abf63" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetBlendingMode</name></member>
      <member refid="classBView_1a8ba0fe3a3dbeec1b7fd8c9655070ef64" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetDiskMode</name></member>
      <member refid="classBMenuField_1a6981c770ea969f45df5317d7b8fda263" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetDivider</name></member>
      <member refid="classBView_1a0c392ed0e36213e1007322a9cbca71c0" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetDrawingMode</name></member>
      <member refid="classBMenuField_1aaa9504b474e8c8e142e89413834667b9" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetEnabled</name></member>
      <member refid="classBView_1a5d8d6b469a8a11a577d1d138cfc31162" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetEventMask</name></member>
      <member refid="classBView_1a6906e47d4fdd6923dd51edb60a83ccea" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetExplicitAlignment</name></member>
      <member refid="classBView_1acd759dd7505050f9cbd8213c71991b8b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetExplicitMaxSize</name></member>
      <member refid="classBView_1abfcb5c761f9b06da3b4a6788aad5d0ee" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetExplicitMinSize</name></member>
      <member refid="classBView_1a98b7d450210099ed59b7cd34f2575e20" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetExplicitPreferredSize</name></member>
      <member refid="classBView_1aeef8a27a5577db87251412ce44421494" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetExplicitSize</name></member>
      <member refid="classBView_1a2019def93337069c0b7d416e103522e9" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetFillRule</name></member>
      <member refid="classBHandler_1a503344dc801858e1f5f419be3919e9cf" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetFilterList</name></member>
      <member refid="classBView_1a4740f9a1e1163073b042102a421a2e33" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetFlags</name></member>
      <member refid="classBView_1a9247127c151153542a3e6bc1f3904433" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetFont</name></member>
      <member refid="classBView_1a443e4d9ff182f85a6b1c8478ef22ffe8" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetFontSize</name></member>
      <member refid="classBView_1ab5482f91a642d545bc3fcefe199f95e9" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetHighColor</name></member>
      <member refid="classBView_1aff9e1ab5e88f33027e72b39874868e9b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetHighColor</name></member>
      <member refid="classBView_1a54eefc28bf7a4bc30612cf83aff2963b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetHighUIColor</name></member>
      <member refid="classBMenuField_1a761e543a0b87692d02e26aca1195cc08" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetLabel</name></member>
      <member refid="classBView_1acac1ebbba8c76e543e1b06e84dffab02" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetLayout</name></member>
      <member refid="classBView_1ae97bfe6c0c93fce98bc7bbd93761dbfb" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetLineMode</name></member>
      <member refid="classBView_1af0426243110fb150ad7ef0705209a12c" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetLowColor</name></member>
      <member refid="classBView_1a929fb1ca47a00220c355ae55a0ea6077" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetLowColor</name></member>
      <member refid="classBView_1a879ab88d4e64345069f1041d3a7b652f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetLowUIColor</name></member>
      <member refid="classBView_1ae7705783d064a8613dcc6f36a2866ab2" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetMouseEventMask</name></member>
      <member refid="classBHandler_1abf861126df4b6e71b9261a99da4ad0eb" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetName</name></member>
      <member refid="classBHandler_1a02f78779c8141987d6030e73c22e734a" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetNextHandler</name></member>
      <member refid="classBView_1a769e5fa6486adf12e7a3511ed372a06c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetOrigin</name></member>
      <member refid="classBView_1a7cf4e3ac5b0759b9c38d7b36517f2337" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetOrigin</name></member>
      <member refid="classBView_1a80ea4cb97d2e6e2c3088e610a9e157e6" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetPenSize</name></member>
      <member refid="classBView_1a38d29ea581880c3978d7e50dcc851696" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetResizingMode</name></member>
      <member refid="classBView_1a077136ea06f0a6b39aa0b8b24311cce8" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetScale</name></member>
      <member refid="classBView_1a75fb825a3ef69c1c6fbf3535ee2260ab" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetToolTip</name></member>
      <member refid="classBView_1aa377bad64048a2d3cd1c2b272ae3079b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetToolTip</name></member>
      <member refid="classBView_1afbd9b8f35226ba89980c450f7626fc85" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetTransform</name></member>
      <member refid="classBView_1ac247ddc58f1cb719d60e354a77c51c1e" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetViewBitmap</name></member>
      <member refid="classBView_1a046a9c1656823db5401e530cf8121734" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetViewBitmap</name></member>
      <member refid="classBView_1ae8dde0e0330b394db016f3e609e7fb6a" prot="public" virt="virtual"><scope>BMenuField</scope><name>SetViewColor</name></member>
      <member refid="classBView_1a7dace2963c85b5ce55b7d8e96946625c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetViewColor</name></member>
      <member refid="classBView_1a39b4878773b4436e3c76aee51c4fbc09" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetViewCursor</name></member>
      <member refid="classBView_1a576100502a8c6dfb46ff36b08cbe9405" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetViewOverlay</name></member>
      <member refid="classBView_1a9770c1bb97d7ffd797f7c40ca1339f98" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetViewOverlay</name></member>
      <member refid="classBView_1a34f020c4bb1008cef972cf1eec7dba0f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>SetViewUIColor</name></member>
      <member refid="classBView_1a06e0584057d6c7a7c7e048b6272b7016" prot="public" virt="virtual"><scope>BMenuField</scope><name>Show</name></member>
      <member refid="classBMenuField_1ad02c800422bc2931a7a972dc9f1d2ebc" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ShowPopUpMarker</name></member>
      <member refid="classBView_1a61d28f55d6fdc55b59c38c44b9788205" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ShowToolTip</name></member>
      <member refid="classBHandler_1af7d600e33a0586af7444d9abc8500504" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a20713ff6ee9df49a014f391374eaf689" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a58d7c8d30e47fbb7590f10dea1f21166" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a31927c51d89e0e3b3bf609a786ee6c3b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a9d1f0d55b3dc7337058aba769b4e4f93" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1ad3544be491270f856a0af8d36ce02d78" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1a199c167e0dcee95aa65d09435804b3d9" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StopWatchingAll</name></member>
      <member refid="classBHandler_1a8b9a424ce63f5932666094b6eadf10cf" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StopWatchingAll</name></member>
      <member refid="classBView_1adef480de8a8bcd2fff3129660501616e" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StringWidth</name></member>
      <member refid="classBView_1aef3638cf597407e6a9f31bc75cd42097" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StringWidth</name></member>
      <member refid="classBView_1a57222cd40096dfe23e1df86a01277041" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokeArc</name></member>
      <member refid="classBView_1a9c958b9399925a8a0ea333afd337ebfd" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokeArc</name></member>
      <member refid="classBView_1a64ea2ad06018b0b3b156113d201c7ad7" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokeBezier</name></member>
      <member refid="classBView_1a042703445263f1d9a9213757fcf27414" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokeEllipse</name></member>
      <member refid="classBView_1ae7727ca808873634363e5306fdbcc09a" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokeEllipse</name></member>
      <member refid="classBView_1a909ee03901fac4ae5504f7faf5e41a7c" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokeLine</name></member>
      <member refid="classBView_1ab713fc42e330d0a091a9774edfb9626f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokeLine</name></member>
      <member refid="classBView_1ae871d03592c1bba5d6be3d5d982ea747" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1a1638c58553467f3ebe5ee2b3683d4905" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1a1482fddababe3dd1377f86a038f7119b" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1ad3893af66d3891855f9db7072bfb4de7" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokeRect</name></member>
      <member refid="classBView_1acf743b2ba22b82c8bc38eb514513df55" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokeRoundRect</name></member>
      <member refid="classBView_1a507e9b732e880ac8e6379e19e74d5757" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokeShape</name></member>
      <member refid="classBView_1a8221cce8942e590c2fea954f57933e78" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokeTriangle</name></member>
      <member refid="classBView_1ae59fc9e9cfaba5e2d6e79a90723a3330" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>StrokeTriangle</name></member>
      <member refid="classBView_1a27e217abb3fefa45b6e4ceb7a54cb362" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Sync</name></member>
      <member refid="classBView_1a668a4ed5419c86a7f2696ca7ece28df7" prot="public" virt="virtual"><scope>BMenuField</scope><name>TargetedByScrollView</name></member>
      <member refid="classBView_1a127ceec2101b12c0fbe1e0e66a7b9dc1" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ToolTip</name></member>
      <member refid="classBView_1ab16cc72cf8ae3b40abcf1f714e7e9b74" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Transform</name></member>
      <member refid="classBView_1a98597d70ae48b2576683f25078135534" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>TransformTo</name></member>
      <member refid="classBView_1a8ae6d4e1cdfeeee33b753d56bee6ae7f" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>TranslateBy</name></member>
      <member refid="classBView_1ac2e293fbdd999e4857b44b6e4d4c3820" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>TruncateString</name></member>
      <member refid="classBHandler_1ab131af7eb7aa2b9eea3a11ac1bfd4c03" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>UnlockLooper</name></member>
      <member refid="classBView_1a8b2b1d9e08ce0c1763dd6a077ed02fdd" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ViewColor</name></member>
      <member refid="classBView_1aec6c89446eb4f5ded151adced9126df8" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>ViewUIColor</name></member>
      <member refid="classBView_1a32733d357b76bc3504cae326d174f4a2" prot="public" virt="non-virtual"><scope>BMenuField</scope><name>Window</name></member>
      <member refid="classBMenuField_1a927eea4bf97ed4834e97f18e466bd952" prot="public" virt="virtual"><scope>BMenuField</scope><name>WindowActivated</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BMenuField</scope><name>~BArchivable</name></member>
      <member refid="classBHandler_1a928254034959d19ef588b7898a6f8194" prot="public" virt="virtual"><scope>BMenuField</scope><name>~BHandler</name></member>
      <member refid="classBMenuField_1a319e85ee5d62c611ae262b0913a6b320" prot="public" virt="virtual"><scope>BMenuField</scope><name>~BMenuField</name></member>
      <member refid="classBView_1a7df0d7eaeb97a3c8a800f9e321f23f67" prot="public" virt="virtual"><scope>BMenuField</scope><name>~BView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
