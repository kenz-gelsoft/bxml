<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBTimeZone" kind="class" language="C++" prot="public">
    <compoundname>BTimeZone</compoundname>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classBTimeZone_1a868aadbafcbb7c04ba3e9097af0440bb" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* BTimeZone::kNameOfGmtZone</definition>
        <argsstring></argsstring>
        <name>kNameOfGmtZone</name>
        <qualifiedname>BTimeZone::kNameOfGmtZone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="46" column="19" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBTimeZone_1ac96b60d37bd806132da680e187dc2288" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Private</definition>
        <argsstring></argsstring>
        <name>Private</name>
        <qualifiedname>BTimeZone::Private</qualifiedname>
        <param>
          <type>Private</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="50" column="13" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBTimeZone_1add238575dc7340b5413a0c3b53b3fe63" prot="private" static="no" mutable="yes">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BTimeZone::fDaylightSavingName</definition>
        <argsstring></argsstring>
        <name>fDaylightSavingName</name>
        <qualifiedname>BTimeZone::fDaylightSavingName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="59" column="16" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTimeZone_1aa919116d47ea606dfd9af907b73af2eb" prot="private" static="no" mutable="no">
        <type>U_ICU_NAMESPACE::Locale *</type>
        <definition>U_ICU_NAMESPACE::Locale* BTimeZone::fICULocale</definition>
        <argsstring></argsstring>
        <name>fICULocale</name>
        <qualifiedname>BTimeZone::fICULocale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="53" column="24" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTimeZone_1a3ab216d1713cbb670287a5aec9f77992" prot="private" static="no" mutable="no">
        <type>U_ICU_NAMESPACE::TimeZone *</type>
        <definition>U_ICU_NAMESPACE::TimeZone* BTimeZone::fICUTimeZone</definition>
        <argsstring></argsstring>
        <name>fICUTimeZone</name>
        <qualifiedname>BTimeZone::fICUTimeZone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="52" column="26" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTimeZone_1ab0aa943b00711909c6791e6fa643846c" prot="private" static="no" mutable="yes">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BTimeZone::fInitializedFields</definition>
        <argsstring></argsstring>
        <name>fInitializedFields</name>
        <qualifiedname>BTimeZone::fInitializedFields</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="56" column="15" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTimeZone_1a893693909ef146b2da8dda12ba19f254" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BTimeZone::fInitStatus</definition>
        <argsstring></argsstring>
        <name>fInitStatus</name>
        <qualifiedname>BTimeZone::fInitStatus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="54" column="9" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTimeZone_1ad06eb59aebd9ae444624b0c60fc2fd41" prot="private" static="no" mutable="yes">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BTimeZone::fName</definition>
        <argsstring></argsstring>
        <name>fName</name>
        <qualifiedname>BTimeZone::fName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="58" column="16" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTimeZone_1a82300f80eaf508007068061c17495747" prot="private" static="no" mutable="yes">
        <type>int</type>
        <definition>int BTimeZone::fOffsetFromGMT</definition>
        <argsstring></argsstring>
        <name>fOffsetFromGMT</name>
        <qualifiedname>BTimeZone::fOffsetFromGMT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="62" column="12" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTimeZone_1ad10eae289947a337cb6096f7bbe0aea9" prot="private" static="no" mutable="yes">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BTimeZone::fShortDaylightSavingName</definition>
        <argsstring></argsstring>
        <name>fShortDaylightSavingName</name>
        <qualifiedname>BTimeZone::fShortDaylightSavingName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="61" column="16" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTimeZone_1afa61d68d4d6573726acc1441719aea7f" prot="private" static="no" mutable="yes">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BTimeZone::fShortName</definition>
        <argsstring></argsstring>
        <name>fShortName</name>
        <qualifiedname>BTimeZone::fShortName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="60" column="16" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTimeZone_1a236e76cb7b37fb311101e4c3a23c3f23" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool BTimeZone::fSupportsDaylightSaving</definition>
        <argsstring></argsstring>
        <name>fSupportsDaylightSaving</name>
        <qualifiedname>BTimeZone::fSupportsDaylightSaving</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="63" column="13" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTimeZone_1aba5a34b960aa73011b999839e6ed835a" prot="private" static="no" mutable="yes">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BTimeZone::fZoneID</definition>
        <argsstring></argsstring>
        <name>fZoneID</name>
        <qualifiedname>BTimeZone::fZoneID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="57" column="16" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBTimeZone_1aa5e7be09a61fd87932b574e07654d37a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BTimeZone::BTimeZone</definition>
        <argsstring>(const BTimeZone &amp;other)</argsstring>
        <name>BTimeZone</name>
        <qualifiedname>BTimeZone::BTimeZone</qualifiedname>
        <param>
          <type>const <ref refid="classBTimeZone" kindref="compound">BTimeZone</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBTimeZone" kindref="compound">BTimeZone</ref> object to copy from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1a204a3fd38703d6bbc5cd938559206d33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BTimeZone::BTimeZone</definition>
        <argsstring>(const char *zoneID=NULL, const BLanguage *language=NULL)</argsstring>
        <name>BTimeZone</name>
        <qualifiedname>BTimeZone::BTimeZone</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>zoneID</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>const BLanguage *</type>
          <declname>language</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Construct a timezone from its <emphasis>zoneID</emphasis> and <emphasis>language</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The constructor only allows you to construct a timezone if you already know its code. If you don&apos;t know the code, you can instead go through the <ref refid="classBCountry" kindref="compound">BCountry</ref> class which can enumerate all timezones in a country, or use the <ref refid="classBLocaleRoster" kindref="compound">BLocaleRoster</ref>, which knows the timezone selected by the user.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>zoneID</parametername>
</parameternamelist>
<parameterdescription>
<para>A time zone ID, for example, &quot;America/Los_Angeles&quot;. This ID is used to call up a specific real-world time zone. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>language</emphasis> to use when displaying the time zone.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1a0baef4dbb0161d6634cd65c830d8a4b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BTimeZone::~BTimeZone</definition>
        <argsstring>()</argsstring>
        <name>~BTimeZone</name>
        <qualifiedname>BTimeZone::~BTimeZone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1a4211ad141695d1cec33bae275b86ef87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
        <definition>const BString &amp; BTimeZone::DaylightSavingName</definition>
        <argsstring>() const</argsstring>
        <name>DaylightSavingName</name>
        <qualifiedname>BTimeZone::DaylightSavingName</qualifiedname>
        <briefdescription>
<para>Returns the localized daylight savings name of the time zone, for example &quot;Pacific Daylight Time&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="33" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1afa38541edc05b13c25618f1bca75c6b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
        <definition>const BString &amp; BTimeZone::ID</definition>
        <argsstring>() const</argsstring>
        <name>ID</name>
        <qualifiedname>BTimeZone::ID</qualifiedname>
        <briefdescription>
<para>Returns the ID of the time zone as a <ref refid="classBString" kindref="compound">BString</ref>, for example, &quot;America/Los_Angeles&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para>When displaying the name of a time zone to the user, use the display name, not the time zone ID.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="31" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1a330d847ad26653124a75e77557e91add" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BTimeZone::InitCheck</definition>
        <argsstring>() const</argsstring>
        <name>InitCheck</name>
        <qualifiedname>BTimeZone::InitCheck</qualifiedname>
        <briefdescription>
<para>Returns whether or not the constructor initialized the time zone. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if <ref refid="classBTimeZone" kindref="compound">BTimeZone</ref> object was initialized successfully, <computeroutput>false</computeroutput> if there was an error initializing the <ref refid="classBTimeZone" kindref="compound">BTimeZone</ref>, for instance if the constructor or <ref refid="classBTimeZone_1a455608d35df365b966ee5904e77a1626" kindref="member">SetTo()</ref> was called with an invalid timezone ID.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="39" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1a988bd9a819880a15462246e2e7435c24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
        <definition>const BString &amp; BTimeZone::Name</definition>
        <argsstring>() const</argsstring>
        <name>Name</name>
        <qualifiedname>BTimeZone::Name</qualifiedname>
        <briefdescription>
<para>Returns the localized name of the time zone, for example &quot;Pacific Standard Time&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this method to display the time zone&apos;s name to the user.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="32" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1ab9665fed389083b2146ea0ac01b5dc72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BTimeZone::OffsetFromGMT</definition>
        <argsstring>() const</argsstring>
        <name>OffsetFromGMT</name>
        <qualifiedname>BTimeZone::OffsetFromGMT</qualifiedname>
        <briefdescription>
<para>Returns the offset, in milliseconds, between the standard time of a time zone and GMT. </para>
        </briefdescription>
        <detaileddescription>
<para>Positive raw offsets are east of Greenwich, negative offsets are west of Greenwich.</para>
<para><simplesect kind="return"><para>The offset as a number of milliseconds from GMT, positive or negative.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="36" column="4"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1aacbd8827aaac526be302eef3052c9b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBTimeZone" kindref="compound">BTimeZone</ref> &amp;</type>
        <definition>BTimeZone &amp; BTimeZone::operator=</definition>
        <argsstring>(const BTimeZone &amp;source)</argsstring>
        <name>operator=</name>
        <qualifiedname>BTimeZone::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBTimeZone" kindref="compound">BTimeZone</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBTimeZone" kindref="compound">BTimeZone</ref> object to copy from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="29" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1ace6915f977a2c4d5a163ec716d4207d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BTimeZone::SetLanguage</definition>
        <argsstring>(const BLanguage *language)</argsstring>
        <name>SetLanguage</name>
        <qualifiedname>BTimeZone::SetLanguage</qualifiedname>
        <param>
          <type>const BLanguage *</type>
          <declname>language</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="44" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1a455608d35df365b966ee5904e77a1626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BTimeZone::SetTo</definition>
        <argsstring>(const char *zoneID, const BLanguage *language=NULL)</argsstring>
        <name>SetTo</name>
        <qualifiedname>BTimeZone::SetTo</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>zoneID</declname>
          <defname>zoneCode</defname>
        </param>
        <param>
          <type>const BLanguage *</type>
          <declname>language</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Set the <ref refid="classBTimeZone" kindref="compound">BTimeZone</ref> object to use a different time zone. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>zoneCode</parametername>
</parameternamelist>
<parameterdescription>
<para>The time zone ID to use, for example &quot;America/Los_Angeles&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>language</emphasis> to use when displaying the time zone.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if time zone was set successfully, <computeroutput>false</computeroutput> if there was an error setting the time zone, for instance if this method was called using an invalid <emphasis>zoneCode</emphasis>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="41" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1a29c05bd4b8566a57287a51e14ceb0896" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
        <definition>const BString &amp; BTimeZone::ShortDaylightSavingName</definition>
        <argsstring>() const</argsstring>
        <name>ShortDaylightSavingName</name>
        <qualifiedname>BTimeZone::ShortDaylightSavingName</qualifiedname>
        <briefdescription>
<para>Returns the localized daylight savings name of the time zone, for example &quot;PDT&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="35" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1ab3bc66c89dc42927deaedea4f7902744" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
        <definition>const BString &amp; BTimeZone::ShortName</definition>
        <argsstring>() const</argsstring>
        <name>ShortName</name>
        <qualifiedname>BTimeZone::ShortName</qualifiedname>
        <briefdescription>
<para>Returns the short name of the timezone, in the user&apos;s locale, for example &quot;PST&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="34" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeZone_1a8b17bce378b46687db53bf7b48298316" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTimeZone::SupportsDaylightSaving</definition>
        <argsstring>() const</argsstring>
        <name>SupportsDaylightSaving</name>
        <qualifiedname>BTimeZone::SupportsDaylightSaving</qualifiedname>
        <briefdescription>
<para>Returns whether or not if the time zone support daylight saving time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the time zone supports daylight savings time, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="37" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines the time zone API which specifies a time zone, allows you to display it to the user, and converts between GMT and local time. </para>
    </briefdescription>
    <detaileddescription>
<para>When displaying the name of a time zone to the user, use the display name, not the time zone ID. The display name can be retrieved by the <ref refid="classBTimeZone_1a988bd9a819880a15462246e2e7435c24" kindref="member">BTimeZone::Name()</ref>, <ref refid="classBTimeZone_1a4211ad141695d1cec33bae275b86ef87" kindref="member">BTimeZone::DaylightSavingName()</ref>, <ref refid="classBTimeZone_1ab3bc66c89dc42927deaedea4f7902744" kindref="member">BTimeZone::ShortName()</ref>, and <ref refid="classBTimeZone_1a29c05bd4b8566a57287a51e14ceb0896" kindref="member">BTimeZone::ShortDaylightSavingName()</ref> methods.</para>
<para><itemizedlist>
<listitem><para>The standard name looks like &quot;Pacific Standard Time&quot;.</para>
</listitem><listitem><para>The daylight savings time name looks like &quot;Pacific Daylight Time&quot;.</para>
</listitem><listitem><para>The short name looks like either &quot;PST&quot; or &quot;PDT&quot; depending on whether the standard or daylight savings time name is requested.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="classBTimeZone_1afa38541edc05b13c25618f1bca75c6b0" kindref="member">BTimeZone::ID()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTimeZone_1a988bd9a819880a15462246e2e7435c24" kindref="member">BTimeZone::Name()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTimeZone_1a4211ad141695d1cec33bae275b86ef87" kindref="member">BTimeZone::DaylightSavingName()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTimeZone_1ab3bc66c89dc42927deaedea4f7902744" kindref="member">BTimeZone::ShortName()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTimeZone_1a29c05bd4b8566a57287a51e14ceb0896" kindref="member">BTimeZone::ShortDaylightSavingName()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/locale/TimeZone.h" line="22" column="1" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeZone.h" bodystart="22" bodyend="64"/>
    <listofallmembers>
      <member refid="classBTimeZone_1a204a3fd38703d6bbc5cd938559206d33" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>BTimeZone</name></member>
      <member refid="classBTimeZone_1aa5e7be09a61fd87932b574e07654d37a" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>BTimeZone</name></member>
      <member refid="classBTimeZone_1a4211ad141695d1cec33bae275b86ef87" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>DaylightSavingName</name></member>
      <member refid="classBTimeZone_1add238575dc7340b5413a0c3b53b3fe63" prot="private" virt="non-virtual"><scope>BTimeZone</scope><name>fDaylightSavingName</name></member>
      <member refid="classBTimeZone_1aa919116d47ea606dfd9af907b73af2eb" prot="private" virt="non-virtual"><scope>BTimeZone</scope><name>fICULocale</name></member>
      <member refid="classBTimeZone_1a3ab216d1713cbb670287a5aec9f77992" prot="private" virt="non-virtual"><scope>BTimeZone</scope><name>fICUTimeZone</name></member>
      <member refid="classBTimeZone_1ab0aa943b00711909c6791e6fa643846c" prot="private" virt="non-virtual"><scope>BTimeZone</scope><name>fInitializedFields</name></member>
      <member refid="classBTimeZone_1a893693909ef146b2da8dda12ba19f254" prot="private" virt="non-virtual"><scope>BTimeZone</scope><name>fInitStatus</name></member>
      <member refid="classBTimeZone_1ad06eb59aebd9ae444624b0c60fc2fd41" prot="private" virt="non-virtual"><scope>BTimeZone</scope><name>fName</name></member>
      <member refid="classBTimeZone_1a82300f80eaf508007068061c17495747" prot="private" virt="non-virtual"><scope>BTimeZone</scope><name>fOffsetFromGMT</name></member>
      <member refid="classBTimeZone_1ad10eae289947a337cb6096f7bbe0aea9" prot="private" virt="non-virtual"><scope>BTimeZone</scope><name>fShortDaylightSavingName</name></member>
      <member refid="classBTimeZone_1afa61d68d4d6573726acc1441719aea7f" prot="private" virt="non-virtual"><scope>BTimeZone</scope><name>fShortName</name></member>
      <member refid="classBTimeZone_1a236e76cb7b37fb311101e4c3a23c3f23" prot="private" virt="non-virtual"><scope>BTimeZone</scope><name>fSupportsDaylightSaving</name></member>
      <member refid="classBTimeZone_1aba5a34b960aa73011b999839e6ed835a" prot="private" virt="non-virtual"><scope>BTimeZone</scope><name>fZoneID</name></member>
      <member refid="classBTimeZone_1afa38541edc05b13c25618f1bca75c6b0" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>ID</name></member>
      <member refid="classBTimeZone_1a330d847ad26653124a75e77557e91add" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>InitCheck</name></member>
      <member refid="classBTimeZone_1a868aadbafcbb7c04ba3e9097af0440bb" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>kNameOfGmtZone</name></member>
      <member refid="classBTimeZone_1a988bd9a819880a15462246e2e7435c24" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>Name</name></member>
      <member refid="classBTimeZone_1ab9665fed389083b2146ea0ac01b5dc72" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>OffsetFromGMT</name></member>
      <member refid="classBTimeZone_1aacbd8827aaac526be302eef3052c9b47" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>operator=</name></member>
      <member refid="classBTimeZone_1ace6915f977a2c4d5a163ec716d4207d3" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>SetLanguage</name></member>
      <member refid="classBTimeZone_1a455608d35df365b966ee5904e77a1626" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>SetTo</name></member>
      <member refid="classBTimeZone_1a29c05bd4b8566a57287a51e14ceb0896" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>ShortDaylightSavingName</name></member>
      <member refid="classBTimeZone_1ab3bc66c89dc42927deaedea4f7902744" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>ShortName</name></member>
      <member refid="classBTimeZone_1a8b17bce378b46687db53bf7b48298316" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>SupportsDaylightSaving</name></member>
      <member refid="classBTimeZone_1a0baef4dbb0161d6634cd65c830d8a4b4" prot="public" virt="non-virtual"><scope>BTimeZone</scope><name>~BTimeZone</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
