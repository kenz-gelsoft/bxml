<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBPrivate_1_1BControlLook" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>BPrivate::BControlLook</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classBPrivate_1_1BControlLook_1a3360d117886dc7d8d13b1a94eda9ba15" prot="public" static="no" strong="no">
        <type></type>
        <name>@13</name>
        <qualifiedname>BPrivate::BControlLook::@13</qualifiedname>
        <enumvalue id="classBPrivate_1_1BControlLook_1a3360d117886dc7d8d13b1a94eda9ba15a3e2bfa4df111c7fbb1f73ba80a93698a" prot="public">
          <name>B_LEFT_BORDER</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a3360d117886dc7d8d13b1a94eda9ba15aa6f0d5f4eee8643180e1d9dd72ddc9b0" prot="public">
          <name>B_RIGHT_BORDER</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a3360d117886dc7d8d13b1a94eda9ba15afbb86b049c8af800649ee47c33bc51b5" prot="public">
          <name>B_TOP_BORDER</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a3360d117886dc7d8d13b1a94eda9ba15aedec86510f9408c9501e4003d3697279" prot="public">
          <name>B_BOTTOM_BORDER</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a3360d117886dc7d8d13b1a94eda9ba15ac287000a80ad1970aebcb1faa4dcf15c" prot="public">
          <name>B_ALL_BORDERS</name>
          <initializer>= B_LEFT_BORDER | B_RIGHT_BORDER
								| B_TOP_BORDER | B_BOTTOM_BORDER</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="56" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/ControlLook.h" bodystart="56" bodyend="64"/>
      </memberdef>
      <memberdef kind="enum" id="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbeb" prot="public" static="no" strong="no">
        <type></type>
        <name>@14</name>
        <qualifiedname>BPrivate::BControlLook::@14</qualifiedname>
        <enumvalue id="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbebab02926ef7a28fc96fae885759d3f4925" prot="public">
          <name>B_LEFT_ARROW</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbebab11f95c71ce0f8fe848aa9b46a48f264" prot="public">
          <name>B_RIGHT_ARROW</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbeba903426d3ef6457868c7a628810192c2d" prot="public">
          <name>B_UP_ARROW</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbeba81bdc3789419ba84965830ac13cb10c4" prot="public">
          <name>B_DOWN_ARROW</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbeba159cae63ddec55ce450b15da06238f5c" prot="public">
          <name>B_LEFT_UP_ARROW</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbeba5583358cc48f3e4888de41874802b4e8" prot="public">
          <name>B_RIGHT_UP_ARROW</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbebae2336bbed2649fe0939ed4b6abcb2248" prot="public">
          <name>B_RIGHT_DOWN_ARROW</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbeba3561dfff7f61e5487bf022202e9b901b" prot="public">
          <name>B_LEFT_DOWN_ARROW</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="66" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/ControlLook.h" bodystart="66" bodyend="75"/>
      </memberdef>
      <memberdef kind="enum" id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18df" prot="public" static="no" strong="no">
        <type></type>
        <name>@15</name>
        <qualifiedname>BPrivate::BControlLook::@15</qualifiedname>
        <enumvalue id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa321ec20450ab6ff12d6eda431456a59e" prot="public">
          <name>B_FOCUSED</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa1b6b59ae0cb0bfd06e76a56337501c08" prot="public">
          <name>B_CLICKED</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfad01d195cb2e356c012f0d3f8f89ae354" prot="public">
          <name>B_ACTIVATED</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa7591ad482f0b488d6aa4b7b7da575856" prot="public">
          <name>B_HOVER</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa04f7aa9cf99f2d6662186c68b769a34c" prot="public">
          <name>B_DISABLED</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa8505c884cc2dde6c0904723a4e26639f" prot="public">
          <name>B_DEFAULT_BUTTON</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfad1df6b5ff96c141c25d877f087363f5a" prot="public">
          <name>B_IGNORE_OUTLINE</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa969614c9124d7a7bbe6332ca443d73f5" prot="public">
          <name>B_PARTIALLY_ACTIVATED</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa1a3f0b40d30105c94e0fa08b76af123d" prot="public">
          <name>B_FLAT</name>
          <initializer>= 1 &lt;&lt; 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa8d3372e7e46965084d2400d07abcfc43" prot="public">
          <name>B_INVALID</name>
          <initializer>= 1 &lt;&lt; 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa1e1896edd4bc8be23f2212e8c4c179cb" prot="public">
          <name>B_IS_CONTROL</name>
          <initializer>= 1 &lt;&lt; 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa949b0354322396ff22fee1857af68ffb" prot="public">
          <name>B_BLEND_FRAME</name>
          <initializer>= 1 &lt;&lt; 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="77" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/ControlLook.h" bodystart="77" bodyend="91"/>
      </memberdef>
      <memberdef kind="enum" id="classBPrivate_1_1BControlLook_1a855aa20702ef19a345131ec4019aa15b" prot="public" static="no" strong="no">
        <type></type>
        <name>@16</name>
        <qualifiedname>BPrivate::BControlLook::@16</qualifiedname>
        <enumvalue id="classBPrivate_1_1BControlLook_1a855aa20702ef19a345131ec4019aa15ba19c87ed0d109c2e65e73d5230c069503" prot="public">
          <name>B_KNOB_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a855aa20702ef19a345131ec4019aa15ba921841ce489411837d343d2e8b279b1d" prot="public">
          <name>B_KNOB_DOTS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a855aa20702ef19a345131ec4019aa15baca4d818e7dfb3a4719acae567f9d0703" prot="public">
          <name>B_KNOB_LINES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="93" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/ControlLook.h" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="enum" id="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42" prot="public" static="no" strong="no">
        <type></type>
        <name>background_type</name>
        <qualifiedname>BPrivate::BControlLook::background_type</qualifiedname>
        <enumvalue id="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42ae609e40c2e030f067797ac82b3214cb9" prot="public">
          <name>B_BUTTON_BACKGROUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42a31549615c886ec23de380573a24dc941" prot="public">
          <name>B_BUTTON_WITH_POP_UP_BACKGROUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42a238928f73678a364913bc9c2eb735760" prot="public">
          <name>B_MENU_BACKGROUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42a59f0bd677b3e05cedbd6e033b010cf4f" prot="public">
          <name>B_MENU_BAR_BACKGROUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42a25d49ab354eb35521ee99635af409850" prot="public">
          <name>B_MENU_FIELD_BACKGROUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42a04e63be26ce185ee4dea89e2b58a2887" prot="public">
          <name>B_MENU_ITEM_BACKGROUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42afce489e815ac9a8a31554cddfbdbafc2" prot="public">
          <name>B_HORIZONTAL_SCROLL_BAR_BACKGROUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42a58f774226ebd704f6351d255edc6e1b7" prot="public">
          <name>B_VERTICAL_SCROLL_BAR_BACKGROUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="45" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/ControlLook.h" bodystart="45" bodyend="54"/>
      </memberdef>
      <memberdef kind="enum" id="classBPrivate_1_1BControlLook_1a005c5a50447fd3793a0be7c9a2e93928" prot="public" static="no" strong="no">
        <type></type>
        <name>frame_type</name>
        <qualifiedname>BPrivate::BControlLook::frame_type</qualifiedname>
        <enumvalue id="classBPrivate_1_1BControlLook_1a005c5a50447fd3793a0be7c9a2e93928a531f9eb9e463cfce4c0650bc42b57020" prot="public">
          <name>B_BUTTON_FRAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a005c5a50447fd3793a0be7c9a2e93928ac43c7e72274561f1378ed14afbbdf768" prot="public">
          <name>B_GROUP_FRAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a005c5a50447fd3793a0be7c9a2e93928abf6a9031d13c3c4f802e5b75a5ca81c4" prot="public">
          <name>B_MENU_FIELD_FRAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a005c5a50447fd3793a0be7c9a2e93928ac73b72473c8672639a308b355c4e019c" prot="public">
          <name>B_SCROLL_VIEW_FRAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBPrivate_1_1BControlLook_1a005c5a50447fd3793a0be7c9a2e93928a49f414d07932c4200932357e7ac7646c" prot="public">
          <name>B_TEXT_CONTROL_FRAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="37" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/ControlLook.h" bodystart="37" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classBPrivate_1_1BControlLook_1aef4e213145795ddb1160044d1d204271" prot="protected" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BPrivate::BControlLook::_reserved[20]</definition>
        <argsstring>[20]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BPrivate::BControlLook::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="445" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/ControlLook.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBPrivate_1_1BControlLook_1a814e0357d9f3e9c279b58f1a9e2ec506" prot="protected" static="no" mutable="no">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref></type>
        <definition>BMessage BPrivate::BControlLook::fBackgroundInfo</definition>
        <argsstring></argsstring>
        <name>fBackgroundInfo</name>
        <qualifiedname>BPrivate::BControlLook::fBackgroundInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="443" column="9" bodyfile="/boot/home/src/haiku/headers/os/interface/ControlLook.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBPrivate_1_1BControlLook_1a4aa64355da2431d45a00adc3d1dc8013" prot="protected" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BPrivate::BControlLook::fCachedWorkspace</definition>
        <argsstring></argsstring>
        <name>fCachedWorkspace</name>
        <qualifiedname>BPrivate::BControlLook::fCachedWorkspace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="442" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/ControlLook.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a6180a75cca249dc2612b17583ccf9fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BPrivate::BControlLook::BControlLook</definition>
        <argsstring>()</argsstring>
        <name>BControlLook</name>
        <qualifiedname>BPrivate::BControlLook::BControlLook</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1ad7edaba7e9d63cb6bd5cc0fa06f26e8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BPrivate::BControlLook::~BControlLook</definition>
        <argsstring>()</argsstring>
        <name>~BControlLook</name>
        <qualifiedname>BPrivate::BControlLook::~BControlLook</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="31" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a7c1eab35932d3b35fddaf55d436f965d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>float</type>
        <definition>virtual float BPrivate::BControlLook::DefaultItemSpacing</definition>
        <argsstring>() const =0</argsstring>
        <name>DefaultItemSpacing</name>
        <qualifiedname>BPrivate::BControlLook::DefaultItemSpacing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="102" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a7074b565ea7e73248f28dd4c172fe4b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classBAlignment" kindref="compound">BAlignment</ref></type>
        <definition>virtual BAlignment BPrivate::BControlLook::DefaultLabelAlignment</definition>
        <argsstring>() const =0</argsstring>
        <name>DefaultLabelAlignment</name>
        <qualifiedname>BPrivate::BControlLook::DefaultLabelAlignment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="99" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a1eeaeaa08e10d5702c0bffc4bb1da415" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>float</type>
        <definition>virtual float BPrivate::BControlLook::DefaultLabelSpacing</definition>
        <argsstring>() const =0</argsstring>
        <name>DefaultLabelSpacing</name>
        <qualifiedname>BPrivate::BControlLook::DefaultLabelSpacing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="100" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a8e0d1534ffe5347ab9fb4cd2a4c96854" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawActiveTab</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS, uint32 side=B_TOP_BORDER, int32 index=0, int32 selected=-1, int32 first=0, int32 last=0)=0</argsstring>
        <name>DrawActiveTab</name>
        <qualifiedname>BPrivate::BControlLook::DrawActiveTab</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>side</declname>
          <defval>B_TOP_BORDER</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>selected</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>first</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>last</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="294" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a704a1f81835488dda88d495e29308735" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawArrowShape</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 direction, uint32 flags=0, float tint=B_DARKEN_MAX_TINT)=0</argsstring>
        <name>DrawArrowShape</name>
        <qualifiedname>BPrivate::BControlLook::DrawArrowShape</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>tint</declname>
          <defval>B_DARKEN_MAX_TINT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="253" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a6b224aa6036f7842ed67a3092189bb5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawBorder</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, border_style borderStyle, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawBorder</name>
        <qualifiedname>BPrivate::BControlLook::DrawBorder</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1a9624f7e0b98ddd4f28be86eb84d3a0d6" kindref="member">border_style</ref></type>
          <declname>borderStyle</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="318" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1ace93d23611c2e2a1fc6f57793af3f5f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawButtonBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS, orientation orientation=B_HORIZONTAL)=0</argsstring>
        <name>DrawButtonBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawButtonBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
          <defval><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4ae796c97ca7ee2f24f65fc51ab650726d" kindref="member">B_HORIZONTAL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="133" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a5adc0ce70fceb70f43d04de67cfe08f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawButtonBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, float leftTopRadius, float rightTopRadius, float leftBottomRadius, float rightBottomRadius, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS, orientation orientation=B_HORIZONTAL)=0</argsstring>
        <name>DrawButtonBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawButtonBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>float</type>
          <declname>leftTopRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rightTopRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>leftBottomRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rightBottomRadius</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
          <defval><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4ae796c97ca7ee2f24f65fc51ab650726d" kindref="member">B_HORIZONTAL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="146" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a625a6dc803e55cb025849a216a2e5657" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawButtonBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, float radius, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS, orientation orientation=B_HORIZONTAL)=0</argsstring>
        <name>DrawButtonBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawButtonBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
          <defval><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4ae796c97ca7ee2f24f65fc51ab650726d" kindref="member">B_HORIZONTAL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="139" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1af8ed5c2a06e32e1dbbda7dcd2e0e7a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawButtonFrame</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, const rgb_color &amp;background, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawButtonFrame</name>
        <qualifiedname>BPrivate::BControlLook::DrawButtonFrame</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="109" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a707de922c80a9825fb3278419cde2f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawButtonFrame</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, float leftTopRadius, float rightTopRadius, float leftBottomRadius, float rightBottomRadius, const rgb_color &amp;base, const rgb_color &amp;background, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawButtonFrame</name>
        <qualifiedname>BPrivate::BControlLook::DrawButtonFrame</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>float</type>
          <declname>leftTopRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rightTopRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>leftBottomRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rightBottomRadius</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="122" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a7835ab7aba1ea1bb7dff96eadf99ddfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawButtonFrame</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, float radius, const rgb_color &amp;base, const rgb_color &amp;background, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawButtonFrame</name>
        <qualifiedname>BPrivate::BControlLook::DrawButtonFrame</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="115" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a5d3fdf981344138254b1d134a8cc622d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawButtonWithPopUpBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS, orientation orientation=B_HORIZONTAL)=0</argsstring>
        <name>DrawButtonWithPopUpBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawButtonWithPopUpBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
          <defval><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4ae796c97ca7ee2f24f65fc51ab650726d" kindref="member">B_HORIZONTAL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="382" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a8e0f152e2440e7a04eec62813283a958" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawButtonWithPopUpBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, float leftTopRadius, float rightTopRadius, float leftBottomRadius, float rightBottomRadius, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS, orientation orientation=B_HORIZONTAL)=0</argsstring>
        <name>DrawButtonWithPopUpBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawButtonWithPopUpBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>float</type>
          <declname>leftTopRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rightTopRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>leftBottomRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rightBottomRadius</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
          <defval><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4ae796c97ca7ee2f24f65fc51ab650726d" kindref="member">B_HORIZONTAL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="395" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a12763dc63fdad098524642ce69a483d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawButtonWithPopUpBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, float radius, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS, orientation orientation=B_HORIZONTAL)=0</argsstring>
        <name>DrawButtonWithPopUpBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawButtonWithPopUpBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
          <defval><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4ae796c97ca7ee2f24f65fc51ab650726d" kindref="member">B_HORIZONTAL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="388" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a5d2203338a7da89da0fab1f8bbd00539" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawCheckBox</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0)=0</argsstring>
        <name>DrawCheckBox</name>
        <qualifiedname>BPrivate::BControlLook::DrawCheckBox</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="224" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a6e574207df982d499826bda12c0efa3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawGroupFrame</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawGroupFrame</name>
        <qualifiedname>BPrivate::BControlLook::DrawGroupFrame</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="329" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1aa01f3ca9dc02d2b6439e0c74f15f7bbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawInactiveTab</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS, uint32 side=B_TOP_BORDER, int32 index=0, int32 selected=-1, int32 first=0, int32 last=0)=0</argsstring>
        <name>DrawInactiveTab</name>
        <qualifiedname>BPrivate::BControlLook::DrawInactiveTab</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>side</declname>
          <defval>B_TOP_BORDER</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>selected</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>first</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>last</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="301" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1af452af31cd7ffd21c9b9f27ac6645da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawLabel</definition>
        <argsstring>(BView *view, const char *label, BRect rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags, const BAlignment &amp;alignment, const rgb_color *textColor=NULL)=0</argsstring>
        <name>DrawLabel</name>
        <qualifiedname>BPrivate::BControlLook::DrawLabel</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classBAlignment" kindref="compound">BAlignment</ref> &amp;</type>
          <declname>alignment</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>textColor</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="345" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a003494b9afc87685ca9f8958dfbac49a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawLabel</definition>
        <argsstring>(BView *view, const char *label, BRect rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags, const rgb_color *textColor=NULL)=0</argsstring>
        <name>DrawLabel</name>
        <qualifiedname>BPrivate::BControlLook::DrawLabel</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>textColor</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="341" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a283ae50f7097da612f9fb5c219d209dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawLabel</definition>
        <argsstring>(BView *view, const char *label, const BBitmap *icon, BRect rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags, const BAlignment &amp;alignment, const rgb_color *textColor=NULL)=0</argsstring>
        <name>DrawLabel</name>
        <qualifiedname>BPrivate::BControlLook::DrawLabel</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const <ref refid="classBBitmap" kindref="compound">BBitmap</ref> *</type>
          <declname>icon</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classBAlignment" kindref="compound">BAlignment</ref> &amp;</type>
          <declname>alignment</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>textColor</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="363" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a8ec85394db82715b557b6049dda951f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BPrivate::BControlLook::DrawLabel</definition>
        <argsstring>(BView *view, const char *label, const BBitmap *icon, BRect rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags, const rgb_color *textColor=NULL)</argsstring>
        <name>DrawLabel</name>
        <qualifiedname>BPrivate::BControlLook::DrawLabel</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const <ref refid="classBBitmap" kindref="compound">BBitmap</ref> *</type>
          <declname>icon</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>textColor</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="358" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a83a99b321831ea561a6901a955befd90" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawLabel</definition>
        <argsstring>(BView *view, const char *label, const rgb_color &amp;base, uint32 flags, const BPoint &amp;where, const rgb_color *textColor=NULL)=0</argsstring>
        <name>DrawLabel</name>
        <qualifiedname>BPrivate::BControlLook::DrawLabel</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classBPoint" kindref="compound">BPoint</ref> &amp;</type>
          <declname>where</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>textColor</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="353" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1aa896132806b25d24011e1372dcc4c56d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawMenuBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawMenuBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawMenuBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="208" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a3a9372953edaea7b110ba785c314e206" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawMenuBarBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawMenuBarBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawMenuBarBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="157" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1af1d1f400829cb3287988894a79f871d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawMenuFieldBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, bool popupIndicator, uint32 flags=0)=0</argsstring>
        <name>DrawMenuFieldBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawMenuFieldBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>popupIndicator</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="187" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a3aae1e434f4b1e38effacf6dbc8a5b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawMenuFieldBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawMenuFieldBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawMenuFieldBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="203" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a5274b395fdea9e420232d8a68f270fce" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawMenuFieldBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, float leftTopRadius, float rightTopRadius, float leftBottomRadius, float rightBottomRadius, const rgb_color &amp;base, bool popupIndicator, uint32 flags=0)=0</argsstring>
        <name>DrawMenuFieldBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawMenuFieldBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>float</type>
          <declname>leftTopRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rightTopRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>leftBottomRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rightBottomRadius</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>popupIndicator</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="195" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a4d7b0961c008230e5322f777e78c254b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawMenuFieldBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, float radius, const rgb_color &amp;base, bool popupIndicator, uint32 flags=0)=0</argsstring>
        <name>DrawMenuFieldBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawMenuFieldBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>popupIndicator</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="191" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a740663f3a82e78dffe76d9abd4b368d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawMenuFieldFrame</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, const rgb_color &amp;background, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawMenuFieldFrame</name>
        <qualifiedname>BPrivate::BControlLook::DrawMenuFieldFrame</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="163" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a8423b72c950f0585f47da1dfbff8cf7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawMenuFieldFrame</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, float leftTopRadius, float rightTopRadius, float leftBottomRadius, float rightBottomRadius, const rgb_color &amp;base, const rgb_color &amp;background, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawMenuFieldFrame</name>
        <qualifiedname>BPrivate::BControlLook::DrawMenuFieldFrame</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>float</type>
          <declname>leftTopRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rightTopRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>leftBottomRadius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rightBottomRadius</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="176" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a35083571bc357c6e919fd46308abc03c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawMenuFieldFrame</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, float radius, const rgb_color &amp;base, const rgb_color &amp;background, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawMenuFieldFrame</name>
        <qualifiedname>BPrivate::BControlLook::DrawMenuFieldFrame</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>background</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="169" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a73dd7354259de115954d2b4da08b5220" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawMenuItemBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawMenuItemBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawMenuItemBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="213" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a1f0770924baada7ab7ae0e1d1b9bc2f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawRadioButton</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0)=0</argsstring>
        <name>DrawRadioButton</name>
        <qualifiedname>BPrivate::BControlLook::DrawRadioButton</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="229" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1ac1eb23c2ae14ab8c8055db80a5dc5ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawRaisedBorder</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawRaisedBorder</name>
        <qualifiedname>BPrivate::BControlLook::DrawRaisedBorder</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="324" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1abb9d795910cc0380f640aae876807d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawScrollBarBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags, orientation orientation)=0</argsstring>
        <name>DrawScrollBarBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawScrollBarBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="239" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a3387eda4c2594fc898915bd9af48a587" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawScrollBarBackground</definition>
        <argsstring>(BView *view, BRect &amp;rect1, BRect &amp;rect2, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags, orientation orientation)=0</argsstring>
        <name>DrawScrollBarBackground</name>
        <qualifiedname>BPrivate::BControlLook::DrawScrollBarBackground</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect1</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect2</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="234" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a04be131f2fd97d9d79790acaf2abf5a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawScrollBarBorder</definition>
        <argsstring>(BView *view, BRect rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags, orientation orientation)=0</argsstring>
        <name>DrawScrollBarBorder</name>
        <qualifiedname>BPrivate::BControlLook::DrawScrollBarBorder</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="426" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a2cab31c39b2419c40d5a2ce23a68387a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawScrollBarButton</definition>
        <argsstring>(BView *view, BRect rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags, int32 direction, orientation orientation, bool down=false)=0</argsstring>
        <name>DrawScrollBarButton</name>
        <qualifiedname>BPrivate::BControlLook::DrawScrollBarButton</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>down</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="416" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a7b7d3818d19b93faf74ff1b3a0b36156" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawScrollBarThumb</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags, orientation orientation, uint32 knobStyle=B_KNOB_NONE)=0</argsstring>
        <name>DrawScrollBarThumb</name>
        <qualifiedname>BPrivate::BControlLook::DrawScrollBarThumb</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>knobStyle</declname>
          <defval>B_KNOB_NONE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="421" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a6e33e336b51bf2c86e171a21448f04e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawScrollViewFrame</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, BRect verticalScrollBarFrame, BRect horizontalScrollBarFrame, const rgb_color &amp;base, border_style borderStyle, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawScrollViewFrame</name>
        <qualifiedname>BPrivate::BControlLook::DrawScrollViewFrame</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>verticalScrollBarFrame</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>horizontalScrollBarFrame</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1a9624f7e0b98ddd4f28be86eb84d3a0d6" kindref="member">border_style</ref></type>
          <declname>borderStyle</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="244" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1ae5e5f12ddfd7ace8c32dfd2010a9c658" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawSliderBar</definition>
        <argsstring>(BView *view, BRect rect, const BRect &amp;updateRect, const rgb_color &amp;base, rgb_color fillColor, uint32 flags, orientation orientation)=0</argsstring>
        <name>DrawSliderBar</name>
        <qualifiedname>BPrivate::BControlLook::DrawSliderBar</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structrgb__color" kindref="compound">rgb_color</ref></type>
          <declname>fillColor</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="268" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a3a8aa9cc75e176314ebc9df17731183b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawSliderBar</definition>
        <argsstring>(BView *view, BRect rect, const BRect &amp;updateRect, const rgb_color &amp;base, rgb_color leftFillColor, rgb_color rightFillColor, float sliderScale, uint32 flags, orientation orientation)=0</argsstring>
        <name>DrawSliderBar</name>
        <qualifiedname>BPrivate::BControlLook::DrawSliderBar</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structrgb__color" kindref="compound">rgb_color</ref></type>
          <declname>leftFillColor</declname>
        </param>
        <param>
          <type><ref refid="structrgb__color" kindref="compound">rgb_color</ref></type>
          <declname>rightFillColor</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sliderScale</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="261" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a8d92cff4268e0218c32d1a57c25518ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawSliderHashMarks</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, int32 count, hash_mark_location location, uint32 flags, orientation orientation)=0</argsstring>
        <name>DrawSliderHashMarks</name>
        <qualifiedname>BPrivate::BControlLook::DrawSliderHashMarks</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type>hash_mark_location</type>
          <declname>location</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="288" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1ad252efc4da7b8420be6603fb8e76f945" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawSliderThumb</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags, orientation orientation)=0</argsstring>
        <name>DrawSliderThumb</name>
        <qualifiedname>BPrivate::BControlLook::DrawSliderThumb</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="273" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1aa6a8f453d6e1d3a1567c5b36880a9ebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawSliderTriangle</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, const rgb_color &amp;fill, uint32 flags, orientation orientation)=0</argsstring>
        <name>DrawSliderTriangle</name>
        <qualifiedname>BPrivate::BControlLook::DrawSliderTriangle</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>fill</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="282" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1ae3b5cc0715d93d7a3a41b1f8e8bdcabd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawSliderTriangle</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags, orientation orientation)=0</argsstring>
        <name>DrawSliderTriangle</name>
        <qualifiedname>BPrivate::BControlLook::DrawSliderTriangle</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="278" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a2aa2a7b904ff5ce4a20a681499ef8ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawSplitter</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, orientation orientation, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawSplitter</name>
        <qualifiedname>BPrivate::BControlLook::DrawSplitter</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="309" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1ac742e76c789e7a85c376d7dd2dc4f899" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawStatusBar</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, const rgb_color &amp;barColor, float progressPosition)=0</argsstring>
        <name>DrawStatusBar</name>
        <qualifiedname>BPrivate::BControlLook::DrawStatusBar</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>barColor</declname>
        </param>
        <param>
          <type>float</type>
          <declname>progressPosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="218" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1adeb8d60d477fbd7c0f7e78ce97fc235b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawTabFrame</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS, border_style borderStyle=B_FANCY_BORDER, uint32 side=B_TOP_BORDER)=0</argsstring>
        <name>DrawTabFrame</name>
        <qualifiedname>BPrivate::BControlLook::DrawTabFrame</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1a9624f7e0b98ddd4f28be86eb84d3a0d6" kindref="member">border_style</ref></type>
          <declname>borderStyle</declname>
          <defval><ref refid="InterfaceDefs_8h_1a9624f7e0b98ddd4f28be86eb84d3a0d6a2510a30a84cc16459a6a9e1ba6a512cb" kindref="member">B_FANCY_BORDER</ref></defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>side</declname>
          <defval>B_TOP_BORDER</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="409" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a7671ec95fb1c1d5b20cc9fdc5e5ac4f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::DrawTextControlBorder</definition>
        <argsstring>(BView *view, BRect &amp;rect, const BRect &amp;updateRect, const rgb_color &amp;base, uint32 flags=0, uint32 borders=B_ALL_BORDERS)=0</argsstring>
        <name>DrawTextControlBorder</name>
        <qualifiedname>BPrivate::BControlLook::DrawTextControlBorder</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>borders</declname>
          <defval>B_ALL_BORDERS</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="334" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a8b58c038058382d98769e6f719519fa7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>virtual uint32 BPrivate::BControlLook::Flags</definition>
        <argsstring>(BControl *control) const =0</argsstring>
        <name>Flags</name>
        <qualifiedname>BPrivate::BControlLook::Flags</qualifiedname>
        <param>
          <type><ref refid="classBControl" kindref="compound">BControl</ref> *</type>
          <declname>control</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="107" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1ab8887b419d46516949bf9312254c25b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::GetBackgroundInsets</definition>
        <argsstring>(background_type backgroundType, uint32 flags, float &amp;_left, float &amp;_top, float &amp;_right, float &amp;_bottom)=0</argsstring>
        <name>GetBackgroundInsets</name>
        <qualifiedname>BPrivate::BControlLook::GetBackgroundInsets</qualifiedname>
        <param>
          <type>background_type</type>
          <declname>backgroundType</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>_left</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>_top</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>_right</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>_bottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="373" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1adf9865f83d4d6a332ea12aa6356c8bbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::GetFrameInsets</definition>
        <argsstring>(frame_type frameType, uint32 flags, float &amp;_left, float &amp;_top, float &amp;_right, float &amp;_bottom)=0</argsstring>
        <name>GetFrameInsets</name>
        <qualifiedname>BPrivate::BControlLook::GetFrameInsets</qualifiedname>
        <param>
          <type>frame_type</type>
          <declname>frameType</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>_left</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>_top</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>_right</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>_bottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="370" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a898ad223830d747b7099ca0298ea372d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BPrivate::BControlLook::GetInsets</definition>
        <argsstring>(frame_type frameType, background_type backgroundType, uint32 flags, float &amp;_left, float &amp;_top, float &amp;_right, float &amp;_bottom)</argsstring>
        <name>GetInsets</name>
        <qualifiedname>BPrivate::BControlLook::GetInsets</qualifiedname>
        <param>
          <type>frame_type</type>
          <declname>frameType</declname>
        </param>
        <param>
          <type>background_type</type>
          <declname>backgroundType</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>_left</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>_top</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>_right</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>_bottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="377" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1afc2958ef9528162281c4b67eedca8a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>virtual float BPrivate::BControlLook::GetScrollBarWidth</definition>
        <argsstring>(orientation orientation=B_VERTICAL)</argsstring>
        <name>GetScrollBarWidth</name>
        <qualifiedname>BPrivate::BControlLook::GetScrollBarWidth</qualifiedname>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
          <defval><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4a01c35140b008aea2cb9eca52ecf7cd4e" kindref="member">B_VERTICAL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="430" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a10e7a4cf9d67f61d9059318209fdcf3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BPrivate::BControlLook::SetBackgroundInfo</definition>
        <argsstring>(const BMessage &amp;backgroundInfo)</argsstring>
        <name>SetBackgroundInfo</name>
        <qualifiedname>BPrivate::BControlLook::SetBackgroundInfo</qualifiedname>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> &amp;</type>
          <declname>backgroundInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="406" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1add7f3b8233567592b8cc6f2fe3547155" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structrgb__color" kindref="compound">rgb_color</ref></type>
        <definition>virtual rgb_color BPrivate::BControlLook::SliderBarColor</definition>
        <argsstring>(const rgb_color &amp;base)=0</argsstring>
        <name>SliderBarColor</name>
        <qualifiedname>BPrivate::BControlLook::SliderBarColor</qualifiedname>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="259" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a4a04193b32da8b1652b54e7032ffb2d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>static BSize BPrivate::BControlLook::ComposeIconSize</definition>
        <argsstring>(int32 size)</argsstring>
        <name>ComposeIconSize</name>
        <qualifiedname>BPrivate::BControlLook::ComposeIconSize</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="105" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a60c83a63a358caa2b88d27017056f1ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float BPrivate::BControlLook::ComposeSpacing</definition>
        <argsstring>(float spacing)</argsstring>
        <name>ComposeSpacing</name>
        <qualifiedname>BPrivate::BControlLook::ComposeSpacing</qualifiedname>
        <param>
          <type>float</type>
          <declname>spacing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="104" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a33d096f9734b82bc7fb843ff7919ace5" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::_ReservedControlLook10</definition>
        <argsstring>()</argsstring>
        <name>_ReservedControlLook10</name>
        <qualifiedname>BPrivate::BControlLook::_ReservedControlLook10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="439" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1aeff7f2a02eeda7a0a5c93ee5cfb14fc7" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::_ReservedControlLook6</definition>
        <argsstring>()</argsstring>
        <name>_ReservedControlLook6</name>
        <qualifiedname>BPrivate::BControlLook::_ReservedControlLook6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="435" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1afb4eb554d76a2ad6d4f10640b236e013" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::_ReservedControlLook7</definition>
        <argsstring>()</argsstring>
        <name>_ReservedControlLook7</name>
        <qualifiedname>BPrivate::BControlLook::_ReservedControlLook7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="436" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1a3c27f076e4d6b536cdcbea4770f005a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::_ReservedControlLook8</definition>
        <argsstring>()</argsstring>
        <name>_ReservedControlLook8</name>
        <qualifiedname>BPrivate::BControlLook::_ReservedControlLook8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="437" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BControlLook_1abb6e5a96f2323743d00d9fd6096ac194" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BPrivate::BControlLook::_ReservedControlLook9</definition>
        <argsstring>()</argsstring>
        <name>_ReservedControlLook9</name>
        <qualifiedname>BPrivate::BControlLook::_ReservedControlLook9</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="438" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>BMessage</label>
        <link refid="classBMessage"/>
      </node>
      <node id="1">
        <label>BPrivate::BControlLook</label>
        <childnode refid="2" relation="usage">
          <edgelabel>fBackgroundInfo</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/interface/ControlLook.h" line="28" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/ControlLook.h" bodystart="28" bodyend="446"/>
    <listofallmembers>
      <member refid="classBPrivate_1_1BControlLook_1aef4e213145795ddb1160044d1d204271" prot="protected" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>_reserved</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a33d096f9734b82bc7fb843ff7919ace5" prot="private" virt="virtual"><scope>BPrivate::BControlLook</scope><name>_ReservedControlLook10</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aeff7f2a02eeda7a0a5c93ee5cfb14fc7" prot="private" virt="virtual"><scope>BPrivate::BControlLook</scope><name>_ReservedControlLook6</name></member>
      <member refid="classBPrivate_1_1BControlLook_1afb4eb554d76a2ad6d4f10640b236e013" prot="private" virt="virtual"><scope>BPrivate::BControlLook</scope><name>_ReservedControlLook7</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a3c27f076e4d6b536cdcbea4770f005a0" prot="private" virt="virtual"><scope>BPrivate::BControlLook</scope><name>_ReservedControlLook8</name></member>
      <member refid="classBPrivate_1_1BControlLook_1abb6e5a96f2323743d00d9fd6096ac194" prot="private" virt="virtual"><scope>BPrivate::BControlLook</scope><name>_ReservedControlLook9</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfad01d195cb2e356c012f0d3f8f89ae354" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_ACTIVATED</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a3360d117886dc7d8d13b1a94eda9ba15ac287000a80ad1970aebcb1faa4dcf15c" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_ALL_BORDERS</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa949b0354322396ff22fee1857af68ffb" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_BLEND_FRAME</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a3360d117886dc7d8d13b1a94eda9ba15aedec86510f9408c9501e4003d3697279" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_BOTTOM_BORDER</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42ae609e40c2e030f067797ac82b3214cb9" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_BUTTON_BACKGROUND</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a005c5a50447fd3793a0be7c9a2e93928a531f9eb9e463cfce4c0650bc42b57020" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_BUTTON_FRAME</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42a31549615c886ec23de380573a24dc941" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_BUTTON_WITH_POP_UP_BACKGROUND</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa1b6b59ae0cb0bfd06e76a56337501c08" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_CLICKED</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa8505c884cc2dde6c0904723a4e26639f" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_DEFAULT_BUTTON</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa04f7aa9cf99f2d6662186c68b769a34c" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_DISABLED</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbeba81bdc3789419ba84965830ac13cb10c4" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_DOWN_ARROW</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa1a3f0b40d30105c94e0fa08b76af123d" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_FLAT</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa321ec20450ab6ff12d6eda431456a59e" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_FOCUSED</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a005c5a50447fd3793a0be7c9a2e93928ac43c7e72274561f1378ed14afbbdf768" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_GROUP_FRAME</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42afce489e815ac9a8a31554cddfbdbafc2" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_HORIZONTAL_SCROLL_BAR_BACKGROUND</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa7591ad482f0b488d6aa4b7b7da575856" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_HOVER</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfad1df6b5ff96c141c25d877f087363f5a" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_IGNORE_OUTLINE</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa8d3372e7e46965084d2400d07abcfc43" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_INVALID</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa1e1896edd4bc8be23f2212e8c4c179cb" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_IS_CONTROL</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a855aa20702ef19a345131ec4019aa15ba921841ce489411837d343d2e8b279b1d" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_KNOB_DOTS</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a855aa20702ef19a345131ec4019aa15baca4d818e7dfb3a4719acae567f9d0703" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_KNOB_LINES</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a855aa20702ef19a345131ec4019aa15ba19c87ed0d109c2e65e73d5230c069503" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_KNOB_NONE</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbebab02926ef7a28fc96fae885759d3f4925" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_LEFT_ARROW</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a3360d117886dc7d8d13b1a94eda9ba15a3e2bfa4df111c7fbb1f73ba80a93698a" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_LEFT_BORDER</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbeba3561dfff7f61e5487bf022202e9b901b" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_LEFT_DOWN_ARROW</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbeba159cae63ddec55ce450b15da06238f5c" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_LEFT_UP_ARROW</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42a238928f73678a364913bc9c2eb735760" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_MENU_BACKGROUND</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42a59f0bd677b3e05cedbd6e033b010cf4f" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_MENU_BAR_BACKGROUND</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42a25d49ab354eb35521ee99635af409850" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_MENU_FIELD_BACKGROUND</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a005c5a50447fd3793a0be7c9a2e93928abf6a9031d13c3c4f802e5b75a5ca81c4" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_MENU_FIELD_FRAME</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42a04e63be26ce185ee4dea89e2b58a2887" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_MENU_ITEM_BACKGROUND</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aaa4f4c3c718a50b0841ac03071dc18dfa969614c9124d7a7bbe6332ca443d73f5" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_PARTIALLY_ACTIVATED</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbebab11f95c71ce0f8fe848aa9b46a48f264" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_RIGHT_ARROW</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a3360d117886dc7d8d13b1a94eda9ba15aa6f0d5f4eee8643180e1d9dd72ddc9b0" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_RIGHT_BORDER</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbebae2336bbed2649fe0939ed4b6abcb2248" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_RIGHT_DOWN_ARROW</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbeba5583358cc48f3e4888de41874802b4e8" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_RIGHT_UP_ARROW</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a005c5a50447fd3793a0be7c9a2e93928ac73b72473c8672639a308b355c4e019c" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_SCROLL_VIEW_FRAME</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a005c5a50447fd3793a0be7c9a2e93928a49f414d07932c4200932357e7ac7646c" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_TEXT_CONTROL_FRAME</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a3360d117886dc7d8d13b1a94eda9ba15afbb86b049c8af800649ee47c33bc51b5" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_TOP_BORDER</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aeaf283db500259d5a02acf23ef95fbeba903426d3ef6457868c7a628810192c2d" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_UP_ARROW</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42a58f774226ebd704f6351d255edc6e1b7" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>B_VERTICAL_SCROLL_BAR_BACKGROUND</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a86280f556ff590b56635001583288e42" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>background_type</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a6180a75cca249dc2612b17583ccf9fd0" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>BControlLook</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a4a04193b32da8b1652b54e7032ffb2d0" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>ComposeIconSize</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a60c83a63a358caa2b88d27017056f1ad" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>ComposeSpacing</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a7c1eab35932d3b35fddaf55d436f965d" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DefaultItemSpacing</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a7074b565ea7e73248f28dd4c172fe4b3" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DefaultLabelAlignment</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a1eeaeaa08e10d5702c0bffc4bb1da415" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DefaultLabelSpacing</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a8e0d1534ffe5347ab9fb4cd2a4c96854" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawActiveTab</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a704a1f81835488dda88d495e29308735" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawArrowShape</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a6b224aa6036f7842ed67a3092189bb5a" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawBorder</name></member>
      <member refid="classBPrivate_1_1BControlLook_1ace93d23611c2e2a1fc6f57793af3f5f1" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawButtonBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a625a6dc803e55cb025849a216a2e5657" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawButtonBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a5adc0ce70fceb70f43d04de67cfe08f9" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawButtonBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1af8ed5c2a06e32e1dbbda7dcd2e0e7a03" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawButtonFrame</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a7835ab7aba1ea1bb7dff96eadf99ddfe" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawButtonFrame</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a707de922c80a9825fb3278419cde2f3d" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawButtonFrame</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a5d3fdf981344138254b1d134a8cc622d" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawButtonWithPopUpBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a12763dc63fdad098524642ce69a483d2" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawButtonWithPopUpBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a8e0f152e2440e7a04eec62813283a958" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawButtonWithPopUpBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a5d2203338a7da89da0fab1f8bbd00539" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawCheckBox</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a6e574207df982d499826bda12c0efa3b" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawGroupFrame</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aa01f3ca9dc02d2b6439e0c74f15f7bbf" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawInactiveTab</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a003494b9afc87685ca9f8958dfbac49a" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawLabel</name></member>
      <member refid="classBPrivate_1_1BControlLook_1af452af31cd7ffd21c9b9f27ac6645da0" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawLabel</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a83a99b321831ea561a6901a955befd90" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawLabel</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a8ec85394db82715b557b6049dda951f9" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>DrawLabel</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a283ae50f7097da612f9fb5c219d209dc" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawLabel</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aa896132806b25d24011e1372dcc4c56d" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawMenuBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a3a9372953edaea7b110ba785c314e206" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawMenuBarBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1af1d1f400829cb3287988894a79f871d0" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawMenuFieldBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a4d7b0961c008230e5322f777e78c254b" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawMenuFieldBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a5274b395fdea9e420232d8a68f270fce" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawMenuFieldBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a3aae1e434f4b1e38effacf6dbc8a5b4a" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawMenuFieldBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a740663f3a82e78dffe76d9abd4b368d7" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawMenuFieldFrame</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a35083571bc357c6e919fd46308abc03c" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawMenuFieldFrame</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a8423b72c950f0585f47da1dfbff8cf7d" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawMenuFieldFrame</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a73dd7354259de115954d2b4da08b5220" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawMenuItemBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a1f0770924baada7ab7ae0e1d1b9bc2f0" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawRadioButton</name></member>
      <member refid="classBPrivate_1_1BControlLook_1ac1eb23c2ae14ab8c8055db80a5dc5ddf" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawRaisedBorder</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a3387eda4c2594fc898915bd9af48a587" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawScrollBarBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1abb9d795910cc0380f640aae876807d77" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawScrollBarBackground</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a04be131f2fd97d9d79790acaf2abf5a6" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawScrollBarBorder</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a2cab31c39b2419c40d5a2ce23a68387a" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawScrollBarButton</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a7b7d3818d19b93faf74ff1b3a0b36156" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawScrollBarThumb</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a6e33e336b51bf2c86e171a21448f04e8" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawScrollViewFrame</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a3a8aa9cc75e176314ebc9df17731183b" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawSliderBar</name></member>
      <member refid="classBPrivate_1_1BControlLook_1ae5e5f12ddfd7ace8c32dfd2010a9c658" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawSliderBar</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a8d92cff4268e0218c32d1a57c25518ef" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawSliderHashMarks</name></member>
      <member refid="classBPrivate_1_1BControlLook_1ad252efc4da7b8420be6603fb8e76f945" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawSliderThumb</name></member>
      <member refid="classBPrivate_1_1BControlLook_1ae3b5cc0715d93d7a3a41b1f8e8bdcabd" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawSliderTriangle</name></member>
      <member refid="classBPrivate_1_1BControlLook_1aa6a8f453d6e1d3a1567c5b36880a9ebb" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawSliderTriangle</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a2aa2a7b904ff5ce4a20a681499ef8ce3" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawSplitter</name></member>
      <member refid="classBPrivate_1_1BControlLook_1ac742e76c789e7a85c376d7dd2dc4f899" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawStatusBar</name></member>
      <member refid="classBPrivate_1_1BControlLook_1adeb8d60d477fbd7c0f7e78ce97fc235b" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawTabFrame</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a7671ec95fb1c1d5b20cc9fdc5e5ac4f3" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>DrawTextControlBorder</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a814e0357d9f3e9c279b58f1a9e2ec506" prot="protected" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>fBackgroundInfo</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a4aa64355da2431d45a00adc3d1dc8013" prot="protected" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>fCachedWorkspace</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a8b58c038058382d98769e6f719519fa7" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>Flags</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a005c5a50447fd3793a0be7c9a2e93928" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>frame_type</name></member>
      <member refid="classBPrivate_1_1BControlLook_1ab8887b419d46516949bf9312254c25b4" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>GetBackgroundInsets</name></member>
      <member refid="classBPrivate_1_1BControlLook_1adf9865f83d4d6a332ea12aa6356c8bbe" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>GetFrameInsets</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a898ad223830d747b7099ca0298ea372d" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>GetInsets</name></member>
      <member refid="classBPrivate_1_1BControlLook_1afc2958ef9528162281c4b67eedca8a8a" prot="public" virt="virtual"><scope>BPrivate::BControlLook</scope><name>GetScrollBarWidth</name></member>
      <member refid="classBPrivate_1_1BControlLook_1a10e7a4cf9d67f61d9059318209fdcf3f" prot="public" virt="non-virtual"><scope>BPrivate::BControlLook</scope><name>SetBackgroundInfo</name></member>
      <member refid="classBPrivate_1_1BControlLook_1add7f3b8233567592b8cc6f2fe3547155" prot="public" virt="pure-virtual"><scope>BPrivate::BControlLook</scope><name>SliderBarColor</name></member>
      <member refid="classBPrivate_1_1BControlLook_1ad7edaba7e9d63cb6bd5cc0fa06f26e8f" prot="public" virt="virtual"><scope>BPrivate::BControlLook</scope><name>~BControlLook</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
