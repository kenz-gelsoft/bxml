<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBTextView" kind="class" language="C++" prot="public">
    <compoundname>BTextView</compoundname>
    <basecompoundref refid="classBView" prot="public" virt="non-virtual">BView</basecompoundref>
      <sectiondef kind="user-defined">
      <header>Archiving</header>
      <memberdef kind="function" id="classBTextView_1a0f3fb624378a2d13617773713efedd98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BTextView::Archive</definition>
        <argsstring>(BMessage *archive, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BTextView::Archive</qualifiedname>
        <reimplements refid="classBView_1ab6de1b48cbc3ef15a0d02113036f002d">Archive</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
          <defname>data</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Archives the object into the <emphasis>data</emphasis> message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="classBMessage" kindref="compound">BMessage</ref> object to archive the object into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deep</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to archive child views as well.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code, <computeroutput>B_OK</computeroutput> if everything went well or an error code otherwise. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The object was archived. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while archiving the object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="70" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1af3b2b4ad032238d71385bbfbf4933112" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>BArchivable * BTextView::Instantiate</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BTextView::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>Instantiates a <ref refid="classBTextView" kindref="compound">BTextView</ref> object from the passed in <emphasis>archive</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>archive</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBMessage" kindref="compound">BMessage</ref> object that the object is created from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="classBTextView" kindref="compound">BTextView</ref> object as a <ref refid="classBArchivable" kindref="compound">BArchivable</ref>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="69" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Hook Methods</header>
      <memberdef kind="function" id="classBTextView_1a73a892fb4d5e7e3575064f326b67867a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::AttachedToWindow</definition>
        <argsstring>()</argsstring>
        <name>AttachedToWindow</name>
        <qualifiedname>BTextView::AttachedToWindow</qualifiedname>
        <reimplements refid="classBView_1ae8117cb4634f4a4413988eea07cf75a0">AttachedToWindow</reimplements>
        <briefdescription>
<para>Hook method called when the text view is added to the view hierarchy. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets the pulse rate to 2 per second and adjust scrollbars if needed.</para>
<para><simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="73" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a79356aad15f3cd52203d81cb5b163461" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::DetachedFromWindow</definition>
        <argsstring>()</argsstring>
        <name>DetachedFromWindow</name>
        <qualifiedname>BTextView::DetachedFromWindow</qualifiedname>
        <reimplements refid="classBView_1a8abc2ea500951a0a22cf018e958ba791">DetachedFromWindow</reimplements>
        <briefdescription>
<para>Hook method that is called when the text view is removed from the view hierarchy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="74" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ad1b1f366a371aaecdbc39e2b13f6100b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::Draw</definition>
        <argsstring>(BRect updateRect)</argsstring>
        <name>Draw</name>
        <qualifiedname>BTextView::Draw</qualifiedname>
        <reimplements refid="classBView_1aa55014241fc2f5556415850692b52db2">Draw</reimplements>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>updateRect</declname>
        </param>
        <briefdescription>
<para>Hook method called to draw the contents of the text view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>updateRect</parametername>
</parameternamelist>
<parameterdescription>
<para>The rectangular area to draw.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="75" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a581a2b2877b29d275771ae5010d6706d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::MouseDown</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>MouseDown</name>
        <qualifiedname>BTextView::MouseDown</qualifiedname>
        <reimplements refid="classBView_1a5f5bd975d15df94f2ebbc80eb79cc3f6">MouseDown</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Hook method that is called when a mouse button is pushed down while the cursor is contained in the view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>The point on the screen where to mouse pointer is when the mouse button is pressed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="76" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a72a0cd6839b541db996d751f240e59a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::MouseUp</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>MouseUp</name>
        <qualifiedname>BTextView::MouseUp</qualifiedname>
        <reimplements refid="classBView_1acdb92b30069157b2e3c522a3ef9d6ae4">MouseUp</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Hook method that is called when a mouse button is released while the cursor is contained in the view. </para>
        </briefdescription>
        <detaileddescription>
<para>This method stops asynchronous mouse tracking.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>The point on the screen where to mouse pointer is when the mouse button is released.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="77" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a95bc494682c45ba41c457029639f2d55" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::MouseMoved</definition>
        <argsstring>(BPoint where, uint32 code, const BMessage *dragMessage)</argsstring>
        <name>MouseMoved</name>
        <qualifiedname>BTextView::MouseMoved</qualifiedname>
        <reimplements refid="classBView_1ac8b20516e42bab2f1eeb130e2432bde0">MouseMoved</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>dragMessage</declname>
        </param>
        <briefdescription>
<para>Hook method that is called whenever the mouse cursor enters, exits or moves inside the view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>The new location of the mouse in the view&apos;s coordinate system. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the following:<itemizedlist>
<listitem><para><computeroutput>B_ENTERED_VIEW</computeroutput> The cursor has just entered the view.</para>
</listitem><listitem><para><computeroutput>B_INSIDE_VIEW</computeroutput> The cursor is inside the view.</para>
</listitem><listitem><para><computeroutput>B_EXITED_VIEW</computeroutput> The cursor has left the view&apos;s bounds. This only gets sent if the scope of the mouse events that the view can receive has been expanded by <ref refid="classBView_1a5d8d6b469a8a11a577d1d138cfc31162" kindref="member">SetEventMask()</ref> or <ref refid="classBView_1ae7705783d064a8613dcc6f36a2866ab2" kindref="member">SetMouseEventMask()</ref>.</para>
</listitem><listitem><para><computeroutput>B_OUTSIDE_VIEW</computeroutput> The cursor is outside the view. This only gets sent if the scope of the mouse events that the view can receive has been expanded by <ref refid="classBView_1a5d8d6b469a8a11a577d1d138cfc31162" kindref="member">SetEventMask()</ref> or <ref refid="classBView_1ae7705783d064a8613dcc6f36a2866ab2" kindref="member">SetMouseEventMask()</ref>. </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dragMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>If a drag-and-drop operation is taking place this is a pointer to a <ref refid="classBMessage" kindref="compound">BMessage</ref> that holds the drag information, otherwise the pointer is <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBView_1a5d8d6b469a8a11a577d1d138cfc31162" kindref="member">SetEventMask()</ref>, <ref refid="classBView_1ae7705783d064a8613dcc6f36a2866ab2" kindref="member">SetMouseEventMask()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBView_1a1f4f0c3c5946df1d14e6031e5e12f40b" kindref="member">DragMessage()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="78" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ad60669080665218ce09f2773b7470f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::WindowActivated</definition>
        <argsstring>(bool active)</argsstring>
        <name>WindowActivated</name>
        <qualifiedname>BTextView::WindowActivated</qualifiedname>
        <reimplements refid="classBView_1a5b7aeff0b2608ec63e2c01153a7717f6">WindowActivated</reimplements>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
<para>Hook method that is called when the window becomes the active window or gives up that status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>active</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> when the window becomes activated, <computeroutput>false</computeroutput> when the window becomes deactivated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="80" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a38ae9b87206a3236527d533b1f33d951" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::KeyDown</definition>
        <argsstring>(const char *bytes, int32 numBytes)</argsstring>
        <name>KeyDown</name>
        <qualifiedname>BTextView::KeyDown</qualifiedname>
        <reimplements refid="classBView_1abea50ea665ce5fcb76b32f1302a6852d">KeyDown</reimplements>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>numBytes</declname>
        </param>
        <briefdescription>
<para>Hook method that is called when a key is pressed while the view is the focus view of the active window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes of the key combination pressed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes in <emphasis>bytes</emphasis>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="81" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ada90a85565bd3e6bbe130901299c6da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::Pulse</definition>
        <argsstring>()</argsstring>
        <name>Pulse</name>
        <qualifiedname>BTextView::Pulse</qualifiedname>
        <reimplements refid="classBView_1a0ae8ec3e94ee3d41cb329e3df6966566">Pulse</reimplements>
        <briefdescription>
<para>Hook method that is called at a set interval. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is used to make the I-beam cursor blink.</para>
<para>An action is performed each time the App Server calls the <ref refid="classBTextView_1ada90a85565bd3e6bbe130901299c6da8" kindref="member">Pulse()</ref> method. The pulse rate is set by SetPulseRate(). You can implement <ref refid="classBTextView_1ada90a85565bd3e6bbe130901299c6da8" kindref="member">Pulse()</ref> to do anything you want. The default version does nothing. The pulse granularity is no better than once per 100,000 microseconds.</para>
<para><simplesect kind="see"><para>SetPulseRate()</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="82" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a77ca110829a03b040b59a784caf327fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::FrameResized</definition>
        <argsstring>(float newWidth, float newHeight)</argsstring>
        <name>FrameResized</name>
        <qualifiedname>BTextView::FrameResized</qualifiedname>
        <reimplements refid="classBView_1a85d88f9c2bb6800560874b2061378fa0">FrameResized</reimplements>
        <param>
          <type>float</type>
          <declname>newWidth</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newHeight</declname>
        </param>
        <briefdescription>
<para>Hook method that is called when the frame is resized. </para>
        </briefdescription>
        <detaileddescription>
<para>This method updates any associated scrollbars.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>The new width of the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>The new height of the view.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="83" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a4d7d7990e57ce7286f78698f27c89e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::MessageReceived</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>MessageReceived</name>
        <qualifiedname>BTextView::MessageReceived</qualifiedname>
        <reimplements refid="classBView_1aca0a16b0e04288e1fdc0b63690ea7a6d">MessageReceived</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Hook method called with a message is received by the text view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>message</emphasis> received by the associated looper.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBHandler_1aeecda5017e0081db617f23bbff71fb53" kindref="member">BHandler::MessageReceived()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="85" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a525a3a00911c36ee0acf05daa2ff8716" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::AllAttached</definition>
        <argsstring>()</argsstring>
        <name>AllAttached</name>
        <qualifiedname>BTextView::AllAttached</qualifiedname>
        <reimplements refid="classBView_1a6d6379e0993bd525f2cac5f848718870">AllAttached</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="classBTextView_1a73a892fb4d5e7e3575064f326b67867a" kindref="member">AttachedToWindow()</ref> but this method is triggered after all child views have already been attached to a window.  </para>
<para><simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="216" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a2ff4cd2084da7717a7c08c7c95651614" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::AllDetached</definition>
        <argsstring>()</argsstring>
        <name>AllDetached</name>
        <qualifiedname>BTextView::AllDetached</qualifiedname>
        <reimplements refid="classBView_1a19dd2213f4b953b54524d7f523d9b406">AllDetached</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="classBTextView_1a73a892fb4d5e7e3575064f326b67867a" kindref="member">AttachedToWindow()</ref> but this method is triggered after all child views have already been detached from a window.  </para>
<para><simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="217" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>SetText</header>
      <description><para>The <ref refid="classBTextView" kindref="compound">BTextView</ref> doesn&apos;t keep a reference to the <emphasis>text</emphasis> buffer, <emphasis>file</emphasis>, or <emphasis>runs</emphasis> array you pass in, you can <computeroutput>delete</computeroutput> them after <ref refid="classBTextView_1a6af0844c93f0a548e0717e0b4e2b8e33" kindref="member">SetText()</ref> returns.</para>
<para>If the <ref refid="classBTextView" kindref="compound">BTextView</ref> supports multiple character styles and a <computeroutput><ref refid="structtext__run__array" kindref="compound">text_run_array</ref></computeroutput> is passed in it will be used to set the font and color formats of the new text.</para>
<para>If the <ref refid="classBTextView" kindref="compound">BTextView</ref> does not support multiple character styles, then the <computeroutput><ref refid="structtext__run__array" kindref="compound">text_run_array</ref></computeroutput> parameter is ignored.</para>
<para><simplesect kind="see"><para><ref refid="classBTextView_1aed17086d3059cd6ca790420a6e5446f5" kindref="member">IsStylable()</ref> </para>
</simplesect>
</para>
</description>
      <memberdef kind="function" id="classBTextView_1a6af0844c93f0a548e0717e0b4e2b8e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetText</definition>
        <argsstring>(const char *text, const text_run_array *runs=NULL)</argsstring>
        <name>SetText</name>
        <qualifiedname>BTextView::SetText</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>runs</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Copies text from the <emphasis>text</emphasis> buffer replacing any text currently set in the <ref refid="classBTextView" kindref="compound">BTextView</ref> with the font and color formats set by <emphasis>runs</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runs</parametername>
</parameternamelist>
<parameterdescription>
<para>Set the font and color formats of the new text if provided. Only applies if the <ref refid="classBTextView" kindref="compound">BTextView</ref> permits multiple character formats.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="93" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ad1a7f628f620e6c547e42d2dbbd18ac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetText</definition>
        <argsstring>(const char *text, int32 length, const text_run_array *runs=NULL)</argsstring>
        <name>SetText</name>
        <qualifiedname>BTextView::SetText</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>const <ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>runs</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Copies text from the <emphasis>text</emphasis> buffer up to <emphasis>length</emphasis> characters replacing any text currently set in the <ref refid="classBTextView" kindref="compound">BTextView</ref> with the font and color formats set by <emphasis>runs</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><emphasis>text</emphasis> must be at least <emphasis>length</emphasis> characters long. <emphasis>length</emphasis> may be set to 0 to clear the text from the <ref refid="classBTextView" kindref="compound">BTextView</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of bytes of <emphasis>text</emphasis> to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runs</parametername>
</parameternamelist>
<parameterdescription>
<para>Set the font and color formats of the new text if provided. Only applies if the <ref refid="classBTextView" kindref="compound">BTextView</ref> permits multiple character formats.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="95" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ad10cfbcd1fabaf0300568e154ceab53a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetText</definition>
        <argsstring>(BFile *file, int32 offset, int32 length, const text_run_array *runs=NULL)</argsstring>
        <name>SetText</name>
        <qualifiedname>BTextView::SetText</qualifiedname>
        <param>
          <type><ref refid="classBFile" kindref="compound">BFile</ref> *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>const <ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>runs</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Copies text from the <emphasis>file</emphasis> starting at the given <emphasis>offset</emphasis> up to <emphasis>length</emphasis> characters replacing any text currently set in the <ref refid="classBTextView" kindref="compound">BTextView</ref> with the font and color formats set by <emphasis>runs</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to set the text from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The position in the file to start reading text. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes of text to read from the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runs</parametername>
</parameternamelist>
<parameterdescription>
<para>Set the font and color formats of the new text if provided. Only applies if the <ref refid="classBTextView" kindref="compound">BTextView</ref> permits multiple character formats.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="97" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Insert</header>
      <description><para>The <ref refid="classBTextView" kindref="compound">BTextView</ref> doesn&apos;t keep a reference to the <emphasis>text</emphasis> buffer or <emphasis>runs</emphasis> array you pass in, you can <computeroutput>delete</computeroutput> them after <ref refid="classBTextView_1a0ee743c15e51c89e15eefe5b0145b1e1" kindref="member">Insert()</ref> returns.</para>
<para>If the <ref refid="classBTextView" kindref="compound">BTextView</ref> supports multiple character styles and a <computeroutput><ref refid="structtext__run__array" kindref="compound">text_run_array</ref></computeroutput> is passed in it will be used to set the font and color formats of the new text.</para>
<para>If the <ref refid="classBTextView" kindref="compound">BTextView</ref> does not support multiple character styles, then the <computeroutput><ref refid="structtext__run__array" kindref="compound">text_run_array</ref></computeroutput> parameter is ignored.</para>
<para><simplesect kind="see"><para><ref refid="classBTextView_1aed17086d3059cd6ca790420a6e5446f5" kindref="member">IsStylable()</ref> </para>
</simplesect>
</para>
</description>
      <memberdef kind="function" id="classBTextView_1a0ee743c15e51c89e15eefe5b0145b1e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::Insert</definition>
        <argsstring>(const char *text, const text_run_array *runs=NULL)</argsstring>
        <name>Insert</name>
        <qualifiedname>BTextView::Insert</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>runs</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Inserts text from the <emphasis>text</emphasis> buffer at the end of the <ref refid="classBTextView" kindref="compound">BTextView</ref> with the font and color formats set by <emphasis>runs</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to insert. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runs</parametername>
</parameternamelist>
<parameterdescription>
<para>The text styling to set, can be <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="101" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ae0883c03c0361d12cf278f0bf5ea503d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::Insert</definition>
        <argsstring>(const char *text, int32 length, const text_run_array *runs=NULL)</argsstring>
        <name>Insert</name>
        <qualifiedname>BTextView::Insert</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>const <ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>runs</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Inserts text from the <emphasis>text</emphasis> buffer up to <emphasis>length</emphasis> characters at the end of the <ref refid="classBTextView" kindref="compound">BTextView</ref> with the font and color formats set by <emphasis>runs</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to insert. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes of text to insert. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runs</parametername>
</parameternamelist>
<parameterdescription>
<para>The text styling to use, can be <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="103" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aecff7b0c2868a7aea0b195162863cbc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::Insert</definition>
        <argsstring>(int32 offset, const char *text, int32 length, const text_run_array *runs=NULL)</argsstring>
        <name>Insert</name>
        <qualifiedname>BTextView::Insert</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>const <ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>runs</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Inserts text starting at the given <emphasis>offset</emphasis> from the <emphasis>text</emphasis> buffer up to <emphasis>length</emphasis> characters into the <ref refid="classBTextView" kindref="compound">BTextView</ref> with the font and color formats set by <emphasis>runs</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The position to start inserting text. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes of text to insert. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runs</parametername>
</parameternamelist>
<parameterdescription>
<para>The text styling to use, can be <computeroutput>NULL</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="105" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Delete</header>
      <memberdef kind="function" id="classBTextView_1a9926ac3ab300b04c931dc8c6c01d648f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::Delete</definition>
        <argsstring>()</argsstring>
        <name>Delete</name>
        <qualifiedname>BTextView::Delete</qualifiedname>
        <briefdescription>
<para>Deletes the text within the current selection. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="109" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a9652d7c8741a1ccc55caa61102f70244" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::Delete</definition>
        <argsstring>(int32 startOffset, int32 endOffset)</argsstring>
        <name>Delete</name>
        <qualifiedname>BTextView::Delete</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>endOffset</declname>
        </param>
        <briefdescription>
<para>Deletes the text enclosed within the given offsets. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>startOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset where the text to delete starts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset where the text to delete ends.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="110" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Text Information</header>
      <memberdef kind="function" id="classBTextView_1aa4abaa45b5c4f1ac15fd7d613d71317b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BTextView::Text</definition>
        <argsstring>() const</argsstring>
        <name>Text</name>
        <qualifiedname>BTextView::Text</qualifiedname>
        <briefdescription>
<para>Returns the <ref refid="classBTextView" kindref="compound">BTextView</ref> text as a byte array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>It is possible that the <ref refid="classBTextView" kindref="compound">BTextView</ref> object had to do some operations on the text to be able to return it as a C string. If you need to call <ref refid="classBTextView_1aa4abaa45b5c4f1ac15fd7d613d71317b" kindref="member">Text()</ref> repeatedly, you&apos;d better use <ref refid="classBTextView_1a849d5c8a43d17ab4dee07d1758e5a839" kindref="member">GetText()</ref> instead.</para>
</simplesect>
<simplesect kind="return"><para>A pointer to the text as a byte array.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="112" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a0ea8237b7c2aadce8e2f0ed97b3aa282" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::TextLength</definition>
        <argsstring>() const</argsstring>
        <name>TextLength</name>
        <qualifiedname>BTextView::TextLength</qualifiedname>
        <briefdescription>
<para>Returns the text length of the <ref refid="classBTextView" kindref="compound">BTextView</ref> text. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The text length of the <ref refid="classBTextView" kindref="compound">BTextView</ref> text.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="113" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a849d5c8a43d17ab4dee07d1758e5a839" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>BTextView::GetText</definition>
        <argsstring>(int32 offset, int32 length, char *buffer) const</argsstring>
        <name>GetText</name>
        <qualifiedname>BTextView::GetText</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Fills out <emphasis>buffer</emphasis> with the text of the <ref refid="classBTextView" kindref="compound">BTextView</ref> starting at <emphasis>offset</emphasis> and grabbing at most <emphasis>length</emphasis> bytes. </para>
        </briefdescription>
        <detaileddescription>
<para>You must provide a <emphasis>buffer</emphasis> that is large enough to hold at least <emphasis>length</emphasis> bytes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to start grabbing text from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes of text to grab. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A <emphasis>buffer</emphasis> to write the text to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>BString::GetString(int32 offset, int32 length, char* buffer)</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="114" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1afb783ae7c839313c9f915b122e6f3ce7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ac56eeb3040e225fafe52dc1872233eeb" kindref="member">uint8</ref></type>
        <definition>uchar BTextView::ByteAt</definition>
        <argsstring>(int32 offset) const</argsstring>
        <name>ByteAt</name>
        <qualifiedname>BTextView::ByteAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Returns the character at the given offset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset to the desired character.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The character at the given offset.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="116" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a6bf21da74122ae112746c7c0be5d9880" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::CountLines</definition>
        <argsstring>() const</argsstring>
        <name>CountLines</name>
        <qualifiedname>BTextView::CountLines</qualifiedname>
        <briefdescription>
<para>Returns the number of lines that the <ref refid="classBTextView" kindref="compound">BTextView</ref> object contains. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of lines contained in the <ref refid="classBTextView" kindref="compound">BTextView</ref> object.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="118" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a93a13dc6c0d1ca316555cfe57cdfe611" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::CurrentLine</definition>
        <argsstring>() const</argsstring>
        <name>CurrentLine</name>
        <qualifiedname>BTextView::CurrentLine</qualifiedname>
        <briefdescription>
<para>Returns the index of the current line. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The index of the current line.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="119" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a466d34e311879ee43a77e42e18c2b516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::GoToLine</definition>
        <argsstring>(int32 lineNumber)</argsstring>
        <name>GoToLine</name>
        <qualifiedname>BTextView::GoToLine</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>lineNumber</declname>
          <defname>index</defname>
        </param>
        <briefdescription>
<para>Moves the caret to the specified line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the line.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="120" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Clipboard</header>
      <memberdef kind="function" id="classBTextView_1a1f1d1c35f94cd4b172000e0eed1e97bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::Cut</definition>
        <argsstring>(BClipboard *clipboard)</argsstring>
        <name>Cut</name>
        <qualifiedname>BTextView::Cut</qualifiedname>
        <param>
          <type><ref refid="classBClipboard" kindref="compound">BClipboard</ref> *</type>
          <declname>clipboard</declname>
        </param>
        <briefdescription>
<para>Moves the current selection to the clipboard. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clipboard</parametername>
</parameternamelist>
<parameterdescription>
<para>The clipboard object to move the text to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="122" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a0353fc7b7d2d8e579ddce27b07519929" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::Copy</definition>
        <argsstring>(BClipboard *clipboard)</argsstring>
        <name>Copy</name>
        <qualifiedname>BTextView::Copy</qualifiedname>
        <param>
          <type><ref refid="classBClipboard" kindref="compound">BClipboard</ref> *</type>
          <declname>clipboard</declname>
        </param>
        <briefdescription>
<para>Copies the current selection to the clipboard. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clipboard</parametername>
</parameternamelist>
<parameterdescription>
<para>The clipboard object to copy the selected text to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="123" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a1c19ed827e74edbd3c749c7b67667aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::Paste</definition>
        <argsstring>(BClipboard *clipboard)</argsstring>
        <name>Paste</name>
        <qualifiedname>BTextView::Paste</qualifiedname>
        <param>
          <type><ref refid="classBClipboard" kindref="compound">BClipboard</ref> *</type>
          <declname>clipboard</declname>
        </param>
        <briefdescription>
<para>Copy the text contained in the clipboard to the <ref refid="classBTextView" kindref="compound">BTextView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clipboard</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the clipboard.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="124" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a88c2b8661082c2d122736649d6b64e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BTextView::AcceptsPaste</definition>
        <argsstring>(BClipboard *clipboard)</argsstring>
        <name>AcceptsPaste</name>
        <qualifiedname>BTextView::AcceptsPaste</qualifiedname>
        <param>
          <type><ref refid="classBClipboard" kindref="compound">BClipboard</ref> *</type>
          <declname>clipboard</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the <ref refid="classBTextView" kindref="compound">BTextView</ref> can accept the <emphasis>clipboard</emphasis> data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <ref refid="classBTextView" kindref="compound">BTextView</ref> can accept the pasted clipboard data, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="127" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a3485b6f78a3a9208902d5c01e7766fc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BTextView::AcceptsDrop</definition>
        <argsstring>(const BMessage *message)</argsstring>
        <name>AcceptsDrop</name>
        <qualifiedname>BTextView::AcceptsDrop</qualifiedname>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the <ref refid="classBTextView" kindref="compound">BTextView</ref> can accept the dropped <emphasis>message</emphasis> data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <ref refid="classBTextView" kindref="compound">BTextView</ref> can accept the dropped message data, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="128" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Selection</header>
      <memberdef kind="function" id="classBTextView_1ab1f47a18c9c4ba4469b08cc07f06ad3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <qualifiedname>BTextView::Clear</qualifiedname>
        <briefdescription>
<para>Deletes the currently selected text. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="125" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a35737d4bef49712542b12b1a5add2520" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::Select</definition>
        <argsstring>(int32 startOffset, int32 endOffset)</argsstring>
        <name>Select</name>
        <qualifiedname>BTextView::Select</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>endOffset</declname>
        </param>
        <briefdescription>
<para>Selects the text contained within the given offsets. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>startOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset where the text to select starts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset where the text to select ends.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="130" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ac3ec307c452a5e38c911e0089427fe4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SelectAll</definition>
        <argsstring>()</argsstring>
        <name>SelectAll</name>
        <qualifiedname>BTextView::SelectAll</qualifiedname>
        <briefdescription>
<para>Selects all text contained in the <ref refid="classBTextView" kindref="compound">BTextView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBTextView_1a35737d4bef49712542b12b1a5add2520" kindref="member">Select()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="131" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1abc61acda4dd214033c7e4cb23d531c0d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::GetSelection</definition>
        <argsstring>(int32 *_start, int32 *_end) const</argsstring>
        <name>GetSelection</name>
        <qualifiedname>BTextView::GetSelection</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_start</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_end</declname>
        </param>
        <briefdescription>
<para>Fills out <emphasis>_start</emphasis> and <emphasis>_end</emphasis> with the start and end offsets of the current selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_start</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an int32 to contain the selection&apos;s start offset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_end</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an int32 to contain the selection&apos;s end offset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBTextView_1a35737d4bef49712542b12b1a5add2520" kindref="member">Select()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="132" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1afc72592044583011e10b903f4868c3af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
        <definition>text_run_array * BTextView::RunArray</definition>
        <argsstring>(int32 startOffset, int32 endOffset, int32 *_size=NULL) const</argsstring>
        <name>RunArray</name>
        <qualifiedname>BTextView::RunArray</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>endOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_size</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Returns a <computeroutput><ref refid="structtext__run__array" kindref="compound">text_run_array</ref></computeroutput> for the text within the given offsets. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned <computeroutput><ref refid="structtext__run__array" kindref="compound">text_run_array</ref></computeroutput> belongs to the caller, so you must free it once you no longer need it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>startOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The text start offset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The text end offset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an int32 to fill out the run array size.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <computeroutput><ref refid="structtext__run__array" kindref="compound">text_run_array</ref></computeroutput> for the text in the given offsets.</para>
</simplesect>
<simplesect kind="see"><para>SetRunArray()</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="150" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1acb733c2928f582f5d157ceed1c44727f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::LineAt</definition>
        <argsstring>(int32 offset) const</argsstring>
        <name>LineAt</name>
        <qualifiedname>BTextView::LineAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Returns the line number of the character at the given offset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset of the wanted character.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The line number of the character at the given offset.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="153" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1afb1697f452277bd09e6894863db9960f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::LineAt</definition>
        <argsstring>(BPoint point) const</argsstring>
        <name>LineAt</name>
        <qualifiedname>BTextView::LineAt</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Returns the line number for the passed point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point to get the line number of. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The line number for the passed in point.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="154" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a32ada6e38d904b78822eb9fa7e2a9987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
        <definition>BPoint BTextView::PointAt</definition>
        <argsstring>(int32 offset, float *_height=NULL) const</argsstring>
        <name>PointAt</name>
        <qualifiedname>BTextView::PointAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_height</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Returns the location of the character at the given offset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset of the character. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_height</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to write the height of the character.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classBPoint" kindref="compound">BPoint</ref> object set to the location of the character.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="155" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a550bbadd24a65086f5c053082338d055" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::OffsetAt</definition>
        <argsstring>(BPoint point) const</argsstring>
        <name>OffsetAt</name>
        <qualifiedname>BTextView::OffsetAt</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Returns the offset at the passed in point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired point.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The offset for the passed in point.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="157" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a318bb090cb159095b23b5a3a29ea07b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::OffsetAt</definition>
        <argsstring>(int32 line) const</argsstring>
        <name>OffsetAt</name>
        <qualifiedname>BTextView::OffsetAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Returns the offset of the given line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>A line number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The offset of the passed line.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="158" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a1c3eacdbbac660e81960d47da42f4b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::FindWord</definition>
        <argsstring>(int32 offset, int32 *_fromOffset, int32 *_toOffset)</argsstring>
        <name>FindWord</name>
        <qualifiedname>BTextView::FindWord</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_fromOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_toOffset</declname>
        </param>
        <briefdescription>
<para>Fills out <emphasis>_fromOffset</emphasis> and <emphasis>_toOffset</emphasis> for a sequence of character that qualifies as a word starting at <emphasis>offset</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>A word is a sequence of characters that the user can select by double- clicking.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset where to start looking. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_fromOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an integer to write the starting offset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_toOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an integer to write the ending offset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="160" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ad30ce400c0a7f586d9a14509139dcb30" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BTextView::CanEndLine</definition>
        <argsstring>(int32 offset)</argsstring>
        <name>CanEndLine</name>
        <qualifiedname>BTextView::CanEndLine</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the character at the given offset can be the last character of a line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset of the character.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the character can be the last character of a line, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="163" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a399a56365f69f5bbc765c7087e4a8b9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BTextView::LineWidth</definition>
        <argsstring>(int32 lineNumber=0) const</argsstring>
        <name>LineWidth</name>
        <qualifiedname>BTextView::LineWidth</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>lineNumber</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the width of the line at the given <emphasis>lineNumber</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lineNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the line to get the width of, 0-indexed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The width of the line at the given <emphasis>lineNumber</emphasis> as a float.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="165" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ace81a4936220c72d6ab088c7f9bb9b79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BTextView::LineHeight</definition>
        <argsstring>(int32 lineNumber=0) const</argsstring>
        <name>LineHeight</name>
        <qualifiedname>BTextView::LineHeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>lineNumber</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the height of the line at the given <emphasis>lineNumber</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lineNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the line to get the height of, 0-indexed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The height of the line at the given <emphasis>lineNumber</emphasis> as a float.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="166" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1abda2968c60959c9909c54a42fb771fe0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BTextView::TextHeight</definition>
        <argsstring>(int32 startLine, int32 endLine) const</argsstring>
        <name>TextHeight</name>
        <qualifiedname>BTextView::TextHeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>startLine</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>endLine</declname>
        </param>
        <briefdescription>
<para>Returns the height of the text enclosed within the given lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>startLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the starting line. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the ending line.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The height height of the text enclosed within the given lines as a float.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="167" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a9388556beb45f15e16883fd1ee0ca505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::Highlight</definition>
        <argsstring>(int32 startOffset, int32 endOffset)</argsstring>
        <name>Highlight</name>
        <qualifiedname>BTextView::Highlight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>endOffset</declname>
        </param>
        <briefdescription>
<para>Highlight the text enclosed within the given offsets. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>startOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The start offset of the text to highlight. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The end offset of the text to highlight.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="176" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Scrolling</header>
      <memberdef kind="function" id="classBTextView_1a029331301f5b9c6f2e02f309695e6439" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::ScrollToOffset</definition>
        <argsstring>(int32 offset)</argsstring>
        <name>ScrollToOffset</name>
        <qualifiedname>BTextView::ScrollToOffset</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Scrolls the text so that the character at <emphasis>offset</emphasis> is visible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset of the character to scroll to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="173" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a115416adbb7a2c9f6bb3c845396d31b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::ScrollToSelection</definition>
        <argsstring>()</argsstring>
        <name>ScrollToSelection</name>
        <qualifiedname>BTextView::ScrollToSelection</qualifiedname>
        <briefdescription>
<para>Scrolls the text so that the character that begins the selection is visible. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="174" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>TextRect</header>
      <memberdef kind="function" id="classBTextView_1a5dfe405b8963dec0acf22d571566f335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetTextRect</definition>
        <argsstring>(BRect rect)</argsstring>
        <name>SetTextRect</name>
        <qualifiedname>BTextView::SetTextRect</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Sets the object&apos;s text frame to the passed in <emphasis>rect</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classBRect" kindref="compound">BRect</ref> object to set the text frame to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="178" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BTextView::TextRect</definition>
        <argsstring>() const</argsstring>
        <name>TextRect</name>
        <qualifiedname>BTextView::TextRect</qualifiedname>
        <briefdescription>
<para>Returns the <ref refid="classBTextView" kindref="compound">BTextView</ref>&apos;s text frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="classBTextView" kindref="compound">BTextView</ref>&apos;s text frame.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1a5dfe405b8963dec0acf22d571566f335" kindref="member">SetTextRect()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="179" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Insets</header>
      <memberdef kind="function" id="classBTextView_1a3dccebc1ff74ad040d660e36cb13ddbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetInsets</definition>
        <argsstring>(float left, float top, float right, float bottom)</argsstring>
        <name>SetInsets</name>
        <qualifiedname>BTextView::SetInsets</qualifiedname>
        <param>
          <type>float</type>
          <declname>left</declname>
        </param>
        <param>
          <type>float</type>
          <declname>top</declname>
        </param>
        <param>
          <type>float</type>
          <declname>right</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
<para>Sets the insets within the bounds for the object&apos;s text frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Insets cannot be negative, will result in 0 inset.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left inset to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>top</parametername>
</parameternamelist>
<parameterdescription>
<para>The top inset to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right inset to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>The bottom inset to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="180" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a50d67716d54b7ac5bb14e59e1b504d49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::GetInsets</definition>
        <argsstring>(float *_left, float *_top, float *_right, float *_bottom) const</argsstring>
        <name>GetInsets</name>
        <qualifiedname>BTextView::GetInsets</qualifiedname>
        <param>
          <type>float *</type>
          <declname>_left</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_top</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_right</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_bottom</declname>
        </param>
        <briefdescription>
<para>Fills out the parameters with the objects&apos;s text insets. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_left</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to set to the frame&apos;s left inset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_top</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to set to the frame&apos;s top inset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_right</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to set to the frame&apos;s right inset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to set to the frame&apos;s bottom inset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="182" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Stylable</header>
      <memberdef kind="function" id="classBTextView_1af7ff7c6ed79a7deaf1ff180b0b2fc597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetStylable</definition>
        <argsstring>(bool stylable)</argsstring>
        <name>SetStylable</name>
        <qualifiedname>BTextView::SetStylable</qualifiedname>
        <param>
          <type>bool</type>
          <declname>stylable</declname>
        </param>
        <briefdescription>
<para>Sets whether or not the object accepts multiple font styles. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stylable</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to accept multiple font styles, <computeroutput>false</computeroutput> to NOT accept multiple font styles.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="185" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aed17086d3059cd6ca790420a6e5446f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::IsStylable</definition>
        <argsstring>() const</argsstring>
        <name>IsStylable</name>
        <qualifiedname>BTextView::IsStylable</qualifiedname>
        <briefdescription>
<para>Returns whether or not the object accepts multiple font styles. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the object is accepts multiple font styles, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1af7ff7c6ed79a7deaf1ff180b0b2fc597" kindref="member">SetStylable()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="186" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Tab Width</header>
      <memberdef kind="function" id="classBTextView_1a692c0cf4d5ad343d35ca12bcdf7e44f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetTabWidth</definition>
        <argsstring>(float width)</argsstring>
        <name>SetTabWidth</name>
        <qualifiedname>BTextView::SetTabWidth</qualifiedname>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Sets the distance between tab stops in pixels. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance in pixel between tab stops to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="187" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1acc5bfe534c4c1ef13b0a9df231cded18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BTextView::TabWidth</definition>
        <argsstring>() const</argsstring>
        <name>TabWidth</name>
        <qualifiedname>BTextView::TabWidth</qualifiedname>
        <briefdescription>
<para>Returns the tab width of the <ref refid="classBTextView" kindref="compound">BTextView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The tab width of the <ref refid="classBTextView" kindref="compound">BTextView</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1a692c0cf4d5ad343d35ca12bcdf7e44f0" kindref="member">SetTabWidth()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="188" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Selectable State</header>
      <memberdef kind="function" id="classBTextView_1aa7bbd890c204b973daae9b82b657e117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::MakeSelectable</definition>
        <argsstring>(bool selectable=true)</argsstring>
        <name>MakeSelectable</name>
        <qualifiedname>BTextView::MakeSelectable</qualifiedname>
        <param>
          <type>bool</type>
          <declname>selectable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Sets whether or not the text is selectable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>selectable</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass in <computeroutput>true</computeroutput> to set the text to be selectable, <computeroutput>false</computeroutput> to set the text to be not selectable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="189" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a2ca91f84ade13166b46cbe1aedf7da0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::IsSelectable</definition>
        <argsstring>() const</argsstring>
        <name>IsSelectable</name>
        <qualifiedname>BTextView::IsSelectable</qualifiedname>
        <briefdescription>
<para>Returns whether or not the text is selectable. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the text is selectable, <computeroutput>false</computeroutput> if the text is not selectable.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1aa7bbd890c204b973daae9b82b657e117" kindref="member">MakeSelectable()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="190" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Editable State</header>
      <memberdef kind="function" id="classBTextView_1aebdfde8ef7cf1a490c96fc4f0d822873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::MakeEditable</definition>
        <argsstring>(bool editable=true)</argsstring>
        <name>MakeEditable</name>
        <qualifiedname>BTextView::MakeEditable</qualifiedname>
        <param>
          <type>bool</type>
          <declname>editable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Sets whether or not the text is editable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>editable</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass in <computeroutput>true</computeroutput> to set the text to be editable, <computeroutput>false</computeroutput> to set the object to be not editable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="191" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a78ca6e19fc0b418a6912024771d1e739" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::IsEditable</definition>
        <argsstring>() const</argsstring>
        <name>IsEditable</name>
        <qualifiedname>BTextView::IsEditable</qualifiedname>
        <briefdescription>
<para>Returns whether or not the text is editable. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the text is editable, <computeroutput>false</computeroutput> if the text is not editable.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1aebdfde8ef7cf1a490c96fc4f0d822873" kindref="member">MakeEditable()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="192" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Word Wrap</header>
      <memberdef kind="function" id="classBTextView_1afe3b998f71371ae8479ac72ef3b4fb08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetWordWrap</definition>
        <argsstring>(bool wrap)</argsstring>
        <name>SetWordWrap</name>
        <qualifiedname>BTextView::SetWordWrap</qualifiedname>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
        </param>
        <briefdescription>
<para>Activate or deactivate word wrapping mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wrap</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass in <computeroutput>true</computeroutput> to turn on word wrapping mode, <computeroutput>false</computeroutput> to turn off word wrapping mode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="193" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a226fee862ed32ded1029a63140b90c8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::DoesWordWrap</definition>
        <argsstring>() const</argsstring>
        <name>DoesWordWrap</name>
        <qualifiedname>BTextView::DoesWordWrap</qualifiedname>
        <briefdescription>
<para>Returns whether or not word wrapping is activated. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if word wrapping is activated, <computeroutput>false</computeroutput> is word wrapping if not activated.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1afe3b998f71371ae8479ac72ef3b4fb08" kindref="member">SetWordWrap()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="194" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Max Bytes</header>
      <memberdef kind="function" id="classBTextView_1a233e3150486c81394d3bfe44dad0babe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetMaxBytes</definition>
        <argsstring>(int32 max)</argsstring>
        <name>SetMaxBytes</name>
        <qualifiedname>BTextView::SetMaxBytes</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Sets the maximum number of bytes that the <ref refid="classBTextView" kindref="compound">BTextView</ref> can contain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of bytes to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="195" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1afad6c3190c1dc5e2aa83568f0b84cd15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::MaxBytes</definition>
        <argsstring>() const</argsstring>
        <name>MaxBytes</name>
        <qualifiedname>BTextView::MaxBytes</qualifiedname>
        <briefdescription>
<para>Returns the maximum number of bytes that the <ref refid="classBTextView" kindref="compound">BTextView</ref> can contain. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the maximum number of bytes that the <ref refid="classBTextView" kindref="compound">BTextView</ref> can contain.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1a233e3150486c81394d3bfe44dad0babe" kindref="member">SetMaxBytes()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="196" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Character Filtering</header>
      <memberdef kind="function" id="classBTextView_1a91836216cb18b6030bb7949c0a72a4dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::DisallowChar</definition>
        <argsstring>(uint32 character)</argsstring>
        <name>DisallowChar</name>
        <qualifiedname>BTextView::DisallowChar</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>character</declname>
        </param>
        <briefdescription>
<para>Adds the <emphasis>character</emphasis> to the disallowed characters list. </para>
        </briefdescription>
        <detaileddescription>
<para>After this method returns, the <emphasis>character</emphasis> won&apos;t be accepted by the textview anymore.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to disallow.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBTextView_1aa2b793d153eb61478f5d849fa32a5084" kindref="member">AllowChar()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="197" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aa2b793d153eb61478f5d849fa32a5084" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::AllowChar</definition>
        <argsstring>(uint32 character)</argsstring>
        <name>AllowChar</name>
        <qualifiedname>BTextView::AllowChar</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>character</declname>
        </param>
        <briefdescription>
<para>Removes the <emphasis>character</emphasis> from the disallowed characters list. </para>
        </briefdescription>
        <detaileddescription>
<para>After this method returns, the <emphasis>character</emphasis> will be accepted by the textview.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to allow.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBTextView_1a91836216cb18b6030bb7949c0a72a4dd" kindref="member">DisallowChar()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="198" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Alignment</header>
      <memberdef kind="function" id="classBTextView_1ae71fcc418e9934a852b0e5c9d6d6961b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetAlignment</definition>
        <argsstring>(alignment align)</argsstring>
        <name>SetAlignment</name>
        <qualifiedname>BTextView::SetAlignment</qualifiedname>
        <param>
          <type>alignment</type>
          <declname>align</declname>
          <defname>flag</defname>
        </param>
        <briefdescription>
<para>Sets the way text is aligned within the frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Choices are:<itemizedlist>
<listitem><para><computeroutput>B_ALIGN_LEFT</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_ALIGN_RIGHT</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_ALIGN_CENTER</computeroutput> </para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>The text alignment to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="199" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a3cdbecd490374de1d479c747e81377cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>alignment</type>
        <definition>alignment BTextView::Alignment</definition>
        <argsstring>() const</argsstring>
        <name>Alignment</name>
        <qualifiedname>BTextView::Alignment</qualifiedname>
        <briefdescription>
<para>Returns the current text alignment. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current alignment flag.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1ae71fcc418e9934a852b0e5c9d6d6961b" kindref="member">SetAlignment()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="200" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Autoindent</header>
      <memberdef kind="function" id="classBTextView_1abd09cfa6752d3e808770d17065d6d4ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetAutoindent</definition>
        <argsstring>(bool state)</argsstring>
        <name>SetAutoindent</name>
        <qualifiedname>BTextView::SetAutoindent</qualifiedname>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Sets whether or not new lines of text are automatically indented. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass in <computeroutput>true</computeroutput> to automatically indent the text, <computeroutput>false</computeroutput> to turn off automatic text indenting.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="201" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a81448d18e95a7426ee98c63596d539d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::DoesAutoindent</definition>
        <argsstring>() const</argsstring>
        <name>DoesAutoindent</name>
        <qualifiedname>BTextView::DoesAutoindent</qualifiedname>
        <briefdescription>
<para>Returns whether or not automatic indenting is active. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if automatic indenting is activated, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1abd09cfa6752d3e808770d17065d6d4ec" kindref="member">SetAutoindent()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="202" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Color Space</header>
      <memberdef kind="function" id="classBTextView_1aaf45743e5d825b7e4eb77fe770d14cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetColorSpace</definition>
        <argsstring>(color_space colors)</argsstring>
        <name>SetColorSpace</name>
        <qualifiedname>BTextView::SetColorSpace</qualifiedname>
        <param>
          <type>color_space</type>
          <declname>colors</declname>
        </param>
        <briefdescription>
<para>Set the color space of the offscreen <ref refid="classBBitmap" kindref="compound">BBitmap</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>colors</parametername>
</parameternamelist>
<parameterdescription>
<para>The colorspace to set on the offscreen <ref refid="classBBitmap" kindref="compound">BBitmap</ref> object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="203" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ad2668d62c775d15b171506ee9faf0ad3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>color_space</type>
        <definition>color_space BTextView::ColorSpace</definition>
        <argsstring>() const</argsstring>
        <name>ColorSpace</name>
        <qualifiedname>BTextView::ColorSpace</qualifiedname>
        <briefdescription>
<para>Returns the colorspace set to the offscreen <ref refid="classBBitmap" kindref="compound">BBitmap</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The colorspace of the offscreen <ref refid="classBBitmap" kindref="compound">BBitmap</ref> object.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1aaf45743e5d825b7e4eb77fe770d14cb3" kindref="member">SetColorSpace()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="204" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Resizable</header>
      <memberdef kind="function" id="classBTextView_1a106796bac011113352981917f001f24f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::MakeResizable</definition>
        <argsstring>(bool resize, BView *resizeView=NULL)</argsstring>
        <name>MakeResizable</name>
        <qualifiedname>BTextView::MakeResizable</qualifiedname>
        <param>
          <type>bool</type>
          <declname>resize</declname>
        </param>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>resizeView</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Activates and deactivates automatic resizing. </para>
        </briefdescription>
        <detaileddescription>
<para>The resizing mechanism is alternative to <ref refid="classBView" kindref="compound">BView</ref> resizing. The container view (the one passed to this function) should not automatically resize itself when the parent is resized.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resize</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass in <computeroutput>true</computeroutput> to set the the <ref refid="classBTextView" kindref="compound">BTextView</ref> to automatically resize itself, <computeroutput>false</computeroutput> to disable automatic resizing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resizeView</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBTextView" kindref="compound">BTextView</ref> object&apos;s parent view that resizes itself.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="205" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ab6475a654386b4e07a897992294a7fae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::IsResizable</definition>
        <argsstring>() const</argsstring>
        <name>IsResizable</name>
        <qualifiedname>BTextView::IsResizable</qualifiedname>
        <briefdescription>
<para>Returns whether or not the object is resizable. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the object is resizable, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1a106796bac011113352981917f001f24f" kindref="member">MakeResizable()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="207" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Undo State</header>
      <memberdef kind="function" id="classBTextView_1a21286b9caeb086eff3728daea6d5f9ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetDoesUndo</definition>
        <argsstring>(bool undo)</argsstring>
        <name>SetDoesUndo</name>
        <qualifiedname>BTextView::SetDoesUndo</qualifiedname>
        <param>
          <type>bool</type>
          <declname>undo</declname>
        </param>
        <briefdescription>
<para>Enables and disables the undo mechanism. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>undo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass in <computeroutput>true</computeroutput> to enable the undo mechanism, <computeroutput>false</computeroutput> to disable it.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="208" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a6b3e89d72238e1d92e3d6aa558ad5b06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::DoesUndo</definition>
        <argsstring>() const</argsstring>
        <name>DoesUndo</name>
        <qualifiedname>BTextView::DoesUndo</qualifiedname>
        <briefdescription>
<para>Returns whether or not the undo mechanism is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if undo is enabled, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1a21286b9caeb086eff3728daea6d5f9ac" kindref="member">SetDoesUndo()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="209" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Hide Typing</header>
      <memberdef kind="function" id="classBTextView_1a0461eff711af1cc8f797143ea4a932f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::HideTyping</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>HideTyping</name>
        <qualifiedname>BTextView::HideTyping</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Enables and disables type hiding. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass in <computeroutput>true</computeroutput> to enable type hiding, <computeroutput>false</computeroutput> to disable it.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R5 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="210" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a0609e9935d9c7563df37d05957c4f7fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::IsTypingHidden</definition>
        <argsstring>() const</argsstring>
        <name>IsTypingHidden</name>
        <qualifiedname>BTextView::IsTypingHidden</qualifiedname>
        <briefdescription>
<para>Returns whether or not typing is hidden. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if typing is hidden, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBTextView_1a0461eff711af1cc8f797143ea4a932f1" kindref="member">HideTyping()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R5 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="211" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBTextView_1ac92cb98e148c298c112a88037b3a8fb7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class TextTrackState</definition>
        <argsstring></argsstring>
        <name>TextTrackState</name>
        <qualifiedname>BTextView::TextTrackState</qualifiedname>
        <param>
          <type>TextTrackState</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="283" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBTextView_1a3f024123b9eef4053f68c013a92a0cea" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BTextView::_reserved[6]</definition>
        <argsstring>[6]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BTextView::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="473" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a3e4461ade42e77bfaf6250659fbd307b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fActive</definition>
        <argsstring></argsstring>
        <name>fActive</name>
        <qualifiedname>BTextView::fActive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="435" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a6290cf2ab7b735fa9232f8659be31564" prot="private" static="no" mutable="no">
        <type>alignment</type>
        <definition>alignment BTextView::fAlignment</definition>
        <argsstring></argsstring>
        <name>fAlignment</name>
        <qualifiedname>BTextView::fAlignment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="443" column="10" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1ab0cdd7cc636e8a69931b7da250ba806f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fAutoindent</definition>
        <argsstring></argsstring>
        <name>fAutoindent</name>
        <qualifiedname>BTextView::fAutoindent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="444" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1af2e48149377e07c28552859d2c2b6438" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::fCaretOffset</definition>
        <argsstring></argsstring>
        <name>fCaretOffset</name>
        <qualifiedname>BTextView::fCaretOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="430" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a84a6de5894803dc00a23f7a4dab1b353" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
        <definition>bigtime_t BTextView::fCaretTime</definition>
        <argsstring></argsstring>
        <name>fCaretTime</name>
        <qualifiedname>BTextView::fCaretTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="429" column="10" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a6bede4b605cb176e9102e117a8b5c212" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fCaretVisible</definition>
        <argsstring></argsstring>
        <name>fCaretVisible</name>
        <qualifiedname>BTextView::fCaretVisible</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="428" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1aa8e54ff399397a06a98744cca14b542a" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::fClickCount</definition>
        <argsstring></argsstring>
        <name>fClickCount</name>
        <qualifiedname>BTextView::fClickCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="431" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1abf8711ef4003c51db8b9653720d1a9a4" prot="private" static="no" mutable="no">
        <type><ref refid="classBMessageRunner" kindref="compound">BMessageRunner</ref> *</type>
        <definition>BMessageRunner* BTextView::fClickRunner</definition>
        <argsstring></argsstring>
        <name>fClickRunner</name>
        <qualifiedname>BTextView::fClickRunner</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="452" column="15" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1ad562e332e0308687bb6c28e7207a13fe" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
        <definition>bigtime_t BTextView::fClickTime</definition>
        <argsstring></argsstring>
        <name>fClickTime</name>
        <qualifiedname>BTextView::fClickTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="432" column="10" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1af5a98791f79a00cd60749e454b9b4852" prot="private" static="no" mutable="no">
        <type>color_space</type>
        <definition>color_space BTextView::fColorSpace</definition>
        <argsstring></argsstring>
        <name>fColorSpace</name>
        <qualifiedname>BTextView::fColorSpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="446" column="12" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a11605693c2568b5f2f256ad1a9fc88b5" prot="private" static="no" mutable="no">
        <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
        <definition>BView* BTextView::fContainerView</definition>
        <argsstring></argsstring>
        <name>fContainerView</name>
        <qualifiedname>BTextView::fContainerView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="448" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a7135db83407e258b5d7691ff7a5b72f0" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ac56eeb3040e225fafe52dc1872233eeb" kindref="member">uint8</ref></type>
        <definition>uint8 BTextView::fCursor</definition>
        <argsstring></argsstring>
        <name>fCursor</name>
        <qualifiedname>BTextView::fCursor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="434" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1afee42ef6e76f876f4ecd9f356dbd5522" prot="private" static="no" mutable="no">
        <type><ref refid="classBList" kindref="compound">BList</ref> *</type>
        <definition>BList* BTextView::fDisallowedChars</definition>
        <argsstring></argsstring>
        <name>fDisallowedChars</name>
        <qualifiedname>BTextView::fDisallowedChars</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="442" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1ab5342a891b8747d07f54891f925a5648" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::fDragOffset</definition>
        <argsstring></argsstring>
        <name>fDragOffset</name>
        <qualifiedname>BTextView::fDragOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="433" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a9aacfcb4f5b61301696eb1a66062a672" prot="private" static="no" mutable="no">
        <type><ref refid="classBMessageRunner" kindref="compound">BMessageRunner</ref> *</type>
        <definition>BMessageRunner* BTextView::fDragRunner</definition>
        <argsstring></argsstring>
        <name>fDragRunner</name>
        <qualifiedname>BTextView::fDragRunner</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="451" column="15" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a3c058faaac640c528620d7ae95c74bef" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fEditable</definition>
        <argsstring></argsstring>
        <name>fEditable</name>
        <qualifiedname>BTextView::fEditable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="439" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a4723c5dc08571b9b3a845fd5acc32fea" prot="private" static="no" mutable="no">
        <type>InlineInput *</type>
        <definition>InlineInput* BTextView::fInline</definition>
        <argsstring></argsstring>
        <name>fInline</name>
        <qualifiedname>BTextView::fInline</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="450" column="12" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a9adcaec1a76028eec24bd9f224e10cdd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fInstalledNavigateCommandWordwiseShortcuts</definition>
        <argsstring></argsstring>
        <name>fInstalledNavigateCommandWordwiseShortcuts</name>
        <qualifiedname>BTextView::fInstalledNavigateCommandWordwiseShortcuts</qualifiedname>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="460" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1ab1b2394ebfaf9065a945243d0c7bd3c2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fInstalledNavigateHomeEndDocwiseShortcuts</definition>
        <argsstring></argsstring>
        <name>fInstalledNavigateHomeEndDocwiseShortcuts</name>
        <qualifiedname>BTextView::fInstalledNavigateHomeEndDocwiseShortcuts</qualifiedname>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="463" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1adae758ef6ccf451e81eab0064865ce0d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fInstalledNavigateOptionLinewiseShortcuts</definition>
        <argsstring></argsstring>
        <name>fInstalledNavigateOptionLinewiseShortcuts</name>
        <qualifiedname>BTextView::fInstalledNavigateOptionLinewiseShortcuts</qualifiedname>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="462" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a3a8f4eb5c8f08696bb8c4f9c8789f582" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fInstalledNavigateOptionWordwiseShortcuts</definition>
        <argsstring></argsstring>
        <name>fInstalledNavigateOptionWordwiseShortcuts</name>
        <qualifiedname>BTextView::fInstalledNavigateOptionWordwiseShortcuts</qualifiedname>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="461" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1af6956c0044d4468f128ae4a532db0f21" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fInstalledRemoveCommandWordwiseShortcuts</definition>
        <argsstring></argsstring>
        <name>fInstalledRemoveCommandWordwiseShortcuts</name>
        <qualifiedname>BTextView::fInstalledRemoveCommandWordwiseShortcuts</qualifiedname>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="470" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1adbf5acb3b1cdb318f65030a2ffb95e97" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fInstalledRemoveOptionWordwiseShortcuts</definition>
        <argsstring></argsstring>
        <name>fInstalledRemoveOptionWordwiseShortcuts</name>
        <qualifiedname>BTextView::fInstalledRemoveOptionWordwiseShortcuts</qualifiedname>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="471" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a786c7304c417962f983de3aac049e35b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fInstalledSelectCommandWordwiseShortcuts</definition>
        <argsstring></argsstring>
        <name>fInstalledSelectCommandWordwiseShortcuts</name>
        <qualifiedname>BTextView::fInstalledSelectCommandWordwiseShortcuts</qualifiedname>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="465" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a2dde8fe7ab50897ebeac7abf631fb7a1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fInstalledSelectHomeEndDocwiseShortcuts</definition>
        <argsstring></argsstring>
        <name>fInstalledSelectHomeEndDocwiseShortcuts</name>
        <qualifiedname>BTextView::fInstalledSelectHomeEndDocwiseShortcuts</qualifiedname>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="468" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1af3ca6a7067b15407d543d36777b89059" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fInstalledSelectOptionLinewiseShortcuts</definition>
        <argsstring></argsstring>
        <name>fInstalledSelectOptionLinewiseShortcuts</name>
        <qualifiedname>BTextView::fInstalledSelectOptionLinewiseShortcuts</qualifiedname>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="467" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a2092835b55955746b5dcdb2cab3819c6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fInstalledSelectOptionWordwiseShortcuts</definition>
        <argsstring></argsstring>
        <name>fInstalledSelectOptionWordwiseShortcuts</name>
        <qualifiedname>BTextView::fInstalledSelectOptionWordwiseShortcuts</qualifiedname>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="466" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1afd054eea05d641927164360d1fde9857" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::fLastClickOffset</definition>
        <argsstring></argsstring>
        <name>fLastClickOffset</name>
        <qualifiedname>BTextView::fLastClickOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="458" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a45005874c848c4fdab474ba7b54f81f2" prot="private" static="no" mutable="no">
        <type>LayoutData *</type>
        <definition>LayoutData* BTextView::fLayoutData</definition>
        <argsstring></argsstring>
        <name>fLayoutData</name>
        <qualifiedname>BTextView::fLayoutData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="457" column="11" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1aa97751628b5ceabe1cb02ca8757d1a52" prot="private" static="no" mutable="no">
        <type>LineBuffer *</type>
        <definition>LineBuffer* BTextView::fLines</definition>
        <argsstring></argsstring>
        <name>fLines</name>
        <qualifiedname>BTextView::fLines</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="423" column="11" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1adc04579a7d2e386d8b3a2f3945b636c9" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::fMaxBytes</definition>
        <argsstring></argsstring>
        <name>fMaxBytes</name>
        <qualifiedname>BTextView::fMaxBytes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="441" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a1fcb52811d5f2000e5c4861a7a4eb33d" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float BTextView::fMinTextRectWidth</definition>
        <argsstring></argsstring>
        <name>fMinTextRectWidth</name>
        <qualifiedname>BTextView::fMinTextRectWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="456" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1ae7f636fa0ca83fc77fadbf135d17af8b" prot="private" static="no" mutable="no">
        <type><ref refid="classBBitmap" kindref="compound">BBitmap</ref> *</type>
        <definition>BBitmap* BTextView::fOffscreen</definition>
        <argsstring></argsstring>
        <name>fOffscreen</name>
        <qualifiedname>BTextView::fOffscreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="445" column="9" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a172c8da621063c30bd8bd69e680605d3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fResizable</definition>
        <argsstring></argsstring>
        <name>fResizable</name>
        <qualifiedname>BTextView::fResizable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="447" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1ad9d40055ecd211f7dbb2ea88742a1af7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fSelectable</definition>
        <argsstring></argsstring>
        <name>fSelectable</name>
        <qualifiedname>BTextView::fSelectable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="438" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a012b180f6df15ff8e66fc2498c84e8ef" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::fSelEnd</definition>
        <argsstring></argsstring>
        <name>fSelEnd</name>
        <qualifiedname>BTextView::fSelEnd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="427" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a36ee9b8e531555d4f721007d0bb2449e" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::fSelStart</definition>
        <argsstring></argsstring>
        <name>fSelStart</name>
        <qualifiedname>BTextView::fSelStart</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="426" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a4292e6067408464f942c182e80c4375d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fStylable</definition>
        <argsstring></argsstring>
        <name>fStylable</name>
        <qualifiedname>BTextView::fStylable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="436" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a3181239f5929ebfb446110d21fa52b31" prot="private" static="no" mutable="no">
        <type>StyleBuffer *</type>
        <definition>StyleBuffer* BTextView::fStyles</definition>
        <argsstring></argsstring>
        <name>fStyles</name>
        <qualifiedname>BTextView::fStyles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="424" column="12" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a40c45fb7158cd51d80cbb5f6ba134e62" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float BTextView::fTabWidth</definition>
        <argsstring></argsstring>
        <name>fTabWidth</name>
        <qualifiedname>BTextView::fTabWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="437" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a6f46bed8e37e77a65d110c7eede1c3f0" prot="private" static="no" mutable="no">
        <type>BPrivate::TextGapBuffer *</type>
        <definition>BPrivate::TextGapBuffer* BTextView::fText</definition>
        <argsstring></argsstring>
        <name>fText</name>
        <qualifiedname>BTextView::fText</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="422" column="24" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a4ea2a3268fb4d4b41cc2430a79d5d1b1" prot="private" static="no" mutable="no">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BTextView::fTextRect</definition>
        <argsstring></argsstring>
        <name>fTextRect</name>
        <qualifiedname>BTextView::fTextRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="425" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a370a610ead970f0803b82ec0ecd0758f" prot="private" static="no" mutable="no">
        <type>TextTrackState *</type>
        <definition>TextTrackState* BTextView::fTrackingMouse</definition>
        <argsstring></argsstring>
        <name>fTrackingMouse</name>
        <qualifiedname>BTextView::fTrackingMouse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="454" column="15" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a1410cf9bfceddf6de20a63c8e8518079" prot="private" static="no" mutable="no">
        <type>UndoBuffer *</type>
        <definition>UndoBuffer* BTextView::fUndo</definition>
        <argsstring></argsstring>
        <name>fUndo</name>
        <qualifiedname>BTextView::fUndo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="449" column="11" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1ab5ddbf1b3b5e9174cbc28473a481f238" prot="private" static="no" mutable="no">
        <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
        <definition>BPoint BTextView::fWhere</definition>
        <argsstring></argsstring>
        <name>fWhere</name>
        <qualifiedname>BTextView::fWhere</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="453" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBTextView_1a5d3719db70f21d47c5e7bc7e95fe8bcd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTextView::fWrap</definition>
        <argsstring></argsstring>
        <name>fWrap</name>
        <qualifiedname>BTextView::fWrap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="440" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBTextView_1a9ed3c44d9376ae18e5b2ad06595e5936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BTextView::BTextView</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>BTextView</name>
        <qualifiedname>BTextView::BTextView</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classBTextView" kindref="compound">BTextView</ref> object from the passed in <emphasis>archive</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>archive</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBMessage" kindref="compound">BMessage</ref> object from which the object is created.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a93a2741707da3d1cbfa2d102bb2b6ba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BTextView::BTextView</definition>
        <argsstring>(BRect frame, const char *name, BRect textRect, const BFont *initialFont, const rgb_color *initialColor, uint32 resizeMask, uint32 flags)</argsstring>
        <name>BTextView</name>
        <qualifiedname>BTextView::BTextView</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>textRect</declname>
        </param>
        <param>
          <type>const <ref refid="classBFont" kindref="compound">BFont</ref> *</type>
          <declname>initialFont</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>initialColor</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>resizeMask</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classBTextView" kindref="compound">BTextView</ref> object and sets the initial font and color. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBTextView" kindref="compound">BTextView</ref> frame rectangle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>textRect</parametername>
</parameternamelist>
<parameterdescription>
<para>The area of the text within the <ref refid="classBTextView" kindref="compound">BTextView</ref> object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialFont</parametername>
</parameternamelist>
<parameterdescription>
<para>The text font to display. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialColor</parametername>
</parameternamelist>
<parameterdescription>
<para>The text color to display. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resizeMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Resizing mask, passed to <ref refid="classBView" kindref="compound">BView</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>flags</emphasis> passed to <ref refid="classBView" kindref="compound">BView</ref>, <computeroutput>B_FRAME_EVENTS</computeroutput>, <computeroutput>B_PULSE_NEEDED</computeroutput> and <computeroutput>B_INPUT_METHOD_AWARE</computeroutput> are always set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a3a15a66e85637c767c5f531f92fe86e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BTextView::BTextView</definition>
        <argsstring>(BRect frame, const char *name, BRect textRect, uint32 resizeMask, uint32 flags=B_WILL_DRAW|B_PULSE_NEEDED)</argsstring>
        <name>BTextView</name>
        <qualifiedname>BTextView::BTextView</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>textRect</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>resizeMask</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval><ref refid="View_8h_1a59354fa34a5663d714649927705fd4bf" kindref="member">B_WILL_DRAW</ref>|<ref refid="View_8h_1ab4dde62f3eff15cbf9b23b973a32a87d" kindref="member">B_PULSE_NEEDED</ref></defval>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classBTextView" kindref="compound">BTextView</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>The frame rectangle of the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>textRect</parametername>
</parameternamelist>
<parameterdescription>
<para>The area of the text within the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resizeMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Resizing mask, passed to <ref refid="classBView" kindref="compound">BView</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>flags</emphasis> passed to <ref refid="classBView" kindref="compound">BView</ref>, <computeroutput>B_FRAME_EVENTS</computeroutput>, <computeroutput>B_PULSE_NEEDED</computeroutput> and <computeroutput>B_INPUT_METHOD_AWARE</computeroutput> are always set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a60f4c56c03150727f757953f91a779b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BTextView::BTextView</definition>
        <argsstring>(const char *name, const BFont *initialFont, const rgb_color *initialColor, uint32 flags)</argsstring>
        <name>BTextView</name>
        <qualifiedname>BTextView::BTextView</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classBFont" kindref="compound">BFont</ref> *</type>
          <declname>initialFont</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>initialColor</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classBTextView" kindref="compound">BTextView</ref> object and sets the initial font and color, dynamic layout version. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialFont</parametername>
</parameternamelist>
<parameterdescription>
<para>The text font to display. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialColor</parametername>
</parameternamelist>
<parameterdescription>
<para>The text color to display. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>flags</emphasis> passed to <ref refid="classBView" kindref="compound">BView</ref>, <computeroutput>B_FRAME_EVENTS</computeroutput>, <computeroutput>B_PULSE_NEEDED</computeroutput> and <computeroutput>B_INPUT_METHOD_AWARE</computeroutput> are always set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a47484886491aceabb4153844ab6ef284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BTextView::BTextView</definition>
        <argsstring>(const char *name, uint32 flags=B_WILL_DRAW|B_PULSE_NEEDED)</argsstring>
        <name>BTextView</name>
        <qualifiedname>BTextView::BTextView</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval><ref refid="View_8h_1a59354fa34a5663d714649927705fd4bf" kindref="member">B_WILL_DRAW</ref>|<ref refid="View_8h_1ab4dde62f3eff15cbf9b23b973a32a87d" kindref="member">B_PULSE_NEEDED</ref></defval>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classBTextView" kindref="compound">BTextView</ref> object, dynamic layout version. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>flags</emphasis> passed to <ref refid="classBView" kindref="compound">BView</ref>, <computeroutput>B_FRAME_EVENTS</computeroutput>, <computeroutput>B_PULSE_NEEDED</computeroutput> and <computeroutput>B_INPUT_METHOD_AWARE</computeroutput> are always set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a2f8f9f4590d6436a4fe3cbbafb9db8cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BTextView::~BTextView</definition>
        <argsstring>()</argsstring>
        <name>~BTextView</name>
        <qualifiedname>BTextView::~BTextView</qualifiedname>
        <briefdescription>
<para>Frees the memory allocated and destroys the object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="67" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aad46fd5283ed45f76f12e2ce8313cc68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::GetFontAndColor</definition>
        <argsstring>(BFont *_font, uint32 *_mode, rgb_color *_color=NULL, bool *_sameColor=NULL) const</argsstring>
        <name>GetFontAndColor</name>
        <qualifiedname>BTextView::GetFontAndColor</qualifiedname>
        <param>
          <type><ref refid="classBFont" kindref="compound">BFont</ref> *</type>
          <declname>_font</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> *</type>
          <declname>_mode</declname>
        </param>
        <param>
          <type><ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>_color</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>_sameColor</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="144" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a38f2492dc77db1be6f4a79eb1df25bb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::GetFontAndColor</definition>
        <argsstring>(int32 offset, BFont *_font, rgb_color *_color=NULL) const</argsstring>
        <name>GetFontAndColor</name>
        <qualifiedname>BTextView::GetFontAndColor</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="classBFont" kindref="compound">BFont</ref> *</type>
          <declname>_font</declname>
        </param>
        <param>
          <type><ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>_color</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="142" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aec7881d97bdc508b01a6caa80f51d963" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::GetHeightForWidth</definition>
        <argsstring>(float width, float *min, float *max, float *preferred)</argsstring>
        <name>GetHeightForWidth</name>
        <qualifiedname>BTextView::GetHeightForWidth</qualifiedname>
        <reimplements refid="classBView_1ad34bee968b1ec98a0bf89343340b6b07">GetHeightForWidth</reimplements>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>preferred</declname>
        </param>
        <briefdescription>
<para>Returns the min, max and preferred height for a given width. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>The width you want the height to be calculated for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">min</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum height that the layout will request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">max</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum height that the layout will request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">preferred</parametername>
</parameternamelist>
<parameterdescription>
<para>The preferred height for this <emphasis>width</emphasis>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="252" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a5b31f120d4476b83beb08f3333cfc85d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::GetPreferredSize</definition>
        <argsstring>(float *_width, float *_height)</argsstring>
        <name>GetPreferredSize</name>
        <qualifiedname>BTextView::GetPreferredSize</qualifiedname>
        <reimplements refid="classBView_1a089c3ff794c454388a9388c7b6568478">GetPreferredSize</reimplements>
        <param>
          <type>float *</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_height</declname>
        </param>
        <briefdescription>
<para>Fill out the preferred width and height of the view into the <emphasis>_width</emphasis> and <emphasis>_height</emphasis> parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>Derived classes should override this method to set the preferred size of object.</para>
<para><simplesect kind="remark"><para>Either the <emphasis>_width</emphasis> or <emphasis>_height</emphasis> parameter may be set to <computeroutput>NULL</computeroutput> if you only want to get the other one.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a float to store the width of the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a float to store the height of the view.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="214" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a9cb6a32b918a5c90489b6fb7e27fcb6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BTextView::GetSupportedSuites</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>GetSupportedSuites</name>
        <qualifiedname>BTextView::GetSupportedSuites</qualifiedname>
        <reimplements refid="classBView_1a772462d751d457f63ee0fc56d8ba02d1">GetSupportedSuites</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reports the suites of messages and specifiers that derived classes understand.  </para>
<para><simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="90" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aab3e242b035ded23b4f8a6ba2c3e391c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::GetTextRegion</definition>
        <argsstring>(int32 startOffset, int32 endOffset, BRegion *outRegion) const</argsstring>
        <name>GetTextRegion</name>
        <qualifiedname>BTextView::GetTextRegion</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>endOffset</declname>
        </param>
        <param>
          <type><ref refid="classBRegion" kindref="compound">BRegion</ref> *</type>
          <declname>outRegion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="170" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a099a44a6619914db20a02a6ccf611b70" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BTextView::HasHeightForWidth</definition>
        <argsstring>()</argsstring>
        <name>HasHeightForWidth</name>
        <qualifiedname>BTextView::HasHeightForWidth</qualifiedname>
        <reimplements refid="classBView_1abd411461b7e23ad17e7294f8f5e1cbeb">HasHeightForWidth</reimplements>
        <briefdescription>
<para>Returns whether the layout of the view can calculate a height for a given width. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
Use <ref refid="classBTextView_1aec7881d97bdc508b01a6caa80f51d963" kindref="member">GetHeightForWidth()</ref> to actually get the preferred size.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the height values can be calculated, <computeroutput>false</computeroutput> if they cannot.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="251" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ac0bc816f13b04fd2ec2668c618ab8ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BTextView::MakeFocus</definition>
        <argsstring>(bool focus=true)</argsstring>
        <name>MakeFocus</name>
        <qualifiedname>BTextView::MakeFocus</qualifiedname>
        <reimplements refid="classBView_1a266a368d81c6e1668b2b9b22b5016853">MakeFocus</reimplements>
        <param>
          <type>bool</type>
          <declname>focus</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Highlight or unhighlight the selection when the text view acquires or loses its focus state. </para>
        </briefdescription>
        <detaileddescription>
<para>The focus view handles selections and KeyDown events when the the attached window is active. There can be only one focus view at a time per window.</para>
<para>When called with <emphasis>focus</emphasis> set to <computeroutput>true</computeroutput> this method first calls <ref refid="classBTextView_1ac0bc816f13b04fd2ec2668c618ab8ca8" kindref="member">MakeFocus()</ref> on the previously focused view with <emphasis>focus</emphasis> set to <computeroutput>false</computeroutput>.</para>
<para>The focus doesn&apos;t automatically change when <ref refid="classBTextView_1a581a2b2877b29d275771ae5010d6706d" kindref="member">MouseDown()</ref> is called so calling <ref refid="classBTextView_1ac0bc816f13b04fd2ec2668c618ab8ca8" kindref="member">MakeFocus()</ref> is the only way to make a view the focus view of a window. Classes derived from <ref refid="classBView" kindref="compound">BView</ref> that can display the current selection, or that can accept pasted data should call <ref refid="classBTextView_1ac0bc816f13b04fd2ec2668c618ab8ca8" kindref="member">MakeFocus()</ref> in their <ref refid="classBTextView_1a581a2b2877b29d275771ae5010d6706d" kindref="member">MouseDown()</ref> method to update the focus view of the window on click.</para>
<para>If the view isn&apos;t attached to a window this method has no effect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>focus</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>true</emphasis> to set focus, <emphasis>false</emphasis> to remove it.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="84" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1af8e32e9318d9368137940d2511d3dff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>virtual BSize BTextView::MaxSize</definition>
        <argsstring>()</argsstring>
        <name>MaxSize</name>
        <qualifiedname>BTextView::MaxSize</qualifiedname>
        <reimplements refid="classBView_1ad1f1843a380e850948cf7e4ed2d5f1ba">MaxSize</reimplements>
        <briefdescription>
<para>Return the maximum size of the view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="return"><para>The maximum size of the view as a <ref refid="classBSize" kindref="compound">BSize</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBAbstractLayout_1ad1ea5d04a5c8028f8295efde7106a66c" kindref="member">BAbstractLayout::MaxSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="248" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a3a03f5bff63cba54276025e3788520d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>virtual BSize BTextView::MinSize</definition>
        <argsstring>()</argsstring>
        <name>MinSize</name>
        <qualifiedname>BTextView::MinSize</qualifiedname>
        <reimplements refid="classBView_1acfb0cffde35b853dab6bc5d1bb03265f">MinSize</reimplements>
        <briefdescription>
<para>Return the minimum size of the view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="return"><para>The minimum size of the view as a <ref refid="classBSize" kindref="compound">BSize</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBAbstractLayout_1a3f692cb3306ce726e3cc6d2771824cd5" kindref="member">BAbstractLayout::MinSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="247" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a6519856e1dbf6e021911529b8a0a15c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BTextView::Perform</definition>
        <argsstring>(perform_code code, void *data)</argsstring>
        <name>Perform</name>
        <qualifiedname>BTextView::Perform</qualifiedname>
        <reimplements refid="classBView_1a512a6c8dca1a62b14cdcb1c22070129b">Perform</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" kindref="member">perform_code</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defname>_data</defname>
        </param>
        <briefdescription>
<para>Perform some action. (Internal Method) </para>
        </briefdescription>
        <detaileddescription>
<para>This method is available to allow classes to be extended while maintaining binary compatibility.</para>
<para>The following perform codes are recognized:<itemizedlist>
<listitem><para><computeroutput>PERFORM_CODE_MIN_SIZE:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_MAX_SIZE:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_PREFERRED_SIZE:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_LAYOUT_ALIGNMENT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_HAS_HEIGHT_FOR_WIDTH:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_GET_HEIGHT_FOR_WIDTH:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_SET_LAYOUT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_INVALIDATE_LAYOUT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_DO_LAYOUT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_GET_TOOL_TIP_AT:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_ALL_UNARCHIVED:</computeroutput> </para>
</listitem><listitem><para><computeroutput>PERFORM_CODE_ALL_ARCHIVED:</computeroutput> </para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The perform code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to store some data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="91" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ad46589273b8c8acb8737efde58407d3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>virtual BSize BTextView::PreferredSize</definition>
        <argsstring>()</argsstring>
        <name>PreferredSize</name>
        <qualifiedname>BTextView::PreferredSize</qualifiedname>
        <reimplements refid="classBView_1a7f51d63e71b60a2721d04436ffbcfe36">PreferredSize</reimplements>
        <briefdescription>
<para>Return the preferred size of the view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="return"><para>The preferred size of the view as a <ref refid="classBSize" kindref="compound">BSize</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBAbstractLayout_1af5f21d9900c85ca053dba3938bef3fd3" kindref="member">BAbstractLayout::PreferredSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="249" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ae288597c33c40f5f42abfe3ed41fce86" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::ResizeToPreferred</definition>
        <argsstring>()</argsstring>
        <name>ResizeToPreferred</name>
        <qualifiedname>BTextView::ResizeToPreferred</qualifiedname>
        <reimplements refid="classBView_1abe8c63c85555e800e063388e7cf3e1a7">ResizeToPreferred</reimplements>
        <briefdescription>
<para>Resizes the view to its preferred size keeping the position of the left top corner constant. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>It is not recommended to use this method for views that are part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="213" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a3e0e67bcd942c0b738043235e56fdf29" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
        <definition>BHandler * BTextView::ResolveSpecifier</definition>
        <argsstring>(BMessage *message, int32 index, BMessage *specifier, int32 form, const char *property)</argsstring>
        <name>ResolveSpecifier</name>
        <qualifiedname>BTextView::ResolveSpecifier</qualifiedname>
        <reimplements refid="classBView_1a4c0c6d3b21ae92056e5e40fe4d3ec175">ResolveSpecifier</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>form</declname>
          <defname>what</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine the proper handler for a scripting message.  </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The scripting message to determine the handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the specifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The message which contains the specifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>what</parametername>
</parameternamelist>
<parameterdescription>
<para>The &apos;what&apos; field of the specifier message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the target property.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the proper <ref refid="classBHandler" kindref="compound">BHandler</ref> for the given scripting message.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="87" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a48d9cccd617a4cab0e7a8ac26d0b63b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetFontAndColor</definition>
        <argsstring>(const BFont *font, uint32 mode=B_FONT_ALL, const rgb_color *color=NULL)</argsstring>
        <name>SetFontAndColor</name>
        <qualifiedname>BTextView::SetFontAndColor</qualifiedname>
        <param>
          <type>const <ref refid="classBFont" kindref="compound">BFont</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>mode</declname>
          <defval><ref refid="View_8h_1af715e26dfffd1f8de1c18449e2770cffa2cc16d47078da54b17b7ed4fe2d64798" kindref="member">B_FONT_ALL</ref></defval>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>color</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="134" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a2b5e64f896b1dd9974450f7959d773f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetFontAndColor</definition>
        <argsstring>(int32 startOffset, int32 endOffset, const BFont *font, uint32 mode=B_FONT_ALL, const rgb_color *color=NULL)</argsstring>
        <name>SetFontAndColor</name>
        <qualifiedname>BTextView::SetFontAndColor</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>endOffset</declname>
        </param>
        <param>
          <type>const <ref refid="classBFont" kindref="compound">BFont</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>mode</declname>
          <defval><ref refid="View_8h_1af715e26dfffd1f8de1c18449e2770cffa2cc16d47078da54b17b7ed4fe2d64798" kindref="member">B_FONT_ALL</ref></defval>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>color</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="137" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1af8a001e075c227513621ee16090c80db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::SetRunArray</definition>
        <argsstring>(int32 startOffset, int32 endOffset, const text_run_array *runs)</argsstring>
        <name>SetRunArray</name>
        <qualifiedname>BTextView::SetRunArray</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>endOffset</declname>
        </param>
        <param>
          <type>const <ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>runs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="148" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a01eb835c908413f5d02743018a21ad31" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::Undo</definition>
        <argsstring>(BClipboard *clipboard)</argsstring>
        <name>Undo</name>
        <qualifiedname>BTextView::Undo</qualifiedname>
        <param>
          <type><ref refid="classBClipboard" kindref="compound">BClipboard</ref> *</type>
          <declname>clipboard</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="235" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a2048fe01750273a23ff12a715f2f591b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="TextView_8h_1add54c5c2974c5515e6bb26345516e45b" kindref="member">undo_state</ref></type>
        <definition>undo_state BTextView::UndoState</definition>
        <argsstring>(bool *isRedo) const</argsstring>
        <name>UndoState</name>
        <qualifiedname>BTextView::UndoState</qualifiedname>
        <param>
          <type>bool *</type>
          <declname>isRedo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="236" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBTextView_1aecac40f05a63e2719b302d3c83c898c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
        <definition>static text_run_array * BTextView::AllocRunArray</definition>
        <argsstring>(int32 entryCount, int32 *outSize=NULL)</argsstring>
        <name>AllocRunArray</name>
        <qualifiedname>BTextView::AllocRunArray</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>entryCount</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>outSize</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="219" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a144d6448765d74958f3925261089f673" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
        <definition>static text_run_array * BTextView::CopyRunArray</definition>
        <argsstring>(const text_run_array *orig, int32 countDelta=0)</argsstring>
        <name>CopyRunArray</name>
        <qualifiedname>BTextView::CopyRunArray</qualifiedname>
        <param>
          <type>const <ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>orig</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>countDelta</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="221" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a39b5a54c3d3cd361c9e90c4dcba8689e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void * BTextView::FlattenRunArray</definition>
        <argsstring>(const text_run_array *runArray, int32 *_size=NULL)</argsstring>
        <name>FlattenRunArray</name>
        <qualifiedname>BTextView::FlattenRunArray</qualifiedname>
        <param>
          <type>const <ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>runArray</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_size</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="224" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a8358a52de2454a2d0fb8f8882d8ac9da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void BTextView::FreeRunArray</definition>
        <argsstring>(text_run_array *array)</argsstring>
        <name>FreeRunArray</name>
        <qualifiedname>BTextView::FreeRunArray</qualifiedname>
        <param>
          <type><ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="223" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ac392ccdc8ac97ad5c090a7b5a42ac223" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
        <definition>static text_run_array * BTextView::UnflattenRunArray</definition>
        <argsstring>(const void *data, int32 *_size=NULL)</argsstring>
        <name>UnflattenRunArray</name>
        <qualifiedname>BTextView::UnflattenRunArray</qualifiedname>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_size</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="226" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBTextView_1a10a0d8be5ed8886ab33e3ced15bf5308" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::DeleteText</definition>
        <argsstring>(int32 fromOffset, int32 toOffset)</argsstring>
        <name>DeleteText</name>
        <qualifiedname>BTextView::DeleteText</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>toOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="232" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a5126538fd4fc16a0deec2c256c62ce51" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::DoLayout</definition>
        <argsstring>()</argsstring>
        <name>DoLayout</name>
        <qualifiedname>BTextView::DoLayout</qualifiedname>
        <reimplements refid="classBView_1a9d766a06d0885200c6ababba4c87808b">DoLayout</reimplements>
        <briefdescription>
<para>Layout view within the layout context. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This is only meaningful if the view is part of a <ref refid="classBLayout" kindref="compound">BLayout</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="244" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a27372068aee3d28071b06a42048a0371" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::GetDragParameters</definition>
        <argsstring>(BMessage *drag, BBitmap **_bitmap, BPoint *point, BHandler **_handler)</argsstring>
        <name>GetDragParameters</name>
        <qualifiedname>BTextView::GetDragParameters</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>drag</declname>
        </param>
        <param>
          <type><ref refid="classBBitmap" kindref="compound">BBitmap</ref> **</type>
          <declname>_bitmap</declname>
        </param>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref> *</type>
          <declname>point</declname>
        </param>
        <param>
          <type><ref refid="classBHandler" kindref="compound">BHandler</ref> **</type>
          <declname>_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="239" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1af6f54b64f68854ee130052d2993dcbfd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::InsertText</definition>
        <argsstring>(const char *text, int32 length, int32 offset, const text_run_array *runs)</argsstring>
        <name>InsertText</name>
        <qualifiedname>BTextView::InsertText</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const <ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>runs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="230" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ab97f9e2be3de9c163ed7b78a9fc7b74f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::LayoutInvalidated</definition>
        <argsstring>(bool descendants)</argsstring>
        <name>LayoutInvalidated</name>
        <qualifiedname>BTextView::LayoutInvalidated</qualifiedname>
        <reimplements refid="classBView_1a0a552cc0d8678939c619f98dcc80d254">LayoutInvalidated</reimplements>
        <param>
          <type>bool</type>
          <declname>descendants</declname>
        </param>
        <briefdescription>
<para>Hook method called when the layout is invalidated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>descendants</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not child views have also been invalidated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="243" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBTextView_1abd34df3c35392619245c55843d099d72" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_Activate</definition>
        <argsstring>()</argsstring>
        <name>_Activate</name>
        <qualifiedname>BTextView::_Activate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="366" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aab6e439f4a62f124616f61fa18a8763d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BTextView::_ActualTabWidth</definition>
        <argsstring>(float location) const</argsstring>
        <name>_ActualTabWidth</name>
        <qualifiedname>BTextView::_ActualTabWidth</qualifiedname>
        <param>
          <type>float</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="317" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a8da6a9b0a17f6624d91f735847326b93" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_ApplyStyleRange</definition>
        <argsstring>(int32 fromOffset, int32 toOffset, uint32 mode=B_FONT_ALL, const BFont *font=NULL, const rgb_color *color=NULL, bool syncNullStyle=true)</argsstring>
        <name>_ApplyStyleRange</name>
        <qualifiedname>BTextView::_ApplyStyleRange</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>toOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>mode</declname>
          <defval><ref refid="View_8h_1af715e26dfffd1f8de1c18449e2770cffa2cc16d47078da54b17b7ed4fe2d64798" kindref="member">B_FONT_ALL</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classBFont" kindref="compound">BFont</ref> *</type>
          <declname>font</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>color</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>bool</type>
          <declname>syncNullStyle</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="374" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ada2a736da66a8e06649ae9a5a4b625a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_AutoResize</definition>
        <argsstring>(bool doRedraw=true)</argsstring>
        <name>_AutoResize</name>
        <qualifiedname>BTextView::_AutoResize</qualifiedname>
        <param>
          <type>bool</type>
          <declname>doRedraw</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="361" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aafde5df7c9720bf045b7d63e08708e65" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_CancelInputMethod</definition>
        <argsstring>()</argsstring>
        <name>_CancelInputMethod</name>
        <qualifiedname>BTextView::_CancelInputMethod</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="406" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ab2b7bac89939f75fd69b65f53a128360" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BTextView::_CharClassification</definition>
        <argsstring>(int32 offset) const</argsstring>
        <name>_CharClassification</name>
        <qualifiedname>BTextView::_CharClassification</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="381" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ad7f1f0015f7dd4273ad9b9124129ed0a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::_CountProperties</definition>
        <argsstring>(BMessage *message, BMessage *specifier, const char *property, BMessage *reply)</argsstring>
        <name>_CountProperties</name>
        <qualifiedname>BTextView::_CountProperties</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>property</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>reply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="400" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a95c031ec04d788370a9d27d32e695b9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_Deactivate</definition>
        <argsstring>()</argsstring>
        <name>_Deactivate</name>
        <qualifiedname>BTextView::_Deactivate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="367" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aba1dc94cab6ac478b40c93a2347c6938" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_DeleteOffscreen</definition>
        <argsstring>()</argsstring>
        <name>_DeleteOffscreen</name>
        <qualifiedname>BTextView::_DeleteOffscreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="364" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ac0495910c7f9481c94a6ca3759c61071" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_DoDeleteText</definition>
        <argsstring>(int32 fromOffset, int32 toOffset)</argsstring>
        <name>_DoDeleteText</name>
        <qualifiedname>BTextView::_DoDeleteText</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>toOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="322" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1afbab074b1e5c992c205f2bcb285e378c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_DoInsertText</definition>
        <argsstring>(const char *text, int32 length, int32 offset, const text_run_array *runs)</argsstring>
        <name>_DoInsertText</name>
        <qualifiedname>BTextView::_DoInsertText</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const <ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>runs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="319" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ae9f633b4a774caf7c90d93818770a893" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_DragCaret</definition>
        <argsstring>(int32 offset)</argsstring>
        <name>_DragCaret</name>
        <qualifiedname>BTextView::_DragCaret</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="340" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ade5c5fe82d4e4f7af4cc18ac85f10fa8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_DrawCaret</definition>
        <argsstring>(int32 offset, bool visible)</argsstring>
        <name>_DrawCaret</name>
        <qualifiedname>BTextView::_DrawCaret</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="336" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a7c18a5d0c45082c5e107aa1e725def2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_DrawLine</definition>
        <argsstring>(BView *view, const int32 &amp;startLine, const int32 &amp;startOffset, const bool &amp;erase, BRect &amp;eraseRect, BRegion &amp;inputRegion)</argsstring>
        <name>_DrawLine</name>
        <qualifiedname>BTextView::_DrawLine</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type>const <ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> &amp;</type>
          <declname>startLine</declname>
        </param>
        <param>
          <type>const <ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> &amp;</type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>erase</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>eraseRect</declname>
        </param>
        <param>
          <type><ref refid="classBRegion" kindref="compound">BRegion</ref> &amp;</type>
          <declname>inputRegion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="325" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a0cd1e18404212f8ffd45b9ac96f45f32" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_DrawLines</definition>
        <argsstring>(int32 startLine, int32 endLine, int32 startOffset=-1, bool erase=false)</argsstring>
        <name>_DrawLines</name>
        <qualifiedname>BTextView::_DrawLines</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>startLine</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>endLine</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>startOffset</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>erase</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="330" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a6c2d83e8ed6cc02b5c99a85bfe5be269" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_FilterDisallowedChars</definition>
        <argsstring>(char *text, ssize_t &amp;length, text_run_array *runArray)</argsstring>
        <name>_FilterDisallowedChars</name>
        <qualifiedname>BTextView::_FilterDisallowedChars</qualifiedname>
        <param>
          <type>char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>ssize_t &amp;</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>runArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="416" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a93216a3d8530de844b19562e60c37b30" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::_FindLineBreak</definition>
        <argsstring>(int32 fromOffset, float *_ascent, float *_descent, float *inOutWidth)</argsstring>
        <name>_FindLineBreak</name>
        <qualifiedname>BTextView::_FindLineBreak</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromOffset</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_ascent</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_descent</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>inOutWidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="306" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a1c625c828da26fb232e10ccf844f01e7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::_GetProperty</definition>
        <argsstring>(BMessage *message, BMessage *specifier, const char *property, BMessage *reply)</argsstring>
        <name>_GetProperty</name>
        <qualifiedname>BTextView::_GetProperty</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>property</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>reply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="394" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a495e36f2a2f5186a0ca25c4f7c31e957" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_HandleAlphaKey</definition>
        <argsstring>(const char *bytes, int32 numBytes)</argsstring>
        <name>_HandleAlphaKey</name>
        <qualifiedname>BTextView::_HandleAlphaKey</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>numBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="298" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a7ec63721ff5c1794f62d6c434e30a863" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_HandleArrowKey</definition>
        <argsstring>(uint32 arrowKey, int32 modifiers=-1)</argsstring>
        <name>_HandleArrowKey</name>
        <qualifiedname>BTextView::_HandleArrowKey</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>arrowKey</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>modifiers</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="293" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a3b523110898bd191826c9fdd03962f49" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_HandleBackspace</definition>
        <argsstring>(int32 modifiers=-1)</argsstring>
        <name>_HandleBackspace</name>
        <qualifiedname>BTextView::_HandleBackspace</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>modifiers</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="292" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a27aa19519e9f63e16e0a1fbeca592446" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_HandleDelete</definition>
        <argsstring>(int32 modifiers=-1)</argsstring>
        <name>_HandleDelete</name>
        <qualifiedname>BTextView::_HandleDelete</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>modifiers</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="295" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a061df7a6595e78497cdeffb333e7a893" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_HandleInputMethodChanged</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>_HandleInputMethodChanged</name>
        <qualifiedname>BTextView::_HandleInputMethodChanged</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="404" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a57803da67c0607006de06ff87bce8da1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_HandleInputMethodLocationRequest</definition>
        <argsstring>()</argsstring>
        <name>_HandleInputMethodLocationRequest</name>
        <qualifiedname>BTextView::_HandleInputMethodLocationRequest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="405" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1abb7c1054bc1b82068c34f66cf9fba5dc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_HandlePageKey</definition>
        <argsstring>(uint32 pageKey, int32 modifiers=-1)</argsstring>
        <name>_HandlePageKey</name>
        <qualifiedname>BTextView::_HandlePageKey</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>pageKey</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>modifiers</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="296" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a33fb3ac6ad03ecbd352a1be1410a0a1b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_HideCaret</definition>
        <argsstring>()</argsstring>
        <name>_HideCaret</name>
        <qualifiedname>BTextView::_HideCaret</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="338" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aa0685a27e6c0ac872d773a189ff14eaa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_InitiateDrag</definition>
        <argsstring>()</argsstring>
        <name>_InitiateDrag</name>
        <qualifiedname>BTextView::_InitiateDrag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="351" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a0e5c0033024d685940c48b87ff8c79a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_InitObject</definition>
        <argsstring>(BRect textRect, const BFont *initialFont, const rgb_color *initialColor)</argsstring>
        <name>_InitObject</name>
        <qualifiedname>BTextView::_InitObject</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>textRect</declname>
        </param>
        <param>
          <type>const <ref refid="classBFont" kindref="compound">BFont</ref> *</type>
          <declname>initialFont</declname>
        </param>
        <param>
          <type>const <ref refid="structrgb__color" kindref="compound">rgb_color</ref> *</type>
          <declname>initialColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="285" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a5bc0a7ed542bac88df5932a4282c3e06" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_InvertCaret</definition>
        <argsstring>()</argsstring>
        <name>_InvertCaret</name>
        <qualifiedname>BTextView::_InvertCaret</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="339" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a293880e56e738a22a4a6cf49f14d367c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::_IsOnEmptyLastLine</definition>
        <argsstring>(int32 offset) const</argsstring>
        <name>_IsOnEmptyLastLine</name>
        <qualifiedname>BTextView::_IsOnEmptyLastLine</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="410" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a194362fa74617d9dfcce51a6a0c55e45" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::_LineAt</definition>
        <argsstring>(const BPoint &amp;point) const</argsstring>
        <name>_LineAt</name>
        <qualifiedname>BTextView::_LineAt</qualifiedname>
        <param>
          <type>const <ref refid="classBPoint" kindref="compound">BPoint</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="409" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ad5c71f737bb97e4262f86a6b0faf9700" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::_LineAt</definition>
        <argsstring>(int32 offset) const</argsstring>
        <name>_LineAt</name>
        <qualifiedname>BTextView::_LineAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="408" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a0de4ff4a67334af73945080f274d048e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::_MessageDropped</definition>
        <argsstring>(BMessage *message, BPoint where, BPoint offset)</argsstring>
        <name>_MessageDropped</name>
        <qualifiedname>BTextView::_MessageDropped</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="352" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a0b532109632ded8747ee1cfc68d956d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_NewOffscreen</definition>
        <argsstring>(float padding=0.0)</argsstring>
        <name>_NewOffscreen</name>
        <qualifiedname>BTextView::_NewOffscreen</qualifiedname>
        <param>
          <type>float</type>
          <declname>padding</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="363" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ac5e3a83a8b301ec66a4a6f368e4387b3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::_NextInitialByte</definition>
        <argsstring>(int32 offset) const</argsstring>
        <name>_NextInitialByte</name>
        <qualifiedname>BTextView::_NextInitialByte</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="382" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a433ee398b17af0e6c1ebde80bb66d936" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::_NextLineEnd</definition>
        <argsstring>(int32 offset)</argsstring>
        <name>_NextLineEnd</name>
        <qualifiedname>BTextView::_NextLineEnd</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="386" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a8006e0ef8c15272bd359708ebf8b78a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::_NextWordBoundary</definition>
        <argsstring>(int32 offset)</argsstring>
        <name>_NextWordBoundary</name>
        <qualifiedname>BTextView::_NextWordBoundary</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="389" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a436e18fb5664285b93d48ec3c17d8ce3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::_NextWordEnd</definition>
        <argsstring>(int32 offset)</argsstring>
        <name>_NextWordEnd</name>
        <qualifiedname>BTextView::_NextWordEnd</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="392" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a6dcb2bdf225bd9adcacc4a227de0a913" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_NormalizeFont</definition>
        <argsstring>(BFont *font)</argsstring>
        <name>_NormalizeFont</name>
        <qualifiedname>BTextView::_NormalizeFont</qualifiedname>
        <param>
          <type><ref refid="classBFont" kindref="compound">BFont</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="369" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1abd110e941780cc4921f3f95a3b0d7665" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BTextView::_NullStyleHeight</definition>
        <argsstring>() const</argsstring>
        <name>_NullStyleHeight</name>
        <qualifiedname>BTextView::_NullStyleHeight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="412" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aa61110bacb88265904110a52aeb7e0b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_PerformAutoScrolling</definition>
        <argsstring>()</argsstring>
        <name>_PerformAutoScrolling</name>
        <qualifiedname>BTextView::_PerformAutoScrolling</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="355" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1adff4f443f229471e0e9903aa289be187" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::_PerformMouseMoved</definition>
        <argsstring>(BPoint where, uint32 code)</argsstring>
        <name>_PerformMouseMoved</name>
        <qualifiedname>BTextView::_PerformMouseMoved</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="344" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1af979de8f3398e67a1c1cabbd2223917d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::_PerformMouseUp</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>_PerformMouseUp</name>
        <qualifiedname>BTextView::_PerformMouseUp</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="343" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a95dad6dfe58f3ac2fe065df75d7f40a0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::_PreviousInitialByte</definition>
        <argsstring>(int32 offset) const</argsstring>
        <name>_PreviousInitialByte</name>
        <qualifiedname>BTextView::_PreviousInitialByte</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="383" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a4e501ede42fbac94788c8ffaa9bcf2bb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::_PreviousLineStart</definition>
        <argsstring>(int32 offset)</argsstring>
        <name>_PreviousLineStart</name>
        <qualifiedname>BTextView::_PreviousLineStart</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="385" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ae287b843b3af7c9d01bf0a2300ee7b03" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::_PreviousWordBoundary</definition>
        <argsstring>(int32 offset)</argsstring>
        <name>_PreviousWordBoundary</name>
        <qualifiedname>BTextView::_PreviousWordBoundary</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="388" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a61f26db4b107b5ce2de149f6cdad1515" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BTextView::_PreviousWordStart</definition>
        <argsstring>(int32 offset)</argsstring>
        <name>_PreviousWordStart</name>
        <qualifiedname>BTextView::_PreviousWordStart</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="391" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a917050c967dc80b55169e72cdfd577d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_RecalculateLineBreaks</definition>
        <argsstring>(int32 *startLine, int32 *endLine)</argsstring>
        <name>_RecalculateLineBreaks</name>
        <qualifiedname>BTextView::_RecalculateLineBreaks</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>startLine</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>endLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="303" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ac11ba2c49d4337a938e60f6c97d76de4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_Refresh</definition>
        <argsstring>(int32 fromOffset, int32 toOffset, int32 scrollTo=INT32_MIN)</argsstring>
        <name>_Refresh</name>
        <qualifiedname>BTextView::_Refresh</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>toOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>scrollTo</declname>
          <defval>INT32_MIN</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="301" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a16363ac990da8e93d5aac9535e459009" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_RequestDrawLines</definition>
        <argsstring>(int32 startLine, int32 endLine)</argsstring>
        <name>_RequestDrawLines</name>
        <qualifiedname>BTextView::_RequestDrawLines</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>startLine</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>endLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="333" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a6a033050d271e97a525c1e7c37a555d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::_ReservedTextView10</definition>
        <argsstring>()</argsstring>
        <name>_ReservedTextView10</name>
        <qualifiedname>BTextView::_ReservedTextView10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="264" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a64bb7dc25f708d0239bd9f04fbb0b046" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::_ReservedTextView11</definition>
        <argsstring>()</argsstring>
        <name>_ReservedTextView11</name>
        <qualifiedname>BTextView::_ReservedTextView11</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="265" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aaea2e90283a8aa2bdd6dbe1a40151086" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::_ReservedTextView12</definition>
        <argsstring>()</argsstring>
        <name>_ReservedTextView12</name>
        <qualifiedname>BTextView::_ReservedTextView12</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="266" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aa1e64edea36dd6b5658c41c6db65a520" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::_ReservedTextView3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedTextView3</name>
        <qualifiedname>BTextView::_ReservedTextView3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="257" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a1f937d6045ee385fa0931911b0f6f252" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::_ReservedTextView4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedTextView4</name>
        <qualifiedname>BTextView::_ReservedTextView4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="258" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ae5233e95160c9d21119720c1f5237928" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::_ReservedTextView5</definition>
        <argsstring>()</argsstring>
        <name>_ReservedTextView5</name>
        <qualifiedname>BTextView::_ReservedTextView5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="259" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a7bb076d055130574071144a3f355666a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::_ReservedTextView6</definition>
        <argsstring>()</argsstring>
        <name>_ReservedTextView6</name>
        <qualifiedname>BTextView::_ReservedTextView6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="260" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1abb055f2cdfb0240cdd51ed83abe8d639" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::_ReservedTextView7</definition>
        <argsstring>()</argsstring>
        <name>_ReservedTextView7</name>
        <qualifiedname>BTextView::_ReservedTextView7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="261" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a11af5e8b5254dbb20d1f93079aad8f50" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::_ReservedTextView8</definition>
        <argsstring>()</argsstring>
        <name>_ReservedTextView8</name>
        <qualifiedname>BTextView::_ReservedTextView8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="262" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a31a881729fcca22188a3f711183c62bd" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BTextView::_ReservedTextView9</definition>
        <argsstring>()</argsstring>
        <name>_ReservedTextView9</name>
        <qualifiedname>BTextView::_ReservedTextView9</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="263" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aee7ace15ca839878d9341c55938091e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_ResetTextRect</definition>
        <argsstring>()</argsstring>
        <name>_ResetTextRect</name>
        <qualifiedname>BTextView::_ResetTextRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="290" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a417c00fb5a3051cf9c1b6690b3d9def7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_ScrollBy</definition>
        <argsstring>(float horizontalStep, float verticalStep)</argsstring>
        <name>_ScrollBy</name>
        <qualifiedname>BTextView::_ScrollBy</qualifiedname>
        <param>
          <type>float</type>
          <declname>horizontalStep</declname>
        </param>
        <param>
          <type>float</type>
          <declname>verticalStep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="357" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ab4e661679bb2cb78c372800934e78ad9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_ScrollTo</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>_ScrollTo</name>
        <qualifiedname>BTextView::_ScrollTo</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="359" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aaf53170b2f00a7c067bcbb9a439f7b4a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTextView::_SetProperty</definition>
        <argsstring>(BMessage *message, BMessage *specifier, const char *property, BMessage *reply)</argsstring>
        <name>_SetProperty</name>
        <qualifiedname>BTextView::_SetProperty</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>property</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>reply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="397" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1acf7331dc84f7a69d8899411a20bb2213" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_SetRunArray</definition>
        <argsstring>(int32 startOffset, int32 endOffset, const text_run_array *runs)</argsstring>
        <name>_SetRunArray</name>
        <qualifiedname>BTextView::_SetRunArray</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>endOffset</declname>
        </param>
        <param>
          <type>const <ref refid="structtext__run__array" kindref="compound">text_run_array</ref> *</type>
          <declname>runs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="371" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1af35c90af098d7a5c4b1b725bfff5be57" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_ShowCaret</definition>
        <argsstring>()</argsstring>
        <name>_ShowCaret</name>
        <qualifiedname>BTextView::_ShowCaret</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="337" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a2d0d13a2b9264ad54dc737ba0596eced" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_ShowContextMenu</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>_ShowContextMenu</name>
        <qualifiedname>BTextView::_ShowContextMenu</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="414" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1ad2e8f48596d71b1ff08bbd0870e46bfd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_StopMouseTracking</definition>
        <argsstring>()</argsstring>
        <name>_StopMouseTracking</name>
        <qualifiedname>BTextView::_StopMouseTracking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="342" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a83e4a3cf8dd770d3d3cb6bb44500f729" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BTextView::_StyledWidth</definition>
        <argsstring>(int32 fromOffset, int32 length, float *_ascent=NULL, float *_descent=NULL) const</argsstring>
        <name>_StyledWidth</name>
        <qualifiedname>BTextView::_StyledWidth</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromOffset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_ascent</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>float *</type>
          <declname>_descent</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="310" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a355018f74e921fd77295f93fb34c5605" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BTextView::_TabExpandedStyledWidth</definition>
        <argsstring>(int32 offset, int32 length, float *_ascent=NULL, float *_descent=NULL) const</argsstring>
        <name>_TabExpandedStyledWidth</name>
        <qualifiedname>BTextView::_TabExpandedStyledWidth</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_ascent</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>float *</type>
          <declname>_descent</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="313" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1aa671238ba807d6c993ec5fe3fdce14a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_TrackDrag</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>_TrackDrag</name>
        <qualifiedname>BTextView::_TrackDrag</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="350" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a06809666628d5eb45eae2f2fb86b4074" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_TrackMouse</definition>
        <argsstring>(BPoint where, const BMessage *message, bool force=false)</argsstring>
        <name>_TrackMouse</name>
        <qualifiedname>BTextView::_TrackMouse</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="346" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1adca4186a50ce0cab40d53add3efb1da4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_UpdateInsets</definition>
        <argsstring>(const BRect &amp;rect)</argsstring>
        <name>_UpdateInsets</name>
        <qualifiedname>BTextView::_UpdateInsets</qualifiedname>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="419" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a58a72c8af051880f52d02cf51a6a2834" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_UpdateScrollbars</definition>
        <argsstring>()</argsstring>
        <name>_UpdateScrollbars</name>
        <qualifiedname>BTextView::_UpdateScrollbars</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="356" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a10007e077ef02d4dd1ac998e35935526" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_ValidateLayoutData</definition>
        <argsstring>()</argsstring>
        <name>_ValidateLayoutData</name>
        <qualifiedname>BTextView::_ValidateLayoutData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="289" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBTextView_1a4738b643fec573bb1d840bf230c1ef1b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTextView::_ValidateTextRect</definition>
        <argsstring>()</argsstring>
        <name>_ValidateTextRect</name>
        <qualifiedname>BTextView::_ValidateTextRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="305" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Displays and manipulates styled text. </para>
    </briefdescription>
    <detaileddescription>
<para>Each <ref refid="classBTextView" kindref="compound">BTextView</ref> instance has a <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref> that keeps track of the bounds of the text inside it. <ref refid="classBTextView" kindref="compound">BTextView</ref> will resize and reposition <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref> as the view size changes in <ref refid="classBTextView_1a77ca110829a03b040b59a784caf327fb" kindref="member">FrameResized()</ref>. You must set the initial text rect either in the constructor, or using <ref refid="classBTextView_1a5dfe405b8963dec0acf22d571566f335" kindref="member">SetTextRect()</ref>.</para>
<para>The dynamic layout versions of the constructor set the initial <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref> to <ref refid="classBView_1acbb8ea442346e91428689163db9d633e" kindref="member">Bounds()</ref>. <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref> uses the view&apos;s coordinate system.</para>
<para>Setting the text rect to <ref refid="classBView_1acbb8ea442346e91428689163db9d633e" kindref="member">Bounds()</ref> will add some default insets repositioning the text inside the view. If you do not want this you may override the default insets by calling <ref refid="classBTextView_1a3dccebc1ff74ad040d660e36cb13ddbc" kindref="member">SetInsets()</ref>. It is recommended that you use <ref refid="classBTextView_1a3dccebc1ff74ad040d660e36cb13ddbc" kindref="member">SetInsets()</ref> to offset the initial text rect position instead of offsetting the text rect passed into the constructor. <ref refid="classBTextView_1a3dccebc1ff74ad040d660e36cb13ddbc" kindref="member">SetInsets()</ref> will retain insets with changing alignment and word-wrap while the distance of the initial <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref> from the view <ref refid="classBView_1acbb8ea442346e91428689163db9d633e" kindref="member">Bounds()</ref> is not retained.</para>
<para><ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref> can be wider or narrower than the view and it can be taller or shorter. As you type, delete, cut, and paste the width and height of the text rect may change. If word-wrap is on, <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref> width will always be set to the width of the view minus insets. If word-wrap is off <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref> width will be set to the width of the longest line of text. The top and bottom of <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref> will always be set to the top and bottom of the text. <ref refid="classBTextView_1a9388556beb45f15e16883fd1ee0ca505" kindref="member">Highlight()</ref> will highlight multiple lines at least to the edge of the text view even if <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref> is narrower.</para>
<para>When <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref> is made wider or taller than the view scroll bars will activate if present. You may scroll using <ref refid="classBTextView_1a029331301f5b9c6f2e02f309695e6439" kindref="member">ScrollToOffset()</ref> to scroll the text so that the character at the given offset is visible or you may call <ref refid="classBTextView_1a115416adbb7a2c9f6bb3c845396d31b9" kindref="member">ScrollToSelection()</ref> to scroll the text so that the character that begins the selection is visible.</para>
<para>Call <ref refid="classBTextView_1a6af0844c93f0a548e0717e0b4e2b8e33" kindref="member">SetText()</ref> to change the text. This will resize <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref>.</para>
<para>Call <ref refid="classBTextView_1afe3b998f71371ae8479ac72ef3b4fb08" kindref="member">SetWordWrap()</ref> to turn word-wrap on and off. This will resize <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref>.</para>
<para>Call <ref refid="classBTextView_1ae71fcc418e9934a852b0e5c9d6d6961b" kindref="member">SetAlignment()</ref> to change the alignment to <computeroutput>B_ALIGN_CENTER</computeroutput> or <computeroutput>B_ALIGN_RIGHT</computeroutput>. This will reposition <ref refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" kindref="member">TextRect()</ref>.</para>
<para>Call <ref refid="classBTextView_1af7ff7c6ed79a7deaf1ff180b0b2fc597" kindref="member">SetStylable()</ref> to allow multiple font styles.</para>
<para>Call <ref refid="classBTextView_1a692c0cf4d5ad343d35ca12bcdf7e44f0" kindref="member">SetTabWidth()</ref> to set the width of hard tabs. You may turn auto-indentation off with <ref refid="classBTextView_1abd09cfa6752d3e808770d17065d6d4ec" kindref="member">SetAutoindent()</ref>.</para>
<para>Call <ref refid="classBTextView_1aa7bbd890c204b973daae9b82b657e117" kindref="member">MakeSelectable()</ref> and <ref refid="classBTextView_1aebdfde8ef7cf1a490c96fc4f0d822873" kindref="member">MakeEditable()</ref> to turn the ability for text to be selectable or editable off. A non-editable, non-selectable text view can be useful as a <ref refid="classBStringView" kindref="compound">BStringView</ref> that wraps.</para>
<para>Call <ref refid="classBTextView_1a106796bac011113352981917f001f24f" kindref="member">MakeResizable()</ref> to make the view width track with text width, this can be useful for short single-line text views.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="3">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BTextView</label>
        <link refid="classBTextView"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="3">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BTextView</label>
        <link refid="classBTextView"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/interface/TextView.h" line="46" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/TextView.h" bodystart="46" bodyend="474"/>
    <listofallmembers>
      <member refid="classBTextView_1abd34df3c35392619245c55843d099d72" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_Activate</name></member>
      <member refid="classBTextView_1aab6e439f4a62f124616f61fa18a8763d" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_ActualTabWidth</name></member>
      <member refid="classBTextView_1a8da6a9b0a17f6624d91f735847326b93" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_ApplyStyleRange</name></member>
      <member refid="classBTextView_1ada2a736da66a8e06649ae9a5a4b625a7" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_AutoResize</name></member>
      <member refid="classBTextView_1aafde5df7c9720bf045b7d63e08708e65" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_CancelInputMethod</name></member>
      <member refid="classBTextView_1ab2b7bac89939f75fd69b65f53a128360" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_CharClassification</name></member>
      <member refid="classBTextView_1ad7f1f0015f7dd4273ad9b9124129ed0a" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_CountProperties</name></member>
      <member refid="classBTextView_1a95c031ec04d788370a9d27d32e695b9f" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_Deactivate</name></member>
      <member refid="classBTextView_1aba1dc94cab6ac478b40c93a2347c6938" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_DeleteOffscreen</name></member>
      <member refid="classBTextView_1ac0495910c7f9481c94a6ca3759c61071" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_DoDeleteText</name></member>
      <member refid="classBTextView_1afbab074b1e5c992c205f2bcb285e378c" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_DoInsertText</name></member>
      <member refid="classBTextView_1ae9f633b4a774caf7c90d93818770a893" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_DragCaret</name></member>
      <member refid="classBTextView_1ade5c5fe82d4e4f7af4cc18ac85f10fa8" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_DrawCaret</name></member>
      <member refid="classBTextView_1a7c18a5d0c45082c5e107aa1e725def2f" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_DrawLine</name></member>
      <member refid="classBTextView_1a0cd1e18404212f8ffd45b9ac96f45f32" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_DrawLines</name></member>
      <member refid="classBTextView_1a6c2d83e8ed6cc02b5c99a85bfe5be269" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_FilterDisallowedChars</name></member>
      <member refid="classBTextView_1a93216a3d8530de844b19562e60c37b30" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_FindLineBreak</name></member>
      <member refid="classBTextView_1a1c625c828da26fb232e10ccf844f01e7" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_GetProperty</name></member>
      <member refid="classBTextView_1a495e36f2a2f5186a0ca25c4f7c31e957" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_HandleAlphaKey</name></member>
      <member refid="classBTextView_1a7ec63721ff5c1794f62d6c434e30a863" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_HandleArrowKey</name></member>
      <member refid="classBTextView_1a3b523110898bd191826c9fdd03962f49" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_HandleBackspace</name></member>
      <member refid="classBTextView_1a27aa19519e9f63e16e0a1fbeca592446" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_HandleDelete</name></member>
      <member refid="classBTextView_1a061df7a6595e78497cdeffb333e7a893" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_HandleInputMethodChanged</name></member>
      <member refid="classBTextView_1a57803da67c0607006de06ff87bce8da1" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_HandleInputMethodLocationRequest</name></member>
      <member refid="classBTextView_1abb7c1054bc1b82068c34f66cf9fba5dc" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_HandlePageKey</name></member>
      <member refid="classBTextView_1a33fb3ac6ad03ecbd352a1be1410a0a1b" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_HideCaret</name></member>
      <member refid="classBTextView_1aa0685a27e6c0ac872d773a189ff14eaa" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_InitiateDrag</name></member>
      <member refid="classBTextView_1a0e5c0033024d685940c48b87ff8c79a9" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_InitObject</name></member>
      <member refid="classBTextView_1a5bc0a7ed542bac88df5932a4282c3e06" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_InvertCaret</name></member>
      <member refid="classBTextView_1a293880e56e738a22a4a6cf49f14d367c" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_IsOnEmptyLastLine</name></member>
      <member refid="classBTextView_1ad5c71f737bb97e4262f86a6b0faf9700" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_LineAt</name></member>
      <member refid="classBTextView_1a194362fa74617d9dfcce51a6a0c55e45" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_LineAt</name></member>
      <member refid="classBTextView_1a0de4ff4a67334af73945080f274d048e" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_MessageDropped</name></member>
      <member refid="classBTextView_1a0b532109632ded8747ee1cfc68d956d7" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_NewOffscreen</name></member>
      <member refid="classBTextView_1ac5e3a83a8b301ec66a4a6f368e4387b3" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_NextInitialByte</name></member>
      <member refid="classBTextView_1a433ee398b17af0e6c1ebde80bb66d936" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_NextLineEnd</name></member>
      <member refid="classBTextView_1a8006e0ef8c15272bd359708ebf8b78a1" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_NextWordBoundary</name></member>
      <member refid="classBTextView_1a436e18fb5664285b93d48ec3c17d8ce3" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_NextWordEnd</name></member>
      <member refid="classBTextView_1a6dcb2bdf225bd9adcacc4a227de0a913" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_NormalizeFont</name></member>
      <member refid="classBTextView_1abd110e941780cc4921f3f95a3b0d7665" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_NullStyleHeight</name></member>
      <member refid="classBTextView_1aa61110bacb88265904110a52aeb7e0b8" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_PerformAutoScrolling</name></member>
      <member refid="classBTextView_1adff4f443f229471e0e9903aa289be187" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_PerformMouseMoved</name></member>
      <member refid="classBTextView_1af979de8f3398e67a1c1cabbd2223917d" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_PerformMouseUp</name></member>
      <member refid="classBTextView_1a95dad6dfe58f3ac2fe065df75d7f40a0" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_PreviousInitialByte</name></member>
      <member refid="classBTextView_1a4e501ede42fbac94788c8ffaa9bcf2bb" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_PreviousLineStart</name></member>
      <member refid="classBTextView_1ae287b843b3af7c9d01bf0a2300ee7b03" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_PreviousWordBoundary</name></member>
      <member refid="classBTextView_1a61f26db4b107b5ce2de149f6cdad1515" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_PreviousWordStart</name></member>
      <member refid="classBTextView_1a917050c967dc80b55169e72cdfd577d6" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_RecalculateLineBreaks</name></member>
      <member refid="classBTextView_1ac11ba2c49d4337a938e60f6c97d76de4" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_Refresh</name></member>
      <member refid="classBTextView_1a16363ac990da8e93d5aac9535e459009" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_RequestDrawLines</name></member>
      <member refid="classBTextView_1a3f024123b9eef4053f68c013a92a0cea" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_reserved</name></member>
      <member refid="classBTextView_1a6a033050d271e97a525c1e7c37a555d8" prot="private" virt="virtual"><scope>BTextView</scope><name>_ReservedTextView10</name></member>
      <member refid="classBTextView_1a64bb7dc25f708d0239bd9f04fbb0b046" prot="private" virt="virtual"><scope>BTextView</scope><name>_ReservedTextView11</name></member>
      <member refid="classBTextView_1aaea2e90283a8aa2bdd6dbe1a40151086" prot="private" virt="virtual"><scope>BTextView</scope><name>_ReservedTextView12</name></member>
      <member refid="classBTextView_1aa1e64edea36dd6b5658c41c6db65a520" prot="private" virt="virtual"><scope>BTextView</scope><name>_ReservedTextView3</name></member>
      <member refid="classBTextView_1a1f937d6045ee385fa0931911b0f6f252" prot="private" virt="virtual"><scope>BTextView</scope><name>_ReservedTextView4</name></member>
      <member refid="classBTextView_1ae5233e95160c9d21119720c1f5237928" prot="private" virt="virtual"><scope>BTextView</scope><name>_ReservedTextView5</name></member>
      <member refid="classBTextView_1a7bb076d055130574071144a3f355666a" prot="private" virt="virtual"><scope>BTextView</scope><name>_ReservedTextView6</name></member>
      <member refid="classBTextView_1abb055f2cdfb0240cdd51ed83abe8d639" prot="private" virt="virtual"><scope>BTextView</scope><name>_ReservedTextView7</name></member>
      <member refid="classBTextView_1a11af5e8b5254dbb20d1f93079aad8f50" prot="private" virt="virtual"><scope>BTextView</scope><name>_ReservedTextView8</name></member>
      <member refid="classBTextView_1a31a881729fcca22188a3f711183c62bd" prot="private" virt="virtual"><scope>BTextView</scope><name>_ReservedTextView9</name></member>
      <member refid="classBTextView_1aee7ace15ca839878d9341c55938091e8" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_ResetTextRect</name></member>
      <member refid="classBTextView_1a417c00fb5a3051cf9c1b6690b3d9def7" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_ScrollBy</name></member>
      <member refid="classBTextView_1ab4e661679bb2cb78c372800934e78ad9" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_ScrollTo</name></member>
      <member refid="classBTextView_1aaf53170b2f00a7c067bcbb9a439f7b4a" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_SetProperty</name></member>
      <member refid="classBTextView_1acf7331dc84f7a69d8899411a20bb2213" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_SetRunArray</name></member>
      <member refid="classBTextView_1af35c90af098d7a5c4b1b725bfff5be57" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_ShowCaret</name></member>
      <member refid="classBTextView_1a2d0d13a2b9264ad54dc737ba0596eced" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_ShowContextMenu</name></member>
      <member refid="classBTextView_1ad2e8f48596d71b1ff08bbd0870e46bfd" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_StopMouseTracking</name></member>
      <member refid="classBTextView_1a83e4a3cf8dd770d3d3cb6bb44500f729" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_StyledWidth</name></member>
      <member refid="classBTextView_1a355018f74e921fd77295f93fb34c5605" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_TabExpandedStyledWidth</name></member>
      <member refid="classBTextView_1aa671238ba807d6c993ec5fe3fdce14a6" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_TrackDrag</name></member>
      <member refid="classBTextView_1a06809666628d5eb45eae2f2fb86b4074" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_TrackMouse</name></member>
      <member refid="classBTextView_1adca4186a50ce0cab40d53add3efb1da4" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_UpdateInsets</name></member>
      <member refid="classBTextView_1a58a72c8af051880f52d02cf51a6a2834" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_UpdateScrollbars</name></member>
      <member refid="classBTextView_1a10007e077ef02d4dd1ac998e35935526" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_ValidateLayoutData</name></member>
      <member refid="classBTextView_1a4738b643fec573bb1d840bf230c1ef1b" prot="private" virt="non-virtual"><scope>BTextView</scope><name>_ValidateTextRect</name></member>
      <member refid="classBTextView_1a3485b6f78a3a9208902d5c01e7766fc9" prot="public" virt="virtual"><scope>BTextView</scope><name>AcceptsDrop</name></member>
      <member refid="classBTextView_1a88c2b8661082c2d122736649d6b64e77" prot="public" virt="virtual"><scope>BTextView</scope><name>AcceptsPaste</name></member>
      <member refid="classBView_1ab6382c582e5e1be527d3199459d05e8f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>AddChild</name></member>
      <member refid="classBView_1a5d30ae4fa0119bf5286f52f83c2f351c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>AddChild</name></member>
      <member refid="classBHandler_1a862bea548363faac6f883b348cbed838" prot="public" virt="virtual"><scope>BTextView</scope><name>AddFilter</name></member>
      <member refid="classBView_1a88440336a66ee9b1a4b1661e9ba9e59c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>AddLine</name></member>
      <member refid="classBView_1ac780f029d415ee0a915792b4e756fa77" prot="public" virt="non-virtual"><scope>BTextView</scope><name>AdoptParentColors</name></member>
      <member refid="classBView_1a0e429a82fe06e9ab390b06d993ee31be" prot="public" virt="non-virtual"><scope>BTextView</scope><name>AdoptSystemColors</name></member>
      <member refid="classBView_1ab68ad7103708884f9e6fd84e8a579746" prot="public" virt="non-virtual"><scope>BTextView</scope><name>AdoptViewColors</name></member>
      <member refid="classBTextView_1a3cdbecd490374de1d479c747e81377cc" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Alignment</name></member>
      <member refid="classBView_1a561e82ed41cbb93d3bacf371787497bf" prot="public" virt="virtual"><scope>BTextView</scope><name>AllArchived</name></member>
      <member refid="classBTextView_1a525a3a00911c36ee0acf05daa2ff8716" prot="public" virt="virtual"><scope>BTextView</scope><name>AllAttached</name></member>
      <member refid="classBTextView_1a2ff4cd2084da7717a7c08c7c95651614" prot="public" virt="virtual"><scope>BTextView</scope><name>AllDetached</name></member>
      <member refid="classBTextView_1aecac40f05a63e2719b302d3c83c898c1" prot="public" virt="non-virtual"><scope>BTextView</scope><name>AllocRunArray</name></member>
      <member refid="classBTextView_1aa2b793d153eb61478f5d849fa32a5084" prot="public" virt="non-virtual"><scope>BTextView</scope><name>AllowChar</name></member>
      <member refid="classBView_1ab7bd04272afed8b28bf57d1de33cbe05" prot="public" virt="virtual"><scope>BTextView</scope><name>AllUnarchived</name></member>
      <member refid="classBView_1a2d73d2f2b0b35390929cf54fbfa5ecff" prot="public" virt="non-virtual"><scope>BTextView</scope><name>AppendToPicture</name></member>
      <member refid="classBTextView_1a0f3fb624378a2d13617773713efedd98" prot="public" virt="virtual"><scope>BTextView</scope><name>Archive</name></member>
      <member refid="classBTextView_1a73a892fb4d5e7e3575064f326b67867a" prot="public" virt="virtual"><scope>BTextView</scope><name>AttachedToWindow</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BArchivable</name></member>
      <member refid="classBView_1abe65757b7c83c8db390bf0c87457a343" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BeginLayer</name></member>
      <member refid="classBView_1ab3f2e9f54d2b93952b27e182ac552983" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BeginLineArray</name></member>
      <member refid="classBView_1a14155192773aad22ebe47a9975afac5f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BeginPicture</name></member>
      <member refid="classBView_1ac1eb1eeee67ec97205a4acc6955185bd" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BeginRectTracking</name></member>
      <member refid="classBHandler_1a2142e21fe781b24f914ec2086e5f05b7" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BHandler</name></member>
      <member refid="classBHandler_1add8fa081a7bb8633581e78777b215d0b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BHandler</name></member>
      <member refid="classBView_1acbb8ea442346e91428689163db9d633e" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Bounds</name></member>
      <member refid="classBTextView_1a3a15a66e85637c767c5f531f92fe86e7" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BTextView</name></member>
      <member refid="classBTextView_1a93a2741707da3d1cbfa2d102bb2b6ba2" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BTextView</name></member>
      <member refid="classBTextView_1a47484886491aceabb4153844ab6ef284" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BTextView</name></member>
      <member refid="classBTextView_1a60f4c56c03150727f757953f91a779b0" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BTextView</name></member>
      <member refid="classBTextView_1a9ed3c44d9376ae18e5b2ad06595e5936" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BTextView</name></member>
      <member refid="classBView_1ab148f59c41c9a22ced87bf7a0221ed62" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BView</name></member>
      <member refid="classBView_1ae3a1b2a66dc19690e766623be65c37e2" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BView</name></member>
      <member refid="classBView_1ae982fac35c278cc64990c506efe3965e" prot="public" virt="non-virtual"><scope>BTextView</scope><name>BView</name></member>
      <member refid="classBTextView_1afb783ae7c839313c9f915b122e6f3ce7" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ByteAt</name></member>
      <member refid="classBTextView_1ad30ce400c0a7f586d9a14509139dcb30" prot="public" virt="virtual"><scope>BTextView</scope><name>CanEndLine</name></member>
      <member refid="classBView_1aaf91592f50f2f44d16f23e7504f494cb" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ChildAt</name></member>
      <member refid="classBTextView_1ab1f47a18c9c4ba4469b08cc07f06ad3a" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Clear</name></member>
      <member refid="classBView_1ae7582b9a2b0b446a1de16c681f23baf9" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ClearViewBitmap</name></member>
      <member refid="classBView_1a0ae48f37c3f56b422841638971488cc0" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ClearViewOverlay</name></member>
      <member refid="classBView_1a18d61bcae2a7ca8a1a0977ac23d15171" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ClipToInversePicture</name></member>
      <member refid="classBView_1ad1762d160500ec3ce90c7bd73944d8a7" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ClipToInverseRect</name></member>
      <member refid="classBView_1a17dcb4f2e92994cde9a9ece9caa619c2" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ClipToInverseShape</name></member>
      <member refid="classBView_1a9c92c9e8e306d00dbfef81f2b0282339" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ClipToPicture</name></member>
      <member refid="classBView_1a22ff147a2f0a0bd65de494c9a039acee" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ClipToRect</name></member>
      <member refid="classBView_1ac0884c62949361a7eb6a4834f46b902c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ClipToShape</name></member>
      <member refid="classBTextView_1ad2668d62c775d15b171506ee9faf0ad3" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ColorSpace</name></member>
      <member refid="classBView_1a656b8d82a6a7c7c6ab33c3dd08aad6ec" prot="public" virt="virtual"><scope>BTextView</scope><name>ConstrainClippingRegion</name></member>
      <member refid="classBView_1a43c16140dd4491a6a6f7bad11bbea1f9" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1aa3201bdf5c489fbab7d67afe3453466d" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1ab2aeeb14409a18f950173e7cb22e147c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1a45b405f10c29442aea8b70161410565f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1a4b794ccd899dc6a0cafd886169122df5" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a75f1d68cf77bccc03930eb8e273f2967" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a3fbc496f437925cb02ccf9e817406e4e" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a44c3b5174e4ccfa4c123e0d5d54e9408" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1ab20700567eabd5f8135be179b4232e2c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1a91e6a7edab78547be47cb8dc84cfdecf" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1ac7bd2e0e7aac40d1be9a47999b5701a9" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1ae3b385e4d1b9f70bc848bf2fd0b7753c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1aefefb1242613b869feb6b8e0cc119518" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1af90cdeb62cc60adf64eb9a669c37c153" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1ad99f5af006f28c485f02484752a2ac5d" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1ae60c56c306d0cf3f504d710fac8b9bed" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ConvertToScreen</name></member>
      <member refid="classBTextView_1a0353fc7b7d2d8e579ddce27b07519929" prot="public" virt="virtual"><scope>BTextView</scope><name>Copy</name></member>
      <member refid="classBView_1a8ace5c5cc811c4ad16acf281ffd1a48d" prot="public" virt="non-virtual"><scope>BTextView</scope><name>CopyBits</name></member>
      <member refid="classBTextView_1a144d6448765d74958f3925261089f673" prot="public" virt="non-virtual"><scope>BTextView</scope><name>CopyRunArray</name></member>
      <member refid="classBView_1ae30d094a1cb1f3357c4aa7caa4b0e29d" prot="public" virt="non-virtual"><scope>BTextView</scope><name>CountChildren</name></member>
      <member refid="classBTextView_1a6bf21da74122ae112746c7c0be5d9880" prot="public" virt="non-virtual"><scope>BTextView</scope><name>CountLines</name></member>
      <member refid="classBTextView_1a93a13dc6c0d1ca316555cfe57cdfe611" prot="public" virt="non-virtual"><scope>BTextView</scope><name>CurrentLine</name></member>
      <member refid="classBTextView_1a1f1d1c35f94cd4b172000e0eed1e97bd" prot="public" virt="virtual"><scope>BTextView</scope><name>Cut</name></member>
      <member refid="classBView_1ae2a9da1ca04489dd60ef8aefa86331ed" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DelayedInvalidate</name></member>
      <member refid="classBView_1a6389a46cf1842eb0d412b44958955e61" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DelayedInvalidate</name></member>
      <member refid="classBTextView_1a9926ac3ab300b04c931dc8c6c01d648f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Delete</name></member>
      <member refid="classBTextView_1a9652d7c8741a1ccc55caa61102f70244" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Delete</name></member>
      <member refid="classBTextView_1a10a0d8be5ed8886ab33e3ced15bf5308" prot="protected" virt="virtual"><scope>BTextView</scope><name>DeleteText</name></member>
      <member refid="classBTextView_1a79356aad15f3cd52203d81cb5b163461" prot="public" virt="virtual"><scope>BTextView</scope><name>DetachedFromWindow</name></member>
      <member refid="classBView_1aa165cbaac7d6915feaae6048c4378c85" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DisableLayoutInvalidation</name></member>
      <member refid="classBTextView_1a91836216cb18b6030bb7949c0a72a4dd" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DisallowChar</name></member>
      <member refid="classBTextView_1a81448d18e95a7426ee98c63596d539d4" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DoesAutoindent</name></member>
      <member refid="classBTextView_1a6b3e89d72238e1d92e3d6aa558ad5b06" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DoesUndo</name></member>
      <member refid="classBTextView_1a226fee862ed32ded1029a63140b90c8d" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DoesWordWrap</name></member>
      <member refid="classBTextView_1a5126538fd4fc16a0deec2c256c62ce51" prot="protected" virt="virtual"><scope>BTextView</scope><name>DoLayout</name></member>
      <member refid="classBView_1a1f4f0c3c5946df1d14e6031e5e12f40b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DragMessage</name></member>
      <member refid="classBView_1a466287a3d939759cc09e4a6d1c9982cd" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DragMessage</name></member>
      <member refid="classBView_1ae1caa1d0bef9452db00c2adc8e3280b4" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DragMessage</name></member>
      <member refid="classBTextView_1ad1b1f366a371aaecdbc39e2b13f6100b" prot="public" virt="virtual"><scope>BTextView</scope><name>Draw</name></member>
      <member refid="classBView_1abb50623b4236926b068fc5a2264f6a48" prot="public" virt="virtual"><scope>BTextView</scope><name>DrawAfterChildren</name></member>
      <member refid="classBView_1a6171150993fbf7c73966c7c302a95573" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a63db7245fd9b9fefd461d7596c15f9cc" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1abce81666128d183d59b5cf2ed75c7f07" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a1c8b6e3e9218388a68ae43dd408a187c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a769c3e3dee7d86ed50308f7a3f46ef91" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1ae66727344d35f05c56b6163ad70e360c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a0ef432afa41aefcb3fdd537e2d290001" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1aa3275b791787a66f3638611cd6a5ae09" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a6931c5fe803eb5fa9e66438d347c4b6d" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1ab50fba0500357abebb9f3ef3832f2e68" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a02ba5c68f21d4345ec3ee683496ce851" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawChar</name></member>
      <member refid="classBView_1a2ed7c3628692426116fc0bb450c0f0c7" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawChar</name></member>
      <member refid="classBView_1ae7953a2e451fb6e5a439df9e9dc8451a" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawingMode</name></member>
      <member refid="classBView_1ae4b252943befd9f0b62e30517b3ecec2" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a2fdf36421cccce9136cdd9966a971955" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a9f5781a2b37113c55950c93b621984a7" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a65498927c21d6681a0e77c4e3d29efba" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a05881f8b07989e1e9db0bd41f8181341" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a7f2fde4e7719bded5af33805b8242b06" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a5c261dbbb4e8157799e85d6ad1530920" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawString</name></member>
      <member refid="classBView_1a83d77965bd9cda6212189d92b97d8198" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawString</name></member>
      <member refid="classBView_1ad3830d09ed0300a1144d47ac78cd2dde" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawString</name></member>
      <member refid="classBView_1a4e1f1c59352a1373ccace7255a0ccf23" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawString</name></member>
      <member refid="classBView_1a5dacf5d193a0c492f296bc1e402e6370" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawString</name></member>
      <member refid="classBView_1a135868eb5cd1b35ee1c2d03517b9a33f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawString</name></member>
      <member refid="classBView_1a8848d931fd0354860a0e71934e66cb03" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawTiledBitmap</name></member>
      <member refid="classBView_1ad281a4e40f212e3cb56c23fa6e574a84" prot="public" virt="non-virtual"><scope>BTextView</scope><name>DrawTiledBitmapAsync</name></member>
      <member refid="classBView_1ad43cc5c22f83d95632d3d81eff73f425" prot="public" virt="non-virtual"><scope>BTextView</scope><name>EnableLayoutInvalidation</name></member>
      <member refid="classBView_1a9f54d4478a12823f116168a45af30898" prot="public" virt="non-virtual"><scope>BTextView</scope><name>EndLayer</name></member>
      <member refid="classBView_1a24ba922f9698936bc27f48b3c51349a1" prot="public" virt="non-virtual"><scope>BTextView</scope><name>EndLineArray</name></member>
      <member refid="classBView_1ae01506892a9b2d39f6df13726be9d0af" prot="public" virt="non-virtual"><scope>BTextView</scope><name>EndPicture</name></member>
      <member refid="classBView_1a7bcc3532c03eeeb929278de8fcc1fd25" prot="public" virt="non-virtual"><scope>BTextView</scope><name>EndRectTracking</name></member>
      <member refid="classBView_1a8851d500773c732ddbb1a4b31f0ad664" prot="public" virt="non-virtual"><scope>BTextView</scope><name>EventMask</name></member>
      <member refid="classBView_1a1f078f5c987061c5cf3059f7091bcb1a" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ExplicitAlignment</name></member>
      <member refid="classBView_1a4e63cc8ca1f604ccb20f5891adade70f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ExplicitMaxSize</name></member>
      <member refid="classBView_1a1b24db754473008766cdd0fd9c4ee3b7" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ExplicitMinSize</name></member>
      <member refid="classBView_1a218cd0d238104a6ff31c1d72ae2d9e6e" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ExplicitPreferredSize</name></member>
      <member refid="classBTextView_1a3e4461ade42e77bfaf6250659fbd307b" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fActive</name></member>
      <member refid="classBTextView_1a6290cf2ab7b735fa9232f8659be31564" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fAlignment</name></member>
      <member refid="classBTextView_1ab0cdd7cc636e8a69931b7da250ba806f" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fAutoindent</name></member>
      <member refid="classBTextView_1af2e48149377e07c28552859d2c2b6438" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fCaretOffset</name></member>
      <member refid="classBTextView_1a84a6de5894803dc00a23f7a4dab1b353" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fCaretTime</name></member>
      <member refid="classBTextView_1a6bede4b605cb176e9102e117a8b5c212" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fCaretVisible</name></member>
      <member refid="classBTextView_1aa8e54ff399397a06a98744cca14b542a" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fClickCount</name></member>
      <member refid="classBTextView_1abf8711ef4003c51db8b9653720d1a9a4" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fClickRunner</name></member>
      <member refid="classBTextView_1ad562e332e0308687bb6c28e7207a13fe" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fClickTime</name></member>
      <member refid="classBTextView_1af5a98791f79a00cd60749e454b9b4852" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fColorSpace</name></member>
      <member refid="classBTextView_1a11605693c2568b5f2f256ad1a9fc88b5" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fContainerView</name></member>
      <member refid="classBTextView_1a7135db83407e258b5d7691ff7a5b72f0" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fCursor</name></member>
      <member refid="classBTextView_1afee42ef6e76f876f4ecd9f356dbd5522" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fDisallowedChars</name></member>
      <member refid="classBTextView_1ab5342a891b8747d07f54891f925a5648" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fDragOffset</name></member>
      <member refid="classBTextView_1a9aacfcb4f5b61301696eb1a66062a672" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fDragRunner</name></member>
      <member refid="classBTextView_1a3c058faaac640c528620d7ae95c74bef" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fEditable</name></member>
      <member refid="classBView_1af0e5d362474d39199116045aa9621aa5" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillArc</name></member>
      <member refid="classBView_1ac216c652253a21f0f28a7caef07deb77" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillArc</name></member>
      <member refid="classBView_1a49017edefe45ca5c74954e1227e673bb" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillArc</name></member>
      <member refid="classBView_1a4304fe45708f72d0ba20b579870c24ce" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillArc</name></member>
      <member refid="classBView_1a531ad43e129d810ee64208123b550193" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillBezier</name></member>
      <member refid="classBView_1a7cf8a5eaa5451b2c7df0d6fa392012bd" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillBezier</name></member>
      <member refid="classBView_1a06942f0dd4c13175bcfff6a88eae7cc0" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a98a73cbccb42edfc61b93f9aa6f4a13b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a2738cf2f3d39f560d0cff90543f45afa" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a86de91f260577187eaf22ba0fdf32fba" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillEllipse</name></member>
      <member refid="classBView_1ae72733cae8a1fc2da8feb47c0c2149fa" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1adc7d96f2d60a819f03685eb11b6945e2" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a1bdc02a311b2a051ad7fbdbf1789e958" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a96cdb60a8c87e4958380a3077a2197a5" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a22a5ce1f024e622b6eade6a9176ff1f7" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a57b0870cd6a0109c347d80c34ca2f34a" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a4d074663998c7ba922a9d981d0cfe086" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillRect</name></member>
      <member refid="classBView_1aae6a3ff6683bb15ac8c647c946475e8f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillRect</name></member>
      <member refid="classBView_1a4810086c415d90bffa25ab2963716936" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillRegion</name></member>
      <member refid="classBView_1a56828d13947717462b661e1645305509" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillRegion</name></member>
      <member refid="classBView_1a38d7e7b15a13591c20020599886402b5" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillRoundRect</name></member>
      <member refid="classBView_1a73956d28b356b2eee83ebc19bd6e398b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillRoundRect</name></member>
      <member refid="classBView_1a3a2fd2d7313a9bb7dff359a4f4362a5f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillRule</name></member>
      <member refid="classBView_1a91b9ce4b8b8ee13ff5f1071e1fb0d829" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillShape</name></member>
      <member refid="classBView_1a9a82da733397e97b985875be941f77a6" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillShape</name></member>
      <member refid="classBView_1a46ec16609a402d03baa322a04d8c50e2" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillTriangle</name></member>
      <member refid="classBView_1af512b76752705cba87f89c8dac313005" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillTriangle</name></member>
      <member refid="classBView_1a5dd1c64839c11a79e80581e37656cc26" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillTriangle</name></member>
      <member refid="classBView_1a0878dea14a61d58c951bd8e11c0a2ef6" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FillTriangle</name></member>
      <member refid="classBHandler_1a909662a049856f6863a934cf18161554" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FilterList</name></member>
      <member refid="classBView_1ab83ef89f1876913174c825ff7cd02c4a" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FindView</name></member>
      <member refid="classBTextView_1a1c3eacdbbac660e81960d47da42f4b4e" prot="public" virt="virtual"><scope>BTextView</scope><name>FindWord</name></member>
      <member refid="classBTextView_1a4723c5dc08571b9b3a845fd5acc32fea" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fInline</name></member>
      <member refid="classBTextView_1a9adcaec1a76028eec24bd9f224e10cdd" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fInstalledNavigateCommandWordwiseShortcuts</name></member>
      <member refid="classBTextView_1ab1b2394ebfaf9065a945243d0c7bd3c2" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fInstalledNavigateHomeEndDocwiseShortcuts</name></member>
      <member refid="classBTextView_1adae758ef6ccf451e81eab0064865ce0d" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fInstalledNavigateOptionLinewiseShortcuts</name></member>
      <member refid="classBTextView_1a3a8f4eb5c8f08696bb8c4f9c8789f582" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fInstalledNavigateOptionWordwiseShortcuts</name></member>
      <member refid="classBTextView_1af6956c0044d4468f128ae4a532db0f21" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fInstalledRemoveCommandWordwiseShortcuts</name></member>
      <member refid="classBTextView_1adbf5acb3b1cdb318f65030a2ffb95e97" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fInstalledRemoveOptionWordwiseShortcuts</name></member>
      <member refid="classBTextView_1a786c7304c417962f983de3aac049e35b" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fInstalledSelectCommandWordwiseShortcuts</name></member>
      <member refid="classBTextView_1a2dde8fe7ab50897ebeac7abf631fb7a1" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fInstalledSelectHomeEndDocwiseShortcuts</name></member>
      <member refid="classBTextView_1af3ca6a7067b15407d543d36777b89059" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fInstalledSelectOptionLinewiseShortcuts</name></member>
      <member refid="classBTextView_1a2092835b55955746b5dcdb2cab3819c6" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fInstalledSelectOptionWordwiseShortcuts</name></member>
      <member refid="classBView_1a561b10abf94dd65a26b02253af667508" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Flags</name></member>
      <member refid="classBTextView_1afd054eea05d641927164360d1fde9857" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fLastClickOffset</name></member>
      <member refid="classBTextView_1a39b5a54c3d3cd361c9e90c4dcba8689e" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FlattenRunArray</name></member>
      <member refid="classBTextView_1a45005874c848c4fdab474ba7b54f81f2" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fLayoutData</name></member>
      <member refid="classBTextView_1aa97751628b5ceabe1cb02ca8757d1a52" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fLines</name></member>
      <member refid="classBView_1a15465930f84d2d01f7818bd79bc91c3e" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Flush</name></member>
      <member refid="classBTextView_1adc04579a7d2e386d8b3a2f3945b636c9" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fMaxBytes</name></member>
      <member refid="classBTextView_1a1fcb52811d5f2000e5c4861a7a4eb33d" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fMinTextRectWidth</name></member>
      <member refid="classBTextView_1ae7f636fa0ca83fc77fadbf135d17af8b" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fOffscreen</name></member>
      <member refid="classBView_1a424161ccf6f52a354fdd67ed1376d196" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ForceFontAliasing</name></member>
      <member refid="classBView_1a487b04a3aaffdd1a1afb730dca36a7e2" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Frame</name></member>
      <member refid="classBView_1a551c22b45301e13a3ba959eece3cec7f" prot="public" virt="virtual"><scope>BTextView</scope><name>FrameMoved</name></member>
      <member refid="classBTextView_1a77ca110829a03b040b59a784caf327fb" prot="public" virt="virtual"><scope>BTextView</scope><name>FrameResized</name></member>
      <member refid="classBTextView_1a8358a52de2454a2d0fb8f8882d8ac9da" prot="public" virt="non-virtual"><scope>BTextView</scope><name>FreeRunArray</name></member>
      <member refid="classBTextView_1a172c8da621063c30bd8bd69e680605d3" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fResizable</name></member>
      <member refid="classBTextView_1ad9d40055ecd211f7dbb2ea88742a1af7" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fSelectable</name></member>
      <member refid="classBTextView_1a012b180f6df15ff8e66fc2498c84e8ef" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fSelEnd</name></member>
      <member refid="classBTextView_1a36ee9b8e531555d4f721007d0bb2449e" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fSelStart</name></member>
      <member refid="classBTextView_1a4292e6067408464f942c182e80c4375d" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fStylable</name></member>
      <member refid="classBTextView_1a3181239f5929ebfb446110d21fa52b31" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fStyles</name></member>
      <member refid="classBTextView_1a40c45fb7158cd51d80cbb5f6ba134e62" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fTabWidth</name></member>
      <member refid="classBTextView_1a6f46bed8e37e77a65d110c7eede1c3f0" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fText</name></member>
      <member refid="classBTextView_1a4ea2a3268fb4d4b41cc2430a79d5d1b1" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fTextRect</name></member>
      <member refid="classBTextView_1a370a610ead970f0803b82ec0ecd0758f" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fTrackingMouse</name></member>
      <member refid="classBTextView_1a1410cf9bfceddf6de20a63c8e8518079" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fUndo</name></member>
      <member refid="classBTextView_1ab5ddbf1b3b5e9174cbc28473a481f238" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fWhere</name></member>
      <member refid="classBTextView_1a5d3719db70f21d47c5e7bc7e95fe8bcd" prot="private" virt="non-virtual"><scope>BTextView</scope><name>fWrap</name></member>
      <member refid="classBView_1ad50d5ba2249fdf3dd8640b3573c2a2e8" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetBlendingMode</name></member>
      <member refid="classBView_1acf50a063c9621f35a84b1d0245b12d69" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetClippingRegion</name></member>
      <member refid="classBTextView_1a27372068aee3d28071b06a42048a0371" prot="protected" virt="virtual"><scope>BTextView</scope><name>GetDragParameters</name></member>
      <member refid="classBView_1af244d01f85e6d9ae7f5fcca4637dc78c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetFont</name></member>
      <member refid="classBTextView_1a38f2492dc77db1be6f4a79eb1df25bb3" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetFontAndColor</name></member>
      <member refid="classBTextView_1aad46fd5283ed45f76f12e2ce8313cc68" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetFontAndColor</name></member>
      <member refid="classBView_1a5bf95d66754634c647b2ddf7d39b4dfb" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetFontHeight</name></member>
      <member refid="classBTextView_1aec7881d97bdc508b01a6caa80f51d963" prot="public" virt="virtual"><scope>BTextView</scope><name>GetHeightForWidth</name></member>
      <member refid="classBTextView_1a50d67716d54b7ac5bb14e59e1b504d49" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetInsets</name></member>
      <member refid="classBView_1aec2975b51966c397aa52b9e3eebd2c85" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetLayout</name></member>
      <member refid="classBView_1a830ce9cf2ac2ffb5f73f526ee5d6e53d" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetMouse</name></member>
      <member refid="classBTextView_1a5b31f120d4476b83beb08f3333cfc85d" prot="public" virt="virtual"><scope>BTextView</scope><name>GetPreferredSize</name></member>
      <member refid="classBTextView_1abc61acda4dd214033c7e4cb23d531c0d" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetSelection</name></member>
      <member refid="classBView_1aaae0dc93bc61d7f221465fbe0aecd30a" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetStringWidths</name></member>
      <member refid="classBTextView_1a9cb6a32b918a5c90489b6fb7e27fcb6a" prot="public" virt="virtual"><scope>BTextView</scope><name>GetSupportedSuites</name></member>
      <member refid="classBTextView_1a849d5c8a43d17ab4dee07d1758e5a839" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetText</name></member>
      <member refid="classBTextView_1aab3e242b035ded23b4f8a6ba2c3e391c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GetTextRegion</name></member>
      <member refid="classBView_1afb826fe9b8964e4d843cae190170badf" prot="protected" virt="virtual"><scope>BTextView</scope><name>GetToolTipAt</name></member>
      <member refid="classBTextView_1a466d34e311879ee43a77e42e18c2b516" prot="public" virt="non-virtual"><scope>BTextView</scope><name>GoToLine</name></member>
      <member refid="classBView_1a606e0e7e03516dccb53bf073827460a8" prot="public" virt="non-virtual"><scope>BTextView</scope><name>HasDefaultColors</name></member>
      <member refid="classBTextView_1a099a44a6619914db20a02a6ccf611b70" prot="public" virt="virtual"><scope>BTextView</scope><name>HasHeightForWidth</name></member>
      <member refid="classBView_1aa9aacc95606b650e6a8d776b51cb902b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>HasSystemColors</name></member>
      <member refid="classBView_1a7688dc04178a2955950154ee3670d029" prot="public" virt="virtual"><scope>BTextView</scope><name>Hide</name></member>
      <member refid="classBView_1af75bbc1131ad6a90e299c6cbcf623fa7" prot="public" virt="non-virtual"><scope>BTextView</scope><name>HideToolTip</name></member>
      <member refid="classBTextView_1a0461eff711af1cc8f797143ea4a932f1" prot="public" virt="non-virtual"><scope>BTextView</scope><name>HideTyping</name></member>
      <member refid="classBView_1abda3583967fba9f6ed9524058d00a6e9" prot="public" virt="non-virtual"><scope>BTextView</scope><name>HighColor</name></member>
      <member refid="classBTextView_1a9388556beb45f15e16883fd1ee0ca505" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Highlight</name></member>
      <member refid="classBView_1aa86f548fba2e82d022066198be6d5af6" prot="public" virt="non-virtual"><scope>BTextView</scope><name>HighUIColor</name></member>
      <member refid="classBTextView_1a0ee743c15e51c89e15eefe5b0145b1e1" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Insert</name></member>
      <member refid="classBTextView_1ae0883c03c0361d12cf278f0bf5ea503d" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Insert</name></member>
      <member refid="classBTextView_1aecff7b0c2868a7aea0b195162863cbc5" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Insert</name></member>
      <member refid="classBTextView_1af6f54b64f68854ee130052d2993dcbfd" prot="protected" virt="virtual"><scope>BTextView</scope><name>InsertText</name></member>
      <member refid="classBTextView_1af3b2b4ad032238d71385bbfbf4933112" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Instantiate</name></member>
      <member refid="classBView_1a8c767d948dc9435c006cabdcab1cd08e" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Invalidate</name></member>
      <member refid="classBView_1ac70b682819c0f9b008c428e02015b19b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Invalidate</name></member>
      <member refid="classBView_1adfced0dcb244e199f872fdbd48349a05" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Invalidate</name></member>
      <member refid="classBView_1a4a711316094e43076a3f5478d937accf" prot="public" virt="non-virtual"><scope>BTextView</scope><name>InvalidateLayout</name></member>
      <member refid="classBView_1af7e5ebc41cd5a471dcdcfa1f3db801a5" prot="public" virt="non-virtual"><scope>BTextView</scope><name>InvertRect</name></member>
      <member refid="classBTextView_1a78ca6e19fc0b418a6912024771d1e739" prot="public" virt="non-virtual"><scope>BTextView</scope><name>IsEditable</name></member>
      <member refid="classBView_1a165719de682845f80735042a499692ff" prot="public" virt="non-virtual"><scope>BTextView</scope><name>IsFocus</name></member>
      <member refid="classBView_1a33a65050c2315b19b4c5af16c48e3cdb" prot="public" virt="non-virtual"><scope>BTextView</scope><name>IsHidden</name></member>
      <member refid="classBView_1a95cfa8ee585230ea8fb224e88eddc503" prot="public" virt="non-virtual"><scope>BTextView</scope><name>IsHidden</name></member>
      <member refid="classBView_1a4e86b719129a12afbda7c10371eeca47" prot="public" virt="non-virtual"><scope>BTextView</scope><name>IsLayoutInvalidationDisabled</name></member>
      <member refid="classBView_1a00a5d5d6edee7d488d77df03945b3e94" prot="public" virt="non-virtual"><scope>BTextView</scope><name>IsLayoutValid</name></member>
      <member refid="classBView_1a8e3f1722e40fdf01c5131e49199ec3ff" prot="public" virt="non-virtual"><scope>BTextView</scope><name>IsPrinting</name></member>
      <member refid="classBTextView_1ab6475a654386b4e07a897992294a7fae" prot="public" virt="non-virtual"><scope>BTextView</scope><name>IsResizable</name></member>
      <member refid="classBTextView_1a2ca91f84ade13166b46cbe1aedf7da0f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>IsSelectable</name></member>
      <member refid="classBTextView_1aed17086d3059cd6ca790420a6e5446f5" prot="public" virt="non-virtual"><scope>BTextView</scope><name>IsStylable</name></member>
      <member refid="classBTextView_1a0609e9935d9c7563df37d05957c4f7fd" prot="public" virt="non-virtual"><scope>BTextView</scope><name>IsTypingHidden</name></member>
      <member refid="classBHandler_1a581b84f0f067afa88768ce6a0c07f59f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>IsWatched</name></member>
      <member refid="classBTextView_1a38ae9b87206a3236527d533b1f33d951" prot="public" virt="virtual"><scope>BTextView</scope><name>KeyDown</name></member>
      <member refid="classBView_1acbc528bb70be49993bd99aa136dbb089" prot="public" virt="virtual"><scope>BTextView</scope><name>KeyUp</name></member>
      <member refid="classBView_1a854b6ca54eeca610db9eab8b58d68a8b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Layout</name></member>
      <member refid="classBView_1a2f74b3e7c602045d8c927f923f45eefa" prot="public" virt="virtual"><scope>BTextView</scope><name>LayoutAlignment</name></member>
      <member refid="classBView_1ada521f848e4c800cd02eb4fe529e7ea0" prot="protected" virt="virtual"><scope>BTextView</scope><name>LayoutChanged</name></member>
      <member refid="classBView_1ae066513c0a788a9544744d409f28cada" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LayoutContext</name></member>
      <member refid="classBTextView_1ab97f9e2be3de9c163ed7b78a9fc7b74f" prot="protected" virt="virtual"><scope>BTextView</scope><name>LayoutInvalidated</name></member>
      <member refid="classBView_1a5d252dfe28eee049be2192d1a01ed6e3" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LeftTop</name></member>
      <member refid="classBTextView_1acb733c2928f582f5d157ceed1c44727f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LineAt</name></member>
      <member refid="classBTextView_1afb1697f452277bd09e6894863db9960f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LineAt</name></member>
      <member refid="classBView_1a551f5961188e4f26ef310eb5eea7c926" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LineCapMode</name></member>
      <member refid="classBTextView_1ace81a4936220c72d6ab088c7f9bb9b79" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LineHeight</name></member>
      <member refid="classBView_1a0aa47adb29d91b4cc6c4924b7f436012" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LineJoinMode</name></member>
      <member refid="classBView_1ab1cd7cf77a4fa01755d186a05163cfbe" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LineMiterLimit</name></member>
      <member refid="classBTextView_1a399a56365f69f5bbc765c7087e4a8b9d" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LineWidth</name></member>
      <member refid="classBHandler_1a9d64bf66b4914918e24390d117e83477" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LockLooper</name></member>
      <member refid="classBHandler_1afa0099ff6defcb6d64e3ee1c2fb47afe" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LockLooperWithTimeout</name></member>
      <member refid="classBHandler_1ac8e949959b12e602e3b0c4f023c60e6c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Looper</name></member>
      <member refid="classBView_1a423c54f22ab95745b28b583af999e554" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LowColor</name></member>
      <member refid="classBView_1ae32ca6d8f106d44b5b51df82a7eb64c5" prot="public" virt="non-virtual"><scope>BTextView</scope><name>LowUIColor</name></member>
      <member refid="classBTextView_1aebdfde8ef7cf1a490c96fc4f0d822873" prot="public" virt="non-virtual"><scope>BTextView</scope><name>MakeEditable</name></member>
      <member refid="classBTextView_1ac0bc816f13b04fd2ec2668c618ab8ca8" prot="public" virt="virtual"><scope>BTextView</scope><name>MakeFocus</name></member>
      <member refid="classBTextView_1a106796bac011113352981917f001f24f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>MakeResizable</name></member>
      <member refid="classBTextView_1aa7bbd890c204b973daae9b82b657e117" prot="public" virt="non-virtual"><scope>BTextView</scope><name>MakeSelectable</name></member>
      <member refid="classBTextView_1afad6c3190c1dc5e2aa83568f0b84cd15" prot="public" virt="non-virtual"><scope>BTextView</scope><name>MaxBytes</name></member>
      <member refid="classBTextView_1af8e32e9318d9368137940d2511d3dff2" prot="public" virt="virtual"><scope>BTextView</scope><name>MaxSize</name></member>
      <member refid="classBTextView_1a4d7d7990e57ce7286f78698f27c89e60" prot="public" virt="virtual"><scope>BTextView</scope><name>MessageReceived</name></member>
      <member refid="classBTextView_1a3a03f5bff63cba54276025e3788520d9" prot="public" virt="virtual"><scope>BTextView</scope><name>MinSize</name></member>
      <member refid="classBTextView_1a581a2b2877b29d275771ae5010d6706d" prot="public" virt="virtual"><scope>BTextView</scope><name>MouseDown</name></member>
      <member refid="classBTextView_1a95bc494682c45ba41c457029639f2d55" prot="public" virt="virtual"><scope>BTextView</scope><name>MouseMoved</name></member>
      <member refid="classBTextView_1a72a0cd6839b541db996d751f240e59a1" prot="public" virt="virtual"><scope>BTextView</scope><name>MouseUp</name></member>
      <member refid="classBView_1a6e122baca4494f6ce739a507054fa81f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>MoveBy</name></member>
      <member refid="classBView_1a979f8f0090284919b6e7c6c04d91cbde" prot="public" virt="non-virtual"><scope>BTextView</scope><name>MovePenBy</name></member>
      <member refid="classBView_1acb61254a2121f569f6223a95cd835abd" prot="public" virt="non-virtual"><scope>BTextView</scope><name>MovePenTo</name></member>
      <member refid="classBView_1ae32d7951a4ce9cff6b81899f5208a25f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>MovePenTo</name></member>
      <member refid="classBView_1acce9c93118a3db24078f16bdabc6fbec" prot="public" virt="non-virtual"><scope>BTextView</scope><name>MoveTo</name></member>
      <member refid="classBView_1a1c9b2df47ba1b9f3a1ce3286995fb8bd" prot="public" virt="non-virtual"><scope>BTextView</scope><name>MoveTo</name></member>
      <member refid="classBHandler_1a40b246ac272e09b2f641d1290be21200" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Name</name></member>
      <member refid="classBHandler_1a92855d8f88f6072e7225bde292feaa38" prot="public" virt="non-virtual"><scope>BTextView</scope><name>NextHandler</name></member>
      <member refid="classBView_1a76e7d862fe78e4d2766573bf073b9d30" prot="public" virt="non-virtual"><scope>BTextView</scope><name>NextSibling</name></member>
      <member refid="classBTextView_1a550bbadd24a65086f5c053082338d055" prot="public" virt="non-virtual"><scope>BTextView</scope><name>OffsetAt</name></member>
      <member refid="classBTextView_1a318bb090cb159095b23b5a3a29ea07b5" prot="public" virt="non-virtual"><scope>BTextView</scope><name>OffsetAt</name></member>
      <member refid="classBView_1aefbf71a7a403900e960ffa3943dc9901" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Origin</name></member>
      <member refid="classBView_1a332f34d9862000dbc859fd4e308839dd" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Parent</name></member>
      <member refid="classBTextView_1a1c19ed827e74edbd3c749c7b67667aaa" prot="public" virt="virtual"><scope>BTextView</scope><name>Paste</name></member>
      <member refid="classBView_1a2774e13c2b12c6a5fee333e95b76b07d" prot="public" virt="non-virtual"><scope>BTextView</scope><name>PenLocation</name></member>
      <member refid="classBView_1a69d8657d26b49773fa2de914f263b204" prot="public" virt="non-virtual"><scope>BTextView</scope><name>PenSize</name></member>
      <member refid="classBTextView_1a6519856e1dbf6e021911529b8a0a15c6" prot="public" virt="virtual"><scope>BTextView</scope><name>Perform</name></member>
      <member refid="classBTextView_1a32ada6e38d904b78822eb9fa7e2a9987" prot="public" virt="non-virtual"><scope>BTextView</scope><name>PointAt</name></member>
      <member refid="classBView_1abc0d202fe13366b80703afbdb3832951" prot="public" virt="non-virtual"><scope>BTextView</scope><name>PopState</name></member>
      <member refid="classBTextView_1ad46589273b8c8acb8737efde58407d3d" prot="public" virt="virtual"><scope>BTextView</scope><name>PreferredSize</name></member>
      <member refid="classBView_1a2a46f78756eacca3f3d4c90d31c758b1" prot="public" virt="non-virtual"><scope>BTextView</scope><name>PreviousSibling</name></member>
      <member refid="classBTextView_1ada90a85565bd3e6bbe130901299c6da8" prot="public" virt="virtual"><scope>BTextView</scope><name>Pulse</name></member>
      <member refid="classBView_1a1dcb914cd0c6ef8d1291aa8492968d40" prot="public" virt="non-virtual"><scope>BTextView</scope><name>PushState</name></member>
      <member refid="classBView_1a2cf4e698a4322ecfb946e440e0f7ac62" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Relayout</name></member>
      <member refid="classBView_1a5f93a23d06267da83c128bce222ceb17" prot="public" virt="non-virtual"><scope>BTextView</scope><name>RemoveChild</name></member>
      <member refid="classBHandler_1a2b608135b27f283802648e7c6f8cdc83" prot="public" virt="virtual"><scope>BTextView</scope><name>RemoveFilter</name></member>
      <member refid="classBView_1a87e0848b1760a9f28aad4516467a03ed" prot="public" virt="non-virtual"><scope>BTextView</scope><name>RemoveSelf</name></member>
      <member refid="classBView_1a127933a3820f0bfe0497b5e7ddfa191f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ResetLayoutInvalidation</name></member>
      <member refid="classBView_1ace23acc948bbc9b9272da8dc7f01d3ce" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ResizeBy</name></member>
      <member refid="classBView_1a742bccd6034ef9ade65b0e596fba55f2" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ResizeTo</name></member>
      <member refid="classBView_1a6134097569f75679616257a361086d7a" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ResizeTo</name></member>
      <member refid="classBTextView_1ae288597c33c40f5f42abfe3ed41fce86" prot="public" virt="virtual"><scope>BTextView</scope><name>ResizeToPreferred</name></member>
      <member refid="classBView_1a1e93df523fc9edc807274ac6cfd2dc8d" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ResizingMode</name></member>
      <member refid="classBTextView_1a3e0e67bcd942c0b738043235e56fdf29" prot="public" virt="virtual"><scope>BTextView</scope><name>ResolveSpecifier</name></member>
      <member refid="classBView_1a02ab6b6196b140b20ae516a55680e30b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>RotateBy</name></member>
      <member refid="classBTextView_1afc72592044583011e10b903f4868c3af" prot="public" virt="non-virtual"><scope>BTextView</scope><name>RunArray</name></member>
      <member refid="classBView_1a50e12d6b8080b3bc6bc617d31d1ab200" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Scale</name></member>
      <member refid="classBView_1ac83f9fdfb882f849e3ac79bfb06a0fd6" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ScaleBy</name></member>
      <member refid="classBView_1a0878bc7981ba814190b822349599a120" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ScrollBar</name></member>
      <member refid="classBView_1ae20e2a3c46fc30a2a292c832eead7387" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ScrollBy</name></member>
      <member refid="classBView_1a33ed2a9eeff474a756b548996a82b964" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ScrollTo</name></member>
      <member refid="classBView_1a2b76ddc60289ce92e1fb706332edbafc" prot="public" virt="virtual"><scope>BTextView</scope><name>ScrollTo</name></member>
      <member refid="classBTextView_1a029331301f5b9c6f2e02f309695e6439" prot="public" virt="virtual"><scope>BTextView</scope><name>ScrollToOffset</name></member>
      <member refid="classBTextView_1a115416adbb7a2c9f6bb3c845396d31b9" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ScrollToSelection</name></member>
      <member refid="classBView_1a54991372110199183fed775598ae1912" prot="protected" virt="non-virtual"><scope>BTextView</scope><name>ScrollWithMouseWheelDelta</name></member>
      <member refid="classBTextView_1a35737d4bef49712542b12b1a5add2520" prot="public" virt="virtual"><scope>BTextView</scope><name>Select</name></member>
      <member refid="classBTextView_1ac3ec307c452a5e38c911e0089427fe4e" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SelectAll</name></member>
      <member refid="classBHandler_1a71bf72dc17a64bcd42656722271a9e0c" prot="public" virt="virtual"><scope>BTextView</scope><name>SendNotices</name></member>
      <member refid="classBTextView_1ae71fcc418e9934a852b0e5c9d6d6961b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetAlignment</name></member>
      <member refid="classBTextView_1abd09cfa6752d3e808770d17065d6d4ec" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetAutoindent</name></member>
      <member refid="classBView_1ad01fc0fd68e4683af9b9386bf33abf63" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetBlendingMode</name></member>
      <member refid="classBTextView_1aaf45743e5d825b7e4eb77fe770d14cb3" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetColorSpace</name></member>
      <member refid="classBView_1a8ba0fe3a3dbeec1b7fd8c9655070ef64" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetDiskMode</name></member>
      <member refid="classBTextView_1a21286b9caeb086eff3728daea6d5f9ac" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetDoesUndo</name></member>
      <member refid="classBView_1a0c392ed0e36213e1007322a9cbca71c0" prot="public" virt="virtual"><scope>BTextView</scope><name>SetDrawingMode</name></member>
      <member refid="classBView_1a5d8d6b469a8a11a577d1d138cfc31162" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetEventMask</name></member>
      <member refid="classBView_1a6906e47d4fdd6923dd51edb60a83ccea" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetExplicitAlignment</name></member>
      <member refid="classBView_1acd759dd7505050f9cbd8213c71991b8b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetExplicitMaxSize</name></member>
      <member refid="classBView_1abfcb5c761f9b06da3b4a6788aad5d0ee" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetExplicitMinSize</name></member>
      <member refid="classBView_1a98b7d450210099ed59b7cd34f2575e20" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetExplicitPreferredSize</name></member>
      <member refid="classBView_1aeef8a27a5577db87251412ce44421494" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetExplicitSize</name></member>
      <member refid="classBView_1a2019def93337069c0b7d416e103522e9" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetFillRule</name></member>
      <member refid="classBHandler_1a503344dc801858e1f5f419be3919e9cf" prot="public" virt="virtual"><scope>BTextView</scope><name>SetFilterList</name></member>
      <member refid="classBView_1a4740f9a1e1163073b042102a421a2e33" prot="public" virt="virtual"><scope>BTextView</scope><name>SetFlags</name></member>
      <member refid="classBView_1a9247127c151153542a3e6bc1f3904433" prot="public" virt="virtual"><scope>BTextView</scope><name>SetFont</name></member>
      <member refid="classBTextView_1a48d9cccd617a4cab0e7a8ac26d0b63b9" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetFontAndColor</name></member>
      <member refid="classBTextView_1a2b5e64f896b1dd9974450f7959d773f7" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetFontAndColor</name></member>
      <member refid="classBView_1a443e4d9ff182f85a6b1c8478ef22ffe8" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetFontSize</name></member>
      <member refid="classBView_1ab5482f91a642d545bc3fcefe199f95e9" prot="public" virt="virtual"><scope>BTextView</scope><name>SetHighColor</name></member>
      <member refid="classBView_1aff9e1ab5e88f33027e72b39874868e9b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetHighColor</name></member>
      <member refid="classBView_1a54eefc28bf7a4bc30612cf83aff2963b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetHighUIColor</name></member>
      <member refid="classBTextView_1a3dccebc1ff74ad040d660e36cb13ddbc" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetInsets</name></member>
      <member refid="classBView_1acac1ebbba8c76e543e1b06e84dffab02" prot="public" virt="virtual"><scope>BTextView</scope><name>SetLayout</name></member>
      <member refid="classBView_1ae97bfe6c0c93fce98bc7bbd93761dbfb" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetLineMode</name></member>
      <member refid="classBView_1af0426243110fb150ad7ef0705209a12c" prot="public" virt="virtual"><scope>BTextView</scope><name>SetLowColor</name></member>
      <member refid="classBView_1a929fb1ca47a00220c355ae55a0ea6077" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetLowColor</name></member>
      <member refid="classBView_1a879ab88d4e64345069f1041d3a7b652f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetLowUIColor</name></member>
      <member refid="classBTextView_1a233e3150486c81394d3bfe44dad0babe" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetMaxBytes</name></member>
      <member refid="classBView_1ae7705783d064a8613dcc6f36a2866ab2" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetMouseEventMask</name></member>
      <member refid="classBHandler_1abf861126df4b6e71b9261a99da4ad0eb" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetName</name></member>
      <member refid="classBHandler_1a02f78779c8141987d6030e73c22e734a" prot="public" virt="virtual"><scope>BTextView</scope><name>SetNextHandler</name></member>
      <member refid="classBView_1a769e5fa6486adf12e7a3511ed372a06c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetOrigin</name></member>
      <member refid="classBView_1a7cf4e3ac5b0759b9c38d7b36517f2337" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetOrigin</name></member>
      <member refid="classBView_1a80ea4cb97d2e6e2c3088e610a9e157e6" prot="public" virt="virtual"><scope>BTextView</scope><name>SetPenSize</name></member>
      <member refid="classBView_1a38d29ea581880c3978d7e50dcc851696" prot="public" virt="virtual"><scope>BTextView</scope><name>SetResizingMode</name></member>
      <member refid="classBTextView_1af8a001e075c227513621ee16090c80db" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetRunArray</name></member>
      <member refid="classBView_1a077136ea06f0a6b39aa0b8b24311cce8" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetScale</name></member>
      <member refid="classBTextView_1af7ff7c6ed79a7deaf1ff180b0b2fc597" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetStylable</name></member>
      <member refid="classBTextView_1a692c0cf4d5ad343d35ca12bcdf7e44f0" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetTabWidth</name></member>
      <member refid="classBTextView_1a6af0844c93f0a548e0717e0b4e2b8e33" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetText</name></member>
      <member refid="classBTextView_1ad1a7f628f620e6c547e42d2dbbd18ac8" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetText</name></member>
      <member refid="classBTextView_1ad10cfbcd1fabaf0300568e154ceab53a" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetText</name></member>
      <member refid="classBTextView_1a5dfe405b8963dec0acf22d571566f335" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetTextRect</name></member>
      <member refid="classBView_1a75fb825a3ef69c1c6fbf3535ee2260ab" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetToolTip</name></member>
      <member refid="classBView_1aa377bad64048a2d3cd1c2b272ae3079b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetToolTip</name></member>
      <member refid="classBView_1afbd9b8f35226ba89980c450f7626fc85" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetTransform</name></member>
      <member refid="classBView_1ac247ddc58f1cb719d60e354a77c51c1e" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetViewBitmap</name></member>
      <member refid="classBView_1a046a9c1656823db5401e530cf8121734" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetViewBitmap</name></member>
      <member refid="classBView_1ae8dde0e0330b394db016f3e609e7fb6a" prot="public" virt="virtual"><scope>BTextView</scope><name>SetViewColor</name></member>
      <member refid="classBView_1a7dace2963c85b5ce55b7d8e96946625c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetViewColor</name></member>
      <member refid="classBView_1a39b4878773b4436e3c76aee51c4fbc09" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetViewCursor</name></member>
      <member refid="classBView_1a576100502a8c6dfb46ff36b08cbe9405" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetViewOverlay</name></member>
      <member refid="classBView_1a9770c1bb97d7ffd797f7c40ca1339f98" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetViewOverlay</name></member>
      <member refid="classBView_1a34f020c4bb1008cef972cf1eec7dba0f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetViewUIColor</name></member>
      <member refid="classBTextView_1afe3b998f71371ae8479ac72ef3b4fb08" prot="public" virt="non-virtual"><scope>BTextView</scope><name>SetWordWrap</name></member>
      <member refid="classBView_1a06e0584057d6c7a7c7e048b6272b7016" prot="public" virt="virtual"><scope>BTextView</scope><name>Show</name></member>
      <member refid="classBView_1a61d28f55d6fdc55b59c38c44b9788205" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ShowToolTip</name></member>
      <member refid="classBHandler_1af7d600e33a0586af7444d9abc8500504" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a20713ff6ee9df49a014f391374eaf689" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a58d7c8d30e47fbb7590f10dea1f21166" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a31927c51d89e0e3b3bf609a786ee6c3b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a9d1f0d55b3dc7337058aba769b4e4f93" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1ad3544be491270f856a0af8d36ce02d78" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1a199c167e0dcee95aa65d09435804b3d9" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StopWatchingAll</name></member>
      <member refid="classBHandler_1a8b9a424ce63f5932666094b6eadf10cf" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StopWatchingAll</name></member>
      <member refid="classBView_1adef480de8a8bcd2fff3129660501616e" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StringWidth</name></member>
      <member refid="classBView_1aef3638cf597407e6a9f31bc75cd42097" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StringWidth</name></member>
      <member refid="classBView_1a57222cd40096dfe23e1df86a01277041" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokeArc</name></member>
      <member refid="classBView_1a9c958b9399925a8a0ea333afd337ebfd" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokeArc</name></member>
      <member refid="classBView_1a64ea2ad06018b0b3b156113d201c7ad7" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokeBezier</name></member>
      <member refid="classBView_1a042703445263f1d9a9213757fcf27414" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokeEllipse</name></member>
      <member refid="classBView_1ae7727ca808873634363e5306fdbcc09a" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokeEllipse</name></member>
      <member refid="classBView_1a909ee03901fac4ae5504f7faf5e41a7c" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokeLine</name></member>
      <member refid="classBView_1ab713fc42e330d0a091a9774edfb9626f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokeLine</name></member>
      <member refid="classBView_1ae871d03592c1bba5d6be3d5d982ea747" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1a1638c58553467f3ebe5ee2b3683d4905" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1a1482fddababe3dd1377f86a038f7119b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1ad3893af66d3891855f9db7072bfb4de7" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokeRect</name></member>
      <member refid="classBView_1acf743b2ba22b82c8bc38eb514513df55" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokeRoundRect</name></member>
      <member refid="classBView_1a507e9b732e880ac8e6379e19e74d5757" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokeShape</name></member>
      <member refid="classBView_1a8221cce8942e590c2fea954f57933e78" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokeTriangle</name></member>
      <member refid="classBView_1ae59fc9e9cfaba5e2d6e79a90723a3330" prot="public" virt="non-virtual"><scope>BTextView</scope><name>StrokeTriangle</name></member>
      <member refid="classBView_1a27e217abb3fefa45b6e4ceb7a54cb362" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Sync</name></member>
      <member refid="classBTextView_1acc5bfe534c4c1ef13b0a9df231cded18" prot="public" virt="non-virtual"><scope>BTextView</scope><name>TabWidth</name></member>
      <member refid="classBView_1a668a4ed5419c86a7f2696ca7ece28df7" prot="public" virt="virtual"><scope>BTextView</scope><name>TargetedByScrollView</name></member>
      <member refid="classBTextView_1aa4abaa45b5c4f1ac15fd7d613d71317b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Text</name></member>
      <member refid="classBTextView_1abda2968c60959c9909c54a42fb771fe0" prot="public" virt="non-virtual"><scope>BTextView</scope><name>TextHeight</name></member>
      <member refid="classBTextView_1a0ea8237b7c2aadce8e2f0ed97b3aa282" prot="public" virt="non-virtual"><scope>BTextView</scope><name>TextLength</name></member>
      <member refid="classBTextView_1ada039d479fde2de2f4ea2375cf71edc2" prot="public" virt="non-virtual"><scope>BTextView</scope><name>TextRect</name></member>
      <member refid="classBView_1a127ceec2101b12c0fbe1e0e66a7b9dc1" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ToolTip</name></member>
      <member refid="classBView_1ab16cc72cf8ae3b40abcf1f714e7e9b74" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Transform</name></member>
      <member refid="classBView_1a98597d70ae48b2576683f25078135534" prot="public" virt="non-virtual"><scope>BTextView</scope><name>TransformTo</name></member>
      <member refid="classBView_1a8ae6d4e1cdfeeee33b753d56bee6ae7f" prot="public" virt="non-virtual"><scope>BTextView</scope><name>TranslateBy</name></member>
      <member refid="classBView_1ac2e293fbdd999e4857b44b6e4d4c3820" prot="public" virt="non-virtual"><scope>BTextView</scope><name>TruncateString</name></member>
      <member refid="classBTextView_1a01eb835c908413f5d02743018a21ad31" prot="public" virt="virtual"><scope>BTextView</scope><name>Undo</name></member>
      <member refid="classBTextView_1a2048fe01750273a23ff12a715f2f591b" prot="public" virt="non-virtual"><scope>BTextView</scope><name>UndoState</name></member>
      <member refid="classBTextView_1ac392ccdc8ac97ad5c090a7b5a42ac223" prot="public" virt="non-virtual"><scope>BTextView</scope><name>UnflattenRunArray</name></member>
      <member refid="classBHandler_1ab131af7eb7aa2b9eea3a11ac1bfd4c03" prot="public" virt="non-virtual"><scope>BTextView</scope><name>UnlockLooper</name></member>
      <member refid="classBView_1a8b2b1d9e08ce0c1763dd6a077ed02fdd" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ViewColor</name></member>
      <member refid="classBView_1aec6c89446eb4f5ded151adced9126df8" prot="public" virt="non-virtual"><scope>BTextView</scope><name>ViewUIColor</name></member>
      <member refid="classBView_1a32733d357b76bc3504cae326d174f4a2" prot="public" virt="non-virtual"><scope>BTextView</scope><name>Window</name></member>
      <member refid="classBTextView_1ad60669080665218ce09f2773b7470f2d" prot="public" virt="virtual"><scope>BTextView</scope><name>WindowActivated</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BTextView</scope><name>~BArchivable</name></member>
      <member refid="classBHandler_1a928254034959d19ef588b7898a6f8194" prot="public" virt="virtual"><scope>BTextView</scope><name>~BHandler</name></member>
      <member refid="classBTextView_1a2f8f9f4590d6436a4fe3cbbafb9db8cd" prot="public" virt="virtual"><scope>BTextView</scope><name>~BTextView</name></member>
      <member refid="classBView_1a7df0d7eaeb97a3c8a800f9e321f23f67" prot="public" virt="virtual"><scope>BTextView</scope><name>~BView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
