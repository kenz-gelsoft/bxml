<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBShape" kind="class" language="C++" prot="public">
    <compoundname>BShape</compoundname>
    <basecompoundref refid="classBArchivable" prot="public" virt="non-virtual">BArchivable</basecompoundref>
      <sectiondef kind="user-defined">
      <header>Archiving</header>
      <memberdef kind="function" id="classBShape_1ae132d554f4df208974b5019436ad1b36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BShape::Archive</definition>
        <argsstring>(BMessage *archive, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BShape::Archive</qualifiedname>
        <reimplements refid="classBArchivable_1a051c5263dd1a75dcf28787b60825dc44">Archive</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Archives the <ref refid="classBShape" kindref="compound">BShape</ref> object to a <ref refid="classBMessage" kindref="compound">BMessage</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>archive</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBMessage" kindref="compound">BMessage</ref> object to archive the <ref refid="classBShape" kindref="compound">BShape</ref> data to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deep</parametername>
</parameternamelist>
<parameterdescription>
<para>Currently unused.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code, <computeroutput>B_OK</computeroutput> on scucess or an error code otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="57" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a012debe8f24b7b5d69712f57a863923f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>BArchivable * BShape::Instantiate</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BShape::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classBShape" kindref="compound">BShape</ref> object from an <emphasis>archive</emphasis> message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>archive</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBMessage" kindref="compound">BMessage</ref> object to construct the <ref refid="classBShape" kindref="compound">BShape</ref> data from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="classBShape" kindref="compound">BShape</ref> object or <computeroutput>NULL</computeroutput> if <emphasis>archive</emphasis> was invalid.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="56" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operators</header>
      <memberdef kind="function" id="classBShape_1afc519b158bc6600c4962980b49860b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBShape" kindref="compound">BShape</ref> &amp;</type>
        <definition>BShape &amp; BShape::operator=</definition>
        <argsstring>(const BShape &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BShape::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBShape" kindref="compound">BShape</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classBShape" kindref="compound">BShape</ref> object as a copy of <emphasis>other</emphasis> by overloading the = operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBShape" kindref="compound">BShape</ref> object to copy from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Always returns *this.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="60" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1aa7d10d99628a942c62be4863ef2422f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BShape::operator==</definition>
        <argsstring>(const BShape &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>BShape::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classBShape" kindref="compound">BShape</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the contents of this <ref refid="classBShape" kindref="compound">BShape</ref> and <emphasis>other</emphasis> contain the same data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the contents are equal, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="62" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a12875c68c295fd6e35eb551ba61ab7e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BShape::operator!=</definition>
        <argsstring>(const BShape &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>BShape::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classBShape" kindref="compound">BShape</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the contents of this <ref refid="classBShape" kindref="compound">BShape</ref> and <emphasis>other</emphasis> do NOT contain the same data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the contents are NOT equal, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="63" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classBShape_1a1c09ecefdcf97647be144a296768d3a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BShape::MoveTo</definition>
        <argsstring>(BPoint point)</argsstring>
        <name>MoveTo</name>
        <qualifiedname>BShape::MoveTo</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Adds a &quot;move to&quot; operation to the <ref refid="classBShape" kindref="compound">BShape</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The next <ref refid="classBShape_1ad4d566bb4953c3c3861a2d3d9d13deda" kindref="member">LineTo()</ref> or <ref refid="classBShape_1a7cb0066ad12c01792af8db55d0e63d29" kindref="member">BezierTo()</ref> will begin at <emphasis>point</emphasis> allowing you to create noncontiguous shapes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point to start the next <ref refid="classBShape_1ad4d566bb4953c3c3861a2d3d9d13deda" kindref="member">LineTo()</ref> or <ref refid="classBShape_1a7cb0066ad12c01792af8db55d0e63d29" kindref="member">BezierTo()</ref> at.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a status code, <computeroutput>B_OK</computeroutput> on success or an error code otherwise. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was added successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while trying to add the operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="71" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1ad4d566bb4953c3c3861a2d3d9d13deda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BShape::LineTo</definition>
        <argsstring>(BPoint linePoint)</argsstring>
        <name>LineTo</name>
        <qualifiedname>BShape::LineTo</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>linePoint</declname>
          <defname>point</defname>
        </param>
        <briefdescription>
<para>Adds a &quot;draw line&quot; operation to the <ref refid="classBShape" kindref="compound">BShape</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>A line will be drawn from the previous point to the <emphasis>point</emphasis> specified.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point to draw a line to starting at the previous location.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a status code, <computeroutput>B_OK</computeroutput> on success or an error code otherwise. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was added successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while trying to add the operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="72" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a7cb0066ad12c01792af8db55d0e63d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BShape::BezierTo</definition>
        <argsstring>(BPoint controlPoints[3])</argsstring>
        <name>BezierTo</name>
        <qualifiedname>BShape::BezierTo</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>controlPoints</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Adds a &quot;draw Bézier curve&quot; operation to the <ref refid="classBShape" kindref="compound">BShape</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>A Bézier curve is drawn that begins at the current point and is made up of the specified <emphasis>controlPoints</emphasis>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controlPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>The points that make up the Bézier curve.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a status code, <computeroutput>B_OK</computeroutput> on success or an error code otherwise. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was added successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while trying to add the operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="73" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a2f9bbdaaf8c373f99f75e62933b165b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BShape::BezierTo</definition>
        <argsstring>(const BPoint &amp;control1, const BPoint &amp;control2, const BPoint &amp;endPoint)</argsstring>
        <name>BezierTo</name>
        <qualifiedname>BShape::BezierTo</qualifiedname>
        <param>
          <type>const <ref refid="classBPoint" kindref="compound">BPoint</ref> &amp;</type>
          <declname>control1</declname>
        </param>
        <param>
          <type>const <ref refid="classBPoint" kindref="compound">BPoint</ref> &amp;</type>
          <declname>control2</declname>
        </param>
        <param>
          <type>const <ref refid="classBPoint" kindref="compound">BPoint</ref> &amp;</type>
          <declname>endPoint</declname>
        </param>
        <briefdescription>
<para>Adds a &quot;draw Bézier curve&quot; operation to the <ref refid="classBShape" kindref="compound">BShape</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>A Bézier curve is drawn that begins at the current point and is made up of the specified points.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>control1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first control point of the Bézier curve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>control2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second control point of the Bézier curve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The end point of the Bézier curve.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a status code, <computeroutput>B_OK</computeroutput> on success or an error code otherwise. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was added successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while trying to add the operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="74" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1ac6c84ff1042d4896a9a2a06fe06a3281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BShape::ArcTo</definition>
        <argsstring>(float rx, float ry, float angle, bool largeArc, bool counterClockWise, const BPoint &amp;point)</argsstring>
        <name>ArcTo</name>
        <qualifiedname>BShape::ArcTo</qualifiedname>
        <param>
          <type>float</type>
          <declname>rx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ry</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>largeArc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>counterClockWise</declname>
        </param>
        <param>
          <type>const <ref refid="classBPoint" kindref="compound">BPoint</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Adds a &quot;draw arc&quot; operation to the <ref refid="classBShape" kindref="compound">BShape</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>An arc is draw that begins at the current point and is specified by the parameters to this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rx</parametername>
</parameternamelist>
<parameterdescription>
<para>The horizontal radius of the arc. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ry</parametername>
</parameternamelist>
<parameterdescription>
<para>The vertical radius of the arc. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting angle of the arc in degrees. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>largeArc</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to draw a large arc. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counterClockWise</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to draw the arc counter-clockwise, <computeroutput>false</computeroutput> to draw the arc clockwise. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The center point of the arc.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a status code, <computeroutput>B_OK</computeroutput> on success or an error code otherwise. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was added successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while trying to add the operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="77" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1aac2250db6c8e504433b4a7665623640b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BShape::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <qualifiedname>BShape::Close</qualifiedname>
        <briefdescription>
<para>Adds an operation to close the <ref refid="classBShape" kindref="compound">BShape</ref> once it is fully constructed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns a status code, <computeroutput>B_OK</computeroutput> on success or an error code otherwise. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was added successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while trying to add the operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="81" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBShape_1a92b47ee5d7b21bbd322ef7edda6ca24b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BFont</definition>
        <argsstring></argsstring>
        <name>BFont</name>
        <qualifiedname>BShape::BFont</qualifiedname>
        <param>
          <type><ref refid="classBFont" kindref="compound">BFont</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="95" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Shape.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBShape_1a933f1879ea14b9b06856eb36098f056f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BPrivate::PicturePlayer</definition>
        <argsstring></argsstring>
        <name>BPrivate::PicturePlayer</name>
        <qualifiedname>BShape::PicturePlayer</qualifiedname>
        <param>
          <type>BPrivate::PicturePlayer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="96" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Shape.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBShape_1af2e93092ef4a500040964808a885fb19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BPrivate::ServerLink</definition>
        <argsstring></argsstring>
        <name>BPrivate::ServerLink</name>
        <qualifiedname>BShape::ServerLink</qualifiedname>
        <param>
          <type>BPrivate::ServerLink</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="97" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Shape.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBShape_1a64ac4b74af8406a60e10065839af1df2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BShapeIterator</definition>
        <argsstring></argsstring>
        <name>BShapeIterator</name>
        <qualifiedname>BShape::BShapeIterator</qualifiedname>
        <param>
          <type><ref refid="classBShapeIterator" kindref="compound">BShapeIterator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="93" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Shape.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBShape_1a304c5edf0ab3769baf95966dda5800a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BView</definition>
        <argsstring></argsstring>
        <name>BView</name>
        <qualifiedname>BShape::BView</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="94" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Shape.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBShape_1a6b83040ba9abde694311c082ba2ac103" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BShape::fBuildingOp</definition>
        <argsstring></argsstring>
        <name>fBuildingOp</name>
        <qualifiedname>BShape::fBuildingOp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="110" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/Shape.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBShape_1adafd8b33fd935d78e417485d31e28b89" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* BShape::fPrivateData</definition>
        <argsstring></argsstring>
        <name>fPrivateData</name>
        <qualifiedname>BShape::fPrivateData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="111" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/Shape.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBShape_1a21ec955919723c2164b402e0c7089029" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BShape::fState</definition>
        <argsstring></argsstring>
        <name>fState</name>
        <qualifiedname>BShape::fState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="109" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/Shape.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBShape_1ae304a50ac7121c23c7e53f682c3c1740" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BShape::reserved[4]</definition>
        <argsstring>[4]</argsstring>
        <name>reserved</name>
        <qualifiedname>BShape::reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="113" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/Shape.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBShape_1abae1c1db14831afc4577871db976e77b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BShape::BShape</definition>
        <argsstring>()</argsstring>
        <name>BShape</name>
        <qualifiedname>BShape::BShape</qualifiedname>
        <briefdescription>
<para>Creates an empty <ref refid="classBShape" kindref="compound">BShape</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a965f545110247b705c908415c47d43c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BShape::BShape</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>BShape</name>
        <qualifiedname>BShape::BShape</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classBShape" kindref="compound">BShape</ref> message from an <emphasis>archive</emphasis> message. </para>
        </briefdescription>
        <detaileddescription>
<para>You should call <ref refid="classBShape_1a012debe8f24b7b5d69712f57a863923f" kindref="member">Instantiate()</ref> instead as it will validate whether or not the object was created successfully.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>archive</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBMessage" kindref="compound">BMessage</ref> object to construct the data from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a08f57601a9d0bb9ef9a7f8a431c4c8aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BShape::BShape</definition>
        <argsstring>(const BShape &amp;other)</argsstring>
        <name>BShape</name>
        <qualifiedname>BShape::BShape</qualifiedname>
        <param>
          <type>const <ref refid="classBShape" kindref="compound">BShape</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classBShape" kindref="compound">BShape</ref> object as a copy of <emphasis>other</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBShape" kindref="compound">BShape</ref> object to copy from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1afda42343ddb445d38691d91b8d284695" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BShape::~BShape</definition>
        <argsstring>()</argsstring>
        <name>~BShape</name>
        <qualifiedname>BShape::~BShape</qualifiedname>
        <briefdescription>
<para>Destructor, deletes all associated data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="54" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a68e1fee470acccc5bec36605d2da3a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BShape::AddShape</definition>
        <argsstring>(const BShape *other)</argsstring>
        <name>AddShape</name>
        <qualifiedname>BShape::AddShape</qualifiedname>
        <param>
          <type>const <ref refid="classBShape" kindref="compound">BShape</ref> *</type>
          <declname>other</declname>
          <defname>otherShape</defname>
        </param>
        <briefdescription>
<para>Adds the lines and curves of <emphasis>otherShape</emphasis> to <ref refid="classBShape" kindref="compound">BShape</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Always returns <computeroutput>B_OK</computeroutput>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="69" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a181832ed7c8e5f5913e4701b8a74c3e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BShape::Bounds</definition>
        <argsstring>() const</argsstring>
        <name>Bounds</name>
        <qualifiedname>BShape::Bounds</qualifiedname>
        <briefdescription>
<para>Returns a <ref refid="classBRect" kindref="compound">BRect</ref> that encloses all points in the <ref refid="classBShape" kindref="compound">BShape</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This implementation doesn&apos;t take into account curves at all.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="66" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a016b65b4f53273192d69952ab13df5bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BShape::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <qualifiedname>BShape::Clear</qualifiedname>
        <briefdescription>
<para>Deletes all data returning the <ref refid="classBShape" kindref="compound">BShape</ref> to an empty state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="65" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a774165c79f57ff3212680b8b761758be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
        <definition>BPoint BShape::CurrentPosition</definition>
        <argsstring>() const</argsstring>
        <name>CurrentPosition</name>
        <qualifiedname>BShape::CurrentPosition</qualifiedname>
        <briefdescription>
<para>Returns the current end point of the path. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current end point of the path or <computeroutput>B_ORIGIN</computeroutput> if no points have been added yet.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="67" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBShape_1a7137f67ea9f16eaddad863e1644a6dbc" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BShape::_ReservedShape1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedShape1</name>
        <qualifiedname>BShape::_ReservedShape1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="87" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a8bf26ba4c5520427315db5f8c5415fed" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BShape::_ReservedShape2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedShape2</name>
        <qualifiedname>BShape::_ReservedShape2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="88" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a753bafc72648ae7cedd7da972584f885" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BShape::_ReservedShape3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedShape3</name>
        <qualifiedname>BShape::_ReservedShape3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="89" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a715b569908b0dfbe195966522d5414d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BShape::_ReservedShape4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedShape4</name>
        <qualifiedname>BShape::_ReservedShape4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="90" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a7ec646c348c543f0f3bf76f7a1098b43" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BShape::AllocateOps</definition>
        <argsstring>(int32 count)</argsstring>
        <name>AllocateOps</name>
        <qualifiedname>BShape::AllocateOps</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="106" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a332c3d0189f4057661f17648a967295b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BShape::AllocatePts</definition>
        <argsstring>(int32 count)</argsstring>
        <name>AllocatePts</name>
        <qualifiedname>BShape::AllocatePts</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="105" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a52dd6f854dcd935b637718e7b85e004c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BShape::GetData</definition>
        <argsstring>(int32 *opCount, int32 *ptCount, uint32 **opList, BPoint **ptList)</argsstring>
        <name>GetData</name>
        <qualifiedname>BShape::GetData</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>opCount</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>ptCount</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> **</type>
          <declname>opList</declname>
        </param>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref> **</type>
          <declname>ptList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="99" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a4f5d58cb87401d9ef48467e0b7d57cfe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BShape::InitData</definition>
        <argsstring>()</argsstring>
        <name>InitData</name>
        <qualifiedname>BShape::InitData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="104" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a8fb85b6315cd2f83144fa8dae729e5f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BShape::Perform</definition>
        <argsstring>(perform_code code, void *data)</argsstring>
        <name>Perform</name>
        <qualifiedname>BShape::Perform</qualifiedname>
        <reimplements refid="classBArchivable_1a827fa92febcf925f07545aa9777df9de">Perform</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" kindref="member">perform_code</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Perform some action (Internal method defined for binary compatibility purposes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="85" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBShape_1a58827565c55a8759fe41d91c0c96498b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BShape::SetData</definition>
        <argsstring>(int32 opCount, int32 ptCount, const uint32 *opList, const BPoint *ptList)</argsstring>
        <name>SetData</name>
        <qualifiedname>BShape::SetData</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>opCount</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>ptCount</declname>
        </param>
        <param>
          <type>const <ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> *</type>
          <declname>opList</declname>
        </param>
        <param>
          <type>const <ref refid="classBPoint" kindref="compound">BPoint</ref> *</type>
          <declname>ptList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="101" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Encapsulates a Postscript-style &quot;path&quot;. </para>
    </briefdescription>
    <detaileddescription>
<para>You can obtain the outlines of characters from a string as <ref refid="classBShape" kindref="compound">BShape</ref> objects by calling <ref refid="classBFont_1ac51729d5adbaabf69520f9d2342af1b1" kindref="member">BFont::GetGlyphShapes()</ref>.</para>
<para><simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BShape</label>
        <link refid="classBShape"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BShape</label>
        <link refid="classBShape"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/interface/Shape.h" line="49" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/Shape.h" bodystart="49" bodyend="114"/>
    <listofallmembers>
      <member refid="classBShape_1a7137f67ea9f16eaddad863e1644a6dbc" prot="private" virt="virtual"><scope>BShape</scope><name>_ReservedShape1</name></member>
      <member refid="classBShape_1a8bf26ba4c5520427315db5f8c5415fed" prot="private" virt="virtual"><scope>BShape</scope><name>_ReservedShape2</name></member>
      <member refid="classBShape_1a753bafc72648ae7cedd7da972584f885" prot="private" virt="virtual"><scope>BShape</scope><name>_ReservedShape3</name></member>
      <member refid="classBShape_1a715b569908b0dfbe195966522d5414d5" prot="private" virt="virtual"><scope>BShape</scope><name>_ReservedShape4</name></member>
      <member refid="classBShape_1a68e1fee470acccc5bec36605d2da3a10" prot="public" virt="non-virtual"><scope>BShape</scope><name>AddShape</name></member>
      <member refid="classBArchivable_1a4075315c407443a3b0dbb3d7551b53c9" prot="public" virt="virtual"><scope>BShape</scope><name>AllArchived</name></member>
      <member refid="classBShape_1a7ec646c348c543f0f3bf76f7a1098b43" prot="private" virt="non-virtual"><scope>BShape</scope><name>AllocateOps</name></member>
      <member refid="classBShape_1a332c3d0189f4057661f17648a967295b" prot="private" virt="non-virtual"><scope>BShape</scope><name>AllocatePts</name></member>
      <member refid="classBArchivable_1a2b1d74c147ea18e4b4bfacd42f11e0d2" prot="public" virt="virtual"><scope>BShape</scope><name>AllUnarchived</name></member>
      <member refid="classBShape_1ae132d554f4df208974b5019436ad1b36" prot="public" virt="virtual"><scope>BShape</scope><name>Archive</name></member>
      <member refid="classBShape_1ac6c84ff1042d4896a9a2a06fe06a3281" prot="public" virt="non-virtual"><scope>BShape</scope><name>ArcTo</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BShape</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BShape</scope><name>BArchivable</name></member>
      <member refid="classBShape_1a7cb0066ad12c01792af8db55d0e63d29" prot="public" virt="non-virtual"><scope>BShape</scope><name>BezierTo</name></member>
      <member refid="classBShape_1a2f9bbdaaf8c373f99f75e62933b165b1" prot="public" virt="non-virtual"><scope>BShape</scope><name>BezierTo</name></member>
      <member refid="classBShape_1a181832ed7c8e5f5913e4701b8a74c3e9" prot="public" virt="non-virtual"><scope>BShape</scope><name>Bounds</name></member>
      <member refid="classBShape_1abae1c1db14831afc4577871db976e77b" prot="public" virt="non-virtual"><scope>BShape</scope><name>BShape</name></member>
      <member refid="classBShape_1a08f57601a9d0bb9ef9a7f8a431c4c8aa" prot="public" virt="non-virtual"><scope>BShape</scope><name>BShape</name></member>
      <member refid="classBShape_1a965f545110247b705c908415c47d43c5" prot="public" virt="non-virtual"><scope>BShape</scope><name>BShape</name></member>
      <member refid="classBShape_1a016b65b4f53273192d69952ab13df5bd" prot="public" virt="non-virtual"><scope>BShape</scope><name>Clear</name></member>
      <member refid="classBShape_1aac2250db6c8e504433b4a7665623640b" prot="public" virt="non-virtual"><scope>BShape</scope><name>Close</name></member>
      <member refid="classBShape_1a774165c79f57ff3212680b8b761758be" prot="public" virt="non-virtual"><scope>BShape</scope><name>CurrentPosition</name></member>
      <member refid="classBShape_1a6b83040ba9abde694311c082ba2ac103" prot="private" virt="non-virtual"><scope>BShape</scope><name>fBuildingOp</name></member>
      <member refid="classBShape_1adafd8b33fd935d78e417485d31e28b89" prot="private" virt="non-virtual"><scope>BShape</scope><name>fPrivateData</name></member>
      <member refid="classBShape_1a21ec955919723c2164b402e0c7089029" prot="private" virt="non-virtual"><scope>BShape</scope><name>fState</name></member>
      <member refid="classBShape_1a52dd6f854dcd935b637718e7b85e004c" prot="private" virt="non-virtual"><scope>BShape</scope><name>GetData</name></member>
      <member refid="classBShape_1a4f5d58cb87401d9ef48467e0b7d57cfe" prot="private" virt="non-virtual"><scope>BShape</scope><name>InitData</name></member>
      <member refid="classBShape_1a012debe8f24b7b5d69712f57a863923f" prot="public" virt="non-virtual"><scope>BShape</scope><name>Instantiate</name></member>
      <member refid="classBShape_1ad4d566bb4953c3c3861a2d3d9d13deda" prot="public" virt="non-virtual"><scope>BShape</scope><name>LineTo</name></member>
      <member refid="classBShape_1a1c09ecefdcf97647be144a296768d3a8" prot="public" virt="non-virtual"><scope>BShape</scope><name>MoveTo</name></member>
      <member refid="classBShape_1a12875c68c295fd6e35eb551ba61ab7e8" prot="public" virt="non-virtual"><scope>BShape</scope><name>operator!=</name></member>
      <member refid="classBShape_1afc519b158bc6600c4962980b49860b61" prot="public" virt="non-virtual"><scope>BShape</scope><name>operator=</name></member>
      <member refid="classBShape_1aa7d10d99628a942c62be4863ef2422f3" prot="public" virt="non-virtual"><scope>BShape</scope><name>operator==</name></member>
      <member refid="classBShape_1a8fb85b6315cd2f83144fa8dae729e5f5" prot="private" virt="virtual"><scope>BShape</scope><name>Perform</name></member>
      <member refid="classBShape_1ae304a50ac7121c23c7e53f682c3c1740" prot="private" virt="non-virtual"><scope>BShape</scope><name>reserved</name></member>
      <member refid="classBShape_1a58827565c55a8759fe41d91c0c96498b" prot="private" virt="non-virtual"><scope>BShape</scope><name>SetData</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BShape</scope><name>~BArchivable</name></member>
      <member refid="classBShape_1afda42343ddb445d38691d91b8d284695" prot="public" virt="virtual"><scope>BShape</scope><name>~BShape</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
