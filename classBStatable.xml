<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBStatable" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>BStatable</compoundname>
    <derivedcompoundref refid="classBEntry" prot="public" virt="non-virtual">BEntry</derivedcompoundref>
    <derivedcompoundref refid="classBNode" prot="public" virt="non-virtual">BNode</derivedcompoundref>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBStatable_1a8e65bb0babd6817799ec151cf24d89be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BEntry</definition>
        <argsstring></argsstring>
        <name>BEntry</name>
        <qualifiedname>BStatable::BEntry</qualifiedname>
        <param>
          <type><ref refid="classBEntry" kindref="compound">BEntry</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="64" column="14" bodyfile="/boot/home/src/haiku/headers/os/storage/Statable.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBStatable_1aaf4e0590cc96d07575def1866c170767" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BNode</definition>
        <argsstring></argsstring>
        <name>BNode</name>
        <qualifiedname>BStatable::BNode</qualifiedname>
        <param>
          <type><ref refid="classBNode" kindref="compound">BNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="65" column="14" bodyfile="/boot/home/src/haiku/headers/os/storage/Statable.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBStatable_1ac96b60d37bd806132da680e187dc2288" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Private</definition>
        <argsstring></argsstring>
        <name>Private</name>
        <qualifiedname>BStatable::Private</qualifiedname>
        <param>
          <type>Private</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="66" column="14" bodyfile="/boot/home/src/haiku/headers/os/storage/Statable.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBStatable_1adeb960cdd47f8ef8e9c577c50bdf3624" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BStatable::_reserved[4]</definition>
        <argsstring>[4]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BStatable::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="70" column="8" bodyfile="/boot/home/src/haiku/headers/os/storage/Statable.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBStatable_1a52d35511773ddb642e7701527c2c1308" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BStatable::_GetStat</definition>
        <argsstring>(struct stat_beos *stat) const =0</argsstring>
        <name>_GetStat</name>
        <qualifiedname>BStatable::_GetStat</qualifiedname>
        <reimplementedby refid="classBEntry_1ab63eecf00360ebb41f21a6e411f75e9c">_GetStat</reimplementedby>
        <reimplementedby refid="classBNode_1aeb5f43b0ad3853280452bf1d1db77fa1">_GetStat</reimplementedby>
        <param>
          <type>struct stat_beos *</type>
          <declname>stat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="27" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1aff687fe47fdff60d899ca032d40b7b30" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BStatable::_OhSoStatable2</definition>
        <argsstring>()</argsstring>
        <name>_OhSoStatable2</name>
        <qualifiedname>BStatable::_OhSoStatable2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="68" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1a2176e7e22eed10709b2bb39d9db1a089" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BStatable::_OhSoStatable3</definition>
        <argsstring>()</argsstring>
        <name>_OhSoStatable3</name>
        <qualifiedname>BStatable::_OhSoStatable3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="69" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1abbed307846be19643f0de64f835767a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BStatable::set_stat</definition>
        <argsstring>(struct stat &amp;st, uint32 what)=0</argsstring>
        <name>set_stat</name>
        <qualifiedname>BStatable::set_stat</qualifiedname>
        <reimplementedby refid="classBEntry_1ad13d070d74409665051aee190fa634a6">set_stat</reimplementedby>
        <reimplementedby refid="classBNode_1afcb79b479deacbcd4309217f076f8e34">set_stat</reimplementedby>
        <param>
          <type>struct stat &amp;</type>
          <declname>st</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>what</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="72" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBStatable_1a55dea9fb7be6e844b6515f73ee0a929a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::GetAccessTime</definition>
        <argsstring>(time_t *atime) const</argsstring>
        <name>GetAccessTime</name>
        <qualifiedname>BStatable::GetAccessTime</qualifiedname>
        <param>
          <type>time_t *</type>
          <declname>atime</declname>
        </param>
        <briefdescription>
<para>Fills out <emphasis>atime</emphasis> with the access time of the node. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBStatable_1a5571998c1d3ca9a59ad521556b3dee63" kindref="member">GetModificationTime()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBStatable_1aab2c65df1f1459d014a0a2ba9638411e" kindref="member">SetAccessTime()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="56" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1ac80b82a49b8c757d4bf0034d70c33eb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::GetCreationTime</definition>
        <argsstring>(time_t *ctime) const</argsstring>
        <name>GetCreationTime</name>
        <qualifiedname>BStatable::GetCreationTime</qualifiedname>
        <param>
          <type>time_t *</type>
          <declname>ctime</declname>
        </param>
        <briefdescription>
<para>Fills out <emphasis>ctime</emphasis> with the creation time of the node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctime</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <computeroutput>time_t</computeroutput> variable to be set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBStatable_1a6a92b04cda608babf49f70ef4e3a2f36" kindref="member">SetCreationTime()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="53" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1ab27d67f089c0c4bd14cdc48f57c51a17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::GetGroup</definition>
        <argsstring>(gid_t *group) const</argsstring>
        <name>GetGroup</name>
        <qualifiedname>BStatable::GetGroup</qualifiedname>
        <param>
          <type>gid_t *</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Fills out the node&apos;s GID into <emphasis>group</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a <computeroutput>gid_t</computeroutput> variable to be set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBStatable_1af6e5ac17688536b3de2940a82349d043" kindref="member">SetGroup()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="42" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1a5571998c1d3ca9a59ad521556b3dee63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::GetModificationTime</definition>
        <argsstring>(time_t *mtime) const</argsstring>
        <name>GetModificationTime</name>
        <qualifiedname>BStatable::GetModificationTime</qualifiedname>
        <param>
          <type>time_t *</type>
          <declname>mtime</declname>
        </param>
        <briefdescription>
<para>Fills out <emphasis>mtime</emphasis> with the last modification time of the node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mtime</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <computeroutput>time_t</computeroutput> variable to be set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBStatable_1a1f2b84cea7b32a238b41f97e0264a048" kindref="member">SetModificationTime()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="50" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1ad22f2b8b8b11b151bc94d63caeb16c95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::GetNodeRef</definition>
        <argsstring>(node_ref *ref) const</argsstring>
        <name>GetNodeRef</name>
        <qualifiedname>BStatable::GetNodeRef</qualifiedname>
        <param>
          <type><ref refid="structnode__ref" kindref="compound">node_ref</ref> *</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Fills out <emphasis>ref</emphasis> with the <computeroutput><ref refid="structnode__ref" kindref="compound">node_ref</ref></computeroutput> of the node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structnode__ref" kindref="compound">node_ref</ref> to be set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="37" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1ae8cb57200fbeac9941622a33705d64a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::GetOwner</definition>
        <argsstring>(uid_t *owner) const</argsstring>
        <name>GetOwner</name>
        <qualifiedname>BStatable::GetOwner</qualifiedname>
        <param>
          <type>uid_t *</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
<para>Fills out the node&apos;s UID into <emphasis>owner</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <computeroutput>uid_t</computeroutput> to be set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBStatable_1a640ef9862775efaa6720691ed4b58256" kindref="member">SetOwner()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="39" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1a6a8b0225646734f4528858c72a5f9073" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::GetPermissions</definition>
        <argsstring>(mode_t *permissions) const</argsstring>
        <name>GetPermissions</name>
        <qualifiedname>BStatable::GetPermissions</qualifiedname>
        <param>
          <type>mode_t *</type>
          <declname>permissions</declname>
        </param>
        <briefdescription>
<para>Fills out <emphasis>perms</emphasis> with the permissions of the node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>permissions</parametername>
</parameternamelist>
<parameterdescription>
<para>The permissions to get from the node.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBStatable_1aaf215f1b31486d4fd65dd96229b26f97" kindref="member">SetPermissions()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="45" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1a52975e361937ae26f7c854da34e6e51a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::GetSize</definition>
        <argsstring>(off_t *size) const</argsstring>
        <name>GetSize</name>
        <qualifiedname>BStatable::GetSize</qualifiedname>
        <param>
          <type>off_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Fills out the size of the node&apos;s data (not counting attributes) into <emphasis>size</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <computeroutput>off_t</computeroutput> variable to be set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="48" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1a0fd44591384a51393418c7360d67c51d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::GetStat</definition>
        <argsstring>(struct stat *stat) const =0</argsstring>
        <name>GetStat</name>
        <qualifiedname>BStatable::GetStat</qualifiedname>
        <reimplementedby refid="classBNode_1aa8c7b4e488e8077aabc8f5fbe4504189">GetStat</reimplementedby>
        <reimplementedby refid="classBEntry_1a959fc90d95796a4b21001b248b30f709">GetStat</reimplementedby>
        <param>
          <type>struct stat *</type>
          <declname>stat</declname>
        </param>
        <briefdescription>
<para>Fills out the stat structure for the node. </para>
        </briefdescription>
        <detaileddescription>
<para>This method may be used to access the stat structure of a node directly.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stat</parametername>
</parameternamelist>
<parameterdescription>
<para>The stat structure to be filled in.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went fine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Could not allocate enough memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para>The node does not exist. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NOT_ALLOWED</parametername>
</parameternamelist>
<parameterdescription>
<para>Node or volume was read only.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="31" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1a2488e774eaa96bf07ae6156ea320fc0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::GetVolume</definition>
        <argsstring>(BVolume *volume) const</argsstring>
        <name>GetVolume</name>
        <qualifiedname>BStatable::GetVolume</qualifiedname>
        <param>
          <type><ref refid="classBVolume" kindref="compound">BVolume</ref> *</type>
          <declname>volume</declname>
        </param>
        <briefdescription>
<para>Fills out <emphasis>vol</emphasis> with the the volume that the node lives on. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="classBVolume" kindref="compound">BVolume</ref> object to be set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBVolume" kindref="compound">BVolume</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="59" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1a853345d2d3673b47f59dd655b6a3adca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BStatable::IsDirectory</definition>
        <argsstring>() const</argsstring>
        <name>IsDirectory</name>
        <qualifiedname>BStatable::IsDirectory</qualifiedname>
        <briefdescription>
<para>Returns whether or not the node is a directory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput>, if the node is properly initialized and is a directory, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R5 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="34" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1acaa5a30c8a6ee1f8854a787958d13eaf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BStatable::IsFile</definition>
        <argsstring>() const</argsstring>
        <name>IsFile</name>
        <qualifiedname>BStatable::IsFile</qualifiedname>
        <briefdescription>
<para>Returns whether or not the node is a file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput>, if the node is properly initialized and is a file, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R5 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="33" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1aa07af7f2d36c453d00e101bc6c6a487e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BStatable::IsSymLink</definition>
        <argsstring>() const</argsstring>
        <name>IsSymLink</name>
        <qualifiedname>BStatable::IsSymLink</qualifiedname>
        <briefdescription>
<para>Returns whether or not the node is a symbolic link. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput>, if the node is properly initialized and is a symlink, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R5 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="35" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1aab2c65df1f1459d014a0a2ba9638411e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::SetAccessTime</definition>
        <argsstring>(time_t atime)</argsstring>
        <name>SetAccessTime</name>
        <qualifiedname>BStatable::SetAccessTime</qualifiedname>
        <param>
          <type>time_t</type>
          <declname>atime</declname>
        </param>
        <briefdescription>
<para>Sets the node&apos;s access time to <emphasis>atime</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBStatable_1a5571998c1d3ca9a59ad521556b3dee63" kindref="member">GetModificationTime()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="57" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1a6a92b04cda608babf49f70ef4e3a2f36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::SetCreationTime</definition>
        <argsstring>(time_t ctime)</argsstring>
        <name>SetCreationTime</name>
        <qualifiedname>BStatable::SetCreationTime</qualifiedname>
        <param>
          <type>time_t</type>
          <declname>ctime</declname>
        </param>
        <briefdescription>
<para>Sets the node&apos;s creation time to <emphasis>ctime</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctime</parametername>
</parameternamelist>
<parameterdescription>
<para>The creation time to set the node to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="54" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1af6e5ac17688536b3de2940a82349d043" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::SetGroup</definition>
        <argsstring>(gid_t group)</argsstring>
        <name>SetGroup</name>
        <qualifiedname>BStatable::SetGroup</qualifiedname>
        <param>
          <type>gid_t</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Sets the node&apos;s GID to <emphasis>group</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>The GID to set the node to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="43" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1a1f2b84cea7b32a238b41f97e0264a048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::SetModificationTime</definition>
        <argsstring>(time_t mtime)</argsstring>
        <name>SetModificationTime</name>
        <qualifiedname>BStatable::SetModificationTime</qualifiedname>
        <param>
          <type>time_t</type>
          <declname>mtime</declname>
        </param>
        <briefdescription>
<para>Sets the node&apos;s last modification time to <emphasis>mtime</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mtime</parametername>
</parameternamelist>
<parameterdescription>
<para>The modification time to set the node to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="51" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1a640ef9862775efaa6720691ed4b58256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::SetOwner</definition>
        <argsstring>(uid_t owner)</argsstring>
        <name>SetOwner</name>
        <qualifiedname>BStatable::SetOwner</qualifiedname>
        <param>
          <type>uid_t</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
<para>Sets the node&apos;s UID to <emphasis>owner</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>The UID to set the node to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="40" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStatable_1aaf215f1b31486d4fd65dd96229b26f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BStatable::SetPermissions</definition>
        <argsstring>(mode_t permissions)</argsstring>
        <name>SetPermissions</name>
        <qualifiedname>BStatable::SetPermissions</qualifiedname>
        <param>
          <type>mode_t</type>
          <declname>permissions</declname>
        </param>
        <briefdescription>
<para>Sets the node&apos;s permissions to <emphasis>perms</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>permissions</parametername>
</parameternamelist>
<parameterdescription>
<para>The permissions to set the node to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> for return codes.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="46" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Pure abstract class that provides a wrapper interface to the POSIX® stat() function. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classBStatable" kindref="compound">BStatable</ref> provides common functionality for the <ref refid="classBEntry" kindref="compound">BEntry</ref> and <ref refid="classBNode" kindref="compound">BNode</ref> classes. You can use this class to:<itemizedlist>
<listitem><para>Get the stat struct of a node with the <ref refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" kindref="member">GetStat()</ref> method.</para>
</listitem><listitem><para>Identify a node as a file, directory, or symbolic link with the <ref refid="classBStatable_1acaa5a30c8a6ee1f8854a787958d13eaf" kindref="member">IsFile()</ref>, <ref refid="classBStatable_1a853345d2d3673b47f59dd655b6a3adca" kindref="member">IsDirectory()</ref>, and <ref refid="classBStatable_1aa07af7f2d36c453d00e101bc6c6a487e" kindref="member">IsSymLink()</ref> methods.</para>
</listitem><listitem><para>Get and set the UID (<ref refid="classBStatable_1ae8cb57200fbeac9941622a33705d64a4" kindref="member">GetOwner()</ref> and <ref refid="classBStatable_1a640ef9862775efaa6720691ed4b58256" kindref="member">SetOwner()</ref>), GID (<ref refid="classBStatable_1ab27d67f089c0c4bd14cdc48f57c51a17" kindref="member">GetGroup()</ref> and <ref refid="classBStatable_1af6e5ac17688536b3de2940a82349d043" kindref="member">SetGroup()</ref>), and permissions (<ref refid="classBStatable_1a6a8b0225646734f4528858c72a5f9073" kindref="member">GetPermissions()</ref> and <ref refid="classBStatable_1aaf215f1b31486d4fd65dd96229b26f97" kindref="member">SetPermissions()</ref>) of a node.</para>
</listitem><listitem><para>Get the size of a node&apos;s data (not counting attributes) with the <ref refid="classBStatable_1a52975e361937ae26f7c854da34e6e51a" kindref="member">GetSize()</ref> method.</para>
</listitem><listitem><para>Get and set a node&apos;s modification time (<ref refid="classBStatable_1a5571998c1d3ca9a59ad521556b3dee63" kindref="member">GetModificationTime()</ref> and <ref refid="classBStatable_1a1f2b84cea7b32a238b41f97e0264a048" kindref="member">SetModificationTime()</ref>), creation time (<ref refid="classBStatable_1ac80b82a49b8c757d4bf0034d70c33eb1" kindref="member">GetCreationTime()</ref> and <ref refid="classBStatable_1a6a92b04cda608babf49f70ef4e3a2f36" kindref="member">SetCreationTime()</ref>), and access time (<ref refid="classBStatable_1a55dea9fb7be6e844b6515f73ee0a929a" kindref="member">GetAccessTime()</ref> and <ref refid="classBStatable_1aab2c65df1f1459d014a0a2ba9638411e" kindref="member">SetAccessTime()</ref>).</para>
</listitem><listitem><para>Get a pointer to the <ref refid="classBVolume" kindref="compound">BVolume</ref> object that a node lives on via the <ref refid="classBStatable_1a2488e774eaa96bf07ae6156ea320fc0a" kindref="member">GetVolume()</ref> method.</para>
</listitem><listitem><para>Get a <ref refid="structnode__ref" kindref="compound">node_ref</ref> of a node to pass into <ref refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" kindref="member">watch_node()</ref> via the <ref refid="classBStatable_1ad22f2b8b8b11b151bc94d63caeb16c95" kindref="member">GetNodeRef()</ref> method.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>BDirectory</label>
        <link refid="classBDirectory"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BEntry</label>
        <link refid="classBEntry"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BFile</label>
        <link refid="classBFile"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BNode</label>
        <link refid="classBNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BStatable</label>
        <link refid="classBStatable"/>
      </node>
      <node id="6">
        <label>BSymLink</label>
        <link refid="classBSymLink"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/boot/home/src/haiku/headers/os/storage/Statable.h" line="20" column="1" bodyfile="/boot/home/src/haiku/headers/os/storage/Statable.h" bodystart="20" bodyend="73"/>
    <listofallmembers>
      <member refid="classBStatable_1a52d35511773ddb642e7701527c2c1308" prot="private" virt="pure-virtual"><scope>BStatable</scope><name>_GetStat</name></member>
      <member refid="classBStatable_1aff687fe47fdff60d899ca032d40b7b30" prot="private" virt="virtual"><scope>BStatable</scope><name>_OhSoStatable2</name></member>
      <member refid="classBStatable_1a2176e7e22eed10709b2bb39d9db1a089" prot="private" virt="virtual"><scope>BStatable</scope><name>_OhSoStatable3</name></member>
      <member refid="classBStatable_1adeb960cdd47f8ef8e9c577c50bdf3624" prot="private" virt="non-virtual"><scope>BStatable</scope><name>_reserved</name></member>
      <member refid="classBStatable_1a55dea9fb7be6e844b6515f73ee0a929a" prot="public" virt="non-virtual"><scope>BStatable</scope><name>GetAccessTime</name></member>
      <member refid="classBStatable_1ac80b82a49b8c757d4bf0034d70c33eb1" prot="public" virt="non-virtual"><scope>BStatable</scope><name>GetCreationTime</name></member>
      <member refid="classBStatable_1ab27d67f089c0c4bd14cdc48f57c51a17" prot="public" virt="non-virtual"><scope>BStatable</scope><name>GetGroup</name></member>
      <member refid="classBStatable_1a5571998c1d3ca9a59ad521556b3dee63" prot="public" virt="non-virtual"><scope>BStatable</scope><name>GetModificationTime</name></member>
      <member refid="classBStatable_1ad22f2b8b8b11b151bc94d63caeb16c95" prot="public" virt="non-virtual"><scope>BStatable</scope><name>GetNodeRef</name></member>
      <member refid="classBStatable_1ae8cb57200fbeac9941622a33705d64a4" prot="public" virt="non-virtual"><scope>BStatable</scope><name>GetOwner</name></member>
      <member refid="classBStatable_1a6a8b0225646734f4528858c72a5f9073" prot="public" virt="non-virtual"><scope>BStatable</scope><name>GetPermissions</name></member>
      <member refid="classBStatable_1a52975e361937ae26f7c854da34e6e51a" prot="public" virt="non-virtual"><scope>BStatable</scope><name>GetSize</name></member>
      <member refid="classBStatable_1a0fd44591384a51393418c7360d67c51d" prot="public" virt="pure-virtual"><scope>BStatable</scope><name>GetStat</name></member>
      <member refid="classBStatable_1a2488e774eaa96bf07ae6156ea320fc0a" prot="public" virt="non-virtual"><scope>BStatable</scope><name>GetVolume</name></member>
      <member refid="classBStatable_1a853345d2d3673b47f59dd655b6a3adca" prot="public" virt="non-virtual"><scope>BStatable</scope><name>IsDirectory</name></member>
      <member refid="classBStatable_1acaa5a30c8a6ee1f8854a787958d13eaf" prot="public" virt="non-virtual"><scope>BStatable</scope><name>IsFile</name></member>
      <member refid="classBStatable_1aa07af7f2d36c453d00e101bc6c6a487e" prot="public" virt="non-virtual"><scope>BStatable</scope><name>IsSymLink</name></member>
      <member refid="classBStatable_1abbed307846be19643f0de64f835767a3" prot="private" virt="pure-virtual"><scope>BStatable</scope><name>set_stat</name></member>
      <member refid="classBStatable_1aab2c65df1f1459d014a0a2ba9638411e" prot="public" virt="non-virtual"><scope>BStatable</scope><name>SetAccessTime</name></member>
      <member refid="classBStatable_1a6a92b04cda608babf49f70ef4e3a2f36" prot="public" virt="non-virtual"><scope>BStatable</scope><name>SetCreationTime</name></member>
      <member refid="classBStatable_1af6e5ac17688536b3de2940a82349d043" prot="public" virt="non-virtual"><scope>BStatable</scope><name>SetGroup</name></member>
      <member refid="classBStatable_1a1f2b84cea7b32a238b41f97e0264a048" prot="public" virt="non-virtual"><scope>BStatable</scope><name>SetModificationTime</name></member>
      <member refid="classBStatable_1a640ef9862775efaa6720691ed4b58256" prot="public" virt="non-virtual"><scope>BStatable</scope><name>SetOwner</name></member>
      <member refid="classBStatable_1aaf215f1b31486d4fd65dd96229b26f97" prot="public" virt="non-virtual"><scope>BStatable</scope><name>SetPermissions</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
