<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBFilePanel" kind="class" language="C++" prot="public">
    <compoundname>BFilePanel</compoundname>
      <sectiondef kind="user-defined">
      <header>Hook Methods</header>
      <memberdef kind="function" id="classBFilePanel_1a9fcdbb4061db0553ac931caee266c567" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BFilePanel::WasHidden</definition>
        <argsstring>()</argsstring>
        <name>WasHidden</name>
        <qualifiedname>BFilePanel::WasHidden</qualifiedname>
        <briefdescription>
<para>Hook method that gets called when the file panel is hidden due to a user action. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classBFilePanel_1a9fcdbb4061db0553ac931caee266c567" kindref="member">WasHidden()</ref> is not called if you call <ref refid="classBFilePanel_1acd03421c7c41f16ef98748511bf93892" kindref="member">Hide()</ref> manually.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="54" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1afc73710e12dc128609f391334917fc20" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BFilePanel::SelectionChanged</definition>
        <argsstring>()</argsstring>
        <name>SelectionChanged</name>
        <qualifiedname>BFilePanel::SelectionChanged</qualifiedname>
        <briefdescription>
<para>Hook method that gets called when the entry ref references by the file panel changes. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBFilePanel_1a8b3351d8b9663c1e8fb3a60f8cee1c83" kindref="member">GetNextSelectedRef()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBFilePanel_1a9180700dffb4009583e7f40f16e5b91a" kindref="member">Rewind()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="55" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBFilePanel_1ab89cd3bc7a775f805c2b4c9f1b8a6dfb" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BFilePanel::_reserved[10]</definition>
        <argsstring>[10]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BFilePanel::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="96" column="7" bodyfile="/boot/home/src/haiku/headers/os/storage/FilePanel.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBFilePanel_1a19cd4febacc086a8fa5db888eae561f4" prot="private" static="no" mutable="no">
        <type><ref refid="classBWindow" kindref="compound">BWindow</ref> *</type>
        <definition>BWindow* BFilePanel::fWindow</definition>
        <argsstring></argsstring>
        <name>fWindow</name>
        <qualifiedname>BFilePanel::fWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="95" column="8" bodyfile="/boot/home/src/haiku/headers/os/storage/FilePanel.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBFilePanel_1a439f0ac01edd3d0dd8f4a4b07b7f034b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BFilePanel::BFilePanel</definition>
        <argsstring>(file_panel_mode mode=B_OPEN_PANEL, BMessenger *target=NULL, const entry_ref *directory=NULL, uint32 nodeFlavors=0, bool allowMultipleSelection=true, BMessage *message=NULL, BRefFilter *refFilter=NULL, bool modal=false, bool hideWhenDone=true)</argsstring>
        <name>BFilePanel</name>
        <qualifiedname>BFilePanel::BFilePanel</qualifiedname>
        <param>
          <type><ref refid="FilePanel_8h_1aeb444aecd7a89f1001d61e5e8d9f7fe9" kindref="member">file_panel_mode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="FilePanel_8h_1aeb444aecd7a89f1001d61e5e8d9f7fe9a883dfbef055069a2b959a62e4caf7921" kindref="member">B_OPEN_PANEL</ref></defval>
        </param>
        <param>
          <type><ref refid="classBMessenger" kindref="compound">BMessenger</ref> *</type>
          <declname>target</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>const <ref refid="structentry__ref" kindref="compound">entry_ref</ref> *</type>
          <declname>directory</declname>
          <defname>ref</defname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>nodeFlavors</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>allowMultipleSelection</declname>
          <defname>multipleSelection</defname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type><ref refid="classBRefFilter" kindref="compound">BRefFilter</ref> *</type>
          <declname>refFilter</declname>
          <defname>filter</defname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>bool</type>
          <declname>modal</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>hideWhenDone</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Creates and initializes a <ref refid="classBFilePanel" kindref="compound">BFilePanel</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>The constructor has many parameters but they may generally be set after the object has been constructed. The only parameters that must be set during construction are the <emphasis>mode</emphasis>, <emphasis>nodeFlavors</emphasis>, <emphasis>multipleSelection</emphasis>, and <emphasis>modal</emphasis> parameters. The rest may be set after the object has been constructed by the <ref refid="classBFilePanel_1a6523bd53af73c514d9fafec0c6384417" kindref="member">SetTarget()</ref>, <ref refid="classBFilePanel_1a9ba8c35c592a9ba0bee622e124f439a1" kindref="member">SetPanelDirectory()</ref>, <ref refid="classBFilePanel_1a6c150d4f445e57e090b9e4b4234e16f5" kindref="member">SetMessage()</ref>, <ref refid="classBFilePanel_1a573e40a3e16a18392e6c728581ab149e" kindref="member">SetRefFilter()</ref>, and <ref refid="classBFilePanel_1a0c83fafc916144019c15653be8cbf13b" kindref="member">SetHideWhenDone()</ref> methods.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to <computeroutput>B_OPEN_PANEL</computeroutput> for an open panal or <computeroutput>B_SAVE_PANEL</computeroutput> for a save panel. Default is <computeroutput>B_OPEN_PANEL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBMessenger" kindref="compound">BMessenger</ref> object that sends messages to the <ref refid="classBLooper" kindref="compound">BLooper</ref> or <ref refid="classBHandler" kindref="compound">BHandler</ref> controlled by the file panel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>The directory to display, by default the current working directory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeFlavors</parametername>
</parameternamelist>
<parameterdescription>
<para>One or more option flags, this applies to open panels only.<itemizedlist>
<listitem><para><computeroutput>B_FILE_NODE</computeroutput> Can select files and symlinks to files.</para>
</listitem><listitem><para><computeroutput>B_DIRECTORY_NODE</computeroutput> Can select directories and symlinks to directories.</para>
</listitem><listitem><para><computeroutput>B_SYMLINK_NODE</computeroutput> Can select symlinks only. </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipleSelection</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the user is allowed to select more than one item to open. Save panels should always set this to <computeroutput>false</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Message sent by the file panel on confirms or cancels. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Hook method to call. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>modal</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the panel is modal, defaults to <computeroutput>false</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hideWhenDone</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to <computeroutput>false</computeroutput> to keep the panel even after the user confirms or cancels. The close button will hide the panel regardless.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a4ee47f070fe2f25b57305b408430ab19" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BFilePanel::~BFilePanel</definition>
        <argsstring>()</argsstring>
        <name>~BFilePanel</name>
        <qualifiedname>BFilePanel::~BFilePanel</qualifiedname>
        <briefdescription>
<para>Destroys the file panel object. </para>
        </briefdescription>
        <detaileddescription>
<para>If file panel is currently being displayed it is closed. The <ref refid="classBRefFilter" kindref="compound">BRefFilter</ref> object references by this panel is not destroyed by this method.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="48" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a8b3351d8b9663c1e8fb3a60f8cee1c83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BFilePanel::GetNextSelectedRef</definition>
        <argsstring>(entry_ref *ref)</argsstring>
        <name>GetNextSelectedRef</name>
        <qualifiedname>BFilePanel::GetNextSelectedRef</qualifiedname>
        <param>
          <type><ref refid="structentry__ref" kindref="compound">entry_ref</ref> *</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Sets the <emphasis>ref</emphasis> pointer to the next entry in the directory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a status message. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went fine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Couldn&apos;t attain a lock on the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ENTRY_NOT_FOUND</parametername>
</parameternamelist>
<parameterdescription>
<para>End of the entry list.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBFilePanel_1a9180700dffb4009583e7f40f16e5b91a" kindref="member">Rewind()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBFilePanel_1afc73710e12dc128609f391334917fc20" kindref="member">SelectionChanged()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="83" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a252fefadcb045dca2a0f84ff13f9cca8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::GetPanelDirectory</definition>
        <argsstring>(entry_ref *ref) const</argsstring>
        <name>GetPanelDirectory</name>
        <qualifiedname>BFilePanel::GetPanelDirectory</qualifiedname>
        <param>
          <type><ref refid="structentry__ref" kindref="compound">entry_ref</ref> *</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Gets the entry ref of the panel and sets <emphasis>ref</emphasis> to point to it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="structentry__ref" kindref="compound">entry_ref</ref></computeroutput> pointer you want set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="76" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1acd03421c7c41f16ef98748511bf93892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::Hide</definition>
        <argsstring>()</argsstring>
        <name>Hide</name>
        <qualifiedname>BFilePanel::Hide</qualifiedname>
        <briefdescription>
<para>Hides the file panel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="51" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1ae1f607e61d456dd2f3cf2558af96a89f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BFilePanel::HidesWhenDone</definition>
        <argsstring>() const</argsstring>
        <name>HidesWhenDone</name>
        <qualifiedname>BFilePanel::HidesWhenDone</qualifiedname>
        <briefdescription>
<para>Gets whether or not the panel should hide on confirm or cancel. </para>
        </briefdescription>
        <detaileddescription>
<para>Panel always hides if the user clicks the window&apos;s close button.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if panel will hide, <computeroutput>false</computeroutput> if panel will not hide.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBFilePanel_1a0c83fafc916144019c15653be8cbf13b" kindref="member">SetHideWhenDone()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="79" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a744ca07473066cd3c8de391135d0e473" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BFilePanel::IsShowing</definition>
        <argsstring>() const</argsstring>
        <name>IsShowing</name>
        <qualifiedname>BFilePanel::IsShowing</qualifiedname>
        <briefdescription>
<para>Determines whether or not the file panel is shown. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if visible, <computeroutput>false</computeroutput> if hidden.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBFilePanel_1a9a11515a7d9989d86d6bedc94017b23b" kindref="member">Show()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="52" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1aaa95bdc5b6367691a47d594eadf66d6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMessenger" kindref="compound">BMessenger</ref></type>
        <definition>BMessenger BFilePanel::Messenger</definition>
        <argsstring>() const</argsstring>
        <name>Messenger</name>
        <qualifiedname>BFilePanel::Messenger</qualifiedname>
        <briefdescription>
<para>Gets the panel&apos;s target messenger object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="classBMessenger" kindref="compound">BMessenger</ref> object that sends messages for this panel.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="59" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a92779bd92a8f645e24e5e01d22e978b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="FilePanel_8h_1aeb444aecd7a89f1001d61e5e8d9f7fe9" kindref="member">file_panel_mode</ref></type>
        <definition>file_panel_mode BFilePanel::PanelMode</definition>
        <argsstring>() const</argsstring>
        <name>PanelMode</name>
        <qualifiedname>BFilePanel::PanelMode</qualifiedname>
        <briefdescription>
<para>Gets the panel mode, either <computeroutput>B_OPEN_PANEL</computeroutput> or <computeroutput>B_SAVE_PANEL</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>B_OPEN_PANEL</computeroutput> if the panel is an open panel, or <computeroutput>B_SAVE_PANEL</computeroutput> if the panel is a save panel.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="62" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a48c4355f7b8c96ee8d30702c5a22c84b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBRefFilter" kindref="compound">BRefFilter</ref> *</type>
        <definition>BRefFilter * BFilePanel::RefFilter</definition>
        <argsstring>() const</argsstring>
        <name>RefFilter</name>
        <qualifiedname>BFilePanel::RefFilter</qualifiedname>
        <briefdescription>
<para>Gets the <ref refid="classBRefFilter" kindref="compound">BRefFilter</ref> object associated with the panel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="classBRefFilter" kindref="compound">BRefFilter</ref> set to the panel.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBRefFilter_1ab6cd680428bb5d60a747a8b033795a7d" kindref="member">BRefFilter::Filter()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="60" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1ab7c7351d8b387e6824939e7f3cccf2c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::Refresh</definition>
        <argsstring>()</argsstring>
        <name>Refresh</name>
        <qualifiedname>BFilePanel::Refresh</qualifiedname>
        <briefdescription>
<para>Refresh the directory or the panel causing the entries to be re-run through the <ref refid="classBRefFilter_1ab6cd680428bb5d60a747a8b033795a7d" kindref="member">BRefFilter::Filter()</ref> method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="81" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a9180700dffb4009583e7f40f16e5b91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::Rewind</definition>
        <argsstring>()</argsstring>
        <name>Rewind</name>
        <qualifiedname>BFilePanel::Rewind</qualifiedname>
        <briefdescription>
<para>Sets the entry ref back to the top of the list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBFilePanel_1afc73710e12dc128609f391334917fc20" kindref="member">SelectionChanged()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="82" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a9f9dea8a4668c6c8f7582750fe7e8c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BFilePanel::SendMessage</definition>
        <argsstring>(const BMessenger *target, BMessage *message)</argsstring>
        <name>SendMessage</name>
        <qualifiedname>BFilePanel::SendMessage</qualifiedname>
        <param>
          <type>const <ref refid="classBMessenger" kindref="compound">BMessenger</ref> *</type>
          <declname>target</declname>
          <defname>messenger</defname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Sends the <emphasis>message</emphasis> to the target <ref refid="classBHandler" kindref="compound">BHandler</ref> <emphasis>messenger</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>messenger</parametername>
</parameternamelist>
<parameterdescription>
<para>The target <ref refid="classBHandler" kindref="compound">BHandler</ref> to send the message to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to send.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBMessenger_1aebe5aba546fa4a4696988b1bf6028f3c" kindref="member">BMessenger::SendMessage()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="56" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1ad7ca9a1c60b2945075d73649fdfb348b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::SetButtonLabel</definition>
        <argsstring>(file_panel_button button, const char *label)</argsstring>
        <name>SetButtonLabel</name>
        <qualifiedname>BFilePanel::SetButtonLabel</qualifiedname>
        <param>
          <type><ref refid="FilePanel_8h_1a3fa87518b437492e4eab29139806fca2" kindref="member">file_panel_button</ref></type>
          <declname>button</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
          <defname>text</defname>
        </param>
        <briefdescription>
<para>Set the button label specified by <emphasis>button</emphasis> to <emphasis>text</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>button</parametername>
</parameternamelist>
<parameterdescription>
<para>The button to set the label of. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to set the button label to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="69" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a0c83fafc916144019c15653be8cbf13b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::SetHideWhenDone</definition>
        <argsstring>(bool hideWhenDone)</argsstring>
        <name>SetHideWhenDone</name>
        <qualifiedname>BFilePanel::SetHideWhenDone</qualifiedname>
        <param>
          <type>bool</type>
          <declname>hideWhenDone</declname>
          <defname>on</defname>
        </param>
        <briefdescription>
<para>Sets whether or not the panel should hide on confirm or cancel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>on</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to hide, <computeroutput>false</computeroutput> to not hide when done.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="78" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a6c150d4f445e57e090b9e4b4234e16f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::SetMessage</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>SetMessage</name>
        <qualifiedname>BFilePanel::SetMessage</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Sets the target messenge. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBMessage" kindref="compound">BMessage</ref> object to send on confirm.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="65" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a0d07ad16065bf6f99aa437d511fbddb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::SetNodeFlavors</definition>
        <argsstring>(uint32 flavors)</argsstring>
        <name>SetNodeFlavors</name>
        <qualifiedname>BFilePanel::SetNodeFlavors</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flavors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="70" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1aa68fd9531e74e8cb123c3005a189d8ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::SetPanelDirectory</definition>
        <argsstring>(const BDirectory *newDirectory)</argsstring>
        <name>SetPanelDirectory</name>
        <qualifiedname>BFilePanel::SetPanelDirectory</qualifiedname>
        <param>
          <type>const <ref refid="classBDirectory" kindref="compound">BDirectory</ref> *</type>
          <declname>newDirectory</declname>
          <defname>dir</defname>
        </param>
        <briefdescription>
<para>Sets the entry ref of the panel to the directory referenced by <emphasis>dir</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBDirectory" kindref="compound">BDirectory</ref> object pointing to the desired directory.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="73" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a9ba8c35c592a9ba0bee622e124f439a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::SetPanelDirectory</definition>
        <argsstring>(const BEntry *newDirectory)</argsstring>
        <name>SetPanelDirectory</name>
        <qualifiedname>BFilePanel::SetPanelDirectory</qualifiedname>
        <param>
          <type>const <ref refid="classBEntry" kindref="compound">BEntry</ref> *</type>
          <declname>newDirectory</declname>
          <defname>entry</defname>
        </param>
        <briefdescription>
<para>Sets the entry ref of the panel to the directory referenced by <emphasis>entry</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBEntry" kindref="compound">BEntry</ref> object pointing to the desired directory.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="72" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a3793e34c75a1e2a13ca1610ff803e742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::SetPanelDirectory</definition>
        <argsstring>(const char *newDirectory)</argsstring>
        <name>SetPanelDirectory</name>
        <qualifiedname>BFilePanel::SetPanelDirectory</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>newDirectory</declname>
          <defname>path</defname>
        </param>
        <briefdescription>
<para>Sets the entry ref of the panel to the directory referenced by <emphasis>path</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the desired directory.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="75" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a6f78ddfb53546fdda9f5eb9883feb12b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::SetPanelDirectory</definition>
        <argsstring>(const entry_ref *newDirectory)</argsstring>
        <name>SetPanelDirectory</name>
        <qualifiedname>BFilePanel::SetPanelDirectory</qualifiedname>
        <param>
          <type>const <ref refid="structentry__ref" kindref="compound">entry_ref</ref> *</type>
          <declname>newDirectory</declname>
          <defname>ref</defname>
        </param>
        <briefdescription>
<para>Sets the entry ref of the panel to the directory contained by <emphasis>ref</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>The entry contained by the desired panel directory.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="74" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a573e40a3e16a18392e6c728581ab149e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::SetRefFilter</definition>
        <argsstring>(BRefFilter *filter)</argsstring>
        <name>SetRefFilter</name>
        <qualifiedname>BFilePanel::SetRefFilter</qualifiedname>
        <param>
          <type><ref refid="classBRefFilter" kindref="compound">BRefFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Sets the <ref refid="classBRefFilter" kindref="compound">BRefFilter</ref> used by the panel to filter entries. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBRefFilter" kindref="compound">BRefFilter</ref> object to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBRefFilter_1ab6cd680428bb5d60a747a8b033795a7d" kindref="member">BRefFilter::Filter()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="67" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a948e0e67e7d0831b8f4ba3696672503a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::SetSaveText</definition>
        <argsstring>(const char *text)</argsstring>
        <name>SetSaveText</name>
        <qualifiedname>BFilePanel::SetSaveText</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Set some save text to display in the save dialog. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to display.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="68" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a6523bd53af73c514d9fafec0c6384417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::SetTarget</definition>
        <argsstring>(BMessenger target)</argsstring>
        <name>SetTarget</name>
        <qualifiedname>BFilePanel::SetTarget</qualifiedname>
        <param>
          <type><ref refid="classBMessenger" kindref="compound">BMessenger</ref></type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Sets the target messenger. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>the target <ref refid="classBMessenger" kindref="compound">BMessenger</ref> object to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="64" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a9a11515a7d9989d86d6bedc94017b23b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BFilePanel::Show</definition>
        <argsstring>()</argsstring>
        <name>Show</name>
        <qualifiedname>BFilePanel::Show</qualifiedname>
        <briefdescription>
<para>Displays the file panel on screen. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="50" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1ae08c1a26cbeea8beaeabcab2a41579c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBWindow" kindref="compound">BWindow</ref> *</type>
        <definition>BWindow * BFilePanel::Window</definition>
        <argsstring>() const</argsstring>
        <name>Window</name>
        <qualifiedname>BFilePanel::Window</qualifiedname>
        <briefdescription>
<para>Gets a pointer to the <ref refid="classBWindow" kindref="compound">BWindow</ref> object used by the file panel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the <ref refid="classBWindow" kindref="compound">BWindow</ref> object used by the file panel.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="58" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBFilePanel_1a64be2b8003050b09d7392f4b36c5a574" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BFilePanel::_ReservedFilePanel1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedFilePanel1</name>
        <qualifiedname>BFilePanel::_ReservedFilePanel1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="86" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1aeee1b57278db03596850ddfb2aca7ed9" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BFilePanel::_ReservedFilePanel2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedFilePanel2</name>
        <qualifiedname>BFilePanel::_ReservedFilePanel2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="87" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a06eb5278fc711d646e46aeb7e6374fca" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BFilePanel::_ReservedFilePanel3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedFilePanel3</name>
        <qualifiedname>BFilePanel::_ReservedFilePanel3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="88" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1adbf3a622e6a8504ed3b0a82bbe482d25" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BFilePanel::_ReservedFilePanel4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedFilePanel4</name>
        <qualifiedname>BFilePanel::_ReservedFilePanel4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="89" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a8d125d40dc180090c393cf18d7ec159c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BFilePanel::_ReservedFilePanel5</definition>
        <argsstring>()</argsstring>
        <name>_ReservedFilePanel5</name>
        <qualifiedname>BFilePanel::_ReservedFilePanel5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="90" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a5d1d4ba4711dce11f43155da75f1f926" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BFilePanel::_ReservedFilePanel6</definition>
        <argsstring>()</argsstring>
        <name>_ReservedFilePanel6</name>
        <qualifiedname>BFilePanel::_ReservedFilePanel6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="91" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a678e24d75d16eef2d2c00b1337c8af8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BFilePanel::_ReservedFilePanel7</definition>
        <argsstring>()</argsstring>
        <name>_ReservedFilePanel7</name>
        <qualifiedname>BFilePanel::_ReservedFilePanel7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="92" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBFilePanel_1a716132e740320faa138fd59f7cb57f3b" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BFilePanel::_ReservedFilePanel8</definition>
        <argsstring>()</argsstring>
        <name>_ReservedFilePanel8</name>
        <qualifiedname>BFilePanel::_ReservedFilePanel8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="93" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Displays a standard Open/Save dialog. </para>
    </briefdescription>
    <detaileddescription>
<para>A save panel looks like this:</para>
<para><image type="html" name="BFilePanel_example.png"></image>
</para>
<para>An open dialog looks similar but doesn&apos;t have a text box for the file name.</para>
<para>You generally construct a <ref refid="classBFilePanel" kindref="compound">BFilePanel</ref> object in response to a user action for example the user clicks on a &quot;Open&quot; or &quot;Save&quot;/&quot;Save As&quot; menu item. Constructing an open or save panel is easy:</para>
<para><programlisting><codeline><highlight class="normal"><ref refid="classBFilePanel" kindref="compound">BFilePanel</ref>*<sp/>openPanel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBFilePanel" kindref="compound">BFilePanel</ref>(<ref refid="FilePanel_8h_1aeb444aecd7a89f1001d61e5e8d9f7fe9a883dfbef055069a2b959a62e4caf7921" kindref="member">B_OPEN_PANEL</ref>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classBFilePanel" kindref="compound">BFilePanel</ref>*<sp/>savePanel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBFilePanel" kindref="compound">BFilePanel</ref>(<ref refid="FilePanel_8h_1aeb444aecd7a89f1001d61e5e8d9f7fe9a310c6e08ac333ae740e4b9839d26498d" kindref="member">B_SAVE_PANEL</ref>);</highlight></codeline>
</programlisting></para>
<para>You can then call methods to indicate what directory to display, whether or not multiple selections are allowed, whether or not the user is allowed to open a directory, what target view to send send notifications, and more. See the constructor for details.</para>
<para>You can modify the look of your <ref refid="classBFilePanel" kindref="compound">BFilePanel</ref> object by calling the <ref refid="classBFilePanel_1ad7ca9a1c60b2945075d73649fdfb348b" kindref="member">SetButtonLabel()</ref> and <ref refid="classBFilePanel_1a948e0e67e7d0831b8f4ba3696672503a" kindref="member">SetSaveText()</ref> methods. If you want to change the look even more radically you can get alter the panel&apos;s <ref refid="classBWindow" kindref="compound">BWindow</ref> and <ref refid="classBView" kindref="compound">BView</ref> objects. You get the window by calling the <ref refid="classBFilePanel_1ae08c1a26cbeea8beaeabcab2a41579c6" kindref="member">Window()</ref> method. With a pointer to the panel&apos;s <ref refid="classBWindow" kindref="compound">BWindow</ref> object you can drill down to the various views contained therein.</para>
<para>Once you have constructed and customized your <ref refid="classBFilePanel" kindref="compound">BFilePanel</ref> object you should call the <ref refid="classBFilePanel_1a9a11515a7d9989d86d6bedc94017b23b" kindref="member">Show()</ref> method to display the panel to the user.</para>
<para>When the user confirms or cancels a <ref refid="classBMessage" kindref="compound">BMessage</ref> object is constructed and sent to the target of the <ref refid="classBFilePanel" kindref="compound">BFilePanel</ref> object. You can specify a different target in the constructor or by calling the <ref refid="classBFilePanel_1a6523bd53af73c514d9fafec0c6384417" kindref="member">SetTarget()</ref> method.</para>
<para><bold>Open Notifications</bold></para>
<para>For open notifications the default target is <computeroutput>be_app_messenger</computeroutput> and is caught by the RefsReceived() method The <computeroutput>what</computeroutput> field is set to <computeroutput>B_REFS_RECEIVED</computeroutput>. You can set your own message by calling the <ref refid="classBFilePanel_1a6c150d4f445e57e090b9e4b4234e16f5" kindref="member">SetMessage()</ref> method; in this case the message will be sent to the target&apos;s MessageReceived() method instead.</para>
<para>The <computeroutput>refs</computeroutput> field of the message contains an <computeroutput><ref refid="structentry__ref" kindref="compound">entry_ref</ref></computeroutput> structure for each entry that the user has selected. The <computeroutput>refs</computeroutput> field is of type <computeroutput>B_REF_TYPE</computeroutput>. If the selected entry is a symlink to a file you&apos;ll need to dereference the file yourself. You can do this more easily by turning the <computeroutput>ref</computeroutput> into a <ref refid="classBEntry" kindref="compound">BEntry</ref> passing <computeroutput>true</computeroutput> into the <computeroutput>traverse</computeroutput> argument like this:</para>
<para><programlisting><codeline><highlight class="normal"><ref refid="classBEntry" kindref="compound">BEntry</ref><sp/>entry(ref,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><bold>Save Notifications</bold></para>
<para>Save notifications are always sent to the target&apos;s MessageReceived() method unlike open notifications. The <computeroutput>what</computeroutput> field of the message is set to <computeroutput>B_SAVE_REQUESTED</computeroutput>. The <computeroutput>directory</computeroutput> field contain a single <computeroutput><ref refid="structentry__ref" kindref="compound">entry_ref</ref></computeroutput> structure that points to the directory that the entry is saved to. The text that the user typed in the save panel&apos;s text view is put in the <computeroutput>name</computeroutput> field and is of type <computeroutput>B_STRING_TYPE</computeroutput>.</para>
<para><bold>Cancel Notifications</bold></para>
<para>Cancel notifications are sent when the panel is hidden whether by the user clicking the cancel button, closing the dialog, or confirming the action (assuming hide-when-done is turned on).</para>
<para>Cancel notifications can be caught by the MessageReceived() method of the target. The <computeroutput>what</computeroutput> field is set to <computeroutput>B_CANCEL</computeroutput>. The <computeroutput>old_what</computeroutput> field is set to the previous what value which is useful if you have overridden the default message. The <computeroutput>what</computeroutput> field of the message you sent is put in the <computeroutput>old_what</computeroutput> field.</para>
<para>The <computeroutput>source</computeroutput> field is a pointer of <computeroutput>B_POINTER_TYPE</computeroutput> to the closed <ref refid="classBFilePanel" kindref="compound">BFilePanel</ref> object. When the <ref refid="classBFilePanel" kindref="compound">BFilePanel</ref> object is closed it is not destroyed, it is hidden instead. You can then delete the <ref refid="classBFilePanel" kindref="compound">BFilePanel</ref> object or leave it be and simply call <ref refid="classBFilePanel_1a9a11515a7d9989d86d6bedc94017b23b" kindref="member">Show()</ref> to use the panel next time you need it.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/storage/FilePanel.h" line="41" column="1" bodyfile="/boot/home/src/haiku/headers/os/storage/FilePanel.h" bodystart="41" bodyend="97"/>
    <listofallmembers>
      <member refid="classBFilePanel_1ab89cd3bc7a775f805c2b4c9f1b8a6dfb" prot="private" virt="non-virtual"><scope>BFilePanel</scope><name>_reserved</name></member>
      <member refid="classBFilePanel_1a64be2b8003050b09d7392f4b36c5a574" prot="private" virt="virtual"><scope>BFilePanel</scope><name>_ReservedFilePanel1</name></member>
      <member refid="classBFilePanel_1aeee1b57278db03596850ddfb2aca7ed9" prot="private" virt="virtual"><scope>BFilePanel</scope><name>_ReservedFilePanel2</name></member>
      <member refid="classBFilePanel_1a06eb5278fc711d646e46aeb7e6374fca" prot="private" virt="virtual"><scope>BFilePanel</scope><name>_ReservedFilePanel3</name></member>
      <member refid="classBFilePanel_1adbf3a622e6a8504ed3b0a82bbe482d25" prot="private" virt="virtual"><scope>BFilePanel</scope><name>_ReservedFilePanel4</name></member>
      <member refid="classBFilePanel_1a8d125d40dc180090c393cf18d7ec159c" prot="private" virt="virtual"><scope>BFilePanel</scope><name>_ReservedFilePanel5</name></member>
      <member refid="classBFilePanel_1a5d1d4ba4711dce11f43155da75f1f926" prot="private" virt="virtual"><scope>BFilePanel</scope><name>_ReservedFilePanel6</name></member>
      <member refid="classBFilePanel_1a678e24d75d16eef2d2c00b1337c8af8f" prot="private" virt="virtual"><scope>BFilePanel</scope><name>_ReservedFilePanel7</name></member>
      <member refid="classBFilePanel_1a716132e740320faa138fd59f7cb57f3b" prot="private" virt="virtual"><scope>BFilePanel</scope><name>_ReservedFilePanel8</name></member>
      <member refid="classBFilePanel_1a439f0ac01edd3d0dd8f4a4b07b7f034b" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>BFilePanel</name></member>
      <member refid="classBFilePanel_1a19cd4febacc086a8fa5db888eae561f4" prot="private" virt="non-virtual"><scope>BFilePanel</scope><name>fWindow</name></member>
      <member refid="classBFilePanel_1a8b3351d8b9663c1e8fb3a60f8cee1c83" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>GetNextSelectedRef</name></member>
      <member refid="classBFilePanel_1a252fefadcb045dca2a0f84ff13f9cca8" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>GetPanelDirectory</name></member>
      <member refid="classBFilePanel_1acd03421c7c41f16ef98748511bf93892" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>Hide</name></member>
      <member refid="classBFilePanel_1ae1f607e61d456dd2f3cf2558af96a89f" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>HidesWhenDone</name></member>
      <member refid="classBFilePanel_1a744ca07473066cd3c8de391135d0e473" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>IsShowing</name></member>
      <member refid="classBFilePanel_1aaa95bdc5b6367691a47d594eadf66d6e" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>Messenger</name></member>
      <member refid="classBFilePanel_1a92779bd92a8f645e24e5e01d22e978b6" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>PanelMode</name></member>
      <member refid="classBFilePanel_1a48c4355f7b8c96ee8d30702c5a22c84b" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>RefFilter</name></member>
      <member refid="classBFilePanel_1ab7c7351d8b387e6824939e7f3cccf2c4" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>Refresh</name></member>
      <member refid="classBFilePanel_1a9180700dffb4009583e7f40f16e5b91a" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>Rewind</name></member>
      <member refid="classBFilePanel_1afc73710e12dc128609f391334917fc20" prot="public" virt="virtual"><scope>BFilePanel</scope><name>SelectionChanged</name></member>
      <member refid="classBFilePanel_1a9f9dea8a4668c6c8f7582750fe7e8c30" prot="public" virt="virtual"><scope>BFilePanel</scope><name>SendMessage</name></member>
      <member refid="classBFilePanel_1ad7ca9a1c60b2945075d73649fdfb348b" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>SetButtonLabel</name></member>
      <member refid="classBFilePanel_1a0c83fafc916144019c15653be8cbf13b" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>SetHideWhenDone</name></member>
      <member refid="classBFilePanel_1a6c150d4f445e57e090b9e4b4234e16f5" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>SetMessage</name></member>
      <member refid="classBFilePanel_1a0d07ad16065bf6f99aa437d511fbddb1" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>SetNodeFlavors</name></member>
      <member refid="classBFilePanel_1a9ba8c35c592a9ba0bee622e124f439a1" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>SetPanelDirectory</name></member>
      <member refid="classBFilePanel_1aa68fd9531e74e8cb123c3005a189d8ec" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>SetPanelDirectory</name></member>
      <member refid="classBFilePanel_1a6f78ddfb53546fdda9f5eb9883feb12b" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>SetPanelDirectory</name></member>
      <member refid="classBFilePanel_1a3793e34c75a1e2a13ca1610ff803e742" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>SetPanelDirectory</name></member>
      <member refid="classBFilePanel_1a573e40a3e16a18392e6c728581ab149e" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>SetRefFilter</name></member>
      <member refid="classBFilePanel_1a948e0e67e7d0831b8f4ba3696672503a" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>SetSaveText</name></member>
      <member refid="classBFilePanel_1a6523bd53af73c514d9fafec0c6384417" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>SetTarget</name></member>
      <member refid="classBFilePanel_1a9a11515a7d9989d86d6bedc94017b23b" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>Show</name></member>
      <member refid="classBFilePanel_1a9fcdbb4061db0553ac931caee266c567" prot="public" virt="virtual"><scope>BFilePanel</scope><name>WasHidden</name></member>
      <member refid="classBFilePanel_1ae08c1a26cbeea8beaeabcab2a41579c6" prot="public" virt="non-virtual"><scope>BFilePanel</scope><name>Window</name></member>
      <member refid="classBFilePanel_1a4ee47f070fe2f25b57305b408430ab19" prot="public" virt="virtual"><scope>BFilePanel</scope><name>~BFilePanel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
