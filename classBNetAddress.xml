<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBNetAddress" kind="class" language="C++" prot="public">
    <compoundname>BNetAddress</compoundname>
    <basecompoundref refid="classBArchivable" prot="public" virt="non-virtual">BArchivable</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBNetAddress_1a4a87856399fa137415147fd4ffcbb252" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BNetAddress::fAddress</definition>
        <argsstring></argsstring>
        <name>fAddress</name>
        <qualifiedname>BNetAddress::fAddress</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="63" column="6" bodyfile="/boot/home/src/haiku/headers/os/net/NetAddress.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetAddress_1a404ba1abeef0a60b9c6ddb9d81328117" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1acadaa1c2888dd031d14fed9b272333a7" kindref="member">int16</ref></type>
        <definition>int16 BNetAddress::fFamily</definition>
        <argsstring></argsstring>
        <name>fFamily</name>
        <qualifiedname>BNetAddress::fFamily</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="61" column="6" bodyfile="/boot/home/src/haiku/headers/os/net/NetAddress.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetAddress_1ac1c17beac814ebb77ad2bca1b825a3bb" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetAddress::fInit</definition>
        <argsstring></argsstring>
        <name>fInit</name>
        <qualifiedname>BNetAddress::fInit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="60" column="10" bodyfile="/boot/home/src/haiku/headers/os/net/NetAddress.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetAddress_1a08c0a7c7c69d781a1201fa769cae475c" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1acadaa1c2888dd031d14fed9b272333a7" kindref="member">int16</ref></type>
        <definition>int16 BNetAddress::fPort</definition>
        <argsstring></argsstring>
        <name>fPort</name>
        <qualifiedname>BNetAddress::fPort</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="62" column="6" bodyfile="/boot/home/src/haiku/headers/os/net/NetAddress.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetAddress_1a2b9762ad8592523cbfe96dfc6726f750" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BNetAddress::fPrivateData[7]</definition>
        <argsstring>[7]</argsstring>
        <name>fPrivateData</name>
        <qualifiedname>BNetAddress::fPrivateData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="64" column="6" bodyfile="/boot/home/src/haiku/headers/os/net/NetAddress.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBNetAddress_1ab8dcd206e7a5ac77540eb68c60e84844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetAddress::BNetAddress</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>BNetAddress</name>
        <qualifiedname>BNetAddress::BNetAddress</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1ae17c7a0848f42b6ffc8f8d970f60b2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetAddress::BNetAddress</definition>
        <argsstring>(const BNetAddress &amp;other)</argsstring>
        <name>BNetAddress</name>
        <qualifiedname>BNetAddress::BNetAddress</qualifiedname>
        <param>
          <type>const BNetAddress &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1aa362f80b2e4e102e1604b7ca55d0c408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetAddress::BNetAddress</definition>
        <argsstring>(const char *hostname, const char *protocol, const char *service)</argsstring>
        <name>BNetAddress</name>
        <qualifiedname>BNetAddress::BNetAddress</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>protocol</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>service</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a3017e7b6dc3eb36f95f63b152cecd0e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetAddress::BNetAddress</definition>
        <argsstring>(const char *hostname=0, unsigned short port=0)</argsstring>
        <name>BNetAddress</name>
        <qualifiedname>BNetAddress::BNetAddress</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>hostname</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>port</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1ae6306dd2e67db45ee5e48ce66a3b575d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetAddress::BNetAddress</definition>
        <argsstring>(const struct sockaddr_in &amp;addr)</argsstring>
        <name>BNetAddress</name>
        <qualifiedname>BNetAddress::BNetAddress</qualifiedname>
        <param>
          <type>const struct sockaddr_in &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a6754c02651f1dd7a121ee2a2ae211740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetAddress::BNetAddress</definition>
        <argsstring>(in_addr addr, int port=0)</argsstring>
        <name>BNetAddress</name>
        <qualifiedname>BNetAddress::BNetAddress</qualifiedname>
        <param>
          <type>in_addr</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a3e8915840726a2e9674966319aef72a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetAddress::BNetAddress</definition>
        <argsstring>(uint32 addr, int port=0)</argsstring>
        <name>BNetAddress</name>
        <qualifiedname>BNetAddress::BNetAddress</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a3e47b6378683d4936d571cb5bfc7e8ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BNetAddress::~BNetAddress</definition>
        <argsstring>()</argsstring>
        <name>~BNetAddress</name>
        <qualifiedname>BNetAddress::~BNetAddress</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="20" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a0ed7c0b65020c69fb069440e8e413f48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BNetAddress::Archive</definition>
        <argsstring>(BMessage *into, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BNetAddress::Archive</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>into</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="22" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a3bc0b7a348620280c2c6131993ebfd7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetAddress::GetAddr</definition>
        <argsstring>(char *hostname=NULL, unsigned short *port=NULL) const</argsstring>
        <name>GetAddr</name>
        <qualifiedname>BNetAddress::GetAddr</qualifiedname>
        <param>
          <type>char *</type>
          <declname>hostname</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>port</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="44" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1aa4a1c4fd0f5b9520eaa8d5b88dc42cca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetAddress::GetAddr</definition>
        <argsstring>(in_addr &amp;addr, unsigned short *port=NULL) const</argsstring>
        <name>GetAddr</name>
        <qualifiedname>BNetAddress::GetAddr</qualifiedname>
        <param>
          <type>in_addr &amp;</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>port</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="47" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1aa552ac816ae2054b4b5400081d06aeab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetAddress::GetAddr</definition>
        <argsstring>(struct sockaddr_in &amp;addr) const</argsstring>
        <name>GetAddr</name>
        <qualifiedname>BNetAddress::GetAddr</qualifiedname>
        <param>
          <type>struct sockaddr_in &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="46" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a69d06c8aa5ce5e85160a536094e4af6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetAddress::InitCheck</definition>
        <argsstring>()</argsstring>
        <name>InitCheck</name>
        <qualifiedname>BNetAddress::InitCheck</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="50" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1ab35c160d59fb02cb7c1119947b1dc8b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetAddress::InitCheck</definition>
        <argsstring>() const</argsstring>
        <name>InitCheck</name>
        <qualifiedname>BNetAddress::InitCheck</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="35" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a8fa0ea3e69802151d996b5c8870b94d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BNetAddress &amp;</type>
        <definition>BNetAddress &amp; BNetAddress::operator=</definition>
        <argsstring>(const BNetAddress &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>BNetAddress::operator=</qualifiedname>
        <param>
          <type>const BNetAddress &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="33" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a26a7e33ee78983dbf13a60eecd73a183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetAddress::SetTo</definition>
        <argsstring>(const char *hostname, const char *protocol, const char *service)</argsstring>
        <name>SetTo</name>
        <qualifiedname>BNetAddress::SetTo</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>protocol</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>service</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="37" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1afdbd126cb8cd996fe45a873daadc477f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetAddress::SetTo</definition>
        <argsstring>(const char *hostname=NULL, unsigned short port=0)</argsstring>
        <name>SetTo</name>
        <qualifiedname>BNetAddress::SetTo</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>hostname</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>port</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="39" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a7253c2e1235fe72e1f2a8c67ba9098f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetAddress::SetTo</definition>
        <argsstring>(const struct sockaddr_in &amp;addr)</argsstring>
        <name>SetTo</name>
        <qualifiedname>BNetAddress::SetTo</qualifiedname>
        <param>
          <type>const struct sockaddr_in &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="40" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a919f4c65f92c889c760cdbc2c8a58e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetAddress::SetTo</definition>
        <argsstring>(in_addr addr, int port=0)</argsstring>
        <name>SetTo</name>
        <qualifiedname>BNetAddress::SetTo</qualifiedname>
        <param>
          <type>in_addr</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="41" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1abc1e13e9a5427563f59b921786a17c2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetAddress::SetTo</definition>
        <argsstring>(uint32 addr=INADDR_ANY, int port=0)</argsstring>
        <name>SetTo</name>
        <qualifiedname>BNetAddress::SetTo</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>addr</declname>
          <defval>INADDR_ANY</defval>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="42" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBNetAddress_1a720027607de66d33208d34b2c4b5ac45" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>static BArchivable * BNetAddress::Instantiate</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BNetAddress::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="23" column="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBNetAddress_1af204c3f349e9924072a380042247cf00" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetAddress::_ReservedBNetAddressFBCCruft1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedBNetAddressFBCCruft1</name>
        <qualifiedname>BNetAddress::_ReservedBNetAddressFBCCruft1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="53" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a7e9487ba630d29df7d35ffcd5177ac85" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetAddress::_ReservedBNetAddressFBCCruft2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedBNetAddressFBCCruft2</name>
        <qualifiedname>BNetAddress::_ReservedBNetAddressFBCCruft2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="54" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1ac6220cd94a16524c22bfaa6c847cdf81" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetAddress::_ReservedBNetAddressFBCCruft3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedBNetAddressFBCCruft3</name>
        <qualifiedname>BNetAddress::_ReservedBNetAddressFBCCruft3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="55" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1ac87f8ac2b488420148a03e7996b0468f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetAddress::_ReservedBNetAddressFBCCruft4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedBNetAddressFBCCruft4</name>
        <qualifiedname>BNetAddress::_ReservedBNetAddressFBCCruft4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="56" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a7a91cd2420642c105c9c375061fbc2cc" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetAddress::_ReservedBNetAddressFBCCruft5</definition>
        <argsstring>()</argsstring>
        <name>_ReservedBNetAddressFBCCruft5</name>
        <qualifiedname>BNetAddress::_ReservedBNetAddressFBCCruft5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="57" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBNetAddress_1a08c4a623afbf185d65f736c878235e4d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetAddress::_ReservedBNetAddressFBCCruft6</definition>
        <argsstring>()</argsstring>
        <name>_ReservedBNetAddressFBCCruft6</name>
        <qualifiedname>BNetAddress::_ReservedBNetAddressFBCCruft6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="58" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BNetAddress</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BNetAddress</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/net/NetAddress.h" line="17" column="1" bodyfile="/boot/home/src/haiku/headers/os/net/NetAddress.h" bodystart="17" bodyend="65"/>
    <listofallmembers>
      <member refid="classBNetAddress_1af204c3f349e9924072a380042247cf00" prot="private" virt="virtual"><scope>BNetAddress</scope><name>_ReservedBNetAddressFBCCruft1</name></member>
      <member refid="classBNetAddress_1a7e9487ba630d29df7d35ffcd5177ac85" prot="private" virt="virtual"><scope>BNetAddress</scope><name>_ReservedBNetAddressFBCCruft2</name></member>
      <member refid="classBNetAddress_1ac6220cd94a16524c22bfaa6c847cdf81" prot="private" virt="virtual"><scope>BNetAddress</scope><name>_ReservedBNetAddressFBCCruft3</name></member>
      <member refid="classBNetAddress_1ac87f8ac2b488420148a03e7996b0468f" prot="private" virt="virtual"><scope>BNetAddress</scope><name>_ReservedBNetAddressFBCCruft4</name></member>
      <member refid="classBNetAddress_1a7a91cd2420642c105c9c375061fbc2cc" prot="private" virt="virtual"><scope>BNetAddress</scope><name>_ReservedBNetAddressFBCCruft5</name></member>
      <member refid="classBNetAddress_1a08c4a623afbf185d65f736c878235e4d" prot="private" virt="virtual"><scope>BNetAddress</scope><name>_ReservedBNetAddressFBCCruft6</name></member>
      <member refid="classBArchivable_1a4075315c407443a3b0dbb3d7551b53c9" prot="public" virt="virtual"><scope>BNetAddress</scope><name>AllArchived</name></member>
      <member refid="classBArchivable_1a2b1d74c147ea18e4b4bfacd42f11e0d2" prot="public" virt="virtual"><scope>BNetAddress</scope><name>AllUnarchived</name></member>
      <member refid="classBNetAddress_1a0ed7c0b65020c69fb069440e8e413f48" prot="public" virt="virtual"><scope>BNetAddress</scope><name>Archive</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>BArchivable</name></member>
      <member refid="classBNetAddress_1ab8dcd206e7a5ac77540eb68c60e84844" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>BNetAddress</name></member>
      <member refid="classBNetAddress_1a3017e7b6dc3eb36f95f63b152cecd0e4" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>BNetAddress</name></member>
      <member refid="classBNetAddress_1ae6306dd2e67db45ee5e48ce66a3b575d" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>BNetAddress</name></member>
      <member refid="classBNetAddress_1a6754c02651f1dd7a121ee2a2ae211740" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>BNetAddress</name></member>
      <member refid="classBNetAddress_1a3e8915840726a2e9674966319aef72a1" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>BNetAddress</name></member>
      <member refid="classBNetAddress_1ae17c7a0848f42b6ffc8f8d970f60b2ee" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>BNetAddress</name></member>
      <member refid="classBNetAddress_1aa362f80b2e4e102e1604b7ca55d0c408" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>BNetAddress</name></member>
      <member refid="classBNetAddress_1a4a87856399fa137415147fd4ffcbb252" prot="private" virt="non-virtual"><scope>BNetAddress</scope><name>fAddress</name></member>
      <member refid="classBNetAddress_1a404ba1abeef0a60b9c6ddb9d81328117" prot="private" virt="non-virtual"><scope>BNetAddress</scope><name>fFamily</name></member>
      <member refid="classBNetAddress_1ac1c17beac814ebb77ad2bca1b825a3bb" prot="private" virt="non-virtual"><scope>BNetAddress</scope><name>fInit</name></member>
      <member refid="classBNetAddress_1a08c0a7c7c69d781a1201fa769cae475c" prot="private" virt="non-virtual"><scope>BNetAddress</scope><name>fPort</name></member>
      <member refid="classBNetAddress_1a2b9762ad8592523cbfe96dfc6726f750" prot="private" virt="non-virtual"><scope>BNetAddress</scope><name>fPrivateData</name></member>
      <member refid="classBNetAddress_1a3bc0b7a348620280c2c6131993ebfd7c" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>GetAddr</name></member>
      <member refid="classBNetAddress_1aa552ac816ae2054b4b5400081d06aeab" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>GetAddr</name></member>
      <member refid="classBNetAddress_1aa4a1c4fd0f5b9520eaa8d5b88dc42cca" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>GetAddr</name></member>
      <member refid="classBNetAddress_1ab35c160d59fb02cb7c1119947b1dc8b1" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>InitCheck</name></member>
      <member refid="classBNetAddress_1a69d06c8aa5ce5e85160a536094e4af6a" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>InitCheck</name></member>
      <member refid="classBNetAddress_1a720027607de66d33208d34b2c4b5ac45" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>Instantiate</name></member>
      <member refid="classBNetAddress_1a8fa0ea3e69802151d996b5c8870b94d8" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>operator=</name></member>
      <member refid="classBArchivable_1a827fa92febcf925f07545aa9777df9de" prot="public" virt="virtual"><scope>BNetAddress</scope><name>Perform</name></member>
      <member refid="classBNetAddress_1a26a7e33ee78983dbf13a60eecd73a183" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>SetTo</name></member>
      <member refid="classBNetAddress_1afdbd126cb8cd996fe45a873daadc477f" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>SetTo</name></member>
      <member refid="classBNetAddress_1a7253c2e1235fe72e1f2a8c67ba9098f6" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>SetTo</name></member>
      <member refid="classBNetAddress_1a919f4c65f92c889c760cdbc2c8a58e18" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>SetTo</name></member>
      <member refid="classBNetAddress_1abc1e13e9a5427563f59b921786a17c2b" prot="public" virt="non-virtual"><scope>BNetAddress</scope><name>SetTo</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BNetAddress</scope><name>~BArchivable</name></member>
      <member refid="classBNetAddress_1a3e47b6378683d4936d571cb5bfc7e8ac" prot="public" virt="virtual"><scope>BNetAddress</scope><name>~BNetAddress</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
