<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="mail__encoding_8h" kind="file" language="C++">
    <compoundname>mail_encoding.h</compoundname>
    <includes local="no">size_t.h</includes>
    <includes local="no">sys/types.h</includes>
    <includedby refid="MailComponent_8h" local="no">MailComponent.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>mail_encoding.h</label>
        <link refid="mail__encoding_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>size_t.h</label>
      </node>
      <node id="3">
        <label>sys/types.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>MailComponent.h</label>
        <link refid="MailComponent_8h"/>
      </node>
      <node id="1">
        <label>mail_encoding.h</label>
        <link refid="mail__encoding_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="mail__encoding_8h_1acd48009ba2c9985e44790089f11976fb" prot="public" static="no">
        <name>B_MAIL_NULL_CONVERSION</name>
        <initializer>((<ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref>) -1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="13" column="9" bodyfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mail__encoding_8h_1a2640be8f78d4449be3a08c54b39c2612" prot="public" static="no">
        <name>B_MAIL_US_ASCII_CONVERSION</name>
        <initializer>((<ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref>) -3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="16" column="9" bodyfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mail__encoding_8h_1aecd685eab55cd3a50b2b776c984af336" prot="public" static="no">
        <name>B_MAIL_UTF8_CONVERSION</name>
        <initializer>((<ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref>) -2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="14" column="9" bodyfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mail__encoding_8h_1af8f8020ec0438b5876246d171e8dbc44" prot="public" static="no">
        <name>BASE64_LINELENGTH</name>
        <initializer>76</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="20" column="9" bodyfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="mail__encoding_8h_1a000175a2a39b0e8cdcb20e824066e5cc" prot="public" static="no" strong="no">
        <type></type>
        <name>mail_encoding</name>
        <enumvalue id="mail__encoding_8h_1a000175a2a39b0e8cdcb20e824066e5cca68c85665489abfd2134126692ef71e89" prot="public">
          <name>base64</name>
          <initializer>= &apos;b&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mail__encoding_8h_1a000175a2a39b0e8cdcb20e824066e5cca59913e520bbf9b1ef62f857cd6f1fa7b" prot="public">
          <name>quoted_printable</name>
          <initializer>= &apos;q&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mail__encoding_8h_1a000175a2a39b0e8cdcb20e824066e5ccab61e04d4bfa5354dbcea3d56c2c48835" prot="public">
          <name>seven_bit</name>
          <initializer>= &apos;7&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mail__encoding_8h_1a000175a2a39b0e8cdcb20e824066e5ccacd52f5451532b0832b28c2b57a0df560" prot="public">
          <name>eight_bit</name>
          <initializer>= &apos;8&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mail__encoding_8h_1a000175a2a39b0e8cdcb20e824066e5ccaf2774f11652b41d14dc6025426651c40" prot="public">
          <name>uuencode</name>
          <initializer>= &apos;u&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mail__encoding_8h_1a000175a2a39b0e8cdcb20e824066e5cca0363d792b448c261aad310b8ab0dfced" prot="public">
          <name>null_encoding</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mail__encoding_8h_1a000175a2a39b0e8cdcb20e824066e5ccabbafb7c9fde1b46fda881be55a253a28" prot="public">
          <name>no_encoding</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="22" column="1" bodyfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" bodystart="22" bodyend="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mail__encoding_8h_1a35f624e4764a50eda61b83f47db814eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t decode</definition>
        <argsstring>(mail_encoding encoding, char *out, const char *in, off_t length, int underscore_is_space)</argsstring>
        <name>decode</name>
        <param>
          <type>mail_encoding</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>underscore_is_space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="39" column="9" declfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" declline="39" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="mail__encoding_8h_1a82e0cf824b7d91abc63f22e51de470a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t decode_base64</definition>
        <argsstring>(char *out, const char *in, off_t length)</argsstring>
        <name>decode_base64</name>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="47" column="8" declfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" declline="47" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mail__encoding_8h_1a8473f33cb086d8b2a6c8ff04a53c59dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t decode_qp</definition>
        <argsstring>(char *out, const char *in, off_t length, int underscore_is_space)</argsstring>
        <name>decode_qp</name>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>underscore_is_space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="50" column="8" declfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" declline="50" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mail__encoding_8h_1a03f06465d7e952c91ff36c3559bd3890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t encode</definition>
        <argsstring>(mail_encoding encoding, char *out, const char *in, off_t length, int headerMode)</argsstring>
        <name>encode</name>
        <param>
          <type>mail_encoding</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>headerMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="36" column="9" declfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" declline="36" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="mail__encoding_8h_1a62861ef8db3cdf095ddff9b34e3abd3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t encode_base64</definition>
        <argsstring>(char *out, const char *in, off_t length, int headerMode)</argsstring>
        <name>encode_base64</name>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>headerMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="46" column="8" declfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" declline="46" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mail__encoding_8h_1aba84842da4b85fb6a8f211deb2736b26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t encode_qp</definition>
        <argsstring>(char *out, const char *in, off_t length, int headerMode)</argsstring>
        <name>encode_qp</name>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>headerMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="49" column="8" declfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" declline="49" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mail__encoding_8h_1a9db6631a3ee5ffd2987a7fc2f04ce6aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mail_encoding</type>
        <definition>mail_encoding encoding_for_cte</definition>
        <argsstring>(const char *content_transfer_encoding)</argsstring>
        <name>encoding_for_cte</name>
        <param>
          <type>const char *</type>
          <declname>content_transfer_encoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="44" column="15" declfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" declline="44" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="mail__encoding_8h_1a5116ca725d9cd05aebd7226d44aee0e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t max_encoded_length</definition>
        <argsstring>(mail_encoding encoding, off_t cur_length)</argsstring>
        <name>max_encoded_length</name>
        <param>
          <type>mail_encoding</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>cur_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="43" column="9" declfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" declline="43" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="mail__encoding_8h_1a83bc7d37f5b667c7404943cb2e6219a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t uu_decode</definition>
        <argsstring>(char *out, const char *in, off_t length)</argsstring>
        <name>uu_decode</name>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" line="53" column="8" declfile="/boot/home/src/haiku/headers/os/mail/mail_encoding.h" declline="53" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ZOIDBERG_MAIL_ENCODING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZOIDBERG_MAIL_ENCODING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>mail<sp/>encoding<sp/>-<sp/>mail<sp/>de-/encoding<sp/>functions<sp/>(base64<sp/>and<sp/>friends)</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>Copyright<sp/>2001<sp/>Dr.<sp/>Zoidberg<sp/>Enterprises.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;size_t.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_MAIL_NULL_CONVERSION<sp/>((uint32)<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_MAIL_UTF8_CONVERSION<sp/>((uint32)<sp/>-2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>specifying<sp/>the<sp/>UTF-8<sp/>character<sp/>set<sp/>when<sp/>converting<sp/>to/from<sp/>UTF-8.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_MAIL_US_ASCII_CONVERSION<sp/>((uint32)<sp/>-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Plain<sp/>7<sp/>bit<sp/>ASCII<sp/>character<sp/>set.<sp/><sp/>A<sp/>subset<sp/>of<sp/>UTF-8,<sp/>but<sp/>some<sp/>mail<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specifies<sp/>it<sp/>so<sp/>we<sp/>need<sp/>to<sp/>recognize<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BASE64_LINELENGTH<sp/>76</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>base64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>quoted_printable<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;q&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>seven_bit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>eight_bit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uuencode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>to<sp/>encode<sp/>something<sp/>using<sp/>uuencode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>null_encoding<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>not<sp/>changing<sp/>existing<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>no_encoding<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}<sp/>mail_encoding;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">ssize_t<sp/>encode(mail_encoding<sp/>encoding,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>off_t<sp/>length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>headerMode);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boolean<sp/>headerMode<sp/>only<sp/>matters<sp/>for<sp/>quoted_printable<sp/>and<sp/>base64.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">ssize_t<sp/>decode(mail_encoding<sp/>encoding,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/>off_t<sp/>length,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>underscore_is_space);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>value<sp/>of<sp/>underscore_is_space<sp/>only<sp/>matters<sp/>for<sp/>quoted_printable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">ssize_t<sp/>max_encoded_length(mail_encoding<sp/>encoding,<sp/>off_t<sp/>cur_length);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">mail_encoding<sp/>encoding_for_cte(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*content_transfer_encoding);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">ssize_t<sp/>encode_base64(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/>off_t<sp/>length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>headerMode);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">ssize_t<sp/>decode_base64(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/>off_t<sp/>length);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">ssize_t<sp/>encode_qp(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/>off_t<sp/>length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>headerMode);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">ssize_t<sp/>decode_qp(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/>off_t<sp/>length,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>underscore_is_space);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---underscore_is_space<sp/>should<sp/>be<sp/>1<sp/>if<sp/>and<sp/>only<sp/>if<sp/>you<sp/>are<sp/>decoding<sp/>a<sp/>header<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">ssize_t<sp/>uu_decode(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/>off_t<sp/>length);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>ZOIDBERG_MAIL_ENCODING_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/boot/home/src/haiku/headers/os/mail/mail_encoding.h"/>
  </compounddef>
</doxygen>
