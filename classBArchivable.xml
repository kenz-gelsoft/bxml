<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBArchivable" kind="class" language="C++" prot="public">
    <compoundname>BArchivable</compoundname>
    <derivedcompoundref refid="classBBitmap" prot="public" virt="non-virtual">BBitmap</derivedcompoundref>
    <derivedcompoundref refid="classBCollator" prot="public" virt="non-virtual">BCollator</derivedcompoundref>
    <derivedcompoundref refid="classBCursor" prot="private" virt="non-virtual">BCursor</derivedcompoundref>
    <derivedcompoundref refid="classBFormattingConventions" prot="public" virt="non-virtual">BFormattingConventions</derivedcompoundref>
    <derivedcompoundref refid="classBGradient" prot="public" virt="non-virtual">BGradient</derivedcompoundref>
    <derivedcompoundref refid="classBHandler" prot="public" virt="non-virtual">BHandler</derivedcompoundref>
    <derivedcompoundref refid="classBLayoutItem" prot="public" virt="non-virtual">BLayoutItem</derivedcompoundref>
    <derivedcompoundref refid="classBListItem" prot="public" virt="non-virtual">BListItem</derivedcompoundref>
    <derivedcompoundref refid="classBMenuItem" prot="public" virt="non-virtual">BMenuItem</derivedcompoundref>
    <derivedcompoundref refid="classBNetAddress" prot="public" virt="non-virtual">BNetAddress</derivedcompoundref>
    <derivedcompoundref refid="classBNetBuffer" prot="public" virt="non-virtual">BNetBuffer</derivedcompoundref>
    <derivedcompoundref refid="classBNetEndpoint" prot="public" virt="non-virtual">BNetEndpoint</derivedcompoundref>
    <derivedcompoundref refid="classBNotification" prot="public" virt="non-virtual">BNotification</derivedcompoundref>
    <derivedcompoundref refid="classBPicture" prot="public" virt="non-virtual">BPicture</derivedcompoundref>
    <derivedcompoundref refid="classBShape" prot="public" virt="non-virtual">BShape</derivedcompoundref>
    <derivedcompoundref refid="classBTab" prot="public" virt="non-virtual">BTab</derivedcompoundref>
    <derivedcompoundref refid="classBToolTip" prot="public" virt="non-virtual">BToolTip</derivedcompoundref>
    <derivedcompoundref refid="classBTranslator" prot="public" virt="non-virtual">BTranslator</derivedcompoundref>
    <derivedcompoundref refid="classBTranslatorRoster" prot="public" virt="non-virtual">BTranslatorRoster</derivedcompoundref>
    <derivedcompoundref refid="classBUrl" prot="public" virt="non-virtual">BUrl</derivedcompoundref>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBArchivable_1ab7439eb5c748e028e03fdec34fde92b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BUnarchiveManager</definition>
        <argsstring></argsstring>
        <name>BUnarchiveManager</name>
        <qualifiedname>BArchivable::BUnarchiveManager</qualifiedname>
        <param>
          <type>BUnarchiveManager</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="43" column="14" bodyfile="/boot/home/src/haiku/headers/os/support/Archivable.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBArchivable_1a3a9c696bcfbfa998136e1fdb1adfae5c" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BArchivable::_reserved</definition>
        <argsstring></argsstring>
        <name>_reserved</name>
        <qualifiedname>BArchivable::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="48" column="7" bodyfile="/boot/home/src/haiku/headers/os/support/Archivable.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBArchivable_1ae75e1bff88e446787c5ec274eef12b2e" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BArchivable::fArchivingToken</definition>
        <argsstring></argsstring>
        <name>fArchivingToken</name>
        <qualifiedname>BArchivable::fArchivingToken</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="47" column="6" bodyfile="/boot/home/src/haiku/headers/os/support/Archivable.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BArchivable::BArchivable</definition>
        <argsstring>()</argsstring>
        <name>BArchivable</name>
        <qualifiedname>BArchivable::BArchivable</qualifiedname>
        <briefdescription>
<para>Constructor. Does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BArchivable::BArchivable</definition>
        <argsstring>(BMessage *from)</argsstring>
        <name>BArchivable</name>
        <qualifiedname>BArchivable::BArchivable</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Constructor. Does important behind-the-scenes work in the unarchiving process. </para>
        </briefdescription>
        <detaileddescription>
<para>If you inherit this interface you should provide at least one constructor that takes one <ref refid="classBMessage" kindref="compound">BMessage</ref> argument. In that constructor, you should call your parent class&apos; archive constructor (even if your parent class is <ref refid="classBArchivable" kindref="compound">BArchivable</ref>).</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BArchivable::~BArchivable</definition>
        <argsstring>()</argsstring>
        <name>~BArchivable</name>
        <qualifiedname>BArchivable::~BArchivable</qualifiedname>
        <briefdescription>
<para>Destructor. Does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="32" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBArchivable_1a4075315c407443a3b0dbb3d7551b53c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BArchivable::AllArchived</definition>
        <argsstring>(BMessage *archive) const</argsstring>
        <name>AllArchived</name>
        <qualifiedname>BArchivable::AllArchived</qualifiedname>
        <reimplementedby refid="classBAbstractLayout_1a73b50e5ee03b980b4e8f08c875528162">AllArchived</reimplementedby>
        <reimplementedby refid="classBCardLayout_1ac561655882cd31e4f8a8b214de846fb6">AllArchived</reimplementedby>
        <reimplementedby refid="classBLayout_1ab9747436e251333693d54d29d472e2f9">AllArchived</reimplementedby>
        <reimplementedby refid="classBView_1a561e82ed41cbb93d3bacf371787497bf">AllArchived</reimplementedby>
        <reimplementedby refid="classBGridLayout_1adddbabf3f060e0e3d20af12cf3f3dab1">AllArchived</reimplementedby>
        <reimplementedby refid="classBGroupLayout_1a62670753e05e05601592d49f0b5f438f">AllArchived</reimplementedby>
        <reimplementedby refid="classBLayoutItem_1a13ec3faa075b23b3073f97531365102c">AllArchived</reimplementedby>
        <reimplementedby refid="classBMenuField_1ae8acba317c58f2767aae7956974536c9">AllArchived</reimplementedby>
        <reimplementedby refid="classBSplitView_1a8677380375e36b4bc2380a929dc69a69">AllArchived</reimplementedby>
        <reimplementedby refid="classBTextControl_1a5b73780d200fa037f99f6cec5cbf74ec">AllArchived</reimplementedby>
        <reimplementedby refid="classBTwoDimensionalLayout_1adb001699008fe0cb2eff51661da175e6">AllArchived</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
          <defname>into</defname>
        </param>
        <briefdescription>
<para>Method relating to the use of <computeroutput><ref refid="classBArchiver" kindref="compound">BArchiver</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This hook function is called once the first <ref refid="classBArchiver" kindref="compound">BArchiver</ref> that was created in an archiving session is either destroyed, or has its Finish() method called. Implementations of this method can be used, in conjunction with <ref refid="classBArchiver_1a77f099b123416c719be2cd78eb999d19" kindref="member">BArchiver::IsArchived()</ref>, to reference objects in your archive that you do not own, depending on whether or not those objects were archived by their owners. Implementations of this method should call the implementation of their parent class, the same as for the <ref refid="classBArchivable_1a051c5263dd1a75dcf28787b60825dc44" kindref="member">Archive()</ref> method.</para>
<para><simplesect kind="warning"><para>To guarantee that your <ref refid="classBArchivable_1a4075315c407443a3b0dbb3d7551b53c9" kindref="member">AllArchived()</ref> method will be called during archival, you must create a <ref refid="classBArchiver" kindref="compound">BArchiver</ref> object in your <ref refid="classBArchivable_1a051c5263dd1a75dcf28787b60825dc44" kindref="member">Archive()</ref> implementation.</para>
</simplesect>
<simplesect kind="warning"><para>You should archive any objects you own in your <ref refid="classBArchivable_1a051c5263dd1a75dcf28787b60825dc44" kindref="member">Archive()</ref> method implementation, and <bold>NOT</bold> your <ref refid="classBArchivable_1a4075315c407443a3b0dbb3d7551b53c9" kindref="member">AllArchived()</ref> method.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBArchiver" kindref="compound">BArchiver</ref> <ref refid="classBArchiver_1a7c82dbc0fb42795c575ac2c6a5405297" kindref="member">BArchiver::Finish()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="40" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBArchivable_1a2b1d74c147ea18e4b4bfacd42f11e0d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BArchivable::AllUnarchived</definition>
        <argsstring>(const BMessage *archive)</argsstring>
        <name>AllUnarchived</name>
        <qualifiedname>BArchivable::AllUnarchived</qualifiedname>
        <reimplementedby refid="classBScrollView_1adfed255a897cd481127f6b911b329c3d">AllUnarchived</reimplementedby>
        <reimplementedby refid="classBView_1ab7bd04272afed8b28bf57d1de33cbe05">AllUnarchived</reimplementedby>
        <reimplementedby refid="classBAbstractLayout_1a2664ac14ab5dbe33a18cee88d420aa22">AllUnarchived</reimplementedby>
        <reimplementedby refid="classBCardLayout_1a30c68436cd5efd9708c1cfd75655647a">AllUnarchived</reimplementedby>
        <reimplementedby refid="classBGridLayout_1a2cd9bd9915c14ac32c0081234e12a5fb">AllUnarchived</reimplementedby>
        <reimplementedby refid="classBGroupLayout_1a25bd4f838e672aa3eb611a616c5ec5e0">AllUnarchived</reimplementedby>
        <reimplementedby refid="classBLayout_1a3517e73d524672645425f80ebd4f53c7">AllUnarchived</reimplementedby>
        <reimplementedby refid="classBLayoutItem_1af78b72941cf1532299c2396cfeb7f9ed">AllUnarchived</reimplementedby>
        <reimplementedby refid="classBMenuField_1ad7e9ecb63a3df86c848bf8a9e7409ee7">AllUnarchived</reimplementedby>
        <reimplementedby refid="classBSplitView_1a5c4cc359d801e27e39f28469c24bbd76">AllUnarchived</reimplementedby>
        <reimplementedby refid="classBTabView_1a6cc6ca514c10001b8610e5937f96b48e">AllUnarchived</reimplementedby>
        <reimplementedby refid="classBTextControl_1abc5bfb77b1ab96dddec5c37d76657a89">AllUnarchived</reimplementedby>
        <reimplementedby refid="classBTwoDimensionalLayout_1a67ba660a95e7cf8647be8835184b6cc3">AllUnarchived</reimplementedby>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>Method relating to the use of <computeroutput><ref refid="classBUnarchiver" kindref="compound">BUnarchiver</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This hook function is called triggered in the <ref refid="classBUnarchiver_1a7640fa5d84dc6dca19d7513326d2bba2" kindref="member">BUnarchiver::Finish()</ref> method. In this method, you can rebuild references to objects that may be direct children of your object, or may be children of other objects. Implementations of this method should call the implementation of their parent class, the same as for the <ref refid="classBArchivable_1a051c5263dd1a75dcf28787b60825dc44" kindref="member">Archive()</ref> method.</para>
<para><simplesect kind="warning"><para>To guarantee that your <ref refid="classBArchivable_1a2b1d74c147ea18e4b4bfacd42f11e0d2" kindref="member">AllUnarchived()</ref> method will be called during unarchival, you must create a <ref refid="classBUnarchiver" kindref="compound">BUnarchiver</ref> object in your archive constructor.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBUnarchiver" kindref="compound">BUnarchiver</ref>, <ref refid="classBUnarchiver_1a7640fa5d84dc6dca19d7513326d2bba2" kindref="member">BUnarchiver::Finish()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="39" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBArchivable_1a051c5263dd1a75dcf28787b60825dc44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BArchivable::Archive</definition>
        <argsstring>(BMessage *into, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BArchivable::Archive</qualifiedname>
        <reimplementedby refid="classBCollator_1a6ad070bcec766bb2e4b3963f2af53e90">Archive</reimplementedby>
        <reimplementedby refid="classBCursor_1acae76743745b2ed1fd08de01edab9279">Archive</reimplementedby>
        <reimplementedby refid="classBNotification_1a8fb050723adcf52d9f8179808c0bea07">Archive</reimplementedby>
        <reimplementedby refid="classBBox_1abd1a762e132a6196076617cee1eb81ac">Archive</reimplementedby>
        <reimplementedby refid="classBListItem_1a3fa7ca1250e123e3cf1488b1d88901d3">Archive</reimplementedby>
        <reimplementedby refid="classBMenu_1a71bed24f541bdfb690863118ce3f716b">Archive</reimplementedby>
        <reimplementedby refid="classBMenuBar_1af4ae9bcc3c1cbe560e745c9868fb9c5f">Archive</reimplementedby>
        <reimplementedby refid="classBMenuField_1ada677e4339d5a5eca5c945c4165b6a3e">Archive</reimplementedby>
        <reimplementedby refid="classBMenuItem_1a0e31758c36db589a4549549ead272f6b">Archive</reimplementedby>
        <reimplementedby refid="classBOutlineListView_1af590f60f193f47989f63c34dda0e6916">Archive</reimplementedby>
        <reimplementedby refid="classBPictureButton_1ab476f82e9d75a3b4a9b54ca35d1ad036">Archive</reimplementedby>
        <reimplementedby refid="classBPopUpMenu_1af81e6dc2ddcc3063eb33a1a5cf3b9088">Archive</reimplementedby>
        <reimplementedby refid="classBScrollBar_1a2d8cea93fe440bbed02685c135b0f802">Archive</reimplementedby>
        <reimplementedby refid="classBScrollView_1a7858c5f97152c910831db817b80f5f95">Archive</reimplementedby>
        <reimplementedby refid="classBShape_1ae132d554f4df208974b5019436ad1b36">Archive</reimplementedby>
        <reimplementedby refid="classBStatusBar_1a05e0e95a3cee49d1fa7f1a48e26ae20b">Archive</reimplementedby>
        <reimplementedby refid="classBStringItem_1acf33097176356dbfbe1229d40ca4453a">Archive</reimplementedby>
        <reimplementedby refid="classBStringView_1adbafb44b6614c69a645d3e2de818c5f5">Archive</reimplementedby>
        <reimplementedby refid="classBTextControl_1af68449ec551e8a089a441fd270954b99">Archive</reimplementedby>
        <reimplementedby refid="classBTextView_1a0f3fb624378a2d13617773713efedd98">Archive</reimplementedby>
        <reimplementedby refid="classBView_1ab6de1b48cbc3ef15a0d02113036f002d">Archive</reimplementedby>
        <reimplementedby refid="classBWindow_1a69163d40d8f1eda77c9134ad4ab745a2">Archive</reimplementedby>
        <reimplementedby refid="classBApplication_1aa36536582835264341376064cbc96a27">Archive</reimplementedby>
        <reimplementedby refid="classBHandler_1ac2711ccff5e7f711244c88a5642c83db">Archive</reimplementedby>
        <reimplementedby refid="classBLooper_1a791ef8664f674b6683d551762888f1c2">Archive</reimplementedby>
        <reimplementedby refid="classBDirectWindow_1a39e69ba4bba5221b3099cf34129862c8">Archive</reimplementedby>
        <reimplementedby refid="classBAlert_1aba312ca5f7e668bf4d96efc7f41625a3">Archive</reimplementedby>
        <reimplementedby refid="classBBitmap_1a331444d4bc838444f65f534cbbd66f41">Archive</reimplementedby>
        <reimplementedby refid="classBButton_1adce5e4839a58c3bb85965398a490d720">Archive</reimplementedby>
        <reimplementedby refid="classBChannelControl_1aa71189c8b008cb3329c17b58f786617e">Archive</reimplementedby>
        <reimplementedby refid="classBCheckBox_1a75511a8252ef3ffa1177f57af97b67ca">Archive</reimplementedby>
        <reimplementedby refid="classBColorControl_1a6437907efd1d39a492db1f55b5f4dc36">Archive</reimplementedby>
        <reimplementedby refid="classBControl_1a2581a447a34eef102c62d0e998155290">Archive</reimplementedby>
        <reimplementedby refid="classBDragger_1aece5cd86ccd46a23f1188697f4bffa55">Archive</reimplementedby>
        <reimplementedby refid="classBListView_1a89277e72296cc9ec516777e000f100e3">Archive</reimplementedby>
        <reimplementedby refid="classBPicture_1a9854a69b51d30728a20fd8688ce7a0f0">Archive</reimplementedby>
        <reimplementedby refid="classBRadioButton_1aeed1a7a2142b1ac7b1499234f884caae">Archive</reimplementedby>
        <reimplementedby refid="classBSeparatorItem_1a37151f2e9c361bb173e016bca536dd9e">Archive</reimplementedby>
        <reimplementedby refid="classBTab_1aac9d5205065158ab4079c2b8913c495d">Archive</reimplementedby>
        <reimplementedby refid="classBAbstractLayout_1a76c6e663adb27a10972dafe22c898bf7">Archive</reimplementedby>
        <reimplementedby refid="classBCardLayout_1a0cfce7f1c906b28d8e3abaca74bcda56">Archive</reimplementedby>
        <reimplementedby refid="classBChannelSlider_1ac216b412d86275115516b886c4f9b578">Archive</reimplementedby>
        <reimplementedby refid="classBGridLayout_1aab5e2df95091bb76bb93628dcd01013e">Archive</reimplementedby>
        <reimplementedby refid="classBGroupLayout_1aae43bdb3a725755664e55f13a054b510">Archive</reimplementedby>
        <reimplementedby refid="classBLayout_1a0d5f0b0a3ca81f5f7d54dae6ab7a099f">Archive</reimplementedby>
        <reimplementedby refid="classBLayoutItem_1af2c2593e6179ee367ef26eff7ab7409f">Archive</reimplementedby>
        <reimplementedby refid="classBSeparatorView_1a41d7d43196ee70cc26986f95b5c3e262">Archive</reimplementedby>
        <reimplementedby refid="classBSpaceLayoutItem_1a27a757bd5903c14dce5a54af00177d4a">Archive</reimplementedby>
        <reimplementedby refid="classBSplitView_1a2c4ab843dd62815ebeb7201e21d3199b">Archive</reimplementedby>
        <reimplementedby refid="classBTabView_1a3354f9343238295b7ed0a24339106cd5">Archive</reimplementedby>
        <reimplementedby refid="classBTwoDimensionalLayout_1a405b207a3fa1770d5349de6d66705390">Archive</reimplementedby>
        <reimplementedby refid="classBUrl_1a7a31ffee9b9a2a2c0ed5e1469926b0fa">Archive</reimplementedby>
        <reimplementedby refid="classBTranslatorRoster_1a3da914e839d12c865bfc1f7a89d902e9">Archive</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>into</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Archive the object into a <ref refid="classBMessage" kindref="compound">BMessage</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>You should call this method from your derived implementation as it adds the data needed to instantiate your object to the message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>into</parametername>
</parameternamelist>
<parameterdescription>
<para>The message you store your object in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deep</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>true</computeroutput>, all children of this object should be archived as well.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The archive operation was successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>NULL</computeroutput> <emphasis>archive</emphasis> message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>The archive operation failed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="34" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBArchivable_1a827fa92febcf925f07545aa9777df9de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BArchivable::Perform</definition>
        <argsstring>(perform_code d, void *arg)</argsstring>
        <name>Perform</name>
        <qualifiedname>BArchivable::Perform</qualifiedname>
        <reimplementedby refid="classBPopUpMenu_1a8f92a8866c4ffd63cdfcf07957f5ba22">Perform</reimplementedby>
        <reimplementedby refid="classBDirectWindow_1a113afd3534fca8b81bcc86f8e55738be">Perform</reimplementedby>
        <reimplementedby refid="classBListItem_1a4b764176db576c63b8bedda260c76f91">Perform</reimplementedby>
        <reimplementedby refid="classBListView_1aa0afeb194104738a01c7e60195fe50d0">Perform</reimplementedby>
        <reimplementedby refid="classBPicture_1acb9a2bdcbad655692e126a3dc2be3166">Perform</reimplementedby>
        <reimplementedby refid="classBStringItem_1a68a5af5b0d0c958fa9528090c1ec6bcf">Perform</reimplementedby>
        <reimplementedby refid="classBCheckBox_1abcac265789890adbf485f42d34d8c8e3">Perform</reimplementedby>
        <reimplementedby refid="classBDragger_1ad47a007f4126b9847a315263aa64ad93">Perform</reimplementedby>
        <reimplementedby refid="classBMenuBar_1a4b8a4e16ace175bc3bad9d6ef6b42daf">Perform</reimplementedby>
        <reimplementedby refid="classBOutlineListView_1acb2775731d5da2cf52995e4d0b75c1d6">Perform</reimplementedby>
        <reimplementedby refid="classBPictureButton_1a57e7eef2e379994c13b8c93eeb5cf3c5">Perform</reimplementedby>
        <reimplementedby refid="classBSeparatorView_1af56310d344ae63781e6b299d56c34e99">Perform</reimplementedby>
        <reimplementedby refid="classBShape_1a8fb85b6315cd2f83144fa8dae729e5f5">Perform</reimplementedby>
        <reimplementedby refid="classBStringView_1a57a75da20cef1ba402df82def803b1d4">Perform</reimplementedby>
        <reimplementedby refid="classBTextView_1a6519856e1dbf6e021911529b8a0a15c6">Perform</reimplementedby>
        <reimplementedby refid="classBView_1a512a6c8dca1a62b14cdcb1c22070129b">Perform</reimplementedby>
        <reimplementedby refid="classBWindow_1afde7d74e5526f740dedb82a1d10faa7a">Perform</reimplementedby>
        <reimplementedby refid="classBApplication_1ab8fea9f4a96bdee62ce77a089d472973">Perform</reimplementedby>
        <reimplementedby refid="classBCursor_1af6a32be0d438618231f863aa6f27831e">Perform</reimplementedby>
        <reimplementedby refid="classBHandler_1a4e6ebc7ebcb72855a1f0fee7bde99766">Perform</reimplementedby>
        <reimplementedby refid="classBLooper_1adfc642544ce22888d412e6a4be25fa72">Perform</reimplementedby>
        <reimplementedby refid="classBAbstractLayout_1aa4d7d592de1e566f73f440576d1c2cac">Perform</reimplementedby>
        <reimplementedby refid="classBAlert_1a3d2769c5bf9b9822f21770e38e561fd6">Perform</reimplementedby>
        <reimplementedby refid="classBBitmap_1afed64c53793af567182136d5a56acdc8">Perform</reimplementedby>
        <reimplementedby refid="classBBox_1adcd9b77028e7c820ce29a8a9db950adb">Perform</reimplementedby>
        <reimplementedby refid="classBButton_1aee74330d076b7b8487fe21443118b03d">Perform</reimplementedby>
        <reimplementedby refid="classBCardLayout_1a7b75708b091f51e8dce826477f28e33a">Perform</reimplementedby>
        <reimplementedby refid="classBCardView_1aa784b33c5b2c62791cf86fa38d1704ba">Perform</reimplementedby>
        <reimplementedby refid="classBColorControl_1a8ec5063623c0c27052af71be1a4eafca">Perform</reimplementedby>
        <reimplementedby refid="classBControl_1a0b32524cd2abfb7ea37b9988b180c733">Perform</reimplementedby>
        <reimplementedby refid="classBGridLayout_1a0ab603b381b9ba4d7efb3efbeae4940f">Perform</reimplementedby>
        <reimplementedby refid="classBGridView_1a1409f66c0dfe65882e3bfa3b0fe000dc">Perform</reimplementedby>
        <reimplementedby refid="classBGroupLayout_1a31d82f6cd2fdecdc0a04d60d6e3943f7">Perform</reimplementedby>
        <reimplementedby refid="classBGroupView_1ad8e96a8f8d76e75b5bb6815866529112">Perform</reimplementedby>
        <reimplementedby refid="classBLayout_1adb8e95073f7626f04fe78337ca7114f8">Perform</reimplementedby>
        <reimplementedby refid="classBLayoutItem_1a38b237fb8bbd1d0054e3a2b4cbc1fd15">Perform</reimplementedby>
        <reimplementedby refid="classBMenu_1a6dedb98c6ba5ffbc44893ff43785c93c">Perform</reimplementedby>
        <reimplementedby refid="classBMenuField_1a78923e5f07ff7c288980a72f6a953001">Perform</reimplementedby>
        <reimplementedby refid="classBScrollBar_1adfb4e4e74d00970fd154c652e467b66e">Perform</reimplementedby>
        <reimplementedby refid="classBScrollView_1a1bd8a27f2883ca0e6b5b9dde0e9e638a">Perform</reimplementedby>
        <reimplementedby refid="classBSplitView_1a9aaf09f717a61303d5aca6e92d96b103">Perform</reimplementedby>
        <reimplementedby refid="classBStatusBar_1a4b9eb3ec267be64d9293af3b920c48de">Perform</reimplementedby>
        <reimplementedby refid="classBTabView_1a708fd8766fddb7b0cd72566c57c2977a">Perform</reimplementedby>
        <reimplementedby refid="classBTextControl_1af07cb4cc28a119fd6080d416632f6395">Perform</reimplementedby>
        <reimplementedby refid="classBTwoDimensionalLayout_1aac851d9c86397296d0e7e69716c01926">Perform</reimplementedby>
        <reimplementedby refid="classBRadioButton_1a44c726ed88d3a132e9d3055ebf98f3e6">Perform</reimplementedby>
        <reimplementedby refid="classBTab_1a4db961b6bd5104b4c9d76b6136bd6856">Perform</reimplementedby>
        <param>
          <type><ref refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" kindref="member">perform_code</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Perform some action (Internal method defined for binary compatibility purposes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="37" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBArchivable_1a04efcb17fa2a64a776923cc12303efcd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>static BArchivable * BArchivable::Instantiate</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BArchivable::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>Static member to restore objects from messages. </para>
        </briefdescription>
        <detaileddescription>
<para>You should always check that the <emphasis>archive</emphasis> argument actually corresponds to your class. The automatic functions, such as <ref refid="group__support__globals_1gac98d3af4a84cd0880d8a853f7c526764" kindref="member">instantiate_object()</ref> and <ref refid="classBUnarchiver_1a3bf0c1cbca1644015d17850424d0c374" kindref="member">BUnarchiver::InstantiateObject()</ref> will not choose the wrong class but manual calls to this member might be faulty. You can verify that <computeroutput>archive</computeroutput> stores an object of your class with the <ref refid="group__support__globals_1gae5dd9c83f4d3ab639edd84deb6bfd1c5" kindref="member">validate_instantiation()</ref> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>archive</parametername>
</parameternamelist>
<parameterdescription>
<para>The message with the data of the object to restore.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to a <ref refid="classBArchivable" kindref="compound">BArchivable</ref> object. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>You</parametername>
</parameternamelist>
<parameterdescription>
<para>should return a pointer to the object you create with <computeroutput>archive</computeroutput>, or <computeroutput>NULL</computeroutput> if the unarchival fails.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>The default implementation will always return <computeroutput>NULL</computeroutput>. Even though it is possible to store plain <ref refid="classBArchivable" kindref="compound">BArchivable</ref> objects, it is impossible to restore them.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__support__globals_1ga1ad60dbee75973620a85b2559e02d62d" kindref="member">instantiate_object(BMessage*)</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBUnarchiver_1a3bf0c1cbca1644015d17850424d0c374" kindref="member">BUnarchiver::InstantiateObject()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="35" column="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBArchivable_1a2335e5c2dfcf02d535795c411bedd13f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BArchivable::_ReservedArchivable3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedArchivable3</name>
        <qualifiedname>BArchivable::_ReservedArchivable3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="45" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for objects that can be archived into a <ref refid="classBMessage" kindref="compound">BMessage</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classBArchivable" kindref="compound">BArchivable</ref> provides an interface for objects that can be put into message archives and extracted into objects in another location. Using this you are able to send objects between applications, or even between computers across networks.</para>
<para><ref refid="classBArchivable" kindref="compound">BArchivable</ref> differs from <ref refid="classBFlattenable" kindref="compound">BFlattenable</ref> in that <ref refid="classBFlattenable" kindref="compound">BFlattenable</ref> is designed to store objects into flat streams of data, the main objective being storage to disk. The objective of this interface, however, is to store objects that will later be restored as new (but identical) objects. To illustrate this point, <ref refid="classBArchivable" kindref="compound">BArchivable</ref> objects can be restored automatically to the correct class, whereas <ref refid="classBFlattenable" kindref="compound">BFlattenable</ref> objects have a data type which you need to map to classes manually.</para>
<para>Archiving is done with the <ref refid="classBArchivable_1a051c5263dd1a75dcf28787b60825dc44" kindref="member">Archive()</ref> method. If your class supports it, the caller can request it to store into a deep archive, meaning that all child objects in it will be stored. Extracting the archive works with the <ref refid="classBArchivable_1a04efcb17fa2a64a776923cc12303efcd" kindref="member">Instantiate()</ref> method, which is static. Since the interface is designed to extract objects without the caller knowing what kind of object it actually is, the global function <ref refid="group__support__globals_1gac98d3af4a84cd0880d8a853f7c526764" kindref="member">instantiate_object()</ref> instantiates a message without you manually having to determine the class the message is from. This adds considerable flexibility and allows <ref refid="classBArchivable" kindref="compound">BArchivable</ref> to be used in combination with other add-ons.</para>
<para>To provide this interface in your classes you should publicly inherit this class. You should implement <ref refid="classBArchivable_1a051c5263dd1a75dcf28787b60825dc44" kindref="member">Archive()</ref> and <ref refid="classBArchivable_1a04efcb17fa2a64a776923cc12303efcd" kindref="member">Instantiate()</ref>, and provide one constructor that takes one <ref refid="classBMessage" kindref="compound">BMessage</ref> argument.</para>
<para>If your class holds references to other <ref refid="classBArchivable" kindref="compound">BArchivable</ref> objects that you wish to archive, then you should consider using the <ref refid="classBArchiver" kindref="compound">BArchiver</ref> and <ref refid="classBUnarchiver" kindref="compound">BUnarchiver</ref> classes in your <ref refid="classBArchivable_1a051c5263dd1a75dcf28787b60825dc44" kindref="member">Archive()</ref> method and archive constructor, respectively. You should also consider implementing the <ref refid="classBArchivable_1a4075315c407443a3b0dbb3d7551b53c9" kindref="member">AllArchived()</ref> and <ref refid="classBArchivable_1a2b1d74c147ea18e4b4bfacd42f11e0d2" kindref="member">AllUnarchived()</ref> methods, which were designed to ease archiving and unarchiving in such a situation.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="44">
        <label>BAbstractLayout</label>
        <link refid="classBAbstractLayout"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>BAlert</label>
        <link refid="classBAlert"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>BApplication</label>
        <link refid="classBApplication"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="2">
        <label>BBitmap</label>
        <link refid="classBBitmap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>BBox</label>
        <link refid="classBBox"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>BButton</label>
        <link refid="classBButton"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>BCardLayout</label>
        <link refid="classBCardLayout"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>BCardView</label>
        <link refid="classBCardView"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>BChannelControl</label>
        <link refid="classBChannelControl"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>BChannelSlider</label>
        <link refid="classBChannelSlider"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>BCheckBox</label>
        <link refid="classBCheckBox"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BCollator</label>
        <link refid="classBCollator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>BColorControl</label>
        <link refid="classBColorControl"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>BControl</label>
        <link refid="classBControl"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BCursor</label>
        <link refid="classBCursor"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>BDirectWindow</label>
        <link refid="classBDirectWindow"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>BDragger</label>
        <link refid="classBDragger"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>BGridLayout</label>
        <link refid="classBGridLayout"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>BGridView</label>
        <link refid="classBGridView"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>BGroupLayout</label>
        <link refid="classBGroupLayout"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>BGroupView</label>
        <link refid="classBGroupView"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>BLayout</label>
        <link refid="classBLayout"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>BLayoutItem</label>
        <link refid="classBLayoutItem"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>BListItem</label>
        <link refid="classBListItem"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>BListView</label>
        <link refid="classBListView"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BLooper</label>
        <link refid="classBLooper"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>BMenu</label>
        <link refid="classBMenu"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>BMenuBar</label>
        <link refid="classBMenuBar"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>BMenuField</label>
        <link refid="classBMenuField"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>BMenuItem</label>
        <link refid="classBMenuItem"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>BNotification</label>
        <link refid="classBNotification"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>BOptionControl</label>
        <link refid="classBOptionControl"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>BOptionPopUp</label>
        <link refid="classBOptionPopUp"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>BOutlineListView</label>
        <link refid="classBOutlineListView"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>BPicture</label>
        <link refid="classBPicture"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>BPictureButton</label>
        <link refid="classBPictureButton"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>BPopUpMenu</label>
        <link refid="classBPopUpMenu"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>BRadioButton</label>
        <link refid="classBRadioButton"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>BScrollBar</label>
        <link refid="classBScrollBar"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>BScrollView</label>
        <link refid="classBScrollView"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>BSeparatorItem</label>
        <link refid="classBSeparatorItem"/>
        <childnode refid="52" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>BSeparatorView</label>
        <link refid="classBSeparatorView"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>BShape</label>
        <link refid="classBShape"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>BSpaceLayoutItem</label>
        <link refid="classBSpaceLayoutItem"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>BSplitView</label>
        <link refid="classBSplitView"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>BStatusBar</label>
        <link refid="classBStatusBar"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>BStringItem</label>
        <link refid="classBStringItem"/>
        <childnode refid="50" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>BStringView</label>
        <link refid="classBStringView"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>BTab</label>
        <link refid="classBTab"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>BTabView</label>
        <link refid="classBTabView"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>BTextControl</label>
        <link refid="classBTextControl"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>BTextView</label>
        <link refid="classBTextView"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>BTranslator</label>
        <link refid="classBTranslator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>BTranslatorRoster</label>
        <link refid="classBTranslatorRoster"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>BTwoDimensionalLayout</label>
        <link refid="classBTwoDimensionalLayout"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>BUrl</label>
        <link refid="classBUrl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>BWindow</label>
        <link refid="classBWindow"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="28" column="1" bodyfile="/boot/home/src/haiku/headers/os/support/Archivable.h" bodystart="28" bodyend="49"/>
    <listofallmembers>
      <member refid="classBArchivable_1a3a9c696bcfbfa998136e1fdb1adfae5c" prot="private" virt="non-virtual"><scope>BArchivable</scope><name>_reserved</name></member>
      <member refid="classBArchivable_1a2335e5c2dfcf02d535795c411bedd13f" prot="private" virt="virtual"><scope>BArchivable</scope><name>_ReservedArchivable3</name></member>
      <member refid="classBArchivable_1a4075315c407443a3b0dbb3d7551b53c9" prot="public" virt="virtual"><scope>BArchivable</scope><name>AllArchived</name></member>
      <member refid="classBArchivable_1a2b1d74c147ea18e4b4bfacd42f11e0d2" prot="public" virt="virtual"><scope>BArchivable</scope><name>AllUnarchived</name></member>
      <member refid="classBArchivable_1a051c5263dd1a75dcf28787b60825dc44" prot="public" virt="virtual"><scope>BArchivable</scope><name>Archive</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BArchivable</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BArchivable</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1ae75e1bff88e446787c5ec274eef12b2e" prot="private" virt="non-virtual"><scope>BArchivable</scope><name>fArchivingToken</name></member>
      <member refid="classBArchivable_1a04efcb17fa2a64a776923cc12303efcd" prot="public" virt="non-virtual"><scope>BArchivable</scope><name>Instantiate</name></member>
      <member refid="classBArchivable_1a827fa92febcf925f07545aa9777df9de" prot="public" virt="virtual"><scope>BArchivable</scope><name>Perform</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BArchivable</scope><name>~BArchivable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
