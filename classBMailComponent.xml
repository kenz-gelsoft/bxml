<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBMailComponent" kind="class" language="C++" prot="public">
    <compoundname>BMailComponent</compoundname>
    <derivedcompoundref refid="classBMailAttachment" prot="public" virt="non-virtual">BMailAttachment</derivedcompoundref>
    <derivedcompoundref refid="classBMailContainer" prot="public" virt="non-virtual">BMailContainer</derivedcompoundref>
    <derivedcompoundref refid="classBTextMailComponent" prot="public" virt="non-virtual">BTextMailComponent</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classBMailComponent_1a5c0a4133a09330701091d384cf2be591" prot="protected" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMailComponent::_charSetForTextDecoding</definition>
        <argsstring></argsstring>
        <name>_charSetForTextDecoding</name>
        <qualifiedname>BMailComponent::_charSetForTextDecoding</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="73" column="8" bodyfile="/boot/home/src/haiku/headers/os/mail/MailComponent.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBMailComponent_1a00d47a5857d157c0efdcb2380bdc8aa7" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMailComponent::_reserved[5]</definition>
        <argsstring>[5]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BMailComponent::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="92" column="8" bodyfile="/boot/home/src/haiku/headers/os/mail/MailComponent.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMailComponent_1a342e4e640363ee2cade30d15794d15c0" prot="private" static="no" mutable="no">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref></type>
        <definition>BMessage BMailComponent::headers</definition>
        <argsstring></argsstring>
        <name>headers</name>
        <qualifiedname>BMailComponent::headers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="90" column="10" bodyfile="/boot/home/src/haiku/headers/os/mail/MailComponent.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBMailComponent_1a896e3d00ea10a8e0a606e892a68006cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMailComponent::BMailComponent</definition>
        <argsstring>(uint32 defaultCharSet=B_MAIL_NULL_CONVERSION)</argsstring>
        <name>BMailComponent</name>
        <qualifiedname>BMailComponent::BMailComponent</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>defaultCharSet</declname>
          <defval>B_MAIL_NULL_CONVERSION</defval>
        </param>
        <briefdescription>
<para>Initializes a new <ref refid="classBMailComponent" kindref="compound">BMailComponent</ref> with the specified character set. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1a2834a21549d0bee175d4f1df1cb3622f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BMailComponent::~BMailComponent</definition>
        <argsstring>()</argsstring>
        <name>~BMailComponent</name>
        <qualifiedname>BMailComponent::~BMailComponent</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="39" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1a31efb4b32fb435918e9ada3afd2dc424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMailComponent::ComponentType</definition>
        <argsstring>()</argsstring>
        <name>ComponentType</name>
        <qualifiedname>BMailComponent::ComponentType</qualifiedname>
        <briefdescription>
<para>Returns the <computeroutput>component_type</computeroutput> of this object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="41" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1a46e65753239d6efe7856aafe02a7cc27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMailComponent::GetDecodedData</definition>
        <argsstring>(BPositionIO *data)</argsstring>
        <name>GetDecodedData</name>
        <qualifiedname>BMailComponent::GetDecodedData</qualifiedname>
        <reimplementedby refid="classBTextMailComponent_1aa09e051b9ccb894e537277ed33b60dfc">GetDecodedData</reimplementedby>
        <param>
          <type><ref refid="classBPositionIO" kindref="compound">BPositionIO</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Retrieves the data contained in this component in canonical format and places it into <emphasis>data</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The various attachments subclasses implement this function to return decoded data, and <ref refid="classBTextMailComponent" kindref="compound">BTextMailComponent</ref> returns UTF8 text. <computeroutput><ref refid="classBMailComponent" kindref="compound">BMailComponent</ref></computeroutput> implements this function to do nothing and return <computeroutput>B_OK</computeroutput>.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="63" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1a06cb67bf4ec90ca225ed5cf4c8cf115b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BMailComponent::HeaderAt</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>HeaderAt</name>
        <qualifiedname>BMailComponent::HeaderAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the key of the <computeroutput>header</computeroutput> at index. </para>
        </briefdescription>
        <detaileddescription>
<para>Useful for iterating through all the headers. If index is out of range, <ref refid="classBMailComponent_1a06cb67bf4ec90ca225ed5cf4c8cf115b" kindref="member">HeaderAt()</ref> returns NULL.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="54" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1ac83168c9e94be178a111402eb4ac6484" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMailComponent::HeaderField</definition>
        <argsstring>(const char *key, BMessage *structured_header, int32 index=0) const</argsstring>
        <name>HeaderField</name>
        <qualifiedname>BMailComponent::HeaderField</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>structured_header</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the header <emphasis>key</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Decodes whatever structured header may exist in <emphasis>key</emphasis> and places it in <emphasis>structured_header</emphasis> according to the format laid out in <ref refid="classBMailComponent_1acdb63a023d53293efda55180466dd14f" kindref="member">SetHeaderField()</ref>. Returns <computeroutput>B_NAME_NOT_FOUND</computeroutput> if the header key does not exist. If it does exist, but is not structured, no error is returned; the entire contents of the header are placed in <computeroutput>unlabeled</computeroutput>.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="57" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1abc5f64496ba534360d0b1e9dcc0f17e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BMailComponent::HeaderField</definition>
        <argsstring>(const char *key, int32 index=0) const</argsstring>
        <name>HeaderField</name>
        <qualifiedname>BMailComponent::HeaderField</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the header <emphasis>key</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>If there is more than one header key, use <emphasis>index</emphasis> to iterate through them. In the event that the specified header does not exist, <ref refid="classBMailComponent_1abc5f64496ba534360d0b1e9dcc0f17e4" kindref="member">HeaderField()</ref> returns <computeroutput>NULL</computeroutput>. Thus, to retrieve the contents of the <computeroutput>Subject:</computeroutput> field, you would do this:</para>
<para><programlisting><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*subject<sp/>=<sp/>component-&gt;HeaderField(</highlight><highlight class="stringliteral">&quot;Subject&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="55" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1ab66ce045c8b608e7064bc091868d8953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMailComponent::IsAttachment</definition>
        <argsstring>()</argsstring>
        <name>IsAttachment</name>
        <qualifiedname>BMailComponent::IsAttachment</qualifiedname>
        <briefdescription>
<para>Employs simple heuristics such as the MIME type and the Content-Disposition: header to determine whether this component is an attachment. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if it is an attachment, false if not.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="43" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1a59da0d548d0bd23a29c7e9e043843377" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMailComponent::MIMEType</definition>
        <argsstring>(BMimeType *mime)</argsstring>
        <name>MIMEType</name>
        <qualifiedname>BMailComponent::MIMEType</qualifiedname>
        <param>
          <type><ref refid="classBMimeType" kindref="compound">BMimeType</ref> *</type>
          <declname>mime</declname>
        </param>
        <briefdescription>
<para>Places the MIME type of the data into mime. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="70" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1a58bbcaedf4bb7d71e765835f4f4b92f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMailComponent::RemoveHeader</definition>
        <argsstring>(const char *key)</argsstring>
        <name>RemoveHeader</name>
        <qualifiedname>BMailComponent::RemoveHeader</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Removes all headers with the key <emphasis>key</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="61" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1a1b38a761364e8cc7bcab62f921db1ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMailComponent::RenderToRFC822</definition>
        <argsstring>(BPositionIO *render_to)</argsstring>
        <name>RenderToRFC822</name>
        <qualifiedname>BMailComponent::RenderToRFC822</qualifiedname>
        <reimplementedby refid="classBTextMailComponent_1a141a7071157c94d9c3569ef14e9b554c">RenderToRFC822</reimplementedby>
        <param>
          <type><ref refid="classBPositionIO" kindref="compound">BPositionIO</ref> *</type>
          <declname>render_to</declname>
          <defname>data</defname>
        </param>
        <briefdescription>
<para>Renders the component into RFC-822 format. </para>
        </briefdescription>
        <detaileddescription>
<para>It places the result in data, starting at data-&gt;Position().</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="68" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1aba4b4e0d158e5c6c66cfd37b2fc38dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMailComponent::SetDecodedData</definition>
        <argsstring>(BPositionIO *data)</argsstring>
        <name>SetDecodedData</name>
        <qualifiedname>BMailComponent::SetDecodedData</qualifiedname>
        <reimplementedby refid="classBTextMailComponent_1a5bf619e5270526a2a622422d1a627115">SetDecodedData</reimplementedby>
        <param>
          <type><ref refid="classBPositionIO" kindref="compound">BPositionIO</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Sets the content of this component to the canonical format data contained in data. </para>
        </briefdescription>
        <detaileddescription>
<para>Thus, an attachment subclass would accept a file here and encode it into the specified encoding. <ref refid="classBMailComponent" kindref="compound">BMailComponent</ref> implements this function to do nothing and return <computeroutput>B_OK</computeroutput>.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="64" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1ac918b8e513ea48fc9df181e96d88e22d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMailComponent::SetHeaderField</definition>
        <argsstring>(const char *key, BMessage *structured_header, bool replace_existing=true)</argsstring>
        <name>SetHeaderField</name>
        <qualifiedname>BMailComponent::SetHeaderField</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>structured_header</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>replace_existing</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Adds a structured header of type <emphasis>key</emphasis> to the component. </para>
        </briefdescription>
        <detaileddescription>
<para>Structured headers are in the format unlabeled; key=value; key=value. The most common instance of this is the Content-Type header, where the MIME type is unlabeled, and various other information, such as character set, is specified in the key/value pairs. The format for structured_header is relatively simple: simply use BMessage::AddString(key,value) for each key/value pair. The only exception to this rule is the unlabeled data. For this, simply use the key unlabeled. Please note that the charset and encoding arguments defined for the text version of SetHeaderField is not provided here because structured headers cannot be encoded.</para>
<para>Thus, a relatively standard Content-Type header would be specified as follows:</para>
<para><programlisting><codeline><highlight class="normal"><ref refid="classBMessage" kindref="compound">BMessage</ref><sp/>structured;</highlight></codeline>
<codeline><highlight class="normal">structured.<ref refid="classBMessage_1a342311ccdf68206c4b879bcd0f2d6e83" kindref="member">AddString</ref>(</highlight><highlight class="stringliteral">&quot;unlabeled&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">structured.<ref refid="classBMessage_1a342311ccdf68206c4b879bcd0f2d6e83" kindref="member">AddString</ref>(</highlight><highlight class="stringliteral">&quot;charset&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;iso-8859-1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">component-&gt;SetHeaderField(</highlight><highlight class="stringliteral">&quot;To&quot;</highlight><highlight class="normal">,&amp;structured);</highlight></codeline>
</programlisting></para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="50" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1acdb63a023d53293efda55180466dd14f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMailComponent::SetHeaderField</definition>
        <argsstring>(const char *key, const char *value, uint32 charset=B_MAIL_NULL_CONVERSION, mail_encoding encoding=null_encoding, bool replace_existing=true)</argsstring>
        <name>SetHeaderField</name>
        <qualifiedname>BMailComponent::SetHeaderField</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>charset</declname>
          <defval>B_MAIL_NULL_CONVERSION</defval>
        </param>
        <param>
          <type>mail_encoding</type>
          <declname>encoding</declname>
          <defval>null_encoding</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>replace_existing</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Adds the specified header of type <emphasis>key</emphasis> and with the <emphasis>value</emphasis> to the component. </para>
        </briefdescription>
        <detaileddescription>
<para>Converts any 8 bit-data in <emphasis>value</emphasis> to <emphasis>charset</emphasis> and encodes it into 7-bit data using <emphasis>encoding</emphasis>. If <emphasis>replace_existing</emphasis> is true, replaces any existing header of this type with this one, otherwise adds a second one.</para>
<para>Thus, to set the header To: of some <ref refid="classBMailComponent" kindref="compound">BMailComponent</ref> <emphasis>component</emphasis> to <ulink url="mailto:foo@example.com">foo@example.com</ulink>, we would do this:</para>
<para><programlisting><codeline><highlight class="normal">component-&gt;SetHeaderField(</highlight><highlight class="stringliteral">&quot;To&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;foo@example.com&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>If you want to delete a header, pass in a zero length or NULL string for the value field, or use <ref refid="classBMailComponent_1a58bbcaedf4bb7d71e765835f4f4b92f5" kindref="member">BMailComponent::RemoveHeader</ref>.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="45" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1a95a1764eb1e70b410be3bf7e3137d855" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMailComponent::SetToRFC822</definition>
        <argsstring>(BPositionIO *data, size_t length, bool parse_now=false)</argsstring>
        <name>SetToRFC822</name>
        <qualifiedname>BMailComponent::SetToRFC822</qualifiedname>
        <reimplementedby refid="classBTextMailComponent_1a1833a51f2062dc6acf41c7927f786d39">SetToRFC822</reimplementedby>
        <param>
          <type><ref refid="classBPositionIO" kindref="compound">BPositionIO</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>parse_now</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets this object from a component in RFC-822 format. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="66" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1ab7986c49344a2f9b14ede9974788a03a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMailComponent" kindref="compound">BMailComponent</ref> *</type>
        <definition>BMailComponent * BMailComponent::WhatIsThis</definition>
        <argsstring>()</argsstring>
        <name>WhatIsThis</name>
        <qualifiedname>BMailComponent::WhatIsThis</qualifiedname>
        <briefdescription>
<para>Employs simple heuristics such as the MIME type to present you with an instance of a useful subclass. </para>
        </briefdescription>
        <detaileddescription>
<para>You can then use any of <ref refid="classBMailComponent" kindref="compound">BMailComponent</ref>&apos;s hook functions or RTTI calls to get more information. Bear in mind that the returned component is not set to any data. You must still Instantiate() it from whatever data this object was instantiated from.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="42" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBMailComponent_1ae8b2cbf43b7f88fdfbb6324cf773c8c0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMailComponent::_ReservedComponent1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedComponent1</name>
        <qualifiedname>BMailComponent::_ReservedComponent1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="84" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1a5ca80fa2aa2ae5acad849d727e35e25f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMailComponent::_ReservedComponent2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedComponent2</name>
        <qualifiedname>BMailComponent::_ReservedComponent2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="85" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1ad62b485ad285bbc4d6ff6b3bfb4304be" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMailComponent::_ReservedComponent3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedComponent3</name>
        <qualifiedname>BMailComponent::_ReservedComponent3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="86" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1aa6824ea7859700c018742978c35802d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMailComponent::_ReservedComponent4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedComponent4</name>
        <qualifiedname>BMailComponent::_ReservedComponent4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="87" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBMailComponent_1a0e8056faffd57c498f5b8aac4c8c0d1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMailComponent::_ReservedComponent5</definition>
        <argsstring>()</argsstring>
        <name>_ReservedComponent5</name>
        <qualifiedname>BMailComponent::_ReservedComponent5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="88" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The base class for most of the Mail Kit. </para>
    </briefdescription>
    <detaileddescription>
<para>Note that <ref refid="classBMailComponent" kindref="compound">BMailComponent</ref> is not abstract, and is useful by itself. A <ref refid="classBMailComponent" kindref="compound">BMailComponent</ref> has the important quality of being able to read the headers of a message or component without instantiating whatever massive quantity of data might lie therein. This is useful primarily to determine the kind of data you are dealing with, so that the user can make a decision as to whether it should be shown.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BMailComponent</label>
        <link refid="classBMailComponent"/>
      </node>
      <node id="2">
        <label>BTextMailComponent</label>
        <link refid="classBTextMailComponent"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/boot/home/src/haiku/headers/os/mail/MailComponent.h" line="35" column="1" bodyfile="/boot/home/src/haiku/headers/os/mail/MailComponent.h" bodystart="35" bodyend="93"/>
    <listofallmembers>
      <member refid="classBMailComponent_1a5c0a4133a09330701091d384cf2be591" prot="protected" virt="non-virtual"><scope>BMailComponent</scope><name>_charSetForTextDecoding</name></member>
      <member refid="classBMailComponent_1a00d47a5857d157c0efdcb2380bdc8aa7" prot="private" virt="non-virtual"><scope>BMailComponent</scope><name>_reserved</name></member>
      <member refid="classBMailComponent_1ae8b2cbf43b7f88fdfbb6324cf773c8c0" prot="private" virt="virtual"><scope>BMailComponent</scope><name>_ReservedComponent1</name></member>
      <member refid="classBMailComponent_1a5ca80fa2aa2ae5acad849d727e35e25f" prot="private" virt="virtual"><scope>BMailComponent</scope><name>_ReservedComponent2</name></member>
      <member refid="classBMailComponent_1ad62b485ad285bbc4d6ff6b3bfb4304be" prot="private" virt="virtual"><scope>BMailComponent</scope><name>_ReservedComponent3</name></member>
      <member refid="classBMailComponent_1aa6824ea7859700c018742978c35802d7" prot="private" virt="virtual"><scope>BMailComponent</scope><name>_ReservedComponent4</name></member>
      <member refid="classBMailComponent_1a0e8056faffd57c498f5b8aac4c8c0d1f" prot="private" virt="virtual"><scope>BMailComponent</scope><name>_ReservedComponent5</name></member>
      <member refid="classBMailComponent_1a896e3d00ea10a8e0a606e892a68006cc" prot="public" virt="non-virtual"><scope>BMailComponent</scope><name>BMailComponent</name></member>
      <member refid="classBMailComponent_1a31efb4b32fb435918e9ada3afd2dc424" prot="public" virt="non-virtual"><scope>BMailComponent</scope><name>ComponentType</name></member>
      <member refid="classBMailComponent_1a46e65753239d6efe7856aafe02a7cc27" prot="public" virt="virtual"><scope>BMailComponent</scope><name>GetDecodedData</name></member>
      <member refid="classBMailComponent_1a06cb67bf4ec90ca225ed5cf4c8cf115b" prot="public" virt="non-virtual"><scope>BMailComponent</scope><name>HeaderAt</name></member>
      <member refid="classBMailComponent_1abc5f64496ba534360d0b1e9dcc0f17e4" prot="public" virt="non-virtual"><scope>BMailComponent</scope><name>HeaderField</name></member>
      <member refid="classBMailComponent_1ac83168c9e94be178a111402eb4ac6484" prot="public" virt="non-virtual"><scope>BMailComponent</scope><name>HeaderField</name></member>
      <member refid="classBMailComponent_1a342e4e640363ee2cade30d15794d15c0" prot="private" virt="non-virtual"><scope>BMailComponent</scope><name>headers</name></member>
      <member refid="classBMailComponent_1ab66ce045c8b608e7064bc091868d8953" prot="public" virt="non-virtual"><scope>BMailComponent</scope><name>IsAttachment</name></member>
      <member refid="classBMailComponent_1a59da0d548d0bd23a29c7e9e043843377" prot="public" virt="virtual"><scope>BMailComponent</scope><name>MIMEType</name></member>
      <member refid="classBMailComponent_1a58bbcaedf4bb7d71e765835f4f4b92f5" prot="public" virt="non-virtual"><scope>BMailComponent</scope><name>RemoveHeader</name></member>
      <member refid="classBMailComponent_1a1b38a761364e8cc7bcab62f921db1ee3" prot="public" virt="virtual"><scope>BMailComponent</scope><name>RenderToRFC822</name></member>
      <member refid="classBMailComponent_1aba4b4e0d158e5c6c66cfd37b2fc38dd4" prot="public" virt="virtual"><scope>BMailComponent</scope><name>SetDecodedData</name></member>
      <member refid="classBMailComponent_1acdb63a023d53293efda55180466dd14f" prot="public" virt="non-virtual"><scope>BMailComponent</scope><name>SetHeaderField</name></member>
      <member refid="classBMailComponent_1ac918b8e513ea48fc9df181e96d88e22d" prot="public" virt="non-virtual"><scope>BMailComponent</scope><name>SetHeaderField</name></member>
      <member refid="classBMailComponent_1a95a1764eb1e70b410be3bf7e3137d855" prot="public" virt="virtual"><scope>BMailComponent</scope><name>SetToRFC822</name></member>
      <member refid="classBMailComponent_1ab7986c49344a2f9b14ede9974788a03a" prot="public" virt="non-virtual"><scope>BMailComponent</scope><name>WhatIsThis</name></member>
      <member refid="classBMailComponent_1a2834a21549d0bee175d4f1df1cb3622f" prot="public" virt="virtual"><scope>BMailComponent</scope><name>~BMailComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
