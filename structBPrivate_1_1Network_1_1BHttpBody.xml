<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structBPrivate_1_1Network_1_1BHttpBody" kind="struct" language="C++" prot="public">
    <compoundname>BPrivate::Network::BHttpBody</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structBPrivate_1_1Network_1_1BHttpBody_1a2c22caaff871835ac25ecafe3789c4d3" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classBString" kindref="compound">BString</ref> &gt;</type>
        <definition>std::optional&lt; BString &gt; BPrivate::Network::BHttpBody::text</definition>
        <argsstring></argsstring>
        <name>text</name>
        <qualifiedname>BPrivate::Network::BHttpBody::text</qualifiedname>
        <briefdescription>
<para>A string containing the body of the HTTP request. </para>
        </briefdescription>
        <detaileddescription>
<para>The value of this class variable is set to <computeroutput>std::nullopt</computeroutput> if the target body was written to a specified target. Otherwise, the response body is stored in this string. If the response body was empty, then this will be an empty string.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpResult.h" line="26" column="15" bodyfile="/boot/home/src/haiku/headers/private/netservices2/HttpResult.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a HTTP response body. </para>
    </briefdescription>
    <detaileddescription>
<para>The HTTP response body is captured in this object. The body is either stored into a target, or into a <ref refid="structBPrivate_1_1Network_1_1BHttpBody_1a2c22caaff871835ac25ecafe3789c4d3" kindref="member">text</ref> variable, depending on how you called the <ref refid="classBPrivate_1_1Network_1_1BHttpSession_1ae14a7c52aaddfd69e22be4a8aeff727f" kindref="member">BHttpSession::Execute()</ref> method.</para>
<para>You will usually get a reference to this object through the <ref refid="classBPrivate_1_1Network_1_1BHttpResult_1adeef8669a4d6f0fcbbbc2766072a8519" kindref="member">BHttpResult::Body()</ref> method. If you want to keep the contents of the body beyond the lifetime of the <ref refid="classBPrivate_1_1Network_1_1BHttpResult" kindref="compound">BHttpResult</ref> object, you should move the data into owned objects of your own.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/private/netservices2/HttpResult.h" line="25" column="1" bodyfile="/boot/home/src/haiku/headers/private/netservices2/HttpResult.h" bodystart="25" bodyend="27"/>
    <listofallmembers>
      <member refid="structBPrivate_1_1Network_1_1BHttpBody_1a2c22caaff871835ac25ecafe3789c4d3" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpBody</scope><name>text</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
