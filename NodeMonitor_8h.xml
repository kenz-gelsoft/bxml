<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="NodeMonitor_8h" kind="file" language="C++">
    <compoundname>NodeMonitor.h</compoundname>
    <includes refid="StorageDefs_8h" local="no">StorageDefs.h</includes>
    <includes refid="Node_8h" local="no">Node.h</includes>
    <includes refid="Messenger_8h" local="no">Messenger.h</includes>
    <incdepgraph>
      <node id="11">
        <label>Message.h</label>
        <link refid="Message_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Messenger.h</label>
        <link refid="Messenger_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Point.h</label>
        <link refid="Point_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Rect.h</label>
        <link refid="Rect_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Size.h</label>
        <link refid="Size_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Entry.h</label>
        <link refid="Entry_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Node.h</label>
        <link refid="Node_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>NodeMonitor.h</label>
        <link refid="NodeMonitor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Statable.h</label>
        <link refid="Statable_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>DataIO.h</label>
        <link refid="DataIO_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Flattenable.h</label>
        <link refid="Flattenable_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SupportDefs.h</label>
        <link refid="SupportDefs_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>TypeConstants.h</label>
        <link refid="TypeConstants_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>BeBuild.h</label>
      </node>
      <node id="10">
        <label>OS.h</label>
      </node>
      <node id="6">
        <label>inttypes.h</label>
      </node>
      <node id="20">
        <label>limits.h</label>
      </node>
      <node id="17">
        <label>math.h</label>
      </node>
      <node id="12">
        <label>new</label>
      </node>
      <node id="8">
        <label>sys/stat.h</label>
      </node>
      <node id="7">
        <label>sys/types.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="NodeMonitor_8h_1a116f76cf548c6f4bcfb81703ae247e15" prot="public" static="no">
        <name>B_ATTR_CHANGED</name>
        <initializer>5</initializer>
        <briefdescription>
<para><computeroutput>B_NODE_MONITOR</computeroutput> notification message &quot;opcode&quot; set when attribute changes. </para>
        </briefdescription>
        <detaileddescription>
<para>More information can be found in the &quot;cause&quot; field.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="40" column="9" bodyfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="NodeMonitor_8h_1ad956cad5c51b1550c44f7f9dd39ac842" prot="public" static="no">
        <name>B_ATTR_CREATED</name>
        <initializer>1</initializer>
        <briefdescription>
<para><computeroutput>B_ATTR_CHANGED</computeroutput> notification message &quot;cause&quot; set when attribute is created. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="48" column="9" bodyfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="NodeMonitor_8h_1a67e79ddfac3983b4db585f9590c4e965" prot="public" static="no">
        <name>B_ATTR_REMOVED</name>
        <initializer>2</initializer>
        <briefdescription>
<para><computeroutput>B_ATTR_CHANGED</computeroutput> notification message &quot;cause&quot; set when attribute is removed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="49" column="9" bodyfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="NodeMonitor_8h_1aeb76f8094c09164f137fcf1059545249" prot="public" static="no">
        <name>B_DEVICE_MOUNTED</name>
        <initializer>6</initializer>
        <briefdescription>
<para><computeroutput>B_NODE_MONITOR</computeroutput> notification message &quot;opcode&quot; set when device is mounted. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="41" column="9" bodyfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="NodeMonitor_8h_1a407ed2cd5ffbe83963d18b96f4578d0d" prot="public" static="no">
        <name>B_DEVICE_UNMOUNTED</name>
        <initializer>7</initializer>
        <briefdescription>
<para><computeroutput>B_NODE_MONITOR</computeroutput> notification message &quot;opcode&quot; set when device is unmounted. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="42" column="9" bodyfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="NodeMonitor_8h_1a65d0c68d370104be52317295cb21ec90" prot="public" static="no">
        <name>B_ENTRY_CREATED</name>
        <initializer>1</initializer>
        <briefdescription>
<para><computeroutput>B_NODE_MONITOR</computeroutput> notification message &quot;opcode&quot; is set when entry is created. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="36" column="9" bodyfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="NodeMonitor_8h_1a79e317874ed855b76993026e4fc631f4" prot="public" static="no">
        <name>B_ENTRY_MOVED</name>
        <initializer>3</initializer>
        <briefdescription>
<para><computeroutput>B_NODE_MONITOR</computeroutput> notification message &quot;opcode&quot; is set when entry is moved. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="38" column="9" bodyfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="NodeMonitor_8h_1a42bef01df83dd35a129054a4c46a7caf" prot="public" static="no">
        <name>B_ENTRY_REMOVED</name>
        <initializer>2</initializer>
        <briefdescription>
<para><computeroutput>B_NODE_MONITOR</computeroutput> notification message &quot;opcode&quot; is set when entry is removed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="37" column="9" bodyfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="NodeMonitor_8h_1a31f0bf8e54565c28d417474d05a41fb3" prot="public" static="no">
        <name>B_STAT_CHANGED</name>
        <initializer>4</initializer>
        <briefdescription>
<para><computeroutput>B_NODE_MONITOR</computeroutput> notification message &quot;opcode&quot; set when stat info changes. </para>
        </briefdescription>
        <detaileddescription>
<para>More information can be found in the &quot;fields&quot; field.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="39" column="9" bodyfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8" prot="public" static="no" strong="no">
        <type></type>
        <name>@97</name>
        <enumvalue id="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a6cba15ffc415fbecd83ad1ee340db843" prot="public">
          <name>B_STOP_WATCHING</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
<para>Unsubscribe from watching a node. </para>
          </briefdescription>
          <detaileddescription>
<para>Flag for <ref refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" kindref="member">watch_node()</ref>.</para>
<para><simplesect kind="attention"><para><computeroutput>B_STOP_WATCHING</computeroutput> does not apply to volume watching, you must call <ref refid="NodeMonitor_8h_1a0f58e29c5793f34222c9779ab7aa4f60" kindref="member">stop_watching()</ref> instead.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a109851f32b3bc9e6440f403d655c1c13" prot="public">
          <name>B_WATCH_NAME</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
<para>Subscribe to watching for change to the name of a node. </para>
          </briefdescription>
          <detaileddescription>
<para>Flag for <ref refid="NodeMonitor_8h_1a24336df118e76f00bd15b89fa863d299" kindref="member">watch_volume()</ref> and <ref refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" kindref="member">watch_node()</ref>.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8ad54ee9bea69f6442b748f6f5730ab0da" prot="public">
          <name>B_WATCH_STAT</name>
          <initializer>= 0x0002</initializer>
          <briefdescription>
<para>Subscribe to watching for changes to the stat information of a node. </para>
          </briefdescription>
          <detaileddescription>
<para>Flag for <ref refid="NodeMonitor_8h_1a24336df118e76f00bd15b89fa863d299" kindref="member">watch_volume()</ref> and <ref refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" kindref="member">watch_node()</ref>.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a497b00b3f0b0351bf073de1e899ba278" prot="public">
          <name>B_WATCH_ATTR</name>
          <initializer>= 0x0004</initializer>
          <briefdescription>
<para>Subscribe to watching for changes to the attributes of a node. </para>
          </briefdescription>
          <detaileddescription>
<para>Flag for <ref refid="NodeMonitor_8h_1a24336df118e76f00bd15b89fa863d299" kindref="member">watch_volume()</ref> and <ref refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" kindref="member">watch_node()</ref>.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a14299a5718a642da3b6534f1a159d543" prot="public">
          <name>B_WATCH_DIRECTORY</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
<para>Subscribe to watching for changes to the contents of a directory. </para>
          </briefdescription>
          <detaileddescription>
<para>Flag for <ref refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" kindref="member">watch_node()</ref>.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a675be713c0ef653c472a33a5b242cf55" prot="public">
          <name>B_WATCH_ALL</name>
          <initializer>= 0x000f</initializer>
          <briefdescription>
<para>Flag for <ref refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" kindref="member">watch_node()</ref>. </para>
          </briefdescription>
          <detaileddescription>
<para>Subscribe to watching for changes to all information of a node except <computeroutput>B_WATCH_MOUNT</computeroutput>.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a0a1c6952461d584d36cf8face0f6e18e" prot="public">
          <name>B_WATCH_MOUNT</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
<para>Subscribe to watching for when a volume is mounted or unmounted. </para>
          </briefdescription>
          <detaileddescription>
<para>You may prefer to use <ref refid="classBVolumeRoster" kindref="compound">BVolumeRoster</ref> for volume watching instead.</para>
<para>Flag for <ref refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" kindref="member">watch_node()</ref>.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8aadf1251dd744d0120a1fddaa92c09aa2" prot="public">
          <name>B_WATCH_INTERIM_STAT</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
<para>To avoid a flood of messages for small and frequent write operations on an open file the file system can limit the number of notifications and mark them with the <computeroutput>B_WATCH_INTERIM_STAT</computeroutput> flag. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a9b1dec57bbbb4d269707a9d673d4a943" prot="public">
          <name>B_WATCH_CHILDREN</name>
          <initializer>= 0x0040</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="17" column="1" bodyfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" bodystart="17" bodyend="28"/>
      </memberdef>
      <memberdef kind="enum" id="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5" prot="public" static="no" strong="no">
        <type></type>
        <name>@98</name>
        <enumvalue id="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5aa209413560119c3e6b1aded0f6baff78" prot="public">
          <name>B_STAT_MODE</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
<para>Set when stat mode changes. </para>
          </briefdescription>
          <detaileddescription>
<para><computeroutput>B_STAT_CHANGED</computeroutput> notification messages &quot;fields&quot; flag.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5aae8ac98dc85c951a1115dfd1442ddb38" prot="public">
          <name>B_STAT_UID</name>
          <initializer>= 0x0002</initializer>
          <briefdescription>
<para>Set when UID changes. </para>
          </briefdescription>
          <detaileddescription>
<para><computeroutput>B_STAT_CHANGED</computeroutput> notification messages &quot;fields&quot; flag.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a9ab931f7306b0534d497e4016ee4f84c" prot="public">
          <name>B_STAT_GID</name>
          <initializer>= 0x0004</initializer>
          <briefdescription>
<para>Set when GID changes. </para>
          </briefdescription>
          <detaileddescription>
<para><computeroutput>B_STAT_CHANGED</computeroutput> notification messages &quot;fields&quot; flag.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a2418b44d3506181e372731ffdb6cd398" prot="public">
          <name>B_STAT_SIZE</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
<para>Set when stat size changes. </para>
          </briefdescription>
          <detaileddescription>
<para><computeroutput>B_STAT_CHANGED</computeroutput> notification messages &quot;fields&quot; flag.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a02d80e0cded22cbfafc8a79a07679df8" prot="public">
          <name>B_STAT_ACCESS_TIME</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
<para>Set when access time changes. </para>
          </briefdescription>
          <detaileddescription>
<para><computeroutput>B_STAT_CHANGED</computeroutput> notification messages &quot;fields&quot; flag.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a4167c5ec28e0610b0de633e1148b314d" prot="public">
          <name>B_STAT_MODIFICATION_TIME</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
<para>Set when modification time changes. </para>
          </briefdescription>
          <detaileddescription>
<para><computeroutput>B_STAT_CHANGED</computeroutput> notification messages &quot;fields&quot; flag.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a458854c2059f9169fb6ceec719341d9b" prot="public">
          <name>B_STAT_CREATION_TIME</name>
          <initializer>= 0x0040</initializer>
          <briefdescription>
<para>Set when creation time changes. </para>
          </briefdescription>
          <detaileddescription>
<para><computeroutput>B_STAT_CHANGED</computeroutput> notification messages &quot;fields&quot; flag.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5af70d0e066c7e8b501481662dfe6ed251" prot="public">
          <name>B_STAT_CHANGE_TIME</name>
          <initializer>= 0x0080</initializer>
          <briefdescription>
<para>Set when access, modification or creation time changes. </para>
          </briefdescription>
          <detaileddescription>
<para><computeroutput>B_STAT_CHANGED</computeroutput> notification messages &quot;fields&quot; flag.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a775fe9255642e40b8cc6da019544970e" prot="public">
          <name>B_STAT_INTERIM_UPDATE</name>
          <initializer>= 0x1000</initializer>
          <briefdescription>
<para>Set when file is written to. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="57" column="1" bodyfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" bodystart="57" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="NodeMonitor_8h_1a0f58e29c5793f34222c9779ab7aa4f60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t stop_watching</definition>
        <argsstring>(BMessenger target)</argsstring>
        <name>stop_watching</name>
        <param>
          <type><ref refid="classBMessenger" kindref="compound">BMessenger</ref></type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Unsubscribes <emphasis>target</emphasis> from node and mount monitoring. </para>
        </briefdescription>
        <detaileddescription>
<para>You may still receive notification messages after calling <ref refid="NodeMonitor_8h_1a0f58e29c5793f34222c9779ab7aa4f60" kindref="member">stop_watching()</ref> because while node monitoring is asynchronous and all changes are atomic, message sending is not atomic so there is a lag time from when you stop monitoring and when the message is received in your message receiving thread. You can check the timestamp of the message to determine if it was sent after <ref refid="NodeMonitor_8h_1a0f58e29c5793f34222c9779ab7aa4f60" kindref="member">stop_watching()</ref> was called.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classBMessenger" kindref="compound">BMessenger</ref> object referring to the <emphasis>target</emphasis>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Stopped sending notification messages to the <emphasis>target</emphasis>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>target</emphasis> was invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ENTRY_NOT_FOUND</parametername>
</parameternamelist>
<parameterdescription>
<para>Node not found.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="95" column="17" declfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" declline="95" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="NodeMonitor_8h_1a8f5dc929d74b1b976e9a10fe2ee0e973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t stop_watching</definition>
        <argsstring>(const BHandler *handler, const BLooper *looper=NULL)</argsstring>
        <name>stop_watching</name>
        <param>
          <type>const <ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>const <ref refid="classBLooper" kindref="compound">BLooper</ref> *</type>
          <declname>looper</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Unsubscribes <emphasis>handler</emphasis> or <emphasis>looper</emphasis> target from node and mount monitoring. </para>
        </briefdescription>
        <detaileddescription>
<para>You may still receive notification messages after calling <ref refid="NodeMonitor_8h_1a0f58e29c5793f34222c9779ab7aa4f60" kindref="member">stop_watching()</ref> because while node monitoring is asynchronous and all changes are atomic, message sending is not atomic so there is a lag time from when you stop monitoring and when the message is received in your message receiving thread. You can check the timestamp of the message to determine if it was sent after <ref refid="NodeMonitor_8h_1a0f58e29c5793f34222c9779ab7aa4f60" kindref="member">stop_watching()</ref> was called.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The target handler, may be <computeroutput>NULL</computeroutput>. If <emphasis>looper</emphasis> is not <computeroutput>NULL</computeroutput> then the looper&apos;s preferred handler is targeted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>looper</parametername>
</parameternamelist>
<parameterdescription>
<para>The target looper, may be <computeroutput>NULL</computeroutput>. If <emphasis>handler</emphasis> is not <computeroutput>NULL</computeroutput> then the handler&apos;s looper is targeted.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Stopped sending notification messages to the target. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para>Target from <emphasis>handler</emphasis> or <emphasis>looper</emphasis> was invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ENTRY_NOT_FOUND</parametername>
</parameternamelist>
<parameterdescription>
<para>Node not found.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="96" column="17" declfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" declline="96" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t watch_node</definition>
        <argsstring>(const node_ref *node, uint32 flags, BMessenger target)</argsstring>
        <name>watch_node</name>
        <param>
          <type>const <ref refid="structnode__ref" kindref="compound">node_ref</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="classBMessenger" kindref="compound">BMessenger</ref></type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Subscribes or unsubscribes <emphasis>target</emphasis> to node and/or mount watching. </para>
        </briefdescription>
        <detaileddescription>
<para>Depending of <emphasis>flags</emphasis> the action performed by this function varies:<itemizedlist>
<listitem><para><emphasis>flags</emphasis> is 0: The target is unsubscribed from watching the node. <emphasis>node</emphasis> must not be <computeroutput>NULL</computeroutput> in this case.</para>
</listitem><listitem><para><emphasis>flags</emphasis> contains <computeroutput>B_WATCH_MOUNT:</computeroutput> The target is subscribed to mount watching.</para>
</listitem><listitem><para><emphasis>flags</emphasis> contains at least one of <computeroutput>B_WATCH_NAME</computeroutput>, <computeroutput>B_WATCH_STAT</computeroutput>, <computeroutput>B_WATCH_ATTR</computeroutput>, or <computeroutput>B_WATCH_DIRECTORY</computeroutput>: The target is subscribed to watching the specified aspects of the node. <emphasis>node</emphasis> must not be <computeroutput>NULL</computeroutput> in this case.</para>
</listitem></itemizedlist>
</para>
<para><emphasis>flags</emphasis> may include:<itemizedlist>
<listitem><para><computeroutput>B_STOP_WATCHING</computeroutput> </para>
</listitem></itemizedlist>
</para>
<para>or one or more of the following:<itemizedlist>
<listitem><para><computeroutput>B_WATCH_NAME</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_STAT</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_ATTR</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_DIRECTORY</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_ALL</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_MOUNT</computeroutput> </para>
</listitem></itemizedlist>
</para>
<para>Note that the latter two cases are not mutual exclusive, i.e. mount and node watching can be requested with a single call.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structnode__ref" kindref="compound">node_ref</ref> referring to the node to be watched. May be <computeroutput>NULL</computeroutput>, if only mount watching is requested. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags indicating the actions to be performed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classBMessenger" kindref="compound">BMessenger</ref> object referring to the <emphasis>target</emphasis>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>B_OK</computeroutput> if everything went fine, an error code otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="90" column="17" declfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" declline="90" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="NodeMonitor_8h_1a8128d34026a68960768d149911333127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t watch_node</definition>
        <argsstring>(const node_ref *node, uint32 flags, const BHandler *handler, const BLooper *looper=NULL)</argsstring>
        <name>watch_node</name>
        <param>
          <type>const <ref refid="structnode__ref" kindref="compound">node_ref</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>const <ref refid="classBLooper" kindref="compound">BLooper</ref> *</type>
          <declname>looper</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Subscribes or unsubscribes <emphasis>handler</emphasis> or <emphasis>looper</emphasis> to node and/or mount watching. </para>
        </briefdescription>
        <detaileddescription>
<para>Depending of <emphasis>flags</emphasis> the action performed by this function varies:<itemizedlist>
<listitem><para><emphasis>flags</emphasis> is 0: The target is unsubscribed from watching the node. <emphasis>node</emphasis> must not be <computeroutput>NULL</computeroutput> in this case.</para>
</listitem><listitem><para><emphasis>flags</emphasis> contains <computeroutput>B_WATCH_MOUNT:</computeroutput> The target is subscribed to mount watching.</para>
</listitem><listitem><para><emphasis>flags</emphasis> contains at least one of <computeroutput>B_WATCH_NAME</computeroutput>, <computeroutput>B_WATCH_STAT</computeroutput>, <computeroutput>B_WATCH_ATTR</computeroutput>, or <computeroutput>B_WATCH_DIRECTORY</computeroutput>: The target is subscribed to watching the specified aspects of the node. <emphasis>node</emphasis> must not be <computeroutput>NULL</computeroutput> in this case.</para>
</listitem></itemizedlist>
</para>
<para><emphasis>flags</emphasis> may include:<itemizedlist>
<listitem><para><computeroutput>B_STOP_WATCHING</computeroutput> </para>
</listitem></itemizedlist>
</para>
<para>or one or more of the following:<itemizedlist>
<listitem><para><computeroutput>B_WATCH_NAME</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_STAT</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_ATTR</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_DIRECTORY</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_ALL</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_MOUNT</computeroutput> </para>
</listitem></itemizedlist>
</para>
<para>Note that the latter two cases are not mutual exclusive, i.e. mount and node watching can be requested with a single call.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structnode__ref" kindref="compound">node_ref</ref> referring to the node to be watched. May be <computeroutput>NULL</computeroutput>, if only mount watching is requested. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags indicating the actions to be performed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The target handler. May be <computeroutput>NULL</computeroutput>, if <emphasis>looper</emphasis> is not <computeroutput>NULL</computeroutput>. Then the preferred handler of the looper is targeted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>looper</parametername>
</parameternamelist>
<parameterdescription>
<para>The target looper. May be <computeroutput>NULL</computeroutput>, if <emphasis>handler</emphasis> is not <computeroutput>NULL</computeroutput>. Then the handler&apos;s looper is the target looper.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>B_OK</computeroutput> if everything went fine, an error code otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="92" column="17" declfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" declline="92" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="NodeMonitor_8h_1a24336df118e76f00bd15b89fa863d299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t watch_volume</definition>
        <argsstring>(dev_t volume, uint32 flags, BMessenger target)</argsstring>
        <name>watch_volume</name>
        <param>
          <type>dev_t</type>
          <declname>volume</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="classBMessenger" kindref="compound">BMessenger</ref></type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Subscribes <emphasis>target</emphasis> to watch node changes on <emphasis>volume</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Depending of <emphasis>flags</emphasis> the action performed by this function varies:<itemizedlist>
<listitem><para><emphasis>flags</emphasis> contains at least one of <computeroutput>B_WATCH_NAME</computeroutput>, <computeroutput>B_WATCH_STAT</computeroutput>, or <computeroutput>B_WATCH_ATTR</computeroutput>: The target is subscribed to watching the specified aspects of any node on the volume.</para>
</listitem></itemizedlist>
</para>
<para><emphasis>flags</emphasis> may include:<itemizedlist>
<listitem><para><computeroutput>B_WATCH_NAME</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_STAT</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_ATTR</computeroutput> </para>
</listitem></itemizedlist>
</para>
<para><computeroutput>B_WATCH_VOLUME</computeroutput> flag is assumed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>dev_t referring to the volume to be watched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags indicating the actions to be performed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Messenger referring to the target. Must be valid.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went fine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>flags</emphasis> did not include one of <computeroutput>B_WATCH_NAME</computeroutput>, <computeroutput>B_WATCH_STAT</computeroutput>, or <computeroutput>B_WATCH_ATTR</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="86" column="17" declfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" declline="86" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="NodeMonitor_8h_1af8213cbf1cee62efad9731c3cd0500d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t watch_volume</definition>
        <argsstring>(dev_t volume, uint32 flags, const BHandler *handler, const BLooper *looper=NULL)</argsstring>
        <name>watch_volume</name>
        <param>
          <type>dev_t</type>
          <declname>volume</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>const <ref refid="classBLooper" kindref="compound">BLooper</ref> *</type>
          <declname>looper</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Subscribes <emphasis>handler</emphasis> or <emphasis>looper</emphasis> to watch node changes on <emphasis>volume</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Depending of <emphasis>flags</emphasis> the action performed by this function varies:<itemizedlist>
<listitem><para><emphasis>flags</emphasis> contains at least one of <computeroutput>B_WATCH_NAME</computeroutput>, <computeroutput>B_WATCH_STAT</computeroutput>, or <computeroutput>B_WATCH_ATTR</computeroutput>: The target is subscribed to watching the specified aspects of any node on the volume.</para>
</listitem></itemizedlist>
</para>
<para><emphasis>flags</emphasis> may include:<itemizedlist>
<listitem><para><computeroutput>B_WATCH_NAME</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_STAT</computeroutput> </para>
</listitem><listitem><para><computeroutput>B_WATCH_ATTR</computeroutput> </para>
</listitem></itemizedlist>
</para>
<para><computeroutput>B_WATCH_VOLUME</computeroutput> flag is assumed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>dev_t referring to the volume to be watched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags indicating the actions to be performed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The target <emphasis>handler</emphasis>. May be <computeroutput>NULL</computeroutput>, if <emphasis>looper</emphasis> is not <computeroutput>NULL</computeroutput>. Then the preferred handler of the looper is targeted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>looper</parametername>
</parameternamelist>
<parameterdescription>
<para>The target <emphasis>looper</emphasis>. May be <computeroutput>NULL</computeroutput>, if <emphasis>handler</emphasis> is not <computeroutput>NULL</computeroutput>. Then the handler&apos;s looper is the target looper.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went fine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>flags</emphasis> did not include one of <computeroutput>B_WATCH_NAME</computeroutput>, <computeroutput>B_WATCH_STAT</computeroutput>, or <computeroutput>B_WATCH_ATTR</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" line="87" column="17" declfile="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h" declline="87" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides functions and constants for monitoring changes to a node. </para>
    </briefdescription>
    <detaileddescription>
<para>The are three main node monitoring functions are <ref refid="NodeMonitor_8h_1a24336df118e76f00bd15b89fa863d299" kindref="member">watch_volume()</ref>, <ref refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" kindref="member">watch_node()</ref>, and <ref refid="NodeMonitor_8h_1a0f58e29c5793f34222c9779ab7aa4f60" kindref="member">stop_watching()</ref>.<itemizedlist>
<listitem><para><ref refid="NodeMonitor_8h_1a24336df118e76f00bd15b89fa863d299" kindref="member">watch_volume()</ref> starts watching a volume and sends a message when a requested event occurs.</para>
</listitem><listitem><para><ref refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" kindref="member">watch_node()</ref> starts or stops watching a node, or watches for volumes to be mounted and unmounted, and sends a message when an event occurs.</para>
</listitem><listitem><para><ref refid="NodeMonitor_8h_1a0f58e29c5793f34222c9779ab7aa4f60" kindref="member">stop_watching()</ref> stops monitoring a node or volume and no longer sends messages. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2003-2016<sp/>Haiku<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>MIT<sp/>License.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NODE_MONITOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_NODE_MONITOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;StorageDefs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Flags<sp/>for<sp/>the<sp/>watch_node()<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>B_WATCH_MOUNT<sp/>is<sp/>NOT<sp/>included<sp/>in<sp/>B_WATCH_ALL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>prefer<sp/>to<sp/>use<sp/>BVolumeRoster<sp/>for<sp/>volume<sp/>watching.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18" refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a6cba15ffc415fbecd83ad1ee340db843" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a6cba15ffc415fbecd83ad1ee340db843" kindref="member">B_STOP_WATCHING</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0000,</highlight></codeline>
<codeline lineno="19" refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a109851f32b3bc9e6440f403d655c1c13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a109851f32b3bc9e6440f403d655c1c13" kindref="member">B_WATCH_NAME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0001,</highlight></codeline>
<codeline lineno="20" refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8ad54ee9bea69f6442b748f6f5730ab0da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8ad54ee9bea69f6442b748f6f5730ab0da" kindref="member">B_WATCH_STAT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0002,</highlight></codeline>
<codeline lineno="21" refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a497b00b3f0b0351bf073de1e899ba278" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a497b00b3f0b0351bf073de1e899ba278" kindref="member">B_WATCH_ATTR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0004,</highlight></codeline>
<codeline lineno="22" refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a14299a5718a642da3b6534f1a159d543" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a14299a5718a642da3b6534f1a159d543" kindref="member">B_WATCH_DIRECTORY</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0008,</highlight></codeline>
<codeline lineno="23" refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a675be713c0ef653c472a33a5b242cf55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a675be713c0ef653c472a33a5b242cf55" kindref="member">B_WATCH_ALL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x000f,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a0a1c6952461d584d36cf8face0f6e18e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8a0a1c6952461d584d36cf8face0f6e18e" kindref="member">B_WATCH_MOUNT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0010,</highlight></codeline>
<codeline lineno="26" refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8aadf1251dd744d0120a1fddaa92c09aa2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a84fe57ba52f8e237004a413b27ea4db8aadf1251dd744d0120a1fddaa92c09aa2" kindref="member">B_WATCH_INTERIM_STAT</ref><sp/><sp/><sp/><sp/>=<sp/>0x0020,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>B_WATCH_CHILDREN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0040</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;opcode&quot;<sp/>field<sp/>of<sp/>the<sp/>B_NODE_MONITOR<sp/>notification<sp/>message<sp/>you<sp/>get.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>presence<sp/>and<sp/>meaning<sp/>of<sp/>the<sp/>other<sp/>fields<sp/>in<sp/>that<sp/>message<sp/>specifying<sp/>what</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>exactly<sp/>caused<sp/>the<sp/>notification<sp/>depend<sp/>on<sp/>this<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="NodeMonitor_8h_1a65d0c68d370104be52317295cb21ec90" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ENTRY_CREATED<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="NodeMonitor_8h_1a42bef01df83dd35a129054a4c46a7caf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ENTRY_REMOVED<sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="NodeMonitor_8h_1a79e317874ed855b76993026e4fc631f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ENTRY_MOVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="NodeMonitor_8h_1a31f0bf8e54565c28d417474d05a41fb3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_STAT_CHANGED<sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="NodeMonitor_8h_1a116f76cf548c6f4bcfb81703ae247e15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ATTR_CHANGED<sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="NodeMonitor_8h_1aeb76f8094c09164f137fcf1059545249" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_DEVICE_MOUNTED<sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="NodeMonitor_8h_1a407ed2cd5ffbe83963d18b96f4578d0d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_DEVICE_UNMOUNTED<sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>More<sp/>specific<sp/>info<sp/>in<sp/>the<sp/>&quot;cause&quot;<sp/>field<sp/>of<sp/>B_ATTR_CHANGED<sp/>notification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>messages.<sp/>(Haiku<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="NodeMonitor_8h_1ad956cad5c51b1550c44f7f9dd39ac842" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ATTR_CREATED<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="NodeMonitor_8h_1a67e79ddfac3983b4db585f9590c4e965" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_ATTR_REMOVED<sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>B_ATTR_CHANGED<sp/>is<sp/>reused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>More<sp/>specific<sp/>info<sp/>in<sp/>the<sp/>&quot;fields&quot;<sp/>field<sp/>of<sp/>B_STAT_CHANGED<sp/>notification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>messages,<sp/>specifying<sp/>what<sp/>parts<sp/>of<sp/>the<sp/>stat<sp/>data<sp/>have<sp/>actually<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>changed.<sp/>(Haiku<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="58" refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5aa209413560119c3e6b1aded0f6baff78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5aa209413560119c3e6b1aded0f6baff78" kindref="member">B_STAT_MODE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0001,</highlight></codeline>
<codeline lineno="59" refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5aae8ac98dc85c951a1115dfd1442ddb38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5aae8ac98dc85c951a1115dfd1442ddb38" kindref="member">B_STAT_UID</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0002,</highlight></codeline>
<codeline lineno="60" refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a9ab931f7306b0534d497e4016ee4f84c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a9ab931f7306b0534d497e4016ee4f84c" kindref="member">B_STAT_GID</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0004,</highlight></codeline>
<codeline lineno="61" refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a2418b44d3506181e372731ffdb6cd398" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a2418b44d3506181e372731ffdb6cd398" kindref="member">B_STAT_SIZE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0008,</highlight></codeline>
<codeline lineno="62" refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a02d80e0cded22cbfafc8a79a07679df8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a02d80e0cded22cbfafc8a79a07679df8" kindref="member">B_STAT_ACCESS_TIME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0010,</highlight></codeline>
<codeline lineno="63" refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a4167c5ec28e0610b0de633e1148b314d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a4167c5ec28e0610b0de633e1148b314d" kindref="member">B_STAT_MODIFICATION_TIME</ref><sp/><sp/><sp/><sp/>=<sp/>0x0020,</highlight></codeline>
<codeline lineno="64" refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a458854c2059f9169fb6ceec719341d9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a458854c2059f9169fb6ceec719341d9b" kindref="member">B_STAT_CREATION_TIME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0040,</highlight></codeline>
<codeline lineno="65" refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5af70d0e066c7e8b501481662dfe6ed251" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5af70d0e066c7e8b501481662dfe6ed251" kindref="member">B_STAT_CHANGE_TIME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0080,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a775fe9255642e40b8cc6da019544970e" kindref="member">B_STAT_INTERIM_UPDATE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1000</highlight></codeline>
<codeline lineno="68" refid="NodeMonitor_8h_1a78372742882dccd1c13323dbd66c25c5a775fe9255642e40b8cc6da019544970e" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>callable<sp/>Prototypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>you<sp/>are<sp/>not<sp/>able<sp/>to<sp/>parse<sp/>BMessages<sp/>from<sp/>plain<sp/>C,<sp/>there<sp/>is<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>API<sp/>exported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)<sp/>&amp;&amp;<sp/>!defined(_KERNEL_MODE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>only<sp/>needed<sp/>for<sp/>the<sp/>function<sp/>exports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Node_8h" kindref="compound">Node.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Messenger_8h" kindref="compound">Messenger.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classBLooper" kindref="compound">BLooper</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classBHandler" kindref="compound">BHandler</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="NodeMonitor_8h_1a24336df118e76f00bd15b89fa863d299" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><ref refid="NodeMonitor_8h_1a24336df118e76f00bd15b89fa863d299" kindref="member">watch_volume</ref>(dev_t<sp/>volume,<sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>flags,<sp/><ref refid="classBMessenger" kindref="compound">BMessenger</ref><sp/>target);</highlight></codeline>
<codeline lineno="87" refid="NodeMonitor_8h_1af8213cbf1cee62efad9731c3cd0500d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><ref refid="NodeMonitor_8h_1a24336df118e76f00bd15b89fa863d299" kindref="member">watch_volume</ref>(dev_t<sp/>volume,<sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>flags,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBHandler" kindref="compound">BHandler</ref>*<sp/>handler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBLooper" kindref="compound">BLooper</ref>*<sp/>looper<sp/>=<sp/><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><ref refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" kindref="member">watch_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnode__ref" kindref="compound">node_ref</ref>*<sp/>node,<sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>flags,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBMessenger" kindref="compound">BMessenger</ref><sp/>target);</highlight></codeline>
<codeline lineno="92" refid="NodeMonitor_8h_1a8128d34026a68960768d149911333127" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><ref refid="NodeMonitor_8h_1aa47570f615a5e07a38f452a47f9a8f48" kindref="member">watch_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnode__ref" kindref="compound">node_ref</ref>*<sp/>node,<sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>flags,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBHandler" kindref="compound">BHandler</ref>*<sp/>handler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBLooper" kindref="compound">BLooper</ref>*<sp/>looper<sp/>=<sp/><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="NodeMonitor_8h_1a0f58e29c5793f34222c9779ab7aa4f60" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><ref refid="NodeMonitor_8h_1a0f58e29c5793f34222c9779ab7aa4f60" kindref="member">stop_watching</ref>(<ref refid="classBMessenger" kindref="compound">BMessenger</ref><sp/>target);</highlight></codeline>
<codeline lineno="96" refid="NodeMonitor_8h_1a8f5dc929d74b1b976e9a10fe2ee0e973" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/><ref refid="NodeMonitor_8h_1a0f58e29c5793f34222c9779ab7aa4f60" kindref="member">stop_watching</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBHandler" kindref="compound">BHandler</ref>*<sp/>handler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBLooper" kindref="compound">BLooper</ref>*<sp/>looper<sp/>=<sp/><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>__cplusplus<sp/>&amp;&amp;<sp/>!_KERNEL_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>_NODE_MONITOR_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/boot/home/src/haiku/headers/os/storage/NodeMonitor.h"/>
  </compounddef>
</doxygen>
