<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBNetworkInterface" kind="class" language="C++" prot="public">
    <compoundname>BNetworkInterface</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBNetworkInterface_1a018a79c64c8dc2e8096c5c0ff6193386" prot="private" static="no" mutable="no">
        <type><ref refid="classBList" kindref="compound">BList</ref></type>
        <definition>BList BNetworkInterface::fAddresses</definition>
        <argsstring></argsstring>
        <name>fAddresses</name>
        <qualifiedname>BNetworkInterface::fAddresses</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="121" column="6" bodyfile="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetworkInterface_1afc2ecb19dab8ce41990858e3d6ede33c" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char BNetworkInterface::fName[IF_NAMESIZE]</definition>
        <argsstring>[IF_NAMESIZE]</argsstring>
        <name>fName</name>
        <qualifiedname>BNetworkInterface::fName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="120" column="5" bodyfile="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBNetworkInterface_1a3278aaa8ea34c6c1fcf9cc7850547334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetworkInterface::BNetworkInterface</definition>
        <argsstring>()</argsstring>
        <name>BNetworkInterface</name>
        <qualifiedname>BNetworkInterface::BNetworkInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a18d281d06db45fe32392cff3ac970c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetworkInterface::BNetworkInterface</definition>
        <argsstring>(const char *name)</argsstring>
        <name>BNetworkInterface</name>
        <qualifiedname>BNetworkInterface::BNetworkInterface</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1adc5c30904f1db41d7cf663bceb38f971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetworkInterface::BNetworkInterface</definition>
        <argsstring>(uint32 index)</argsstring>
        <name>BNetworkInterface</name>
        <qualifiedname>BNetworkInterface::BNetworkInterface</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a60630105545b2cbf57a77a0962bb1d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetworkInterface::~BNetworkInterface</definition>
        <argsstring>()</argsstring>
        <name>~BNetworkInterface</name>
        <qualifiedname>BNetworkInterface::~BNetworkInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a8c262422628245bd16e9823b3cacf2f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::AddAddress</definition>
        <argsstring>(const BNetworkAddress &amp;address)</argsstring>
        <name>AddAddress</name>
        <qualifiedname>BNetworkInterface::AddAddress</qualifiedname>
        <param>
          <type>const BNetworkAddress &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="94" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a257ad632d14862405d47c5247448e744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::AddAddress</definition>
        <argsstring>(const BNetworkInterfaceAddress &amp;address)</argsstring>
        <name>AddAddress</name>
        <qualifiedname>BNetworkInterface::AddAddress</qualifiedname>
        <param>
          <type>const BNetworkInterfaceAddress &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="92" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a8396f9c6ae115c2785f873b2add7146f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::AddDefaultRoute</definition>
        <argsstring>(const BNetworkAddress &amp;gateway)</argsstring>
        <name>AddDefaultRoute</name>
        <qualifiedname>BNetworkInterface::AddDefaultRoute</qualifiedname>
        <param>
          <type>const BNetworkAddress &amp;</type>
          <declname>gateway</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="105" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1aec7a47a5fe4f595be2623253ed8266cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::AddRoute</definition>
        <argsstring>(const BNetworkRoute &amp;route)</argsstring>
        <name>AddRoute</name>
        <qualifiedname>BNetworkInterface::AddRoute</qualifiedname>
        <param>
          <type>const BNetworkRoute &amp;</type>
          <declname>route</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="104" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1af6e049d05828a70e156722bad4e1aef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::AutoConfigure</definition>
        <argsstring>(int family)</argsstring>
        <name>AutoConfigure</name>
        <qualifiedname>BNetworkInterface::AutoConfigure</qualifiedname>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="117" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a4f3b86849b877f47c8aace742017f2d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BNetworkInterface::CountAddresses</definition>
        <argsstring>() const</argsstring>
        <name>CountAddresses</name>
        <qualifiedname>BNetworkInterface::CountAddresses</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="86" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a0397e118d500ad7831fd03bc6f66dab4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BNetworkInterface::Exists</definition>
        <argsstring>() const</argsstring>
        <name>Exists</name>
        <qualifiedname>BNetworkInterface::Exists</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="69" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1ab18cd273e7182e0e14243f688d6e0035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BNetworkInterface::FindAddress</definition>
        <argsstring>(const BNetworkAddress &amp;address)</argsstring>
        <name>FindAddress</name>
        <qualifiedname>BNetworkInterface::FindAddress</qualifiedname>
        <param>
          <type>const BNetworkAddress &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="89" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1aade446c03ae22920610b5723053a7695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BNetworkInterface::FindFirstAddress</definition>
        <argsstring>(int family)</argsstring>
        <name>FindFirstAddress</name>
        <qualifiedname>BNetworkInterface::FindFirstAddress</qualifiedname>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="90" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a90eaf9b4833c2d9cc65d756206bfb92b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BNetworkInterface::Flags</definition>
        <argsstring>() const</argsstring>
        <name>Flags</name>
        <qualifiedname>BNetworkInterface::Flags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="73" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a946f0597045e6bf760518662199a37db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::GetAddressAt</definition>
        <argsstring>(int32 index, BNetworkInterfaceAddress &amp;address)</argsstring>
        <name>GetAddressAt</name>
        <qualifiedname>BNetworkInterface::GetAddressAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>BNetworkInterfaceAddress &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="87" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a5c1230943d26719aa6a939d9719ab8fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::GetDefaultGateway</definition>
        <argsstring>(int family, BNetworkAddress &amp;gateway) const</argsstring>
        <name>GetDefaultGateway</name>
        <qualifiedname>BNetworkInterface::GetDefaultGateway</qualifiedname>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <param>
          <type>BNetworkAddress &amp;</type>
          <declname>gateway</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="114" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1abc718a36c0039d8d5d1ab59c93dd546b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::GetDefaultRoute</definition>
        <argsstring>(int family, BNetworkRoute &amp;route) const</argsstring>
        <name>GetDefaultRoute</name>
        <qualifiedname>BNetworkInterface::GetDefaultRoute</qualifiedname>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <param>
          <type>BNetworkRoute &amp;</type>
          <declname>route</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="112" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a4034a67ab8f65f392590226a361fc716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::GetHardwareAddress</definition>
        <argsstring>(BNetworkAddress &amp;address)</argsstring>
        <name>GetHardwareAddress</name>
        <qualifiedname>BNetworkInterface::GetHardwareAddress</qualifiedname>
        <param>
          <type>BNetworkAddress &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="102" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1acfa9d868e79195e0a58507ca02109a62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::GetRoutes</definition>
        <argsstring>(int family, BObjectList&lt; BNetworkRoute &gt; &amp;routes) const</argsstring>
        <name>GetRoutes</name>
        <qualifiedname>BNetworkInterface::GetRoutes</qualifiedname>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <param>
          <type><ref refid="classBObjectList" kindref="compound">BObjectList</ref>&lt; BNetworkRoute &gt; &amp;</type>
          <declname>routes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="110" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1abf359eb1dc80d9dd3a9477d0b2525432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::GetStats</definition>
        <argsstring>(ifreq_stats &amp;stats)</argsstring>
        <name>GetStats</name>
        <qualifiedname>BNetworkInterface::GetStats</qualifiedname>
        <param>
          <type>ifreq_stats &amp;</type>
          <declname>stats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="78" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a063b9b1dfbab8f868df57509e9630d08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BNetworkInterface::HasLink</definition>
        <argsstring>() const</argsstring>
        <name>HasLink</name>
        <qualifiedname>BNetworkInterface::HasLink</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="79" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1ac9fb21d1aa4362b41bf0092678aba39b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BNetworkInterface::Index</definition>
        <argsstring>() const</argsstring>
        <name>Index</name>
        <qualifiedname>BNetworkInterface::Index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="72" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a10007813fbaaa304ca955eabec64045c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BNetworkInterface::Media</definition>
        <argsstring>() const</argsstring>
        <name>Media</name>
        <qualifiedname>BNetworkInterface::Media</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="75" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a6efd8f02c7d0d7d5af434757da4d1783" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BNetworkInterface::Metric</definition>
        <argsstring>() const</argsstring>
        <name>Metric</name>
        <qualifiedname>BNetworkInterface::Metric</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="76" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a7947832df48562369eddec7b4feaf474" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BNetworkInterface::MTU</definition>
        <argsstring>() const</argsstring>
        <name>MTU</name>
        <qualifiedname>BNetworkInterface::MTU</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="74" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a36bbc622559fa7451dc930c1d345d084" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BNetworkInterface::Name</definition>
        <argsstring>() const</argsstring>
        <name>Name</name>
        <qualifiedname>BNetworkInterface::Name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="71" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1af396bfc723265eab3c22b9fb01ae398d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::RemoveAddress</definition>
        <argsstring>(const BNetworkAddress &amp;address)</argsstring>
        <name>RemoveAddress</name>
        <qualifiedname>BNetworkInterface::RemoveAddress</qualifiedname>
        <param>
          <type>const BNetworkAddress &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="99" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1ac9891d094e6ffc39b06346356ee038e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::RemoveAddress</definition>
        <argsstring>(const BNetworkInterfaceAddress &amp;address)</argsstring>
        <name>RemoveAddress</name>
        <qualifiedname>BNetworkInterface::RemoveAddress</qualifiedname>
        <param>
          <type>const BNetworkInterfaceAddress &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="97" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a80b2b3f6e136349ce9fa075dc56e7872" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::RemoveAddressAt</definition>
        <argsstring>(int32 index)</argsstring>
        <name>RemoveAddressAt</name>
        <qualifiedname>BNetworkInterface::RemoveAddressAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="100" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a9fb8b864dfac57046b6adcb84c31a6b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::RemoveDefaultRoute</definition>
        <argsstring>(int family)</argsstring>
        <name>RemoveDefaultRoute</name>
        <qualifiedname>BNetworkInterface::RemoveDefaultRoute</qualifiedname>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="109" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1ae7fecd0c7a6d629f470568cd212bd2cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::RemoveRoute</definition>
        <argsstring>(const BNetworkRoute &amp;route)</argsstring>
        <name>RemoveRoute</name>
        <qualifiedname>BNetworkInterface::RemoveRoute</qualifiedname>
        <param>
          <type>const BNetworkRoute &amp;</type>
          <declname>route</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="106" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1ae10bad0e0fc803ada586371ccf5e8767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::RemoveRoute</definition>
        <argsstring>(int family, const BNetworkRoute &amp;route)</argsstring>
        <name>RemoveRoute</name>
        <qualifiedname>BNetworkInterface::RemoveRoute</qualifiedname>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <param>
          <type>const BNetworkRoute &amp;</type>
          <declname>route</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="107" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a148fdc116b1c91196643517e472ba0b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::SetAddress</definition>
        <argsstring>(const BNetworkInterfaceAddress &amp;address)</argsstring>
        <name>SetAddress</name>
        <qualifiedname>BNetworkInterface::SetAddress</qualifiedname>
        <param>
          <type>const BNetworkInterfaceAddress &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="95" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a2d60c7eb7ba16d14ebf0e5790a8df904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::SetFlags</definition>
        <argsstring>(uint32 flags)</argsstring>
        <name>SetFlags</name>
        <qualifiedname>BNetworkInterface::SetFlags</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="81" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1addd01cab171a7a43eb5b997dc68c6778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::SetMedia</definition>
        <argsstring>(int32 media)</argsstring>
        <name>SetMedia</name>
        <qualifiedname>BNetworkInterface::SetMedia</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>media</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="83" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1af575a624a3efd7b6d76bfb753dc3b219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::SetMetric</definition>
        <argsstring>(uint32 metric)</argsstring>
        <name>SetMetric</name>
        <qualifiedname>BNetworkInterface::SetMetric</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>metric</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="84" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1acdcde781f49ccddcc107d913b1266e19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::SetMTU</definition>
        <argsstring>(uint32 mtu)</argsstring>
        <name>SetMTU</name>
        <qualifiedname>BNetworkInterface::SetMTU</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>mtu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="82" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1a811e180b2fcac18d401c58b578131a9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BNetworkInterface::SetTo</definition>
        <argsstring>(const char *name)</argsstring>
        <name>SetTo</name>
        <qualifiedname>BNetworkInterface::SetTo</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="66" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1aa411e9db1ac54673a47f7f1fead5293f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkInterface::SetTo</definition>
        <argsstring>(uint32 index)</argsstring>
        <name>SetTo</name>
        <qualifiedname>BNetworkInterface::SetTo</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="67" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1ad3ff7776b569f1c2167a0a4d285a6041" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BNetworkInterface::Type</definition>
        <argsstring>() const</argsstring>
        <name>Type</name>
        <qualifiedname>BNetworkInterface::Type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="77" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkInterface_1ad401ffa7743fd4f3eaa5904fe59d9b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BNetworkInterface::Unset</definition>
        <argsstring>()</argsstring>
        <name>Unset</name>
        <qualifiedname>BNetworkInterface::Unset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="65" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" line="58" column="1" bodyfile="/boot/home/src/haiku/headers/os/net/NetworkInterface.h" bodystart="58" bodyend="122"/>
    <listofallmembers>
      <member refid="classBNetworkInterface_1a257ad632d14862405d47c5247448e744" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>AddAddress</name></member>
      <member refid="classBNetworkInterface_1a8c262422628245bd16e9823b3cacf2f5" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>AddAddress</name></member>
      <member refid="classBNetworkInterface_1a8396f9c6ae115c2785f873b2add7146f" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>AddDefaultRoute</name></member>
      <member refid="classBNetworkInterface_1aec7a47a5fe4f595be2623253ed8266cd" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>AddRoute</name></member>
      <member refid="classBNetworkInterface_1af6e049d05828a70e156722bad4e1aef5" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>AutoConfigure</name></member>
      <member refid="classBNetworkInterface_1a3278aaa8ea34c6c1fcf9cc7850547334" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>BNetworkInterface</name></member>
      <member refid="classBNetworkInterface_1a18d281d06db45fe32392cff3ac970c94" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>BNetworkInterface</name></member>
      <member refid="classBNetworkInterface_1adc5c30904f1db41d7cf663bceb38f971" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>BNetworkInterface</name></member>
      <member refid="classBNetworkInterface_1a4f3b86849b877f47c8aace742017f2d5" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>CountAddresses</name></member>
      <member refid="classBNetworkInterface_1a0397e118d500ad7831fd03bc6f66dab4" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>Exists</name></member>
      <member refid="classBNetworkInterface_1a018a79c64c8dc2e8096c5c0ff6193386" prot="private" virt="non-virtual"><scope>BNetworkInterface</scope><name>fAddresses</name></member>
      <member refid="classBNetworkInterface_1ab18cd273e7182e0e14243f688d6e0035" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>FindAddress</name></member>
      <member refid="classBNetworkInterface_1aade446c03ae22920610b5723053a7695" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>FindFirstAddress</name></member>
      <member refid="classBNetworkInterface_1a90eaf9b4833c2d9cc65d756206bfb92b" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>Flags</name></member>
      <member refid="classBNetworkInterface_1afc2ecb19dab8ce41990858e3d6ede33c" prot="private" virt="non-virtual"><scope>BNetworkInterface</scope><name>fName</name></member>
      <member refid="classBNetworkInterface_1a946f0597045e6bf760518662199a37db" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>GetAddressAt</name></member>
      <member refid="classBNetworkInterface_1a5c1230943d26719aa6a939d9719ab8fa" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>GetDefaultGateway</name></member>
      <member refid="classBNetworkInterface_1abc718a36c0039d8d5d1ab59c93dd546b" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>GetDefaultRoute</name></member>
      <member refid="classBNetworkInterface_1a4034a67ab8f65f392590226a361fc716" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>GetHardwareAddress</name></member>
      <member refid="classBNetworkInterface_1acfa9d868e79195e0a58507ca02109a62" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>GetRoutes</name></member>
      <member refid="classBNetworkInterface_1abf359eb1dc80d9dd3a9477d0b2525432" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>GetStats</name></member>
      <member refid="classBNetworkInterface_1a063b9b1dfbab8f868df57509e9630d08" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>HasLink</name></member>
      <member refid="classBNetworkInterface_1ac9fb21d1aa4362b41bf0092678aba39b" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>Index</name></member>
      <member refid="classBNetworkInterface_1a10007813fbaaa304ca955eabec64045c" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>Media</name></member>
      <member refid="classBNetworkInterface_1a6efd8f02c7d0d7d5af434757da4d1783" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>Metric</name></member>
      <member refid="classBNetworkInterface_1a7947832df48562369eddec7b4feaf474" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>MTU</name></member>
      <member refid="classBNetworkInterface_1a36bbc622559fa7451dc930c1d345d084" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>Name</name></member>
      <member refid="classBNetworkInterface_1ac9891d094e6ffc39b06346356ee038e1" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>RemoveAddress</name></member>
      <member refid="classBNetworkInterface_1af396bfc723265eab3c22b9fb01ae398d" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>RemoveAddress</name></member>
      <member refid="classBNetworkInterface_1a80b2b3f6e136349ce9fa075dc56e7872" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>RemoveAddressAt</name></member>
      <member refid="classBNetworkInterface_1a9fb8b864dfac57046b6adcb84c31a6b2" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>RemoveDefaultRoute</name></member>
      <member refid="classBNetworkInterface_1ae7fecd0c7a6d629f470568cd212bd2cb" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>RemoveRoute</name></member>
      <member refid="classBNetworkInterface_1ae10bad0e0fc803ada586371ccf5e8767" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>RemoveRoute</name></member>
      <member refid="classBNetworkInterface_1a148fdc116b1c91196643517e472ba0b3" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>SetAddress</name></member>
      <member refid="classBNetworkInterface_1a2d60c7eb7ba16d14ebf0e5790a8df904" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>SetFlags</name></member>
      <member refid="classBNetworkInterface_1addd01cab171a7a43eb5b997dc68c6778" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>SetMedia</name></member>
      <member refid="classBNetworkInterface_1af575a624a3efd7b6d76bfb753dc3b219" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>SetMetric</name></member>
      <member refid="classBNetworkInterface_1acdcde781f49ccddcc107d913b1266e19" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>SetMTU</name></member>
      <member refid="classBNetworkInterface_1a811e180b2fcac18d401c58b578131a9c" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>SetTo</name></member>
      <member refid="classBNetworkInterface_1aa411e9db1ac54673a47f7f1fead5293f" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>SetTo</name></member>
      <member refid="classBNetworkInterface_1ad3ff7776b569f1c2167a0a4d285a6041" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>Type</name></member>
      <member refid="classBNetworkInterface_1ad401ffa7743fd4f3eaa5904fe59d9b30" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>Unset</name></member>
      <member refid="classBNetworkInterface_1a60630105545b2cbf57a77a0962bb1d37" prot="public" virt="non-virtual"><scope>BNetworkInterface</scope><name>~BNetworkInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
