<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBBufferConsumer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>BBufferConsumer</compoundname>
    <basecompoundref refid="classBMediaNode" prot="public" virt="virtual">BMediaNode</basecompoundref>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBBufferConsumer_1afd38307715759cfa00d61f1892bf6a63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BBufferProducer</definition>
        <argsstring></argsstring>
        <name>BBufferProducer</name>
        <qualifiedname>BBufferConsumer::BBufferProducer</qualifiedname>
        <param>
          <type>BBufferProducer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="111" column="14" bodyfile="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBBufferConsumer_1ae7f4ad1aafb45f9a3ee3faff0214396f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BMediaNode</definition>
        <argsstring></argsstring>
        <name>BMediaNode</name>
        <qualifiedname>BBufferConsumer::BMediaNode</qualifiedname>
        <param>
          <type><ref refid="classBMediaNode" kindref="compound">BMediaNode</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="110" column="14" bodyfile="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBBufferConsumer_1af8c6566ee8c14daf127e4397bd8b5541" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BMediaRoster</definition>
        <argsstring></argsstring>
        <name>BMediaRoster</name>
        <qualifiedname>BBufferConsumer::BMediaRoster</qualifiedname>
        <param>
          <type>BMediaRoster</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="112" column="14" bodyfile="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBBufferConsumer_1a66bb3c145a926bab354c6f520149f961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BPrivate::media::BMediaRosterEx</definition>
        <argsstring></argsstring>
        <name>BPrivate::media::BMediaRosterEx</name>
        <qualifiedname>BBufferConsumer::BMediaRosterEx</qualifiedname>
        <param>
          <type>BPrivate::media::BMediaRosterEx</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="113" column="14" bodyfile="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBBufferConsumer_1a1f09efe52f57b547e5e757d8aeab7838" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BBufferConsumer::_reserved[14]</definition>
        <argsstring>[14]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BBufferConsumer::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="152" column="7" bodyfile="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBBufferConsumer_1aa1c8dec85493657e3c2aac0b4d94f18d" prot="private" static="no" mutable="no">
        <type>BPrivate::BufferCache *</type>
        <definition>BPrivate::BufferCache* BBufferConsumer::fBufferCache</definition>
        <argsstring></argsstring>
        <name>fBufferCache</name>
        <qualifiedname>BBufferConsumer::fBufferCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="150" column="23" bodyfile="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBBufferConsumer_1ae4e31c2c91416509121b8a263b3fd5eb" prot="private" static="no" mutable="no">
        <type>media_type</type>
        <definition>media_type BBufferConsumer::fConsumerType</definition>
        <argsstring></argsstring>
        <name>fConsumerType</name>
        <qualifiedname>BBufferConsumer::fConsumerType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="149" column="11" bodyfile="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBBufferConsumer_1a838c20d932bd2e661901eaa773610f8f" prot="private" static="no" mutable="no">
        <type>BBufferGroup *</type>
        <definition>BBufferGroup* BBufferConsumer::fDeleteBufferGroup</definition>
        <argsstring></argsstring>
        <name>fDeleteBufferGroup</name>
        <qualifiedname>BBufferConsumer::fDeleteBufferGroup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="151" column="13" bodyfile="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBBufferConsumer_1a0dd5e7f87e879d705e4708a5efb3974e" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>BBufferConsumer::BBufferConsumer</definition>
        <argsstring>(media_type type)</argsstring>
        <name>BBufferConsumer</name>
        <qualifiedname>BBufferConsumer::BBufferConsumer</qualifiedname>
        <param>
          <type>media_type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="36" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a559526a997628dbb72812b19599a3ef6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BBufferConsumer::~BBufferConsumer</definition>
        <argsstring>()</argsstring>
        <name>~BBufferConsumer</name>
        <qualifiedname>BBufferConsumer::~BBufferConsumer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="27" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a4502887d56124e19dc0fc5ab48d009a2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::AcceptFormat</definition>
        <argsstring>(const media_destination &amp;destination, media_format *format)=0</argsstring>
        <name>AcceptFormat</name>
        <qualifiedname>BBufferConsumer::AcceptFormat</qualifiedname>
        <param>
          <type>const media_destination &amp;</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>media_format *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="78" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a11448de584ee10497655e0e003a21c17" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BBufferConsumer::BufferReceived</definition>
        <argsstring>(BBuffer *buffer)=0</argsstring>
        <name>BufferReceived</name>
        <qualifiedname>BBufferConsumer::BufferReceived</qualifiedname>
        <param>
          <type><ref refid="classBBuffer" kindref="compound">BBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="84" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1acd8dc4c5ed723262e8e15ddde548b92a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::Connected</definition>
        <argsstring>(const media_source &amp;producer, const media_destination &amp;where, const media_format &amp;withFormat, media_input *_input)=0</argsstring>
        <name>Connected</name>
        <qualifiedname>BBufferConsumer::Connected</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>producer</declname>
        </param>
        <param>
          <type>const media_destination &amp;</type>
          <declname>where</declname>
        </param>
        <param>
          <type>const media_format &amp;</type>
          <declname>withFormat</declname>
        </param>
        <param>
          <type>media_input *</type>
          <declname>_input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="92" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a43e5aa7ee2b1dcdde0ed1dc6f610ed7a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BBufferConsumer::Disconnected</definition>
        <argsstring>(const media_source &amp;producer, const media_destination &amp;where)=0</argsstring>
        <name>Disconnected</name>
        <qualifiedname>BBufferConsumer::Disconnected</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>producer</declname>
        </param>
        <param>
          <type>const media_destination &amp;</type>
          <declname>where</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="96" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a22c0e1bf88164334bb50daedd38293ae" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BBufferConsumer::DisposeInputCookie</definition>
        <argsstring>(int32 cookie)=0</argsstring>
        <name>DisposeInputCookie</name>
        <qualifiedname>BBufferConsumer::DisposeInputCookie</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>cookie</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="83" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1affc9fe108d08d01f5ef35a4cdb0f8d57" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::FormatChanged</definition>
        <argsstring>(const media_source &amp;producer, const media_destination &amp;consumer, int32 changeTag, const media_format &amp;format)=0</argsstring>
        <name>FormatChanged</name>
        <qualifiedname>BBufferConsumer::FormatChanged</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>producer</declname>
        </param>
        <param>
          <type>const media_destination &amp;</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>changeTag</declname>
        </param>
        <param>
          <type>const media_format &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="98" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1aefd06f10785ef7097ee970176d0ba486" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::GetLatencyFor</definition>
        <argsstring>(const media_destination &amp;forWhom, bigtime_t *_latency, media_node_id *_timesource)=0</argsstring>
        <name>GetLatencyFor</name>
        <qualifiedname>BBufferConsumer::GetLatencyFor</qualifiedname>
        <param>
          <type>const media_destination &amp;</type>
          <declname>forWhom</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref> *</type>
          <declname>_latency</declname>
        </param>
        <param>
          <type>media_node_id *</type>
          <declname>_timesource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="89" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a263b32c6bc00459a28c8141a40084040" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::GetNextInput</definition>
        <argsstring>(int32 *cookie, media_input *_input)=0</argsstring>
        <name>GetNextInput</name>
        <qualifiedname>BBufferConsumer::GetNextInput</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>cookie</declname>
        </param>
        <param>
          <type>media_input *</type>
          <declname>_input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="81" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1ad7fe68e7ae15efe39620571994f9e06a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::HandleMessage</definition>
        <argsstring>(int32 message, const void *data, size_t size)</argsstring>
        <name>HandleMessage</name>
        <qualifiedname>BBufferConsumer::HandleMessage</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>message</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="75" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a6d68ed5e200881ed2479a6678a9e9bb1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BBufferConsumer::ProducerDataStatus</definition>
        <argsstring>(const media_destination &amp;forWhom, int32 status, bigtime_t atPerformanceTime)=0</argsstring>
        <name>ProducerDataStatus</name>
        <qualifiedname>BBufferConsumer::ProducerDataStatus</qualifiedname>
        <param>
          <type>const media_destination &amp;</type>
          <declname>forWhom</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>status</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
          <declname>atPerformanceTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="85" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a60abb8d9010d659c18181f0d608b4ba4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BBufferConsumer::RequestAdditionalBuffer</definition>
        <argsstring>(const media_source &amp;source, BBuffer *previousBuffer, void *_reserved=NULL)</argsstring>
        <name>RequestAdditionalBuffer</name>
        <qualifiedname>BBufferConsumer::RequestAdditionalBuffer</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classBBuffer" kindref="compound">BBuffer</ref> *</type>
          <declname>previousBuffer</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>_reserved</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="57" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a2e101000076e99eaae8e7701a2fff653" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BBufferConsumer::RequestAdditionalBuffer</definition>
        <argsstring>(const media_source &amp;source, bigtime_t startTime, void *_reserved=NULL)</argsstring>
        <name>RequestAdditionalBuffer</name>
        <qualifiedname>BBufferConsumer::RequestAdditionalBuffer</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
          <declname>startTime</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>_reserved</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="61" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a13df0e89ba91f03f2bc749721484c9aa" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BBufferConsumer::RequestFormatChange</definition>
        <argsstring>(const media_source &amp;source, const media_destination &amp;destination, const media_format &amp;toFormat, void *userData, int32 *changeTag, void *_reserved=NULL)</argsstring>
        <name>RequestFormatChange</name>
        <qualifiedname>BBufferConsumer::RequestFormatChange</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const media_destination &amp;</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>const media_format &amp;</type>
          <declname>toFormat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userData</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>changeTag</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>_reserved</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="52" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a4e7a5e178a02cec7271698b3384c1cb2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::SeekTagRequested</definition>
        <argsstring>(const media_destination &amp;destination, bigtime_t targetTime, uint32 flags, media_seek_tag *_seekTag, bigtime_t *_taggedTime, uint32 *_flags)</argsstring>
        <name>SeekTagRequested</name>
        <qualifiedname>BBufferConsumer::SeekTagRequested</qualifiedname>
        <param>
          <type>const media_destination &amp;</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
          <declname>targetTime</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>media_seek_tag *</type>
          <declname>_seekTag</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref> *</type>
          <declname>_taggedTime</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> *</type>
          <declname>_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="103" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1ac30c0d46f7df352a5960d9b3690479e0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BBufferConsumer::SendLatencyChange</definition>
        <argsstring>(const media_source &amp;source, const media_destination &amp;destination, bigtime_t newLatency, uint32 flags=0)</argsstring>
        <name>SendLatencyChange</name>
        <qualifiedname>BBufferConsumer::SendLatencyChange</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const media_destination &amp;</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
          <declname>newLatency</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="70" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a6a2ecea8b4f209233c4e41a28de84e2b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BBufferConsumer::SetOutputBuffersFor</definition>
        <argsstring>(const media_source &amp;source, const media_destination &amp;destination, BBufferGroup *group, void *userData, int32 *changeTag, bool willReclaim=false, void *_reserved=NULL)</argsstring>
        <name>SetOutputBuffersFor</name>
        <qualifiedname>BBufferConsumer::SetOutputBuffersFor</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const media_destination &amp;</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>BBufferGroup *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userData</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>changeTag</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>willReclaim</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>_reserved</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="65" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a47978373c6cb973aa96b45f2fa0487ec" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BBufferConsumer::SetOutputEnabled</definition>
        <argsstring>(const media_source &amp;source, const media_destination &amp;destination, bool enabled, void *userData, int32 *changeTag, void *_reserved=NULL)</argsstring>
        <name>SetOutputEnabled</name>
        <qualifiedname>BBufferConsumer::SetOutputEnabled</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const media_destination &amp;</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userData</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>changeTag</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>_reserved</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="48" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1aae1e990c41fef39699fee9c5ac50ee9a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BBufferConsumer::SetVideoClippingFor</definition>
        <argsstring>(const media_source &amp;output, const media_destination &amp;destination, const int16 *shorts, int32 shortCount, const media_video_display_info &amp;display, void *userData, int32 *changeTag, void *_reserved=NULL)</argsstring>
        <name>SetVideoClippingFor</name>
        <qualifiedname>BBufferConsumer::SetVideoClippingFor</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const media_destination &amp;</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>const <ref refid="SupportDefs_8h_1acadaa1c2888dd031d14fed9b272333a7" kindref="member">int16</ref> *</type>
          <declname>shorts</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>shortCount</declname>
        </param>
        <param>
          <type>const media_video_display_info &amp;</type>
          <declname>display</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userData</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>changeTag</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>_reserved</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="42" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBBufferConsumer_1ad32d7e04ebee2e1902cf1f1c00c9dc45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>media_type</type>
        <definition>media_type BBufferConsumer::ConsumerType</definition>
        <argsstring>()</argsstring>
        <name>ConsumerType</name>
        <qualifiedname>BBufferConsumer::ConsumerType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="30" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBBufferConsumer_1ad7e5d92e08935bc982b2ae690180733f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>static status_t BBufferConsumer::RegionToClipData</definition>
        <argsstring>(const BRegion *region, int32 *format, int32 *size, void *data)</argsstring>
        <name>RegionToClipData</name>
        <qualifiedname>BBufferConsumer::RegionToClipData</qualifiedname>
        <param>
          <type>const <ref refid="classBRegion" kindref="compound">BRegion</ref> *</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="32" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classBBufferConsumer_1a9ff3bdf4e061c286b5c2672d676d31d0" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void BBufferConsumer::NotifyLateProducer</definition>
        <argsstring>(const media_source &amp;whatSource, bigtime_t howMuch, bigtime_t performanceTime)</argsstring>
        <name>NotifyLateProducer</name>
        <qualifiedname>BBufferConsumer::NotifyLateProducer</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>whatSource</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
          <declname>howMuch</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
          <declname>performanceTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="38" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBBufferConsumer_1adfc06017f7e1cc3610da17d82285c7c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BBufferConsumer::BBufferConsumer</definition>
        <argsstring>()</argsstring>
        <name>BBufferConsumer</name>
        <qualifiedname>BBufferConsumer::BBufferConsumer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a92721b3fb8c7ef49b4ac0dd6e5d4993b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BBufferConsumer::BBufferConsumer</definition>
        <argsstring>(const BBufferConsumer &amp;other)</argsstring>
        <name>BBufferConsumer</name>
        <qualifiedname>BBufferConsumer::BBufferConsumer</qualifiedname>
        <param>
          <type>const BBufferConsumer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1aec51ff9e67c0c17c3d910c9cdd6b69da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BBufferConsumer::_Reserved_BufferConsumer_0</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_0</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_0</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="130" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a2cc74379e8cd3aec93485c8b30f9615e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_1</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_1</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_1</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="132" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1afeffab00077c9c7cd24e2da78aeaa7d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_10</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_10</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_10</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="141" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1aa68622191bd4e01d4b8655c338d8b248" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_11</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_11</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_11</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="142" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a67b168d05375dc2104b9ea3559632c3e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_12</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_12</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_12</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="143" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a2d3d67197436703ff0501e9dfbfe0f36" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_13</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_13</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_13</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="144" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a3948376cbcebfb211eb6abebfe69d30e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_14</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_14</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_14</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="145" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a178ce51442e04ad74d9131d9268ae273" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_15</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_15</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_15</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="146" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a22a473147a3fe7378c74a5b29db99294" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_2</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_2</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_2</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="133" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a1272e7b462a07b92c4e1e69b435d8509" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_3</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_3</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_3</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="134" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a2f6d45d0e5bf6cb53237c777473858f6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_4</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_4</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_4</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="135" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a955aca1bb3f31738022bdda8fdd3d04c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_5</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_5</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_5</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="136" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1ab8a6086cc171fc448c45172ca97d90b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_6</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_6</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_6</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="137" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a356ebac314173452b4ce4ec42091bca5" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_7</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_7</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_7</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="138" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a90b76e8aee323e341525a913386bc4a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_8</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_8</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_8</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="139" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1ab5bfb247506a2486ee4cae33428f4147" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BBufferConsumer::_Reserved_BufferConsumer_9</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_BufferConsumer_9</name>
        <qualifiedname>BBufferConsumer::_Reserved_BufferConsumer_9</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="140" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a6864f08441636dab6adc4a48e8f9463f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BBufferConsumer &amp;</type>
        <definition>BBufferConsumer &amp; BBufferConsumer::operator=</definition>
        <argsstring>(const BBufferConsumer &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BBufferConsumer::operator=</qualifiedname>
        <param>
          <type>const BBufferConsumer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="117" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classBBufferConsumer_1aa1ec819fcc20979f12438fa5702104e3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>static status_t BBufferConsumer::RequestFormatChange</definition>
        <argsstring>(const media_source &amp;source, const media_destination &amp;destination, media_format *toFormat, int32 *changeTag)</argsstring>
        <name>RequestFormatChange</name>
        <qualifiedname>BBufferConsumer::RequestFormatChange</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const media_destination &amp;</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>media_format *</type>
          <declname>toFormat</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>changeTag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="124" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1ae6717da072f4b4e9a1170ef1283d8946" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>static status_t BBufferConsumer::SetOutputEnabled</definition>
        <argsstring>(const media_source &amp;source, bool enabled, int32 *changeTag)</argsstring>
        <name>SetOutputEnabled</name>
        <qualifiedname>BBufferConsumer::SetOutputEnabled</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>changeTag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="127" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBBufferConsumer_1a6b0225912cfaa5968cb3e60f83ea8c96" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>static status_t BBufferConsumer::SetVideoClippingFor</definition>
        <argsstring>(const media_source &amp;output, const int16 *shorts, int32 shortCount, const media_video_display_info &amp;display, int32 *changeTag)</argsstring>
        <name>SetVideoClippingFor</name>
        <qualifiedname>BBufferConsumer::SetVideoClippingFor</qualifiedname>
        <param>
          <type>const media_source &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="SupportDefs_8h_1acadaa1c2888dd031d14fed9b272333a7" kindref="member">int16</ref> *</type>
          <declname>shorts</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>shortCount</declname>
        </param>
        <param>
          <type>const media_video_display_info &amp;</type>
          <declname>display</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>changeTag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="120" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BBufferConsumer</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BMediaNode</label>
        <link refid="classBMediaNode"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BBufferConsumer</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BMediaNode</label>
        <link refid="classBMediaNode"/>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" line="25" column="1" bodyfile="/boot/home/src/haiku/headers/os/media/BufferConsumer.h" bodystart="25" bodyend="153"/>
    <listofallmembers>
      <member refid="classBBufferConsumer_1a1f09efe52f57b547e5e757d8aeab7838" prot="private" virt="non-virtual"><scope>BBufferConsumer</scope><name>_reserved</name></member>
      <member refid="classBBufferConsumer_1aec51ff9e67c0c17c3d910c9cdd6b69da" prot="private" virt="non-virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_0</name></member>
      <member refid="classBBufferConsumer_1a2cc74379e8cd3aec93485c8b30f9615e" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_1</name></member>
      <member refid="classBBufferConsumer_1afeffab00077c9c7cd24e2da78aeaa7d5" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_10</name></member>
      <member refid="classBBufferConsumer_1aa68622191bd4e01d4b8655c338d8b248" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_11</name></member>
      <member refid="classBBufferConsumer_1a67b168d05375dc2104b9ea3559632c3e" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_12</name></member>
      <member refid="classBBufferConsumer_1a2d3d67197436703ff0501e9dfbfe0f36" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_13</name></member>
      <member refid="classBBufferConsumer_1a3948376cbcebfb211eb6abebfe69d30e" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_14</name></member>
      <member refid="classBBufferConsumer_1a178ce51442e04ad74d9131d9268ae273" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_15</name></member>
      <member refid="classBBufferConsumer_1a22a473147a3fe7378c74a5b29db99294" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_2</name></member>
      <member refid="classBBufferConsumer_1a1272e7b462a07b92c4e1e69b435d8509" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_3</name></member>
      <member refid="classBBufferConsumer_1a2f6d45d0e5bf6cb53237c777473858f6" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_4</name></member>
      <member refid="classBBufferConsumer_1a955aca1bb3f31738022bdda8fdd3d04c" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_5</name></member>
      <member refid="classBBufferConsumer_1ab8a6086cc171fc448c45172ca97d90b5" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_6</name></member>
      <member refid="classBBufferConsumer_1a356ebac314173452b4ce4ec42091bca5" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_7</name></member>
      <member refid="classBBufferConsumer_1a90b76e8aee323e341525a913386bc4a1" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_8</name></member>
      <member refid="classBBufferConsumer_1ab5bfb247506a2486ee4cae33428f4147" prot="private" virt="virtual"><scope>BBufferConsumer</scope><name>_Reserved_BufferConsumer_9</name></member>
      <member refid="classBBufferConsumer_1a4502887d56124e19dc0fc5ab48d009a2" prot="protected" virt="pure-virtual"><scope>BBufferConsumer</scope><name>AcceptFormat</name></member>
      <member refid="classBMediaNode_1a1d7a95a44994e683a5fbe7d9773cec0b" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>Acquire</name></member>
      <member refid="classBMediaNode_1abb9e4ecd556ee1a952377ceab7a6040a" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>AddNodeKind</name></member>
      <member refid="classBMediaNode_1a684d078c99ea93b8fc0c01edfe909aba" prot="public" virt="pure-virtual"><scope>BBufferConsumer</scope><name>AddOn</name></member>
      <member refid="classBMediaNode_1ac27baba88cb72f97c3cd5da98ca9f8f5" prot="public" virt="virtual"><scope>BBufferConsumer</scope><name>AddTimer</name></member>
      <member refid="classBMediaNode_1a0164ded56d6f66562134c70a5b5c10faa53e239e0a01a0444e4994b5306bf6ec8" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_DECREASE_PRECISION</name></member>
      <member refid="classBMediaNode_1a0164ded56d6f66562134c70a5b5c10faae71ef69f78e67b687a029d9715c8ca75" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_DROP_DATA</name></member>
      <member refid="classBMediaNode_1a0164ded56d6f66562134c70a5b5c10faaf05092b5c72de037b9c4a869d3cb7ffc" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_INCREASE_LATENCY</name></member>
      <member refid="classBMediaNode_1a6ec1afb6ca969dabe912b55090f7507ba6287d8e20756ebb8175444a2559fd374" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_NODE_FAILED_PREROLL</name></member>
      <member refid="classBMediaNode_1a6ec1afb6ca969dabe912b55090f7507ba7e74043d2d0bf682d1f59e37df7588b2" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_NODE_FAILED_SEEK</name></member>
      <member refid="classBMediaNode_1a6ec1afb6ca969dabe912b55090f7507baf1ee428bb2e4989e8a89e82c2bb76e1d" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_NODE_FAILED_SET_RUN_MODE</name></member>
      <member refid="classBMediaNode_1a6ec1afb6ca969dabe912b55090f7507baab261b086b38099eb293c16ecc5d15dc" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_NODE_FAILED_SET_TIME_SOURCE_FOR</name></member>
      <member refid="classBMediaNode_1a6ec1afb6ca969dabe912b55090f7507ba6987a7238276ba621f408c14a3d961df" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_NODE_FAILED_START</name></member>
      <member refid="classBMediaNode_1a6ec1afb6ca969dabe912b55090f7507babc274e7c8d22f8f9909670a7517806f1" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_NODE_FAILED_STOP</name></member>
      <member refid="classBMediaNode_1a6ec1afb6ca969dabe912b55090f7507baf57c17af5c8074cbb26c14847e4728eb" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_NODE_FAILED_TIME_WARP</name></member>
      <member refid="classBMediaNode_1a6ec1afb6ca969dabe912b55090f7507ba024edc817ac86524f4c06bc993ef6f12" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_NODE_IN_DISTRESS</name></member>
      <member refid="classBMediaNode_1a0164ded56d6f66562134c70a5b5c10faae1be9ad405d3e7902cf21f0c8c9b8ff6" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_OFFLINE</name></member>
      <member refid="classBMediaNode_1a0164ded56d6f66562134c70a5b5c10faa87f18bf585fab9829b50d9ce28bcdf50" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>B_RECORDING</name></member>
      <member refid="classBBufferConsumer_1a0dd5e7f87e879d705e4708a5efb3974e" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>BBufferConsumer</name></member>
      <member refid="classBBufferConsumer_1adfc06017f7e1cc3610da17d82285c7c4" prot="private" virt="non-virtual"><scope>BBufferConsumer</scope><name>BBufferConsumer</name></member>
      <member refid="classBBufferConsumer_1a92721b3fb8c7ef49b4ac0dd6e5d4993b" prot="private" virt="non-virtual"><scope>BBufferConsumer</scope><name>BBufferConsumer</name></member>
      <member refid="classBMediaNode_1aa97658b152884edd258e49b113111cff" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>BMediaNode</name></member>
      <member refid="classBBufferConsumer_1a11448de584ee10497655e0e003a21c17" prot="protected" virt="pure-virtual"><scope>BBufferConsumer</scope><name>BufferReceived</name></member>
      <member refid="classBBufferConsumer_1acd8dc4c5ed723262e8e15ddde548b92a" prot="protected" virt="pure-virtual"><scope>BBufferConsumer</scope><name>Connected</name></member>
      <member refid="classBBufferConsumer_1ad32d7e04ebee2e1902cf1f1c00c9dc45" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>ConsumerType</name></member>
      <member refid="classBMediaNode_1a07755c01a6f6b51c913b7abf6f1f7e2d" prot="public" virt="virtual"><scope>BBufferConsumer</scope><name>ControlPort</name></member>
      <member refid="classBMediaNode_1add44db1eebd51d2c4e8ce50bc13d78d2" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>DeleteHook</name></member>
      <member refid="classBBufferConsumer_1a43e5aa7ee2b1dcdde0ed1dc6f610ed7a" prot="protected" virt="pure-virtual"><scope>BBufferConsumer</scope><name>Disconnected</name></member>
      <member refid="classBBufferConsumer_1a22c0e1bf88164334bb50daedd38293ae" prot="protected" virt="pure-virtual"><scope>BBufferConsumer</scope><name>DisposeInputCookie</name></member>
      <member refid="classBBufferConsumer_1aa1c8dec85493657e3c2aac0b4d94f18d" prot="private" virt="non-virtual"><scope>BBufferConsumer</scope><name>fBufferCache</name></member>
      <member refid="classBBufferConsumer_1ae4e31c2c91416509121b8a263b3fd5eb" prot="private" virt="non-virtual"><scope>BBufferConsumer</scope><name>fConsumerType</name></member>
      <member refid="classBBufferConsumer_1a838c20d932bd2e661901eaa773610f8f" prot="private" virt="non-virtual"><scope>BBufferConsumer</scope><name>fDeleteBufferGroup</name></member>
      <member refid="classBBufferConsumer_1affc9fe108d08d01f5ef35a4cdb0f8d57" prot="protected" virt="pure-virtual"><scope>BBufferConsumer</scope><name>FormatChanged</name></member>
      <member refid="classBBufferConsumer_1aefd06f10785ef7097ee970176d0ba486" prot="protected" virt="pure-virtual"><scope>BBufferConsumer</scope><name>GetLatencyFor</name></member>
      <member refid="classBBufferConsumer_1a263b32c6bc00459a28c8141a40084040" prot="protected" virt="pure-virtual"><scope>BBufferConsumer</scope><name>GetNextInput</name></member>
      <member refid="classBMediaNode_1a5e22528f968029a1e6ac57487970e81c" prot="public" virt="virtual"><scope>BBufferConsumer</scope><name>GetNodeAttributes</name></member>
      <member refid="classBMediaNode_1ae59174fa9687b3e9a950797311d5de07" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>HandleBadMessage</name></member>
      <member refid="classBBufferConsumer_1ad7fe68e7ae15efe39620571994f9e06a" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>HandleMessage</name></member>
      <member refid="classBMediaNode_1aef05bbf69f65cdfcb30aa26951df3195" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>ID</name></member>
      <member refid="classBMediaNode_1a90420755935f03aba3814a4055ffcff4" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>Kinds</name></member>
      <member refid="classBMediaNode_1aea8c326b2652bb51f23989c6827f536f" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>Name</name></member>
      <member refid="classBMediaNode_1a34e6e2796841b1f72098bb0148abe3d1" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>NewChangeTag</name></member>
      <member refid="classBMediaNode_1a9dea97145e5736f26aea5155adc5b067" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>Node</name></member>
      <member refid="classBMediaNode_1a6ec1afb6ca969dabe912b55090f7507b" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>node_error</name></member>
      <member refid="classBMediaNode_1a108a3f8ca79ee17cc1bbfef6ed95b965" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>NodeRegistered</name></member>
      <member refid="classBMediaNode_1a4c7e3ff79948e54c18d1561c645f0685" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>NodeStopped</name></member>
      <member refid="classBBufferConsumer_1a9ff3bdf4e061c286b5c2672d676d31d0" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>NotifyLateProducer</name></member>
      <member refid="classBMediaNode_1ab7de1837c2bd8acd46f595010409f26d" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>operator delete</name></member>
      <member refid="classBMediaNode_1acceb2b1d83f73056a7db7bca38b23566" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>operator delete</name></member>
      <member refid="classBMediaNode_1a6ff8c34b27c2a84024e5c1c39bb6f6f5" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>operator new</name></member>
      <member refid="classBMediaNode_1a41f8f6423db4cfabb855499e1ab2fabf" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>operator new</name></member>
      <member refid="classBBufferConsumer_1a6864f08441636dab6adc4a48e8f9463f" prot="private" virt="non-virtual"><scope>BBufferConsumer</scope><name>operator=</name></member>
      <member refid="classBMediaNode_1a497a250d073d41ce75201db32a8e0125" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>Preroll</name></member>
      <member refid="classBBufferConsumer_1a6d68ed5e200881ed2479a6678a9e9bb1" prot="protected" virt="pure-virtual"><scope>BBufferConsumer</scope><name>ProducerDataStatus</name></member>
      <member refid="classBBufferConsumer_1ad7e5d92e08935bc982b2ae690180733f" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>RegionToClipData</name></member>
      <member refid="classBMediaNode_1aff22551282ffa2eeb8b6119c4401e7b3" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>Release</name></member>
      <member refid="classBMediaNode_1ac44700b130d61c4645794e122ba848cc" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>ReportError</name></member>
      <member refid="classBBufferConsumer_1a60abb8d9010d659c18181f0d608b4ba4" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>RequestAdditionalBuffer</name></member>
      <member refid="classBBufferConsumer_1a2e101000076e99eaae8e7701a2fff653" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>RequestAdditionalBuffer</name></member>
      <member refid="classBMediaNode_1a3c141af921190e33070c47fac0ea53dd" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>RequestCompleted</name></member>
      <member refid="classBBufferConsumer_1a13df0e89ba91f03f2bc749721484c9aa" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>RequestFormatChange</name></member>
      <member refid="classBBufferConsumer_1aa1ec819fcc20979f12438fa5702104e3" prot="private" virt="non-virtual"><scope>BBufferConsumer</scope><name>RequestFormatChange</name></member>
      <member refid="classBMediaNode_1a0164ded56d6f66562134c70a5b5c10fa" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>run_mode</name></member>
      <member refid="classBMediaNode_1aa7a30dd62f4e67e68e847c60a9b40833" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>RunMode</name></member>
      <member refid="classBMediaNode_1a339fea8f2213e134385762963d5a8698" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>Seek</name></member>
      <member refid="classBBufferConsumer_1a4e7a5e178a02cec7271698b3384c1cb2" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>SeekTagRequested</name></member>
      <member refid="classBBufferConsumer_1ac30c0d46f7df352a5960d9b3690479e0" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>SendLatencyChange</name></member>
      <member refid="classBBufferConsumer_1a6a2ecea8b4f209233c4e41a28de84e2b" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>SetOutputBuffersFor</name></member>
      <member refid="classBBufferConsumer_1a47978373c6cb973aa96b45f2fa0487ec" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>SetOutputEnabled</name></member>
      <member refid="classBBufferConsumer_1ae6717da072f4b4e9a1170ef1283d8946" prot="private" virt="non-virtual"><scope>BBufferConsumer</scope><name>SetOutputEnabled</name></member>
      <member refid="classBMediaNode_1ab7c3d78f7c02aed7f95ed25cfe88e8e2" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>SetRunMode</name></member>
      <member refid="classBMediaNode_1a3f3ff4c9e9b440348a2d8c01b9afac34" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>SetTimeSource</name></member>
      <member refid="classBBufferConsumer_1aae1e990c41fef39699fee9c5ac50ee9a" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>SetVideoClippingFor</name></member>
      <member refid="classBBufferConsumer_1a6b0225912cfaa5968cb3e60f83ea8c96" prot="private" virt="non-virtual"><scope>BBufferConsumer</scope><name>SetVideoClippingFor</name></member>
      <member refid="classBMediaNode_1a9709f261325b9471c66a99d468fbbddf" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>Start</name></member>
      <member refid="classBMediaNode_1a2414120e97f847b0a5ff464cbcc2f2b8" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>Stop</name></member>
      <member refid="classBMediaNode_1a8cd74d3554a10f9d290241bc8196d782" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>TimerExpired</name></member>
      <member refid="classBMediaNode_1aad220ea22e8989a0bf4965b35ebba9f7" prot="public" virt="non-virtual"><scope>BBufferConsumer</scope><name>TimeSource</name></member>
      <member refid="classBMediaNode_1a902334b78bc93a4d000411d6842f500d" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>TimeWarp</name></member>
      <member refid="classBMediaNode_1a1ce1a30cc7cc78a79ffde101306f3273" prot="protected" virt="non-virtual"><scope>BBufferConsumer</scope><name>WaitForMessage</name></member>
      <member refid="classBBufferConsumer_1a559526a997628dbb72812b19599a3ef6" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>~BBufferConsumer</name></member>
      <member refid="classBMediaNode_1a27b10b3b1186318f3be8f344b89f94a8" prot="protected" virt="virtual"><scope>BBufferConsumer</scope><name>~BMediaNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
