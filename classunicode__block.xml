<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classunicode__block" kind="class" language="C++" prot="public">
    <compoundname>unicode_block</compoundname>
      <sectiondef kind="user-defined">
      <header>Operators</header>
      <memberdef kind="function" id="classunicode__block_1ad0d8df788d12f8fa31ced85dcd958079" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classunicode__block" kindref="compound">unicode_block</ref></type>
        <definition>unicode_block unicode_block::operator&amp;</definition>
        <argsstring>(const unicode_block &amp;block) const</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>unicode_block::operator&amp;</qualifiedname>
        <param>
          <type>const <ref refid="classunicode__block" kindref="compound">unicode_block</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
<para>Creates and returns a new <computeroutput><ref refid="classunicode__block" kindref="compound">unicode_block</ref></computeroutput> object that is the intersection of <emphasis>block</emphasis> and the <computeroutput><ref refid="classunicode__block" kindref="compound">unicode_block</ref></computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>The Unicode block to intersect with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The intersection of <emphasis>block</emphasis> and the <computeroutput><ref refid="classunicode__block" kindref="compound">unicode_block</ref></computeroutput> object.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Font.h" line="112" column="20" bodyfile="/boot/home/src/haiku/headers/os/interface/Font.h" bodystart="363" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classunicode__block_1aabab32d560e1459c6334ae3170395528" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classunicode__block" kindref="compound">unicode_block</ref></type>
        <definition>unicode_block unicode_block::operator|</definition>
        <argsstring>(const unicode_block &amp;block) const</argsstring>
        <name>operator|</name>
        <qualifiedname>unicode_block::operator|</qualifiedname>
        <param>
          <type>const <ref refid="classunicode__block" kindref="compound">unicode_block</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
<para>Creates and returns a new <computeroutput><ref refid="classunicode__block" kindref="compound">unicode_block</ref></computeroutput> object that is the union of <emphasis>block</emphasis> and the <computeroutput><ref refid="classunicode__block" kindref="compound">unicode_block</ref></computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>The Unicode block to form a union with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The union of <emphasis>block</emphasis> and the <computeroutput><ref refid="classunicode__block" kindref="compound">unicode_block</ref></computeroutput> object.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Font.h" line="113" column="20" bodyfile="/boot/home/src/haiku/headers/os/interface/Font.h" bodystart="374" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classunicode__block_1a28f6a0ebc61ae63a20cf48e37f829467" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classunicode__block" kindref="compound">unicode_block</ref> &amp;</type>
        <definition>unicode_block &amp; unicode_block::operator=</definition>
        <argsstring>(const unicode_block &amp;block)</argsstring>
        <name>operator=</name>
        <qualifiedname>unicode_block::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classunicode__block" kindref="compound">unicode_block</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
<para>Copies <emphasis>block</emphasis> data into the left-hand side object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>The unicode block to copy from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy of <emphasis>block</emphasis>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Font.h" line="114" column="20" bodyfile="/boot/home/src/haiku/headers/os/interface/Font.h" bodystart="385" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classunicode__block_1aad1dde41862d7971c713d0fc08bd7f30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool unicode_block::operator==</definition>
        <argsstring>(const unicode_block &amp;block) const</argsstring>
        <name>operator==</name>
        <qualifiedname>unicode_block::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classunicode__block" kindref="compound">unicode_block</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
<para>Determines if the block object are exactly equal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>The unicode block to compare against.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the block object are exactly equal, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Font.h" line="115" column="11" bodyfile="/boot/home/src/haiku/headers/os/interface/Font.h" bodystart="395" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classunicode__block_1afd5b5b4264e233118b671d882282ecd7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool unicode_block::operator!=</definition>
        <argsstring>(const unicode_block &amp;block) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>unicode_block::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classunicode__block" kindref="compound">unicode_block</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
<para>Determines if the block object are not equal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>The unicode block to compare against.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the block object are NOT equal, <computeroutput>false</computeroutput> if the block objects are exactly equal.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Font.h" line="116" column="11" bodyfile="/boot/home/src/haiku/headers/os/interface/Font.h" bodystart="402" bodyend="405"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classunicode__block_1a50354a2360a23b6d5e6ee570a5e095e5" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref></type>
        <definition>uint64 unicode_block::fData[2]</definition>
        <argsstring>[2]</argsstring>
        <name>fData</name>
        <qualifiedname>unicode_block::fData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Font.h" line="119" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/Font.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classunicode__block_1ab71df865eed4a1744130f9863fa31cbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>unicode_block::unicode_block</definition>
        <argsstring>()</argsstring>
        <name>unicode_block</name>
        <qualifiedname>unicode_block::unicode_block</qualifiedname>
        <briefdescription>
<para>Construct a <computeroutput><ref refid="classunicode__block" kindref="compound">unicode_block</ref></computeroutput> and set block data to 0. </para>
        </briefdescription>
        <detaileddescription>
<para>You must initialize the block data before before using this object.</para>
<para><simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Font.h" line="108" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/Font.h" bodystart="341" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classunicode__block_1a97bb20127c06e6f815e46a08af7f0d6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>unicode_block::unicode_block</definition>
        <argsstring>(uint64 block2, uint64 block1)</argsstring>
        <name>unicode_block</name>
        <qualifiedname>unicode_block::unicode_block</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref></type>
          <declname>block2</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref></type>
          <declname>block1</declname>
        </param>
        <briefdescription>
<para>Construct a <computeroutput><ref refid="classunicode__block" kindref="compound">unicode_block</ref></computeroutput> object and initialize it with the supplied Unicode block range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block2</parametername>
</parameternamelist>
<parameterdescription>
<para>End block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block1</parametername>
</parameternamelist>
<parameterdescription>
<para>Begin block.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Font.h" line="109" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/Font.h" bodystart="347" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classunicode__block_1a7df05e1625e331254b2b7fbe368b0b76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool unicode_block::Includes</definition>
        <argsstring>(const unicode_block &amp;block) const</argsstring>
        <name>Includes</name>
        <qualifiedname>unicode_block::Includes</qualifiedname>
        <param>
          <type>const <ref refid="classunicode__block" kindref="compound">unicode_block</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
<para>Determines if <emphasis>block</emphasis> is a subset of the <computeroutput><ref refid="classunicode__block" kindref="compound">unicode_block</ref></computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>The Unicode block to check.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not <emphasis>block</emphasis> is a subset of the <computeroutput><ref refid="classunicode__block" kindref="compound">unicode_block</ref></computeroutput> object. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>block</emphasis> is a subset of the current <computeroutput><ref refid="classunicode__block" kindref="compound">unicode_block</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>block</emphasis> is NOT a subset of the current <computeroutput><ref refid="classunicode__block" kindref="compound">unicode_block</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Font.h" line="111" column="11" bodyfile="/boot/home/src/haiku/headers/os/interface/Font.h" bodystart="355" bodyend="359"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes the blocks of Unicode characters supported by a font. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBFont_1a8151aa73d7f435cd9c4115a8b92f62cc" kindref="member">BFont::Blocks()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/interface/Font.h" line="106" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/Font.h" bodystart="106" bodyend="120"/>
    <listofallmembers>
      <member refid="classunicode__block_1a50354a2360a23b6d5e6ee570a5e095e5" prot="private" virt="non-virtual"><scope>unicode_block</scope><name>fData</name></member>
      <member refid="classunicode__block_1a7df05e1625e331254b2b7fbe368b0b76" prot="public" virt="non-virtual"><scope>unicode_block</scope><name>Includes</name></member>
      <member refid="classunicode__block_1afd5b5b4264e233118b671d882282ecd7" prot="public" virt="non-virtual"><scope>unicode_block</scope><name>operator!=</name></member>
      <member refid="classunicode__block_1ad0d8df788d12f8fa31ced85dcd958079" prot="public" virt="non-virtual"><scope>unicode_block</scope><name>operator&amp;</name></member>
      <member refid="classunicode__block_1a28f6a0ebc61ae63a20cf48e37f829467" prot="public" virt="non-virtual"><scope>unicode_block</scope><name>operator=</name></member>
      <member refid="classunicode__block_1aad1dde41862d7971c713d0fc08bd7f30" prot="public" virt="non-virtual"><scope>unicode_block</scope><name>operator==</name></member>
      <member refid="classunicode__block_1aabab32d560e1459c6334ae3170395528" prot="public" virt="non-virtual"><scope>unicode_block</scope><name>operator|</name></member>
      <member refid="classunicode__block_1ab71df865eed4a1744130f9863fa31cbd" prot="public" virt="non-virtual"><scope>unicode_block</scope><name>unicode_block</name></member>
      <member refid="classunicode__block_1a97bb20127c06e6f815e46a08af7f0d6f" prot="public" virt="non-virtual"><scope>unicode_block</scope><name>unicode_block</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
