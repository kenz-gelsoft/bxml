<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBNetworkRoster" kind="class" language="C++" prot="public">
    <compoundname>BNetworkRoster</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classBNetworkRoster_1a7784d7c46cc7d58b5d8baacea70e4c1f" prot="private" static="yes" mutable="no">
        <type>BNetworkRoster</type>
        <definition>BNetworkRoster BNetworkRoster::sDefault</definition>
        <argsstring></argsstring>
        <name>sDefault</name>
        <qualifiedname>BNetworkRoster::sDefault</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="49" column="21" bodyfile="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBNetworkRoster_1ad57086b0701e4c15b25fb4f4e768c55e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BNetworkRoster &amp;</type>
        <definition>static BNetworkRoster &amp; BNetworkRoster::Default</definition>
        <argsstring>()</argsstring>
        <name>Default</name>
        <qualifiedname>BNetworkRoster::Default</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="20" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBNetworkRoster_1ad529c189843b266ea372a4f3b924df9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkRoster::AddInterface</definition>
        <argsstring>(const BNetworkInterface &amp;interface)</argsstring>
        <name>AddInterface</name>
        <qualifiedname>BNetworkRoster::AddInterface</qualifiedname>
        <param>
          <type>const BNetworkInterface &amp;</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="27" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkRoster_1a1c15c9a8037c3c08455629e61c872551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkRoster::AddInterface</definition>
        <argsstring>(const char *name)</argsstring>
        <name>AddInterface</name>
        <qualifiedname>BNetworkRoster::AddInterface</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="26" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkRoster_1a16a381f2657a540f32bfcdf83c5879bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkRoster::AddPersistentNetwork</definition>
        <argsstring>(const wireless_network &amp;network)</argsstring>
        <name>AddPersistentNetwork</name>
        <qualifiedname>BNetworkRoster::AddPersistentNetwork</qualifiedname>
        <param>
          <type>const wireless_network &amp;</type>
          <declname>network</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="36" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkRoster_1a771884895ae09663a2002ae620c6509f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t BNetworkRoster::CountInterfaces</definition>
        <argsstring>() const</argsstring>
        <name>CountInterfaces</name>
        <qualifiedname>BNetworkRoster::CountInterfaces</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="22" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkRoster_1aeeb24a013e3d0630e30a353e157cdfab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BNetworkRoster::CountPersistentNetworks</definition>
        <argsstring>() const</argsstring>
        <name>CountPersistentNetworks</name>
        <qualifiedname>BNetworkRoster::CountPersistentNetworks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="33" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkRoster_1acb73dbc46ce2f621cbd89823ba71480c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkRoster::GetNextInterface</definition>
        <argsstring>(uint32 *cookie, BNetworkInterface &amp;interface) const</argsstring>
        <name>GetNextInterface</name>
        <qualifiedname>BNetworkRoster::GetNextInterface</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> *</type>
          <declname>cookie</declname>
        </param>
        <param>
          <type>BNetworkInterface &amp;</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="23" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkRoster_1ae09e8c3b4b186a3cdb0f099b2a95447b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkRoster::GetNextPersistentNetwork</definition>
        <argsstring>(uint32 *cookie, wireless_network &amp;network) const</argsstring>
        <name>GetNextPersistentNetwork</name>
        <qualifiedname>BNetworkRoster::GetNextPersistentNetwork</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> *</type>
          <declname>cookie</declname>
        </param>
        <param>
          <type>wireless_network &amp;</type>
          <declname>network</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="34" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkRoster_1a9e4e22cfc6c269752b5d093238c624a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkRoster::RemoveInterface</definition>
        <argsstring>(const BNetworkInterface &amp;interface)</argsstring>
        <name>RemoveInterface</name>
        <qualifiedname>BNetworkRoster::RemoveInterface</qualifiedname>
        <param>
          <type>const BNetworkInterface &amp;</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="30" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkRoster_1aca6368b02813f3a05ca45dece5c21154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkRoster::RemoveInterface</definition>
        <argsstring>(const char *name)</argsstring>
        <name>RemoveInterface</name>
        <qualifiedname>BNetworkRoster::RemoveInterface</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="29" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkRoster_1af43e7fb8822579c76823f361d11a3b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkRoster::RemovePersistentNetwork</definition>
        <argsstring>(const char *name)</argsstring>
        <name>RemovePersistentNetwork</name>
        <qualifiedname>BNetworkRoster::RemovePersistentNetwork</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="38" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkRoster_1ae27e0e17ecb94f446096087060c4109c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkRoster::StartWatching</definition>
        <argsstring>(const BMessenger &amp;target, uint32 eventMask)</argsstring>
        <name>StartWatching</name>
        <qualifiedname>BNetworkRoster::StartWatching</qualifiedname>
        <param>
          <type>const <ref refid="classBMessenger" kindref="compound">BMessenger</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>eventMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="40" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkRoster_1a3ad8607dda2843161e39a7a2c33db0ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BNetworkRoster::StopWatching</definition>
        <argsstring>(const BMessenger &amp;target)</argsstring>
        <name>StopWatching</name>
        <qualifiedname>BNetworkRoster::StopWatching</qualifiedname>
        <param>
          <type>const <ref refid="classBMessenger" kindref="compound">BMessenger</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="42" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBNetworkRoster_1a2d93a7fe558a3ded2f3692147594db1a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetworkRoster::BNetworkRoster</definition>
        <argsstring>()</argsstring>
        <name>BNetworkRoster</name>
        <qualifiedname>BNetworkRoster::BNetworkRoster</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkRoster_1aaf30df7a6820cb6b95758aa339b511fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetworkRoster::~BNetworkRoster</definition>
        <argsstring>()</argsstring>
        <name>~BNetworkRoster</name>
        <qualifiedname>BNetworkRoster::~BNetworkRoster</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="46" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" line="18" column="1" bodyfile="/boot/home/src/haiku/headers/os/net/NetworkRoster.h" bodystart="18" bodyend="50"/>
    <listofallmembers>
      <member refid="classBNetworkRoster_1a1c15c9a8037c3c08455629e61c872551" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>AddInterface</name></member>
      <member refid="classBNetworkRoster_1ad529c189843b266ea372a4f3b924df9f" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>AddInterface</name></member>
      <member refid="classBNetworkRoster_1a16a381f2657a540f32bfcdf83c5879bd" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>AddPersistentNetwork</name></member>
      <member refid="classBNetworkRoster_1a2d93a7fe558a3ded2f3692147594db1a" prot="private" virt="non-virtual"><scope>BNetworkRoster</scope><name>BNetworkRoster</name></member>
      <member refid="classBNetworkRoster_1a771884895ae09663a2002ae620c6509f" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>CountInterfaces</name></member>
      <member refid="classBNetworkRoster_1aeeb24a013e3d0630e30a353e157cdfab" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>CountPersistentNetworks</name></member>
      <member refid="classBNetworkRoster_1ad57086b0701e4c15b25fb4f4e768c55e" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>Default</name></member>
      <member refid="classBNetworkRoster_1acb73dbc46ce2f621cbd89823ba71480c" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>GetNextInterface</name></member>
      <member refid="classBNetworkRoster_1ae09e8c3b4b186a3cdb0f099b2a95447b" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>GetNextPersistentNetwork</name></member>
      <member refid="classBNetworkRoster_1aca6368b02813f3a05ca45dece5c21154" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>RemoveInterface</name></member>
      <member refid="classBNetworkRoster_1a9e4e22cfc6c269752b5d093238c624a6" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>RemoveInterface</name></member>
      <member refid="classBNetworkRoster_1af43e7fb8822579c76823f361d11a3b60" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>RemovePersistentNetwork</name></member>
      <member refid="classBNetworkRoster_1a7784d7c46cc7d58b5d8baacea70e4c1f" prot="private" virt="non-virtual"><scope>BNetworkRoster</scope><name>sDefault</name></member>
      <member refid="classBNetworkRoster_1ae27e0e17ecb94f446096087060c4109c" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>StartWatching</name></member>
      <member refid="classBNetworkRoster_1a3ad8607dda2843161e39a7a2c33db0ba" prot="public" virt="non-virtual"><scope>BNetworkRoster</scope><name>StopWatching</name></member>
      <member refid="classBNetworkRoster_1aaf30df7a6820cb6b95758aa339b511fb" prot="private" virt="non-virtual"><scope>BNetworkRoster</scope><name>~BNetworkRoster</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
