<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBSocket" kind="class" language="C++" prot="public">
    <compoundname>BSocket</compoundname>
    <basecompoundref refid="classBAbstractSocket" prot="public" virt="non-virtual">BAbstractSocket</basecompoundref>
    <derivedcompoundref refid="classBSecureSocket" prot="public" virt="non-virtual">BSecureSocket</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBSocket_1a2718874f83284dc0bf891c20efe1e8dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSocket::BSocket</definition>
        <argsstring>()</argsstring>
        <name>BSocket</name>
        <qualifiedname>BSocket::BSocket</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Socket.h" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSocket_1a710ce9d9e7480a84c4d81b2a4d4bdad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSocket::BSocket</definition>
        <argsstring>(const BNetworkAddress &amp;peer, bigtime_t timeout=B_INFINITE_TIMEOUT)</argsstring>
        <name>BSocket</name>
        <qualifiedname>BSocket::BSocket</qualifiedname>
        <param>
          <type>const BNetworkAddress &amp;</type>
          <declname>peer</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
          <declname>timeout</declname>
          <defval>B_INFINITE_TIMEOUT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Socket.h" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSocket_1ad5c5728ffbb1b9cfc95ee7543cd58728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSocket::BSocket</definition>
        <argsstring>(const BSocket &amp;other)</argsstring>
        <name>BSocket</name>
        <qualifiedname>BSocket::BSocket</qualifiedname>
        <param>
          <type>const BSocket &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Socket.h" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSocket_1a74c27f7f544279a850c4940dc2d4ad73" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BSocket::~BSocket</definition>
        <argsstring>()</argsstring>
        <name>~BSocket</name>
        <qualifiedname>BSocket::~BSocket</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Socket.h" line="18" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBSocket_1aefe826eb38be9e4cc55a4f8783a09edc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BSocket::Accept</definition>
        <argsstring>(BAbstractSocket *&amp;_socket)</argsstring>
        <name>Accept</name>
        <qualifiedname>BSocket::Accept</qualifiedname>
        <param>
          <type><ref refid="classBAbstractSocket" kindref="compound">BAbstractSocket</ref> *&amp;</type>
          <declname>_socket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Socket.h" line="23" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBSocket_1a7d78c5576b7d63d16b950e02f1789384" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BSocket::Bind</definition>
        <argsstring>(const BNetworkAddress &amp;peer, bool reuseAddr=true)</argsstring>
        <name>Bind</name>
        <qualifiedname>BSocket::Bind</qualifiedname>
        <param>
          <type>const BNetworkAddress &amp;</type>
          <declname>peer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reuseAddr</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Socket.h" line="20" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBSocket_1a30c898d31a2f5b5250504d8f7411bf15" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BSocket::Connect</definition>
        <argsstring>(const BNetworkAddress &amp;peer, bigtime_t timeout=B_INFINITE_TIMEOUT)</argsstring>
        <name>Connect</name>
        <qualifiedname>BSocket::Connect</qualifiedname>
        <param>
          <type>const BNetworkAddress &amp;</type>
          <declname>peer</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
          <declname>timeout</declname>
          <defval>B_INFINITE_TIMEOUT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Socket.h" line="25" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBSocket_1aa01b312dcfe99fe68cae08ef72fc9961" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>ssize_t</type>
        <definition>virtual ssize_t BSocket::Read</definition>
        <argsstring>(void *buffer, size_t size)</argsstring>
        <name>Read</name>
        <qualifiedname>BSocket::Read</qualifiedname>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Socket.h" line="30" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBSocket_1aaa294e900cadc857097d1e49539d7e07" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>ssize_t</type>
        <definition>virtual ssize_t BSocket::Write</definition>
        <argsstring>(const void *buffer, size_t size)</argsstring>
        <name>Write</name>
        <qualifiedname>BSocket::Write</qualifiedname>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Socket.h" line="31" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBSocket_1a3df113ab0ddb67d32dd189e83f871e9d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSocket::_SetTo</definition>
        <argsstring>(int fd, const BNetworkAddress &amp;local, const BNetworkAddress &amp;peer)</argsstring>
        <name>_SetTo</name>
        <qualifiedname>BSocket::_SetTo</qualifiedname>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const BNetworkAddress &amp;</type>
          <declname>local</declname>
        </param>
        <param>
          <type>const BNetworkAddress &amp;</type>
          <declname>peer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Socket.h" line="35" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BAbstractSocket</label>
        <link refid="classBAbstractSocket"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BDataIO</label>
        <link refid="classBDataIO"/>
      </node>
      <node id="1">
        <label>BSocket</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BAbstractSocket</label>
        <link refid="classBAbstractSocket"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BDataIO</label>
        <link refid="classBDataIO"/>
      </node>
      <node id="1">
        <label>BSocket</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/net/Socket.h" line="12" column="1" bodyfile="/boot/home/src/haiku/headers/os/net/Socket.h" bodystart="12" bodyend="37"/>
    <listofallmembers>
      <member refid="classBSocket_1a3df113ab0ddb67d32dd189e83f871e9d" prot="protected" virt="non-virtual"><scope>BSocket</scope><name>_SetTo</name></member>
      <member refid="classBSocket_1aefe826eb38be9e4cc55a4f8783a09edc" prot="public" virt="virtual"><scope>BSocket</scope><name>Accept</name></member>
      <member refid="classBAbstractSocket_1a338ddf351780ed4fef160e78b937ff01" prot="protected" virt="non-virtual"><scope>BSocket</scope><name>AcceptNext</name></member>
      <member refid="classBAbstractSocket_1aa0eff1ec277cbae66613975c3bb67da7" prot="public" virt="non-virtual"><scope>BSocket</scope><name>BAbstractSocket</name></member>
      <member refid="classBAbstractSocket_1adad46cb8129dad3066d464e34320211f" prot="public" virt="non-virtual"><scope>BSocket</scope><name>BAbstractSocket</name></member>
      <member refid="classBDataIO_1a67891b7afe78d6a77845dd0352218801" prot="public" virt="non-virtual"><scope>BSocket</scope><name>BDataIO</name></member>
      <member refid="classBSocket_1a7d78c5576b7d63d16b950e02f1789384" prot="public" virt="virtual"><scope>BSocket</scope><name>Bind</name></member>
      <member refid="classBAbstractSocket_1a1b4ea12b64505e5dbbc33628f8aa8ca1" prot="protected" virt="non-virtual" ambiguityscope="BAbstractSocket::"><scope>BSocket</scope><name>Bind</name></member>
      <member refid="classBSocket_1a2718874f83284dc0bf891c20efe1e8dd" prot="public" virt="non-virtual"><scope>BSocket</scope><name>BSocket</name></member>
      <member refid="classBSocket_1a710ce9d9e7480a84c4d81b2a4d4bdad5" prot="public" virt="non-virtual"><scope>BSocket</scope><name>BSocket</name></member>
      <member refid="classBSocket_1ad5c5728ffbb1b9cfc95ee7543cd58728" prot="public" virt="non-virtual"><scope>BSocket</scope><name>BSocket</name></member>
      <member refid="classBSocket_1a30c898d31a2f5b5250504d8f7411bf15" prot="public" virt="virtual"><scope>BSocket</scope><name>Connect</name></member>
      <member refid="classBAbstractSocket_1a20f10d2f72c427132973bf813ec18092" prot="protected" virt="non-virtual" ambiguityscope="BAbstractSocket::"><scope>BSocket</scope><name>Connect</name></member>
      <member refid="classBAbstractSocket_1aa10aba8e260b4051c1ed381aee6f0fb9" prot="public" virt="virtual"><scope>BSocket</scope><name>Disconnect</name></member>
      <member refid="classBAbstractSocket_1a46610bcbcd9211d997a76fc0fe213c27" prot="protected" virt="non-virtual"><scope>BSocket</scope><name>fInitStatus</name></member>
      <member refid="classBAbstractSocket_1a636afd8410e4ad2966e6739658901eaa" prot="protected" virt="non-virtual"><scope>BSocket</scope><name>fIsBound</name></member>
      <member refid="classBAbstractSocket_1a635435da828eb4502560e14285f07a03" prot="protected" virt="non-virtual"><scope>BSocket</scope><name>fIsConnected</name></member>
      <member refid="classBAbstractSocket_1a897b420ef72d4d4816ed25e261ea72ca" prot="protected" virt="non-virtual"><scope>BSocket</scope><name>fIsListening</name></member>
      <member refid="classBAbstractSocket_1aa2421b31589c606b087797a42374943f" prot="protected" virt="non-virtual"><scope>BSocket</scope><name>fLocal</name></member>
      <member refid="classBDataIO_1a38a8df63b367585fe5e6b6a85c406d05" prot="public" virt="virtual"><scope>BSocket</scope><name>Flush</name></member>
      <member refid="classBAbstractSocket_1a5c5fac0c69409cc2d4ef3f942ae2a31a" prot="protected" virt="non-virtual"><scope>BSocket</scope><name>fPeer</name></member>
      <member refid="classBAbstractSocket_1afbd827826b10fd154601a612df28c6d0" prot="protected" virt="non-virtual"><scope>BSocket</scope><name>fSocket</name></member>
      <member refid="classBAbstractSocket_1af9d46dffaf8377e7235680873e82d66f" prot="public" virt="non-virtual"><scope>BSocket</scope><name>InitCheck</name></member>
      <member refid="classBAbstractSocket_1ac645bece7a4d03ea21988243ba169c02" prot="public" virt="virtual"><scope>BSocket</scope><name>IsBound</name></member>
      <member refid="classBAbstractSocket_1adc36a9456fed2b132630b2411b58e81b" prot="public" virt="virtual"><scope>BSocket</scope><name>IsConnected</name></member>
      <member refid="classBAbstractSocket_1a872930e548f84eca5b25e2f2996453fe" prot="public" virt="virtual"><scope>BSocket</scope><name>IsListening</name></member>
      <member refid="classBAbstractSocket_1a037ab912c5b1edfb60e8a8e9d1b44dc7" prot="public" virt="virtual"><scope>BSocket</scope><name>Listen</name></member>
      <member refid="classBAbstractSocket_1a958ca85bdfcfe2b4414ef1e03efa86ce" prot="public" virt="virtual"><scope>BSocket</scope><name>Local</name></member>
      <member refid="classBAbstractSocket_1aeb86b990a759fae1d7f15cb150510e2a" prot="public" virt="virtual"><scope>BSocket</scope><name>MaxTransmissionSize</name></member>
      <member refid="classBAbstractSocket_1a26c3225da767963450b74be2b46d515c" prot="public" virt="virtual"><scope>BSocket</scope><name>Peer</name></member>
      <member refid="classBSocket_1aa01b312dcfe99fe68cae08ef72fc9961" prot="public" virt="virtual"><scope>BSocket</scope><name>Read</name></member>
      <member refid="classBDataIO_1a3a0b0fc36232531a1d8c1144a7d75741" prot="public" virt="non-virtual"><scope>BSocket</scope><name>ReadExactly</name></member>
      <member refid="classBAbstractSocket_1aadd29c12de2b666f398d8605b7b72c8e" prot="public" virt="virtual"><scope>BSocket</scope><name>SetTimeout</name></member>
      <member refid="classBAbstractSocket_1a6994fc974cf477aaff8728931302e395" prot="public" virt="non-virtual"><scope>BSocket</scope><name>Socket</name></member>
      <member refid="classBAbstractSocket_1a5f014ac80e2457bcb931c9b5a20dae05" prot="public" virt="virtual"><scope>BSocket</scope><name>Timeout</name></member>
      <member refid="classBAbstractSocket_1a174391627c31e9789ebe9f74719b837a" prot="public" virt="virtual"><scope>BSocket</scope><name>WaitForReadable</name></member>
      <member refid="classBAbstractSocket_1a66a1117d00833276e19ac9f8e5950c30" prot="public" virt="virtual"><scope>BSocket</scope><name>WaitForWritable</name></member>
      <member refid="classBSocket_1aaa294e900cadc857097d1e49539d7e07" prot="public" virt="virtual"><scope>BSocket</scope><name>Write</name></member>
      <member refid="classBDataIO_1a0095cfffa454a82eac3dedda2e187ab7" prot="public" virt="non-virtual"><scope>BSocket</scope><name>WriteExactly</name></member>
      <member refid="classBAbstractSocket_1a8813b61b49c1a409fc64d85e155f77fc" prot="public" virt="virtual"><scope>BSocket</scope><name>~BAbstractSocket</name></member>
      <member refid="classBDataIO_1a45daa9db670dd2e5b83efcefcf8dbaed" prot="public" virt="virtual"><scope>BSocket</scope><name>~BDataIO</name></member>
      <member refid="classBSocket_1a74c27f7f544279a850c4940dc2d4ad73" prot="public" virt="virtual"><scope>BSocket</scope><name>~BSocket</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
