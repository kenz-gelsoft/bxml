<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBMessageQueue" kind="class" language="C++" prot="public">
    <compoundname>BMessageQueue</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBMessageQueue_1a5f32c3d81d9dd921b7c3278fcc2b194a" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMessageQueue::_reserved[3]</definition>
        <argsstring>[3]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BMessageQueue::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="54" column="7" bodyfile="/boot/home/src/haiku/headers/os/app/MessageQueue.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMessageQueue_1ab76a4635b2986f7050c1d11da61e9a4c" prot="private" static="no" mutable="no">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>BMessage* BMessageQueue::fHead</definition>
        <argsstring></argsstring>
        <name>fHead</name>
        <qualifiedname>BMessageQueue::fHead</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="49" column="9" bodyfile="/boot/home/src/haiku/headers/os/app/MessageQueue.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMessageQueue_1a0579e92aa171e9bab42a100841382ce9" prot="private" static="no" mutable="yes">
        <type><ref refid="classBLocker" kindref="compound">BLocker</ref></type>
        <definition>BLocker BMessageQueue::fLock</definition>
        <argsstring></argsstring>
        <name>fLock</name>
        <qualifiedname>BMessageQueue::fLock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="52" column="15" bodyfile="/boot/home/src/haiku/headers/os/app/MessageQueue.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMessageQueue_1a80676cd36a6a84f738e00d70a5c212a8" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BMessageQueue::fMessageCount</definition>
        <argsstring></argsstring>
        <name>fMessageCount</name>
        <qualifiedname>BMessageQueue::fMessageCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="51" column="6" bodyfile="/boot/home/src/haiku/headers/os/app/MessageQueue.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMessageQueue_1ae95ead4f1d87e11c1b51097397ca3247" prot="private" static="no" mutable="no">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>BMessage* BMessageQueue::fTail</definition>
        <argsstring></argsstring>
        <name>fTail</name>
        <qualifiedname>BMessageQueue::fTail</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="50" column="9" bodyfile="/boot/home/src/haiku/headers/os/app/MessageQueue.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBMessageQueue_1ab65ad5a2fad4b4574e490a0b65282b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMessageQueue::BMessageQueue</definition>
        <argsstring>()</argsstring>
        <name>BMessageQueue</name>
        <qualifiedname>BMessageQueue::BMessageQueue</qualifiedname>
        <briefdescription>
<para>Constructs an empty message queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1a6cc31296ddac5ef7fc19cdd40c4ef314" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BMessageQueue::~BMessageQueue</definition>
        <argsstring>()</argsstring>
        <name>~BMessageQueue</name>
        <qualifiedname>BMessageQueue::~BMessageQueue</qualifiedname>
        <briefdescription>
<para>Destruct the <ref refid="classBMessageQueue" kindref="compound">BMessageQueue</ref>. It iterates over any messages left on the queue and deletes them. </para>
        </briefdescription>
        <detaileddescription>
<para>The implementation is careful not to release the lock when the <ref refid="classBMessageQueue" kindref="compound">BMessageQueue</ref> is deconstructed. If the lock is released, it is possible another thread will start an <ref refid="classBMessageQueue_1a2dfdb322775026c6d3e50da3d53c760a" kindref="member">AddMessage()</ref> operation before the <ref refid="classBLocker" kindref="compound">BLocker</ref> is deleted. The safe thing to do is not to unlock the <ref refid="classBLocker" kindref="compound">BLocker</ref> from the destructor once it is acquired. That way, any thread waiting to do a <ref refid="classBMessageQueue_1a2dfdb322775026c6d3e50da3d53c760a" kindref="member">AddMessage()</ref> will fail to acquire the lock since the <ref refid="classBLocker" kindref="compound">BLocker</ref> will be deleted before they can acquire it.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="17" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1a2dfdb322775026c6d3e50da3d53c760a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMessageQueue::AddMessage</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>AddMessage</name>
        <qualifiedname>BMessageQueue::AddMessage</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Add a <emphasis>message</emphasis> to the end of the queue. </para>
        </briefdescription>
        <detaileddescription>
<para>The message has to be allocated on the heap with <computeroutput>new</computeroutput>, because the queue claims ownership of the message. Messages that were constructed on the stack will corrupt the queue.</para>
<para>Because a <ref refid="classBMessageQueue" kindref="compound">BMessageQueue</ref> claims ownership of the <emphasis>message</emphasis>, it is important that the message does not belong to another <ref refid="classBMessageQueue" kindref="compound">BMessageQueue</ref>.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="19" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1a5b03b046c4e4e631ee48b9b9effb00e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BMessageQueue::CountMessages</definition>
        <argsstring>() const</argsstring>
        <name>CountMessages</name>
        <qualifiedname>BMessageQueue::CountMessages</qualifiedname>
        <briefdescription>
<para>Return the number of messages waiting in the queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="22" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1a7f849a0a1a1478e2a91a529d1b318b38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>BMessage * BMessageQueue::FindMessage</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>FindMessage</name>
        <qualifiedname>BMessageQueue::FindMessage</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Retrieve the message at the <emphasis>index</emphasis> of this queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>A zero-based index of the message you want to retrieve.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to a message, or <computeroutput>NULL</computeroutput> if the <emphasis>index</emphasis> is out of bounds. </para>
</simplesect>
<simplesect kind="see"><para>FindMessage(uint32, int32) for a variant that takes a specific <computeroutput>what</computeroutput> identifier.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="25" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1a28d39fce8b2672f10ceb36fc54ae88fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>BMessage * BMessageQueue::FindMessage</definition>
        <argsstring>(uint32 what, int32 index=0) const</argsstring>
        <name>FindMessage</name>
        <qualifiedname>BMessageQueue::FindMessage</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>what</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Retrieve the message at the <emphasis>index</emphasis> of this queue, but only if it has a specific <emphasis>what</emphasis> constant. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>A zero-based index of the message you want to retrieve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>what</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>what</emphasis> code of the message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to a message, or <computeroutput>NULL</computeroutput> if there is no message at the <emphasis>index</emphasis> with that <emphasis>what</emphasis> constant, or if the <emphasis>index</emphasis> is out of bounds.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="26" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1ac01e4e0b8491f96bb02aae2bb9cbd2e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMessageQueue::IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <qualifiedname>BMessageQueue::IsEmpty</qualifiedname>
        <briefdescription>
<para>Check if there are messages waiting in the queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1a06f96a090475ea4064bd6cf99789299a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMessageQueue::IsLocked</definition>
        <argsstring>() const</argsstring>
        <name>IsLocked</name>
        <qualifiedname>BMessageQueue::IsLocked</qualifiedname>
        <briefdescription>
<para>Check if the queue is locked. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBMessageQueue_1af02862de04f304f2ca1d0665dbc555f4" kindref="member">Lock()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBMessageQueue_1afffb5a231a21f8f70e2b17e8857eb5d6" kindref="member">Unlock()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="30" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1a2d420852de788cc07f17d53a8dbb2a32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMessageQueue::IsNextMessage</definition>
        <argsstring>(const BMessage *message) const</argsstring>
        <name>IsNextMessage</name>
        <qualifiedname>BMessageQueue::IsNextMessage</qualifiedname>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Check if the pointer to a <emphasis>message</emphasis> points at the next message on the queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="33" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1af02862de04f304f2ca1d0665dbc555f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMessageQueue::Lock</definition>
        <argsstring>()</argsstring>
        <name>Lock</name>
        <qualifiedname>BMessageQueue::Lock</qualifiedname>
        <briefdescription>
<para>Lock the queue so no other thread can perform operations on it. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBMessageQueue_1afffb5a231a21f8f70e2b17e8857eb5d6" kindref="member">Unlock()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="28" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1ac43250227a2d7ebe25287e8bb7e2f4de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>BMessage * BMessageQueue::NextMessage</definition>
        <argsstring>()</argsstring>
        <name>NextMessage</name>
        <qualifiedname>BMessageQueue::NextMessage</qualifiedname>
        <briefdescription>
<para>Remove the first <ref refid="classBMessage" kindref="compound">BMessage</ref> on the queue and return it to the caller. </para>
        </briefdescription>
        <detaileddescription>
<para>After calling this method, you get the ownership of the message, so make sure it is deleted after you are done.</para>
<para><simplesect kind="return"><para>A pointer to a message, or <computeroutput>NULL</computeroutput> if the queue is empty, or the object has not been properly locked.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBMessageQueue_1af02862de04f304f2ca1d0665dbc555f4" kindref="member">Lock()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBMessageQueue_1a2d420852de788cc07f17d53a8dbb2a32" kindref="member">IsNextMessage()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="32" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1a9871427c7af17f88cd6a931afb740a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMessageQueue::RemoveMessage</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>RemoveMessage</name>
        <qualifiedname>BMessageQueue::RemoveMessage</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Remove a <emphasis>message</emphasis> from the queue. </para>
        </briefdescription>
        <detaileddescription>
<para>If the <emphasis>message</emphasis> is indeed associated with this queue, it is removed from it. This effectively means that you regain ownership of the message.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="20" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1afffb5a231a21f8f70e2b17e8857eb5d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMessageQueue::Unlock</definition>
        <argsstring>()</argsstring>
        <name>Unlock</name>
        <qualifiedname>BMessageQueue::Unlock</qualifiedname>
        <briefdescription>
<para>Unlock the queue after a <ref refid="classBMessageQueue_1af02862de04f304f2ca1d0665dbc555f4" kindref="member">Lock()</ref> request. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBMessageQueue_1af02862de04f304f2ca1d0665dbc555f4" kindref="member">Lock()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="29" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBMessageQueue_1a88f7c093b28c527d657b50adc6507c18" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMessageQueue::BMessageQueue</definition>
        <argsstring>(const BMessageQueue &amp;)</argsstring>
        <name>BMessageQueue</name>
        <qualifiedname>BMessageQueue::BMessageQueue</qualifiedname>
        <param>
          <type>const <ref refid="classBMessageQueue" kindref="compound">BMessageQueue</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1a5950c47401f5457df2359cf1cbe6118a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMessageQueue::_ReservedMessageQueue1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedMessageQueue1</name>
        <qualifiedname>BMessageQueue::_ReservedMessageQueue1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="37" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1a35d5423e3b34f6b73f59d3bfa9c7348a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMessageQueue::_ReservedMessageQueue2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedMessageQueue2</name>
        <qualifiedname>BMessageQueue::_ReservedMessageQueue2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="38" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1acde66cdafb2f04efd43f158f30594221" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMessageQueue::_ReservedMessageQueue3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedMessageQueue3</name>
        <qualifiedname>BMessageQueue::_ReservedMessageQueue3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="39" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1af862a807c0e08504b846e72fa2aed2e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMessageQueue::IsLocked</definition>
        <argsstring>()</argsstring>
        <name>IsLocked</name>
        <qualifiedname>BMessageQueue::IsLocked</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="44" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageQueue_1a37015677983ec91241351a29b3df5f7c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMessageQueue" kindref="compound">BMessageQueue</ref> &amp;</type>
        <definition>BMessageQueue &amp; BMessageQueue::operator=</definition>
        <argsstring>(const BMessageQueue &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>BMessageQueue::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBMessageQueue" kindref="compound">BMessageQueue</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="42" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A container that maintains a queue of messages. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is used by <ref refid="classBLooper" kindref="compound">BLooper</ref> to maintain a queue of messages that need to be processed. This class has been designed as a first in, first out container.</para>
<para>The default message handling of a <ref refid="classBLooper" kindref="compound">BLooper</ref> probably suffices for most uses, but if you want more control, you can perform operations using the methods of this class. Use <ref refid="classBLooper_1ad0643973ceda5cca540c4684a9f670ac" kindref="member">BLooper::MessageQueue()</ref> to retrieve the specific <ref refid="classBMessageQueue" kindref="compound">BMessageQueue</ref> instance.</para>
<para>Note that you are encouraged to make sure that whichever operation you perform, that you only do this after the object has been locked (see <ref refid="classBMessageQueue_1af02862de04f304f2ca1d0665dbc555f4" kindref="member">Lock()</ref>). The most important method, <ref refid="classBMessageQueue_1ac43250227a2d7ebe25287e8bb7e2f4de" kindref="member">NextMessage()</ref> will fail if you have not complied with this requirement.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/app/MessageQueue.h" line="14" column="1" bodyfile="/boot/home/src/haiku/headers/os/app/MessageQueue.h" bodystart="14" bodyend="55"/>
    <listofallmembers>
      <member refid="classBMessageQueue_1a5f32c3d81d9dd921b7c3278fcc2b194a" prot="private" virt="non-virtual"><scope>BMessageQueue</scope><name>_reserved</name></member>
      <member refid="classBMessageQueue_1a5950c47401f5457df2359cf1cbe6118a" prot="private" virt="virtual"><scope>BMessageQueue</scope><name>_ReservedMessageQueue1</name></member>
      <member refid="classBMessageQueue_1a35d5423e3b34f6b73f59d3bfa9c7348a" prot="private" virt="virtual"><scope>BMessageQueue</scope><name>_ReservedMessageQueue2</name></member>
      <member refid="classBMessageQueue_1acde66cdafb2f04efd43f158f30594221" prot="private" virt="virtual"><scope>BMessageQueue</scope><name>_ReservedMessageQueue3</name></member>
      <member refid="classBMessageQueue_1a2dfdb322775026c6d3e50da3d53c760a" prot="public" virt="non-virtual"><scope>BMessageQueue</scope><name>AddMessage</name></member>
      <member refid="classBMessageQueue_1ab65ad5a2fad4b4574e490a0b65282b1c" prot="public" virt="non-virtual"><scope>BMessageQueue</scope><name>BMessageQueue</name></member>
      <member refid="classBMessageQueue_1a88f7c093b28c527d657b50adc6507c18" prot="private" virt="non-virtual"><scope>BMessageQueue</scope><name>BMessageQueue</name></member>
      <member refid="classBMessageQueue_1a5b03b046c4e4e631ee48b9b9effb00e2" prot="public" virt="non-virtual"><scope>BMessageQueue</scope><name>CountMessages</name></member>
      <member refid="classBMessageQueue_1ab76a4635b2986f7050c1d11da61e9a4c" prot="private" virt="non-virtual"><scope>BMessageQueue</scope><name>fHead</name></member>
      <member refid="classBMessageQueue_1a7f849a0a1a1478e2a91a529d1b318b38" prot="public" virt="non-virtual"><scope>BMessageQueue</scope><name>FindMessage</name></member>
      <member refid="classBMessageQueue_1a28d39fce8b2672f10ceb36fc54ae88fa" prot="public" virt="non-virtual"><scope>BMessageQueue</scope><name>FindMessage</name></member>
      <member refid="classBMessageQueue_1a0579e92aa171e9bab42a100841382ce9" prot="private" virt="non-virtual"><scope>BMessageQueue</scope><name>fLock</name></member>
      <member refid="classBMessageQueue_1a80676cd36a6a84f738e00d70a5c212a8" prot="private" virt="non-virtual"><scope>BMessageQueue</scope><name>fMessageCount</name></member>
      <member refid="classBMessageQueue_1ae95ead4f1d87e11c1b51097397ca3247" prot="private" virt="non-virtual"><scope>BMessageQueue</scope><name>fTail</name></member>
      <member refid="classBMessageQueue_1ac01e4e0b8491f96bb02aae2bb9cbd2e2" prot="public" virt="non-virtual"><scope>BMessageQueue</scope><name>IsEmpty</name></member>
      <member refid="classBMessageQueue_1a06f96a090475ea4064bd6cf99789299a" prot="public" virt="non-virtual"><scope>BMessageQueue</scope><name>IsLocked</name></member>
      <member refid="classBMessageQueue_1af862a807c0e08504b846e72fa2aed2e9" prot="private" virt="non-virtual"><scope>BMessageQueue</scope><name>IsLocked</name></member>
      <member refid="classBMessageQueue_1a2d420852de788cc07f17d53a8dbb2a32" prot="public" virt="non-virtual"><scope>BMessageQueue</scope><name>IsNextMessage</name></member>
      <member refid="classBMessageQueue_1af02862de04f304f2ca1d0665dbc555f4" prot="public" virt="non-virtual"><scope>BMessageQueue</scope><name>Lock</name></member>
      <member refid="classBMessageQueue_1ac43250227a2d7ebe25287e8bb7e2f4de" prot="public" virt="non-virtual"><scope>BMessageQueue</scope><name>NextMessage</name></member>
      <member refid="classBMessageQueue_1a37015677983ec91241351a29b3df5f7c" prot="private" virt="non-virtual"><scope>BMessageQueue</scope><name>operator=</name></member>
      <member refid="classBMessageQueue_1a9871427c7af17f88cd6a931afb740a57" prot="public" virt="non-virtual"><scope>BMessageQueue</scope><name>RemoveMessage</name></member>
      <member refid="classBMessageQueue_1afffb5a231a21f8f70e2b17e8857eb5d6" prot="public" virt="non-virtual"><scope>BMessageQueue</scope><name>Unlock</name></member>
      <member refid="classBMessageQueue_1a6cc31296ddac5ef7fc19cdd40c4ef314" prot="public" virt="virtual"><scope>BMessageQueue</scope><name>~BMessageQueue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
