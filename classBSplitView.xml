<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBSplitView" kind="class" language="C++" prot="public">
    <compoundname>BSplitView</compoundname>
    <basecompoundref refid="classBView" prot="public" virt="non-virtual">BView</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBSplitView_1a94b2dd74325352946a3edf19a7e3961a" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BSplitView::_reserved[3]</definition>
        <argsstring>[3]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BSplitView::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="117" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/SplitView.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBSplitView_1a932d26e65ac258ae00981f4489671f52" prot="private" static="no" mutable="no">
        <type>BSplitLayout *</type>
        <definition>BSplitLayout* BSplitView::fSplitLayout</definition>
        <argsstring></argsstring>
        <name>fSplitLayout</name>
        <qualifiedname>BSplitView::fSplitLayout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="116" column="13" bodyfile="/boot/home/src/haiku/headers/os/interface/SplitView.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBSplitView_1ab5280b0a56fb1582e1af4bb33a14d8f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSplitView::BSplitView</definition>
        <argsstring>(BMessage *from)</argsstring>
        <name>BSplitView</name>
        <qualifiedname>BSplitView::BSplitView</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Unarchive a split view. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is usually not called directly, if you want to build a split view from an archived message you should call <ref refid="classBSplitView_1a8a35d5e798f1e5ce4f2612b601ea48f0" kindref="member">Instantiate()</ref> instead because it can handle errors properly.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBMessage" kindref="compound">BMessage</ref> that contains the split view.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a1283e6259642f7e721265b9d3c38b2a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSplitView::BSplitView</definition>
        <argsstring>(orientation orientation=B_HORIZONTAL, float spacing=B_USE_DEFAULT_SPACING)</argsstring>
        <name>BSplitView</name>
        <qualifiedname>BSplitView::BSplitView</qualifiedname>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
          <defval><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4ae796c97ca7ee2f24f65fc51ab650726d" kindref="member">B_HORIZONTAL</ref></defval>
        </param>
        <param>
          <type>float</type>
          <declname>spacing</declname>
          <defval>B_USE_DEFAULT_SPACING</defval>
        </param>
        <briefdescription>
<para>Creates a new split view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>The orientation of the splits. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spacing</parametername>
</parameternamelist>
<parameterdescription>
<para>The spacing in between the elements.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1aab3f4572e185bd47d15d4fba007082a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BSplitView::~BSplitView</definition>
        <argsstring>()</argsstring>
        <name>~BSplitView</name>
        <qualifiedname>BSplitView::~BSplitView</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="19" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1adacea08974e817dd4b4a2b19b29cc4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BSplitView::AddChild</definition>
        <argsstring>(BLayoutItem *child)</argsstring>
        <name>AddChild</name>
        <qualifiedname>BSplitView::AddChild</qualifiedname>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Add a <emphasis>child</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The child will be added at the end of the existing layout items, meaning it will be placed to the right or bottom of existing items.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout item to add.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> when succesfully, <computeroutput>false</computeroutput> if there was an error.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="59" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1ad4c1a287a2c4f3d67730b056f51bd7c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BSplitView::AddChild</definition>
        <argsstring>(BLayoutItem *child, float weight)</argsstring>
        <name>AddChild</name>
        <qualifiedname>BSplitView::AddChild</qualifiedname>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Add a <emphasis>child</emphasis> with a <emphasis>weight</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The child will be added at the end of the existing layout items, meaning it will be placed to the right or bottom of existing items.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout item to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The weight of the item.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> when succesfully, <computeroutput>false</computeroutput> if there was an error.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="60" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1ac3a13e9dd5ccb167fa3a01652788cc0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::AddChild</definition>
        <argsstring>(BView *child, BView *sibling=NULL)</argsstring>
        <name>AddChild</name>
        <qualifiedname>BSplitView::AddChild</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>sibling</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Add a <emphasis>child</emphasis> to the view. </para>
        </briefdescription>
        <detaileddescription>
<para>Passthrough for <ref refid="classBView_1ab6382c582e5e1be527d3199459d05e8f" kindref="member">BView::AddChild(BView *child, BView *sibling)</ref>. This bypasses the layout system, so only use it when you know what you are doing.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="54" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1abed8b680ee7f78d4e489ddaccdbc044d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BSplitView::AddChild</definition>
        <argsstring>(BView *child, float weight)</argsstring>
        <name>AddChild</name>
        <qualifiedname>BSplitView::AddChild</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Add a <emphasis>child</emphasis> with a <emphasis>weight</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The view will be added at the end of the existing layout items, meaning it will be placed to the right or bottom of existing items.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>The view that should be added as a child. The ownership is transferred to this view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The weight of the item.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> when succesfully, <computeroutput>false</computeroutput> if there was an error.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="55" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1ab2b804f1b39bfaa39b71d2bf1b0ac3ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BSplitView::AddChild</definition>
        <argsstring>(int32 index, BLayoutItem *child, float weight)</argsstring>
        <name>AddChild</name>
        <qualifiedname>BSplitView::AddChild</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Add a <emphasis>child</emphasis> at <emphasis>index</emphasis> with a <emphasis>weight</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired position for the <emphasis>child</emphasis>. Existing items will be shifted to the right or down based on the orientation. If the index is higher than the number of items, the item will be added after farmost item. The index is zero-based. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout item to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The weight of the item.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> when succesfully, <computeroutput>false</computeroutput> if there was an error.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="61" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a65561c14890c26f8f9e93825eac9e10d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BSplitView::AddChild</definition>
        <argsstring>(int32 index, BView *child, float weight)</argsstring>
        <name>AddChild</name>
        <qualifiedname>BSplitView::AddChild</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Add a <emphasis>child</emphasis> at <emphasis>index</emphasis> with a <emphasis>weight</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired position for the <emphasis>child</emphasis>. Existing items will be shifted to the right or down based on the orientation. If the index is higher than the number of items, the item will be added after farmost item. The index is zero-based. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>The view that should be added as a child. The ownership is transferred to this view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The weight of the item.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> when succesfully, <computeroutput>false</computeroutput> if there was an error.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="56" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a2c4ab843dd62815ebeb7201e21d3199b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BSplitView::Archive</definition>
        <argsstring>(BMessage *into, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BSplitView::Archive</qualifiedname>
        <reimplements refid="classBView_1ab6de1b48cbc3ef15a0d02113036f002d">Archive</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>into</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Archive the object into a <ref refid="classBMessage" kindref="compound">BMessage</ref>.  </para>
<para>You should call this method from your derived implementation as it adds the data needed to instantiate your object to the message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>into</parametername>
</parameternamelist>
<parameterdescription>
<para>The message you store your object in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deep</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>true</computeroutput>, all children of this object should be archived as well.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The archive operation was successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>NULL</computeroutput> <emphasis>archive</emphasis> message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>The archive operation failed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="78" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a5864715e720854c6a6947f0f730e88c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSplitView::AttachedToWindow</definition>
        <argsstring>()</argsstring>
        <name>AttachedToWindow</name>
        <qualifiedname>BSplitView::AttachedToWindow</qualifiedname>
        <reimplements refid="classBView_1ae8117cb4634f4a4413988eea07cf75a0">AttachedToWindow</reimplements>
        <briefdescription>
<para>Hook method overridden from <ref refid="classBView" kindref="compound">BView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="64" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1aeeeca420ff53a5320d158b48135517e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BSplitView::CountItems</definition>
        <argsstring>() const</argsstring>
        <name>CountItems</name>
        <qualifiedname>BSplitView::CountItems</qualifiedname>
        <briefdescription>
<para>The number of items in this view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the number of items in this view. The splitters themselves are not included in this number.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="37" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1ae760c25461d9565a0868d48b7061af46" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSplitView::Draw</definition>
        <argsstring>(BRect updateRect)</argsstring>
        <name>Draw</name>
        <qualifiedname>BSplitView::Draw</qualifiedname>
        <reimplements refid="classBView_1aa55014241fc2f5556415850692b52db2">Draw</reimplements>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>updateRect</declname>
        </param>
        <briefdescription>
<para>Hook method overridden from <ref refid="classBView" kindref="compound">BView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="65" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a5ebd7844fea0b1352c061b8180fb31d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSplitView::DrawAfterChildren</definition>
        <argsstring>(BRect updateRect)</argsstring>
        <name>DrawAfterChildren</name>
        <qualifiedname>BSplitView::DrawAfterChildren</qualifiedname>
        <reimplements refid="classBView_1abb50623b4236926b068fc5a2264f6a48">DrawAfterChildren</reimplements>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>updateRect</declname>
        </param>
        <briefdescription>
<para>Hook method overridden from <ref refid="classBView" kindref="compound">BView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="66" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a6e1c2fda19d9402f61a1bc176da5d5a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::GetInsets</definition>
        <argsstring>(float *left, float *top, float *right, float *bottom) const</argsstring>
        <name>GetInsets</name>
        <qualifiedname>BSplitView::GetInsets</qualifiedname>
        <param>
          <type>float *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>top</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>right</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
<para>Get the insets that apply to this view. </para>
        </briefdescription>
        <detaileddescription>
<para>You may pass <computeroutput>NULL</computeroutput> for any of the parameters, if you do not wish to retrieve their value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">left</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the left inset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">top</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the top inset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">right</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the right inset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the bottom inset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="25" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1aa0d228fcf02cdc3fe6d252ec54ef1658" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BSplitView::IsCollapsible</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>IsCollapsible</name>
        <qualifiedname>BSplitView::IsCollapsible</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get whether the item at <emphasis>index</emphasis> is collapsible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the item (zero-based).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The user can collapse the item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The user cannot collapse the item.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="44" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a1f75e061408b01894aad9c38763dd9df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BSplitView::IsItemCollapsed</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>IsItemCollapsed</name>
        <qualifiedname>BSplitView::IsItemCollapsed</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Check whether the item at <emphasis>index</emphasis> is collapsed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the item (zero-based).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The item is collapsed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The item is not collapsed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="50" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a214898038b661225e0d0be6e75095eac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BSplitView::ItemWeight</definition>
        <argsstring>(BLayoutItem *item) const</argsstring>
        <name>ItemWeight</name>
        <qualifiedname>BSplitView::ItemWeight</qualifiedname>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Get the item weight for an existing <emphasis>item</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>An existing layout item object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The weight of the <emphasis>item</emphasis>, or <computeroutput>0.0</computeroutput> if the item is not associated with this view.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="39" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a918d65e309f9bb1794aaac44a153eccc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BSplitView::ItemWeight</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>ItemWeight</name>
        <qualifiedname>BSplitView::ItemWeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the item weight for the item at the <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the item (zero-based).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The weight of the item, or <computeroutput>0.0</computeroutput> if there is no item at <emphasis>index</emphasis>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="38" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1ad4737f5224faa2d34c84299750ab92ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSplitView::MessageReceived</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>MessageReceived</name>
        <qualifiedname>BSplitView::MessageReceived</qualifiedname>
        <reimplements refid="classBView_1aca0a16b0e04288e1fdc0b63690ea7a6d">MessageReceived</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Hook method overridden from <ref refid="classBView" kindref="compound">BView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="72" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a00b41035774b35159b7f0d33da769eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSplitView::MouseDown</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>MouseDown</name>
        <qualifiedname>BSplitView::MouseDown</qualifiedname>
        <reimplements refid="classBView_1a5f5bd975d15df94f2ebbc80eb79cc3f6">MouseDown</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Hook method overridden from <ref refid="classBView" kindref="compound">BView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="67" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1ac8e0a72e43f68b840f3e52e125023f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSplitView::MouseMoved</definition>
        <argsstring>(BPoint where, uint32 transit, const BMessage *message)</argsstring>
        <name>MouseMoved</name>
        <qualifiedname>BSplitView::MouseMoved</qualifiedname>
        <reimplements refid="classBView_1ac8b20516e42bab2f1eeb130e2432bde0">MouseMoved</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>transit</declname>
        </param>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Hook method overridden from <ref refid="classBView" kindref="compound">BView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="69" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a6ff5943b9c00dc30a2803681f0aa08c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSplitView::MouseUp</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>MouseUp</name>
        <qualifiedname>BSplitView::MouseUp</qualifiedname>
        <reimplements refid="classBView_1acdb92b30069157b2e3c522a3ef9d6ae4">MouseUp</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Hook method overridden from <ref refid="classBView" kindref="compound">BView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="68" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1ab7bd849f5d4aa211d3a8f33ebf75e29d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
        <definition>orientation BSplitView::Orientation</definition>
        <argsstring>() const</argsstring>
        <name>Orientation</name>
        <qualifiedname>BSplitView::Orientation</qualifiedname>
        <briefdescription>
<para>Get the orientation of the elements in this view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_HORIZONTAL</parametername>
</parameternamelist>
<parameterdescription>
<para>The elements are ordered left-to-right. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_VERTICAL</parametername>
</parameternamelist>
<parameterdescription>
<para>The elements are ordered top-to-bottom.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="31" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a9aaf09f717a61303d5aca6e92d96b103" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BSplitView::Perform</definition>
        <argsstring>(perform_code d, void *arg)</argsstring>
        <name>Perform</name>
        <qualifiedname>BSplitView::Perform</qualifiedname>
        <reimplements refid="classBView_1a512a6c8dca1a62b14cdcb1c22070129b">Perform</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" kindref="member">perform_code</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Hook method overridden from <ref refid="classBView" kindref="compound">BView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="81" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1aed69d402e785dc3a0d59c520ceea69c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::SetCollapsible</definition>
        <argsstring>(bool collapsible)</argsstring>
        <name>SetCollapsible</name>
        <qualifiedname>BSplitView::SetCollapsible</qualifiedname>
        <param>
          <type>bool</type>
          <declname>collapsible</declname>
        </param>
        <briefdescription>
<para>Set the whether all the layout items in this view are collapsible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>collapsible</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> if all items in this layout are collapsible, <computeroutput>false</computeroutput> if they are not.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="45" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a22f28179f8d829bf4d7ef72ec3dd5bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::SetCollapsible</definition>
        <argsstring>(int32 first, int32 last, bool collapsible)</argsstring>
        <name>SetCollapsible</name>
        <qualifiedname>BSplitView::SetCollapsible</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>last</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>collapsible</declname>
        </param>
        <briefdescription>
<para>Set whether the items from <emphasis>first</emphasis> to <emphasis>last</emphasis> are collapsible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the first item that you want the setting to apply to (zero-based). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the last item that you want the setting to apply to (zero-based). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collapsible</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> if the user may collaps the item, <computeroutput>false</computeroutput> if they may not.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="47" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a6ff96f9e91cacbbcce3e91aa191b45f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::SetCollapsible</definition>
        <argsstring>(int32 index, bool collapsible)</argsstring>
        <name>SetCollapsible</name>
        <qualifiedname>BSplitView::SetCollapsible</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>collapsible</declname>
        </param>
        <briefdescription>
<para>Set whether the item at <emphasis>index</emphasis> is collapsible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the item (zero-based). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collapsible</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> if the user may collaps the item, <computeroutput>false</computeroutput> if they may not.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="46" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1aac28a0b6f1b366b9a0b71a11e76742a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::SetInsets</definition>
        <argsstring>(float horizontal, float vertical)</argsstring>
        <name>SetInsets</name>
        <qualifiedname>BSplitView::SetInsets</qualifiedname>
        <param>
          <type>float</type>
          <declname>horizontal</declname>
        </param>
        <param>
          <type>float</type>
          <declname>vertical</declname>
        </param>
        <briefdescription>
<para>Set the insets between the bounds of the view and the inner elements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>horizontal</parametername>
</parameternamelist>
<parameterdescription>
<para>The left and right inset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertical</parametername>
</parameternamelist>
<parameterdescription>
<para>The top and bottom inset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1ace2672b3c04e194ec409e7dbef7bd744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::SetInsets</definition>
        <argsstring>(float insets)</argsstring>
        <name>SetInsets</name>
        <qualifiedname>BSplitView::SetInsets</qualifiedname>
        <param>
          <type>float</type>
          <declname>insets</declname>
        </param>
        <briefdescription>
<para>Set the insets between the bounds of the view and the inner elements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>insets</parametername>
</parameternamelist>
<parameterdescription>
<para>The value for the left, top, right and bottom inset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="24" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a8eb397e97e4cb51b373e7181989ae4ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::SetInsets</definition>
        <argsstring>(float left, float top, float right, float bottom)</argsstring>
        <name>SetInsets</name>
        <qualifiedname>BSplitView::SetInsets</qualifiedname>
        <param>
          <type>float</type>
          <declname>left</declname>
        </param>
        <param>
          <type>float</type>
          <declname>top</declname>
        </param>
        <param>
          <type>float</type>
          <declname>right</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
<para>Set the insets between the bounds of the view and the inner elements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left inset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>top</parametername>
</parameternamelist>
<parameterdescription>
<para>The top inset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right inset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>The bottom inset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="21" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a7053f13d0a452d88f7b4a92ae12806cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::SetItemCollapsed</definition>
        <argsstring>(int32 index, bool collapsed)</argsstring>
        <name>SetItemCollapsed</name>
        <qualifiedname>BSplitView::SetItemCollapsed</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>collapsed</declname>
        </param>
        <briefdescription>
<para>Set whether the item at <emphasis>index</emphasis> is displayed as collapsed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the item (zero-based). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collapsed</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> if the item should be rendered collapsed, <computeroutput>false</computeroutput> if it needs to be visible.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="51" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a3de3a710a97c972fd7c58cae3a366d33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::SetItemWeight</definition>
        <argsstring>(BLayoutItem *item, float weight)</argsstring>
        <name>SetItemWeight</name>
        <qualifiedname>BSplitView::SetItemWeight</qualifiedname>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Set the weight of the <emphasis>item</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The weight is relative to all other items in the layout, and determines how the available space is distributed over the items in the layout.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The item within this view that the weight applies to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The weight of the item.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="42" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a6a296b5acc0761a0f3c6927f8aad23cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::SetItemWeight</definition>
        <argsstring>(int32 index, float weight, bool invalidateLayout)</argsstring>
        <name>SetItemWeight</name>
        <qualifiedname>BSplitView::SetItemWeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>invalidateLayout</declname>
        </param>
        <briefdescription>
<para>Set the weight of the item at <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The weight is relative to all other items in the layout, and determines how the available space is distributed over the items in the layout.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the item (zero-based). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The weight of the item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>invalidateLayout</parametername>
</parameternamelist>
<parameterdescription>
<para>When <computeroutput>true</computeroutput>, calls <ref refid="classBLayout_1a2b775de411ef6e9ecb4f7c412a26bf31" kindref="member">BLayout::InvalidateLayout()</ref> to recalculate the layout.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1aaee57e8169084b071c518adfbac4d97a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSplitView::SetLayout</definition>
        <argsstring>(BLayout *layout)</argsstring>
        <name>SetLayout</name>
        <qualifiedname>BSplitView::SetLayout</qualifiedname>
        <reimplements refid="classBView_1acac1ebbba8c76e543e1b06e84dffab02">SetLayout</reimplements>
        <param>
          <type><ref refid="classBLayout" kindref="compound">BLayout</ref> *</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
<para>Hook method overridden from <ref refid="classBView" kindref="compound">BView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="75" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1ad44a0cf21f38857226f73a4c2a884886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::SetOrientation</definition>
        <argsstring>(orientation orientation)</argsstring>
        <name>SetOrientation</name>
        <qualifiedname>BSplitView::SetOrientation</qualifiedname>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
<para>Set the orientation of the elements in this view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>May be <ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4ae796c97ca7ee2f24f65fc51ab650726d" kindref="member">B_HORIZONTAL</ref> or <ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4a01c35140b008aea2cb9eca52ecf7cd4e" kindref="member">B_VERTICAL</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="32" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a37ba27cbed4b10204e296aaff88f8549" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::SetSpacing</definition>
        <argsstring>(float spacing)</argsstring>
        <name>SetSpacing</name>
        <qualifiedname>BSplitView::SetSpacing</qualifiedname>
        <param>
          <type>float</type>
          <declname>spacing</declname>
        </param>
        <briefdescription>
<para>Set the spacing between elements in this view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spacing</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired spacing between elements. This will apply to all elements.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a5f77816e9406b0ad84d2f25ca02a4f24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::SetSplitterSize</definition>
        <argsstring>(float size)</argsstring>
        <name>SetSplitterSize</name>
        <qualifiedname>BSplitView::SetSplitterSize</qualifiedname>
        <param>
          <type>float</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the size of the splitter(s) in this view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size as a <computeroutput>float</computeroutput> that will be applied to all splitters in this view.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="35" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a0949ee48836dd1bce7aa70ab77f13f4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BSplitView::Spacing</definition>
        <argsstring>() const</argsstring>
        <name>Spacing</name>
        <qualifiedname>BSplitView::Spacing</qualifiedname>
        <briefdescription>
<para>Get the spacing between elements in this view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The spacing between elements as a <computeroutput>float</computeroutput>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="28" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a8063eb3ae201f32fcf44e493be4ee68f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BSplitView::SplitterSize</definition>
        <argsstring>() const</argsstring>
        <name>SplitterSize</name>
        <qualifiedname>BSplitView::SplitterSize</qualifiedname>
        <briefdescription>
<para>Get the size of the splitter(s) in this view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the splitter(s).</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="34" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBSplitView_1a8a35d5e798f1e5ce4f2612b601ea48f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>static BArchivable * BSplitView::Instantiate</definition>
        <argsstring>(BMessage *from)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BSplitView::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Instantiate the view from the message <emphasis>from</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="79" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBSplitView_1a8677380375e36b4bc2380a929dc69a69" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BSplitView::AllArchived</definition>
        <argsstring>(BMessage *into) const</argsstring>
        <name>AllArchived</name>
        <qualifiedname>BSplitView::AllArchived</qualifiedname>
        <reimplements refid="classBView_1a561e82ed41cbb93d3bacf371787497bf">AllArchived</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>into</declname>
        </param>
        <briefdescription>
<para>Hook method overridden from <ref refid="classBArchivable" kindref="compound">BArchivable</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="84" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a5c4cc359d801e27e39f28469c24bbd76" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BSplitView::AllUnarchived</definition>
        <argsstring>(const BMessage *from)</argsstring>
        <name>AllUnarchived</name>
        <qualifiedname>BSplitView::AllUnarchived</qualifiedname>
        <reimplements refid="classBView_1ab7bd04272afed8b28bf57d1de33cbe05">AllUnarchived</reimplements>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Hook method overridden from <ref refid="classBArchivable" kindref="compound">BArchivable</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="85" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a5fd0eedcfd927b32593b52c0806ddc3e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSplitView::DrawSplitter</definition>
        <argsstring>(BRect frame, const BRect &amp;updateRect, orientation orientation, bool pressed)</argsstring>
        <name>DrawSplitter</name>
        <qualifiedname>BSplitView::DrawSplitter</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pressed</declname>
        </param>
        <briefdescription>
<para>Hook method called when the splitter needs to be drawn. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is called in the context of a <ref refid="classBView_1aa55014241fc2f5556415850692b52db2" kindref="member">BView::Draw()</ref> operation. Derived classes can override this to draw a splitter.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="87" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBSplitView_1a9bc94973c5d8ef316d9cf4df58356150" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSplitView::BSplitView</definition>
        <argsstring>(const BSplitView &amp;)</argsstring>
        <name>BSplitView</name>
        <qualifiedname>BSplitView::BSplitView</qualifiedname>
        <param>
          <type>const <ref refid="classBSplitView" kindref="compound">BSplitView</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a4169e6d3fdfe658622c068fa79fbde75" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSplitView::_ReservedSplitView1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSplitView1</name>
        <qualifiedname>BSplitView::_ReservedSplitView1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="95" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1af8b4a41c754bbc0202c4fe3af12e273c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSplitView::_ReservedSplitView10</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSplitView10</name>
        <qualifiedname>BSplitView::_ReservedSplitView10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="104" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a4e022c2a0151b3b95802ea7cb7012530" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSplitView::_ReservedSplitView2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSplitView2</name>
        <qualifiedname>BSplitView::_ReservedSplitView2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="96" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a7221d0312071286a5008b30edec98798" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSplitView::_ReservedSplitView3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSplitView3</name>
        <qualifiedname>BSplitView::_ReservedSplitView3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="97" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1ab37b3a3c577ce9c76f90fe28aa46c683" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSplitView::_ReservedSplitView4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSplitView4</name>
        <qualifiedname>BSplitView::_ReservedSplitView4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="98" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a9cde4d7267c93826b390505baf695c8c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSplitView::_ReservedSplitView5</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSplitView5</name>
        <qualifiedname>BSplitView::_ReservedSplitView5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="99" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a1a5808c11abf52b7ddae753f6a84d7a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSplitView::_ReservedSplitView6</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSplitView6</name>
        <qualifiedname>BSplitView::_ReservedSplitView6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="100" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a899d25ba05b796a2a6449bb0cbab46ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSplitView::_ReservedSplitView7</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSplitView7</name>
        <qualifiedname>BSplitView::_ReservedSplitView7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="101" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a02067d3722b1fbd61ff61f18440ab639" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSplitView::_ReservedSplitView8</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSplitView8</name>
        <qualifiedname>BSplitView::_ReservedSplitView8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="102" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1a06f17acc59c22ff601d073743f8049b7" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSplitView::_ReservedSplitView9</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSplitView9</name>
        <qualifiedname>BSplitView::_ReservedSplitView9</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="103" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSplitView_1ac1712dea0d56966dd1343899fbc0a4df" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSplitView::operator=</definition>
        <argsstring>(const BSplitView &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>BSplitView::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBSplitView" kindref="compound">BSplitView</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="108" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classBSplitView_1a863dab9984f2f0c49a86a6a06e962947" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void BSplitView::_DrawDefaultSplitter</definition>
        <argsstring>(BView *view, BRect frame, const BRect &amp;updateRect, orientation orientation, bool pressed)</argsstring>
        <name>_DrawDefaultSplitter</name>
        <qualifiedname>BSplitView::_DrawDefaultSplitter</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>updateRect</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pressed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="110" column="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A container with two or more sections, with dividers in between, so that a user can manipulate the size of the sections by dragging a slider. </para>
    </briefdescription>
    <detaileddescription>
<para>This container view consists one of more items, that are laid out horizontally or vertically. Between two adjoining items, there is a splitter. This splitter allows the user to change how the space between the individual items is divided.</para>
<para>The screenshot below shows the <ref refid="classBSplitView" kindref="compound">BSplitView</ref> being used in HaikuDepot. The <ref refid="classBSplitView" kindref="compound">BSplitView</ref> is the main container of the window, in this case with a <ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4a01c35140b008aea2cb9eca52ecf7cd4e" kindref="member">B_VERTICAL</ref> layout. The top part contains the list of packages, and some filter tools. At the bottom are individual package details. In between the two visual elements there is a dotted line, indicating the draggable separator. At the right hand of this separator, above the <bold>Install</bold> button, you can see that the mouse cursor changed into the double arrow, indicating the user that the element is dragable.</para>
<para><image type="html" name="BSplitView_HaikuDepot.png"></image>
</para>
<para>Because of the dynamic nature of the size of the sections within the split view, it is best to use this container with the <ref refid="group__layout" kindref="compound">layout system</ref>. It is fully supported by the layout builder utilities. See the <ref refid="classBLayoutBuilder_1_1Split" kindref="compound">BLayoutBuilder::Split&lt;&gt;</ref> documentation for the builder that accompanies this view.</para>
<para>The container has the following properties:<itemizedlist>
<listitem><para><bold>Insets</bold> are the padding for the split view.</para>
</listitem><listitem><para><bold>Spacing</bold> is the spacing between the components.</para>
</listitem><listitem><para><bold>Orientation</bold> is whether the splits are horizontal or vertical.</para>
</listitem><listitem><para><bold>Splitter</bold> <bold>size</bold> is the size of the splitter.</para>
</listitem></itemizedlist>
</para>
<para>Specifically for individual elements, the following properties may also be set:<itemizedlist>
<listitem><para><bold>Weight</bold> for the weight of the item within the split view (determines how space is allocated between the items).</para>
</listitem><listitem><para><bold>Collapsible</bold> determines if an element is collapsible, meaning the user can drag the splitter as such as to hide the item completely. If an item is not collapsible, at least a part of the item will always be visible to the user.</para>
</listitem></itemizedlist>
</para>
<para><ref refid="classBGroupView" kindref="compound">BGroupView</ref> essentially has the same properties for organizing the layout items, though it does not offer the functionality for users to change the size of the elements.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="3">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BSplitView</label>
        <link refid="classBSplitView"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="3">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BSplitView</label>
        <link refid="classBSplitView"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/interface/SplitView.h" line="13" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/SplitView.h" bodystart="13" bodyend="118"/>
    <listofallmembers>
      <member refid="classBSplitView_1a863dab9984f2f0c49a86a6a06e962947" prot="private" virt="non-virtual"><scope>BSplitView</scope><name>_DrawDefaultSplitter</name></member>
      <member refid="classBSplitView_1a94b2dd74325352946a3edf19a7e3961a" prot="private" virt="non-virtual"><scope>BSplitView</scope><name>_reserved</name></member>
      <member refid="classBSplitView_1a4169e6d3fdfe658622c068fa79fbde75" prot="private" virt="virtual"><scope>BSplitView</scope><name>_ReservedSplitView1</name></member>
      <member refid="classBSplitView_1af8b4a41c754bbc0202c4fe3af12e273c" prot="private" virt="virtual"><scope>BSplitView</scope><name>_ReservedSplitView10</name></member>
      <member refid="classBSplitView_1a4e022c2a0151b3b95802ea7cb7012530" prot="private" virt="virtual"><scope>BSplitView</scope><name>_ReservedSplitView2</name></member>
      <member refid="classBSplitView_1a7221d0312071286a5008b30edec98798" prot="private" virt="virtual"><scope>BSplitView</scope><name>_ReservedSplitView3</name></member>
      <member refid="classBSplitView_1ab37b3a3c577ce9c76f90fe28aa46c683" prot="private" virt="virtual"><scope>BSplitView</scope><name>_ReservedSplitView4</name></member>
      <member refid="classBSplitView_1a9cde4d7267c93826b390505baf695c8c" prot="private" virt="virtual"><scope>BSplitView</scope><name>_ReservedSplitView5</name></member>
      <member refid="classBSplitView_1a1a5808c11abf52b7ddae753f6a84d7a0" prot="private" virt="virtual"><scope>BSplitView</scope><name>_ReservedSplitView6</name></member>
      <member refid="classBSplitView_1a899d25ba05b796a2a6449bb0cbab46ed" prot="private" virt="virtual"><scope>BSplitView</scope><name>_ReservedSplitView7</name></member>
      <member refid="classBSplitView_1a02067d3722b1fbd61ff61f18440ab639" prot="private" virt="virtual"><scope>BSplitView</scope><name>_ReservedSplitView8</name></member>
      <member refid="classBSplitView_1a06f17acc59c22ff601d073743f8049b7" prot="private" virt="virtual"><scope>BSplitView</scope><name>_ReservedSplitView9</name></member>
      <member refid="classBSplitView_1ac3a13e9dd5ccb167fa3a01652788cc0c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>AddChild</name></member>
      <member refid="classBSplitView_1abed8b680ee7f78d4e489ddaccdbc044d" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>AddChild</name></member>
      <member refid="classBSplitView_1a65561c14890c26f8f9e93825eac9e10d" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>AddChild</name></member>
      <member refid="classBSplitView_1adacea08974e817dd4b4a2b19b29cc4fe" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>AddChild</name></member>
      <member refid="classBSplitView_1ad4c1a287a2c4f3d67730b056f51bd7c6" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>AddChild</name></member>
      <member refid="classBSplitView_1ab2b804f1b39bfaa39b71d2bf1b0ac3ab" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>AddChild</name></member>
      <member refid="classBHandler_1a862bea548363faac6f883b348cbed838" prot="public" virt="virtual"><scope>BSplitView</scope><name>AddFilter</name></member>
      <member refid="classBView_1a88440336a66ee9b1a4b1661e9ba9e59c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>AddLine</name></member>
      <member refid="classBView_1ac780f029d415ee0a915792b4e756fa77" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>AdoptParentColors</name></member>
      <member refid="classBView_1a0e429a82fe06e9ab390b06d993ee31be" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>AdoptSystemColors</name></member>
      <member refid="classBView_1ab68ad7103708884f9e6fd84e8a579746" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>AdoptViewColors</name></member>
      <member refid="classBSplitView_1a8677380375e36b4bc2380a929dc69a69" prot="protected" virt="virtual"><scope>BSplitView</scope><name>AllArchived</name></member>
      <member refid="classBView_1a6d6379e0993bd525f2cac5f848718870" prot="public" virt="virtual"><scope>BSplitView</scope><name>AllAttached</name></member>
      <member refid="classBView_1a19dd2213f4b953b54524d7f523d9b406" prot="public" virt="virtual"><scope>BSplitView</scope><name>AllDetached</name></member>
      <member refid="classBSplitView_1a5c4cc359d801e27e39f28469c24bbd76" prot="protected" virt="virtual"><scope>BSplitView</scope><name>AllUnarchived</name></member>
      <member refid="classBView_1a2d73d2f2b0b35390929cf54fbfa5ecff" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>AppendToPicture</name></member>
      <member refid="classBSplitView_1a2c4ab843dd62815ebeb7201e21d3199b" prot="public" virt="virtual"><scope>BSplitView</scope><name>Archive</name></member>
      <member refid="classBSplitView_1a5864715e720854c6a6947f0f730e88c5" prot="public" virt="virtual"><scope>BSplitView</scope><name>AttachedToWindow</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BArchivable</name></member>
      <member refid="classBView_1abe65757b7c83c8db390bf0c87457a343" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BeginLayer</name></member>
      <member refid="classBView_1ab3f2e9f54d2b93952b27e182ac552983" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BeginLineArray</name></member>
      <member refid="classBView_1a14155192773aad22ebe47a9975afac5f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BeginPicture</name></member>
      <member refid="classBView_1ac1eb1eeee67ec97205a4acc6955185bd" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BeginRectTracking</name></member>
      <member refid="classBHandler_1a2142e21fe781b24f914ec2086e5f05b7" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BHandler</name></member>
      <member refid="classBHandler_1add8fa081a7bb8633581e78777b215d0b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BHandler</name></member>
      <member refid="classBView_1acbb8ea442346e91428689163db9d633e" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Bounds</name></member>
      <member refid="classBSplitView_1a1283e6259642f7e721265b9d3c38b2a5" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BSplitView</name></member>
      <member refid="classBSplitView_1ab5280b0a56fb1582e1af4bb33a14d8f7" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BSplitView</name></member>
      <member refid="classBSplitView_1a9bc94973c5d8ef316d9cf4df58356150" prot="private" virt="non-virtual"><scope>BSplitView</scope><name>BSplitView</name></member>
      <member refid="classBView_1ab148f59c41c9a22ced87bf7a0221ed62" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BView</name></member>
      <member refid="classBView_1ae3a1b2a66dc19690e766623be65c37e2" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BView</name></member>
      <member refid="classBView_1ae982fac35c278cc64990c506efe3965e" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>BView</name></member>
      <member refid="classBView_1aaf91592f50f2f44d16f23e7504f494cb" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ChildAt</name></member>
      <member refid="classBView_1ae7582b9a2b0b446a1de16c681f23baf9" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ClearViewBitmap</name></member>
      <member refid="classBView_1a0ae48f37c3f56b422841638971488cc0" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ClearViewOverlay</name></member>
      <member refid="classBView_1a18d61bcae2a7ca8a1a0977ac23d15171" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ClipToInversePicture</name></member>
      <member refid="classBView_1ad1762d160500ec3ce90c7bd73944d8a7" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ClipToInverseRect</name></member>
      <member refid="classBView_1a17dcb4f2e92994cde9a9ece9caa619c2" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ClipToInverseShape</name></member>
      <member refid="classBView_1a9c92c9e8e306d00dbfef81f2b0282339" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ClipToPicture</name></member>
      <member refid="classBView_1a22ff147a2f0a0bd65de494c9a039acee" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ClipToRect</name></member>
      <member refid="classBView_1ac0884c62949361a7eb6a4834f46b902c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ClipToShape</name></member>
      <member refid="classBView_1a656b8d82a6a7c7c6ab33c3dd08aad6ec" prot="public" virt="virtual"><scope>BSplitView</scope><name>ConstrainClippingRegion</name></member>
      <member refid="classBView_1a43c16140dd4491a6a6f7bad11bbea1f9" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1aa3201bdf5c489fbab7d67afe3453466d" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1ab2aeeb14409a18f950173e7cb22e147c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1a45b405f10c29442aea8b70161410565f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1a4b794ccd899dc6a0cafd886169122df5" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a75f1d68cf77bccc03930eb8e273f2967" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a3fbc496f437925cb02ccf9e817406e4e" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a44c3b5174e4ccfa4c123e0d5d54e9408" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1ab20700567eabd5f8135be179b4232e2c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1a91e6a7edab78547be47cb8dc84cfdecf" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1ac7bd2e0e7aac40d1be9a47999b5701a9" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1ae3b385e4d1b9f70bc848bf2fd0b7753c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1aefefb1242613b869feb6b8e0cc119518" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1af90cdeb62cc60adf64eb9a669c37c153" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1ad99f5af006f28c485f02484752a2ac5d" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1ae60c56c306d0cf3f504d710fac8b9bed" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1a8ace5c5cc811c4ad16acf281ffd1a48d" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>CopyBits</name></member>
      <member refid="classBView_1ae30d094a1cb1f3357c4aa7caa4b0e29d" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>CountChildren</name></member>
      <member refid="classBSplitView_1aeeeca420ff53a5320d158b48135517e7" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>CountItems</name></member>
      <member refid="classBView_1ae2a9da1ca04489dd60ef8aefa86331ed" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DelayedInvalidate</name></member>
      <member refid="classBView_1a6389a46cf1842eb0d412b44958955e61" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DelayedInvalidate</name></member>
      <member refid="classBView_1a8abc2ea500951a0a22cf018e958ba791" prot="public" virt="virtual"><scope>BSplitView</scope><name>DetachedFromWindow</name></member>
      <member refid="classBView_1aa165cbaac7d6915feaae6048c4378c85" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DisableLayoutInvalidation</name></member>
      <member refid="classBView_1a9d766a06d0885200c6ababba4c87808b" prot="protected" virt="virtual"><scope>BSplitView</scope><name>DoLayout</name></member>
      <member refid="classBView_1a1f4f0c3c5946df1d14e6031e5e12f40b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DragMessage</name></member>
      <member refid="classBView_1a466287a3d939759cc09e4a6d1c9982cd" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DragMessage</name></member>
      <member refid="classBView_1ae1caa1d0bef9452db00c2adc8e3280b4" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DragMessage</name></member>
      <member refid="classBSplitView_1ae760c25461d9565a0868d48b7061af46" prot="public" virt="virtual"><scope>BSplitView</scope><name>Draw</name></member>
      <member refid="classBSplitView_1a5ebd7844fea0b1352c061b8180fb31d4" prot="public" virt="virtual"><scope>BSplitView</scope><name>DrawAfterChildren</name></member>
      <member refid="classBView_1a6171150993fbf7c73966c7c302a95573" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a63db7245fd9b9fefd461d7596c15f9cc" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1abce81666128d183d59b5cf2ed75c7f07" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a1c8b6e3e9218388a68ae43dd408a187c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a769c3e3dee7d86ed50308f7a3f46ef91" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1ae66727344d35f05c56b6163ad70e360c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a0ef432afa41aefcb3fdd537e2d290001" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1aa3275b791787a66f3638611cd6a5ae09" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a6931c5fe803eb5fa9e66438d347c4b6d" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1ab50fba0500357abebb9f3ef3832f2e68" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a02ba5c68f21d4345ec3ee683496ce851" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawChar</name></member>
      <member refid="classBView_1a2ed7c3628692426116fc0bb450c0f0c7" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawChar</name></member>
      <member refid="classBView_1ae7953a2e451fb6e5a439df9e9dc8451a" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawingMode</name></member>
      <member refid="classBView_1ae4b252943befd9f0b62e30517b3ecec2" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a2fdf36421cccce9136cdd9966a971955" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a9f5781a2b37113c55950c93b621984a7" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a65498927c21d6681a0e77c4e3d29efba" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a05881f8b07989e1e9db0bd41f8181341" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a7f2fde4e7719bded5af33805b8242b06" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawPictureAsync</name></member>
      <member refid="classBSplitView_1a5fd0eedcfd927b32593b52c0806ddc3e" prot="protected" virt="virtual"><scope>BSplitView</scope><name>DrawSplitter</name></member>
      <member refid="classBView_1a5c261dbbb4e8157799e85d6ad1530920" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawString</name></member>
      <member refid="classBView_1a83d77965bd9cda6212189d92b97d8198" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawString</name></member>
      <member refid="classBView_1ad3830d09ed0300a1144d47ac78cd2dde" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawString</name></member>
      <member refid="classBView_1a4e1f1c59352a1373ccace7255a0ccf23" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawString</name></member>
      <member refid="classBView_1a5dacf5d193a0c492f296bc1e402e6370" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawString</name></member>
      <member refid="classBView_1a135868eb5cd1b35ee1c2d03517b9a33f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawString</name></member>
      <member refid="classBView_1a8848d931fd0354860a0e71934e66cb03" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawTiledBitmap</name></member>
      <member refid="classBView_1ad281a4e40f212e3cb56c23fa6e574a84" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>DrawTiledBitmapAsync</name></member>
      <member refid="classBView_1ad43cc5c22f83d95632d3d81eff73f425" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>EnableLayoutInvalidation</name></member>
      <member refid="classBView_1a9f54d4478a12823f116168a45af30898" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>EndLayer</name></member>
      <member refid="classBView_1a24ba922f9698936bc27f48b3c51349a1" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>EndLineArray</name></member>
      <member refid="classBView_1ae01506892a9b2d39f6df13726be9d0af" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>EndPicture</name></member>
      <member refid="classBView_1a7bcc3532c03eeeb929278de8fcc1fd25" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>EndRectTracking</name></member>
      <member refid="classBView_1a8851d500773c732ddbb1a4b31f0ad664" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>EventMask</name></member>
      <member refid="classBView_1a1f078f5c987061c5cf3059f7091bcb1a" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ExplicitAlignment</name></member>
      <member refid="classBView_1a4e63cc8ca1f604ccb20f5891adade70f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ExplicitMaxSize</name></member>
      <member refid="classBView_1a1b24db754473008766cdd0fd9c4ee3b7" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ExplicitMinSize</name></member>
      <member refid="classBView_1a218cd0d238104a6ff31c1d72ae2d9e6e" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ExplicitPreferredSize</name></member>
      <member refid="classBView_1af0e5d362474d39199116045aa9621aa5" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillArc</name></member>
      <member refid="classBView_1ac216c652253a21f0f28a7caef07deb77" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillArc</name></member>
      <member refid="classBView_1a49017edefe45ca5c74954e1227e673bb" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillArc</name></member>
      <member refid="classBView_1a4304fe45708f72d0ba20b579870c24ce" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillArc</name></member>
      <member refid="classBView_1a531ad43e129d810ee64208123b550193" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillBezier</name></member>
      <member refid="classBView_1a7cf8a5eaa5451b2c7df0d6fa392012bd" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillBezier</name></member>
      <member refid="classBView_1a06942f0dd4c13175bcfff6a88eae7cc0" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a98a73cbccb42edfc61b93f9aa6f4a13b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a2738cf2f3d39f560d0cff90543f45afa" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a86de91f260577187eaf22ba0fdf32fba" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillEllipse</name></member>
      <member refid="classBView_1ae72733cae8a1fc2da8feb47c0c2149fa" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1adc7d96f2d60a819f03685eb11b6945e2" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a1bdc02a311b2a051ad7fbdbf1789e958" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a96cdb60a8c87e4958380a3077a2197a5" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a22a5ce1f024e622b6eade6a9176ff1f7" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a57b0870cd6a0109c347d80c34ca2f34a" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a4d074663998c7ba922a9d981d0cfe086" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillRect</name></member>
      <member refid="classBView_1aae6a3ff6683bb15ac8c647c946475e8f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillRect</name></member>
      <member refid="classBView_1a4810086c415d90bffa25ab2963716936" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillRegion</name></member>
      <member refid="classBView_1a56828d13947717462b661e1645305509" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillRegion</name></member>
      <member refid="classBView_1a38d7e7b15a13591c20020599886402b5" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillRoundRect</name></member>
      <member refid="classBView_1a73956d28b356b2eee83ebc19bd6e398b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillRoundRect</name></member>
      <member refid="classBView_1a3a2fd2d7313a9bb7dff359a4f4362a5f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillRule</name></member>
      <member refid="classBView_1a91b9ce4b8b8ee13ff5f1071e1fb0d829" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillShape</name></member>
      <member refid="classBView_1a9a82da733397e97b985875be941f77a6" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillShape</name></member>
      <member refid="classBView_1a46ec16609a402d03baa322a04d8c50e2" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillTriangle</name></member>
      <member refid="classBView_1af512b76752705cba87f89c8dac313005" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillTriangle</name></member>
      <member refid="classBView_1a5dd1c64839c11a79e80581e37656cc26" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillTriangle</name></member>
      <member refid="classBView_1a0878dea14a61d58c951bd8e11c0a2ef6" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FillTriangle</name></member>
      <member refid="classBHandler_1a909662a049856f6863a934cf18161554" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FilterList</name></member>
      <member refid="classBView_1ab83ef89f1876913174c825ff7cd02c4a" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>FindView</name></member>
      <member refid="classBView_1a561b10abf94dd65a26b02253af667508" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Flags</name></member>
      <member refid="classBView_1a15465930f84d2d01f7818bd79bc91c3e" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Flush</name></member>
      <member refid="classBView_1a424161ccf6f52a354fdd67ed1376d196" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ForceFontAliasing</name></member>
      <member refid="classBView_1a487b04a3aaffdd1a1afb730dca36a7e2" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Frame</name></member>
      <member refid="classBView_1a551c22b45301e13a3ba959eece3cec7f" prot="public" virt="virtual"><scope>BSplitView</scope><name>FrameMoved</name></member>
      <member refid="classBView_1a85d88f9c2bb6800560874b2061378fa0" prot="public" virt="virtual"><scope>BSplitView</scope><name>FrameResized</name></member>
      <member refid="classBSplitView_1a932d26e65ac258ae00981f4489671f52" prot="private" virt="non-virtual"><scope>BSplitView</scope><name>fSplitLayout</name></member>
      <member refid="classBView_1ad50d5ba2249fdf3dd8640b3573c2a2e8" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>GetBlendingMode</name></member>
      <member refid="classBView_1acf50a063c9621f35a84b1d0245b12d69" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>GetClippingRegion</name></member>
      <member refid="classBView_1af244d01f85e6d9ae7f5fcca4637dc78c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>GetFont</name></member>
      <member refid="classBView_1a5bf95d66754634c647b2ddf7d39b4dfb" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>GetFontHeight</name></member>
      <member refid="classBView_1ad34bee968b1ec98a0bf89343340b6b07" prot="public" virt="virtual"><scope>BSplitView</scope><name>GetHeightForWidth</name></member>
      <member refid="classBSplitView_1a6e1c2fda19d9402f61a1bc176da5d5a9" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>GetInsets</name></member>
      <member refid="classBView_1aec2975b51966c397aa52b9e3eebd2c85" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>GetLayout</name></member>
      <member refid="classBView_1a830ce9cf2ac2ffb5f73f526ee5d6e53d" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>GetMouse</name></member>
      <member refid="classBView_1a089c3ff794c454388a9388c7b6568478" prot="public" virt="virtual"><scope>BSplitView</scope><name>GetPreferredSize</name></member>
      <member refid="classBView_1aaae0dc93bc61d7f221465fbe0aecd30a" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>GetStringWidths</name></member>
      <member refid="classBView_1a772462d751d457f63ee0fc56d8ba02d1" prot="public" virt="virtual"><scope>BSplitView</scope><name>GetSupportedSuites</name></member>
      <member refid="classBView_1afb826fe9b8964e4d843cae190170badf" prot="protected" virt="virtual"><scope>BSplitView</scope><name>GetToolTipAt</name></member>
      <member refid="classBView_1a606e0e7e03516dccb53bf073827460a8" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>HasDefaultColors</name></member>
      <member refid="classBView_1abd411461b7e23ad17e7294f8f5e1cbeb" prot="public" virt="virtual"><scope>BSplitView</scope><name>HasHeightForWidth</name></member>
      <member refid="classBView_1aa9aacc95606b650e6a8d776b51cb902b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>HasSystemColors</name></member>
      <member refid="classBView_1a7688dc04178a2955950154ee3670d029" prot="public" virt="virtual"><scope>BSplitView</scope><name>Hide</name></member>
      <member refid="classBView_1af75bbc1131ad6a90e299c6cbcf623fa7" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>HideToolTip</name></member>
      <member refid="classBView_1abda3583967fba9f6ed9524058d00a6e9" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>HighColor</name></member>
      <member refid="classBView_1aa86f548fba2e82d022066198be6d5af6" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>HighUIColor</name></member>
      <member refid="classBSplitView_1a8a35d5e798f1e5ce4f2612b601ea48f0" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Instantiate</name></member>
      <member refid="classBView_1a8c767d948dc9435c006cabdcab1cd08e" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Invalidate</name></member>
      <member refid="classBView_1ac70b682819c0f9b008c428e02015b19b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Invalidate</name></member>
      <member refid="classBView_1adfced0dcb244e199f872fdbd48349a05" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Invalidate</name></member>
      <member refid="classBView_1a4a711316094e43076a3f5478d937accf" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>InvalidateLayout</name></member>
      <member refid="classBView_1af7e5ebc41cd5a471dcdcfa1f3db801a5" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>InvertRect</name></member>
      <member refid="classBSplitView_1aa0d228fcf02cdc3fe6d252ec54ef1658" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>IsCollapsible</name></member>
      <member refid="classBView_1a165719de682845f80735042a499692ff" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>IsFocus</name></member>
      <member refid="classBView_1a33a65050c2315b19b4c5af16c48e3cdb" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>IsHidden</name></member>
      <member refid="classBView_1a95cfa8ee585230ea8fb224e88eddc503" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>IsHidden</name></member>
      <member refid="classBSplitView_1a1f75e061408b01894aad9c38763dd9df" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>IsItemCollapsed</name></member>
      <member refid="classBView_1a4e86b719129a12afbda7c10371eeca47" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>IsLayoutInvalidationDisabled</name></member>
      <member refid="classBView_1a00a5d5d6edee7d488d77df03945b3e94" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>IsLayoutValid</name></member>
      <member refid="classBView_1a8e3f1722e40fdf01c5131e49199ec3ff" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>IsPrinting</name></member>
      <member refid="classBHandler_1a581b84f0f067afa88768ce6a0c07f59f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>IsWatched</name></member>
      <member refid="classBSplitView_1a918d65e309f9bb1794aaac44a153eccc" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ItemWeight</name></member>
      <member refid="classBSplitView_1a214898038b661225e0d0be6e75095eac" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ItemWeight</name></member>
      <member refid="classBView_1abea50ea665ce5fcb76b32f1302a6852d" prot="public" virt="virtual"><scope>BSplitView</scope><name>KeyDown</name></member>
      <member refid="classBView_1acbc528bb70be49993bd99aa136dbb089" prot="public" virt="virtual"><scope>BSplitView</scope><name>KeyUp</name></member>
      <member refid="classBView_1a854b6ca54eeca610db9eab8b58d68a8b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Layout</name></member>
      <member refid="classBView_1a2f74b3e7c602045d8c927f923f45eefa" prot="public" virt="virtual"><scope>BSplitView</scope><name>LayoutAlignment</name></member>
      <member refid="classBView_1ada521f848e4c800cd02eb4fe529e7ea0" prot="protected" virt="virtual"><scope>BSplitView</scope><name>LayoutChanged</name></member>
      <member refid="classBView_1ae066513c0a788a9544744d409f28cada" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>LayoutContext</name></member>
      <member refid="classBView_1a0a552cc0d8678939c619f98dcc80d254" prot="protected" virt="virtual"><scope>BSplitView</scope><name>LayoutInvalidated</name></member>
      <member refid="classBView_1a5d252dfe28eee049be2192d1a01ed6e3" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>LeftTop</name></member>
      <member refid="classBView_1a551f5961188e4f26ef310eb5eea7c926" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>LineCapMode</name></member>
      <member refid="classBView_1a0aa47adb29d91b4cc6c4924b7f436012" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>LineJoinMode</name></member>
      <member refid="classBView_1ab1cd7cf77a4fa01755d186a05163cfbe" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>LineMiterLimit</name></member>
      <member refid="classBHandler_1a9d64bf66b4914918e24390d117e83477" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>LockLooper</name></member>
      <member refid="classBHandler_1afa0099ff6defcb6d64e3ee1c2fb47afe" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>LockLooperWithTimeout</name></member>
      <member refid="classBHandler_1ac8e949959b12e602e3b0c4f023c60e6c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Looper</name></member>
      <member refid="classBView_1a423c54f22ab95745b28b583af999e554" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>LowColor</name></member>
      <member refid="classBView_1ae32ca6d8f106d44b5b51df82a7eb64c5" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>LowUIColor</name></member>
      <member refid="classBView_1a266a368d81c6e1668b2b9b22b5016853" prot="public" virt="virtual"><scope>BSplitView</scope><name>MakeFocus</name></member>
      <member refid="classBView_1ad1f1843a380e850948cf7e4ed2d5f1ba" prot="public" virt="virtual"><scope>BSplitView</scope><name>MaxSize</name></member>
      <member refid="classBSplitView_1ad4737f5224faa2d34c84299750ab92ec" prot="public" virt="virtual"><scope>BSplitView</scope><name>MessageReceived</name></member>
      <member refid="classBView_1acfb0cffde35b853dab6bc5d1bb03265f" prot="public" virt="virtual"><scope>BSplitView</scope><name>MinSize</name></member>
      <member refid="classBSplitView_1a00b41035774b35159b7f0d33da769eeb" prot="public" virt="virtual"><scope>BSplitView</scope><name>MouseDown</name></member>
      <member refid="classBSplitView_1ac8e0a72e43f68b840f3e52e125023f9d" prot="public" virt="virtual"><scope>BSplitView</scope><name>MouseMoved</name></member>
      <member refid="classBSplitView_1a6ff5943b9c00dc30a2803681f0aa08c2" prot="public" virt="virtual"><scope>BSplitView</scope><name>MouseUp</name></member>
      <member refid="classBView_1a6e122baca4494f6ce739a507054fa81f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>MoveBy</name></member>
      <member refid="classBView_1a979f8f0090284919b6e7c6c04d91cbde" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>MovePenBy</name></member>
      <member refid="classBView_1acb61254a2121f569f6223a95cd835abd" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>MovePenTo</name></member>
      <member refid="classBView_1ae32d7951a4ce9cff6b81899f5208a25f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>MovePenTo</name></member>
      <member refid="classBView_1acce9c93118a3db24078f16bdabc6fbec" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>MoveTo</name></member>
      <member refid="classBView_1a1c9b2df47ba1b9f3a1ce3286995fb8bd" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>MoveTo</name></member>
      <member refid="classBHandler_1a40b246ac272e09b2f641d1290be21200" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Name</name></member>
      <member refid="classBHandler_1a92855d8f88f6072e7225bde292feaa38" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>NextHandler</name></member>
      <member refid="classBView_1a76e7d862fe78e4d2766573bf073b9d30" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>NextSibling</name></member>
      <member refid="classBSplitView_1ac1712dea0d56966dd1343899fbc0a4df" prot="private" virt="non-virtual"><scope>BSplitView</scope><name>operator=</name></member>
      <member refid="classBSplitView_1ab7bd849f5d4aa211d3a8f33ebf75e29d" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Orientation</name></member>
      <member refid="classBView_1aefbf71a7a403900e960ffa3943dc9901" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Origin</name></member>
      <member refid="classBView_1a332f34d9862000dbc859fd4e308839dd" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Parent</name></member>
      <member refid="classBView_1a2774e13c2b12c6a5fee333e95b76b07d" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>PenLocation</name></member>
      <member refid="classBView_1a69d8657d26b49773fa2de914f263b204" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>PenSize</name></member>
      <member refid="classBSplitView_1a9aaf09f717a61303d5aca6e92d96b103" prot="public" virt="virtual"><scope>BSplitView</scope><name>Perform</name></member>
      <member refid="classBView_1abc0d202fe13366b80703afbdb3832951" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>PopState</name></member>
      <member refid="classBView_1a7f51d63e71b60a2721d04436ffbcfe36" prot="public" virt="virtual"><scope>BSplitView</scope><name>PreferredSize</name></member>
      <member refid="classBView_1a2a46f78756eacca3f3d4c90d31c758b1" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>PreviousSibling</name></member>
      <member refid="classBView_1a0ae8ec3e94ee3d41cb329e3df6966566" prot="public" virt="virtual"><scope>BSplitView</scope><name>Pulse</name></member>
      <member refid="classBView_1a1dcb914cd0c6ef8d1291aa8492968d40" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>PushState</name></member>
      <member refid="classBView_1a2cf4e698a4322ecfb946e440e0f7ac62" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Relayout</name></member>
      <member refid="classBView_1a5f93a23d06267da83c128bce222ceb17" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>RemoveChild</name></member>
      <member refid="classBHandler_1a2b608135b27f283802648e7c6f8cdc83" prot="public" virt="virtual"><scope>BSplitView</scope><name>RemoveFilter</name></member>
      <member refid="classBView_1a87e0848b1760a9f28aad4516467a03ed" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>RemoveSelf</name></member>
      <member refid="classBView_1a127933a3820f0bfe0497b5e7ddfa191f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ResetLayoutInvalidation</name></member>
      <member refid="classBView_1ace23acc948bbc9b9272da8dc7f01d3ce" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ResizeBy</name></member>
      <member refid="classBView_1a742bccd6034ef9ade65b0e596fba55f2" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ResizeTo</name></member>
      <member refid="classBView_1a6134097569f75679616257a361086d7a" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ResizeTo</name></member>
      <member refid="classBView_1abe8c63c85555e800e063388e7cf3e1a7" prot="public" virt="virtual"><scope>BSplitView</scope><name>ResizeToPreferred</name></member>
      <member refid="classBView_1a1e93df523fc9edc807274ac6cfd2dc8d" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ResizingMode</name></member>
      <member refid="classBView_1a4c0c6d3b21ae92056e5e40fe4d3ec175" prot="public" virt="virtual"><scope>BSplitView</scope><name>ResolveSpecifier</name></member>
      <member refid="classBView_1a02ab6b6196b140b20ae516a55680e30b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>RotateBy</name></member>
      <member refid="classBView_1a50e12d6b8080b3bc6bc617d31d1ab200" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Scale</name></member>
      <member refid="classBView_1ac83f9fdfb882f849e3ac79bfb06a0fd6" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ScaleBy</name></member>
      <member refid="classBView_1a0878bc7981ba814190b822349599a120" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ScrollBar</name></member>
      <member refid="classBView_1ae20e2a3c46fc30a2a292c832eead7387" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ScrollBy</name></member>
      <member refid="classBView_1a33ed2a9eeff474a756b548996a82b964" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ScrollTo</name></member>
      <member refid="classBView_1a2b76ddc60289ce92e1fb706332edbafc" prot="public" virt="virtual"><scope>BSplitView</scope><name>ScrollTo</name></member>
      <member refid="classBView_1a54991372110199183fed775598ae1912" prot="protected" virt="non-virtual"><scope>BSplitView</scope><name>ScrollWithMouseWheelDelta</name></member>
      <member refid="classBHandler_1a71bf72dc17a64bcd42656722271a9e0c" prot="public" virt="virtual"><scope>BSplitView</scope><name>SendNotices</name></member>
      <member refid="classBView_1ad01fc0fd68e4683af9b9386bf33abf63" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetBlendingMode</name></member>
      <member refid="classBSplitView_1aed69d402e785dc3a0d59c520ceea69c1" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetCollapsible</name></member>
      <member refid="classBSplitView_1a6ff96f9e91cacbbcce3e91aa191b45f7" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetCollapsible</name></member>
      <member refid="classBSplitView_1a22f28179f8d829bf4d7ef72ec3dd5bdb" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetCollapsible</name></member>
      <member refid="classBView_1a8ba0fe3a3dbeec1b7fd8c9655070ef64" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetDiskMode</name></member>
      <member refid="classBView_1a0c392ed0e36213e1007322a9cbca71c0" prot="public" virt="virtual"><scope>BSplitView</scope><name>SetDrawingMode</name></member>
      <member refid="classBView_1a5d8d6b469a8a11a577d1d138cfc31162" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetEventMask</name></member>
      <member refid="classBView_1a6906e47d4fdd6923dd51edb60a83ccea" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetExplicitAlignment</name></member>
      <member refid="classBView_1acd759dd7505050f9cbd8213c71991b8b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetExplicitMaxSize</name></member>
      <member refid="classBView_1abfcb5c761f9b06da3b4a6788aad5d0ee" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetExplicitMinSize</name></member>
      <member refid="classBView_1a98b7d450210099ed59b7cd34f2575e20" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetExplicitPreferredSize</name></member>
      <member refid="classBView_1aeef8a27a5577db87251412ce44421494" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetExplicitSize</name></member>
      <member refid="classBView_1a2019def93337069c0b7d416e103522e9" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetFillRule</name></member>
      <member refid="classBHandler_1a503344dc801858e1f5f419be3919e9cf" prot="public" virt="virtual"><scope>BSplitView</scope><name>SetFilterList</name></member>
      <member refid="classBView_1a4740f9a1e1163073b042102a421a2e33" prot="public" virt="virtual"><scope>BSplitView</scope><name>SetFlags</name></member>
      <member refid="classBView_1a9247127c151153542a3e6bc1f3904433" prot="public" virt="virtual"><scope>BSplitView</scope><name>SetFont</name></member>
      <member refid="classBView_1a443e4d9ff182f85a6b1c8478ef22ffe8" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetFontSize</name></member>
      <member refid="classBView_1ab5482f91a642d545bc3fcefe199f95e9" prot="public" virt="virtual"><scope>BSplitView</scope><name>SetHighColor</name></member>
      <member refid="classBView_1aff9e1ab5e88f33027e72b39874868e9b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetHighColor</name></member>
      <member refid="classBView_1a54eefc28bf7a4bc30612cf83aff2963b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetHighUIColor</name></member>
      <member refid="classBSplitView_1a8eb397e97e4cb51b373e7181989ae4ce" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetInsets</name></member>
      <member refid="classBSplitView_1aac28a0b6f1b366b9a0b71a11e76742a2" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetInsets</name></member>
      <member refid="classBSplitView_1ace2672b3c04e194ec409e7dbef7bd744" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetInsets</name></member>
      <member refid="classBSplitView_1a7053f13d0a452d88f7b4a92ae12806cb" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetItemCollapsed</name></member>
      <member refid="classBSplitView_1a6a296b5acc0761a0f3c6927f8aad23cc" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetItemWeight</name></member>
      <member refid="classBSplitView_1a3de3a710a97c972fd7c58cae3a366d33" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetItemWeight</name></member>
      <member refid="classBSplitView_1aaee57e8169084b071c518adfbac4d97a" prot="public" virt="virtual"><scope>BSplitView</scope><name>SetLayout</name></member>
      <member refid="classBView_1ae97bfe6c0c93fce98bc7bbd93761dbfb" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetLineMode</name></member>
      <member refid="classBView_1af0426243110fb150ad7ef0705209a12c" prot="public" virt="virtual"><scope>BSplitView</scope><name>SetLowColor</name></member>
      <member refid="classBView_1a929fb1ca47a00220c355ae55a0ea6077" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetLowColor</name></member>
      <member refid="classBView_1a879ab88d4e64345069f1041d3a7b652f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetLowUIColor</name></member>
      <member refid="classBView_1ae7705783d064a8613dcc6f36a2866ab2" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetMouseEventMask</name></member>
      <member refid="classBHandler_1abf861126df4b6e71b9261a99da4ad0eb" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetName</name></member>
      <member refid="classBHandler_1a02f78779c8141987d6030e73c22e734a" prot="public" virt="virtual"><scope>BSplitView</scope><name>SetNextHandler</name></member>
      <member refid="classBSplitView_1ad44a0cf21f38857226f73a4c2a884886" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetOrientation</name></member>
      <member refid="classBView_1a769e5fa6486adf12e7a3511ed372a06c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetOrigin</name></member>
      <member refid="classBView_1a7cf4e3ac5b0759b9c38d7b36517f2337" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetOrigin</name></member>
      <member refid="classBView_1a80ea4cb97d2e6e2c3088e610a9e157e6" prot="public" virt="virtual"><scope>BSplitView</scope><name>SetPenSize</name></member>
      <member refid="classBView_1a38d29ea581880c3978d7e50dcc851696" prot="public" virt="virtual"><scope>BSplitView</scope><name>SetResizingMode</name></member>
      <member refid="classBView_1a077136ea06f0a6b39aa0b8b24311cce8" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetScale</name></member>
      <member refid="classBSplitView_1a37ba27cbed4b10204e296aaff88f8549" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetSpacing</name></member>
      <member refid="classBSplitView_1a5f77816e9406b0ad84d2f25ca02a4f24" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetSplitterSize</name></member>
      <member refid="classBView_1a75fb825a3ef69c1c6fbf3535ee2260ab" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetToolTip</name></member>
      <member refid="classBView_1aa377bad64048a2d3cd1c2b272ae3079b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetToolTip</name></member>
      <member refid="classBView_1afbd9b8f35226ba89980c450f7626fc85" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetTransform</name></member>
      <member refid="classBView_1ac247ddc58f1cb719d60e354a77c51c1e" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetViewBitmap</name></member>
      <member refid="classBView_1a046a9c1656823db5401e530cf8121734" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetViewBitmap</name></member>
      <member refid="classBView_1ae8dde0e0330b394db016f3e609e7fb6a" prot="public" virt="virtual"><scope>BSplitView</scope><name>SetViewColor</name></member>
      <member refid="classBView_1a7dace2963c85b5ce55b7d8e96946625c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetViewColor</name></member>
      <member refid="classBView_1a39b4878773b4436e3c76aee51c4fbc09" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetViewCursor</name></member>
      <member refid="classBView_1a576100502a8c6dfb46ff36b08cbe9405" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetViewOverlay</name></member>
      <member refid="classBView_1a9770c1bb97d7ffd797f7c40ca1339f98" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetViewOverlay</name></member>
      <member refid="classBView_1a34f020c4bb1008cef972cf1eec7dba0f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SetViewUIColor</name></member>
      <member refid="classBView_1a06e0584057d6c7a7c7e048b6272b7016" prot="public" virt="virtual"><scope>BSplitView</scope><name>Show</name></member>
      <member refid="classBView_1a61d28f55d6fdc55b59c38c44b9788205" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ShowToolTip</name></member>
      <member refid="classBSplitView_1a0949ee48836dd1bce7aa70ab77f13f4b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Spacing</name></member>
      <member refid="classBSplitView_1a8063eb3ae201f32fcf44e493be4ee68f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>SplitterSize</name></member>
      <member refid="classBHandler_1af7d600e33a0586af7444d9abc8500504" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a20713ff6ee9df49a014f391374eaf689" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a58d7c8d30e47fbb7590f10dea1f21166" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a31927c51d89e0e3b3bf609a786ee6c3b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a9d1f0d55b3dc7337058aba769b4e4f93" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1ad3544be491270f856a0af8d36ce02d78" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1a199c167e0dcee95aa65d09435804b3d9" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StopWatchingAll</name></member>
      <member refid="classBHandler_1a8b9a424ce63f5932666094b6eadf10cf" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StopWatchingAll</name></member>
      <member refid="classBView_1adef480de8a8bcd2fff3129660501616e" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StringWidth</name></member>
      <member refid="classBView_1aef3638cf597407e6a9f31bc75cd42097" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StringWidth</name></member>
      <member refid="classBView_1a57222cd40096dfe23e1df86a01277041" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokeArc</name></member>
      <member refid="classBView_1a9c958b9399925a8a0ea333afd337ebfd" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokeArc</name></member>
      <member refid="classBView_1a64ea2ad06018b0b3b156113d201c7ad7" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokeBezier</name></member>
      <member refid="classBView_1a042703445263f1d9a9213757fcf27414" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokeEllipse</name></member>
      <member refid="classBView_1ae7727ca808873634363e5306fdbcc09a" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokeEllipse</name></member>
      <member refid="classBView_1a909ee03901fac4ae5504f7faf5e41a7c" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokeLine</name></member>
      <member refid="classBView_1ab713fc42e330d0a091a9774edfb9626f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokeLine</name></member>
      <member refid="classBView_1ae871d03592c1bba5d6be3d5d982ea747" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1a1638c58553467f3ebe5ee2b3683d4905" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1a1482fddababe3dd1377f86a038f7119b" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1ad3893af66d3891855f9db7072bfb4de7" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokeRect</name></member>
      <member refid="classBView_1acf743b2ba22b82c8bc38eb514513df55" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokeRoundRect</name></member>
      <member refid="classBView_1a507e9b732e880ac8e6379e19e74d5757" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokeShape</name></member>
      <member refid="classBView_1a8221cce8942e590c2fea954f57933e78" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokeTriangle</name></member>
      <member refid="classBView_1ae59fc9e9cfaba5e2d6e79a90723a3330" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>StrokeTriangle</name></member>
      <member refid="classBView_1a27e217abb3fefa45b6e4ceb7a54cb362" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Sync</name></member>
      <member refid="classBView_1a668a4ed5419c86a7f2696ca7ece28df7" prot="public" virt="virtual"><scope>BSplitView</scope><name>TargetedByScrollView</name></member>
      <member refid="classBView_1a127ceec2101b12c0fbe1e0e66a7b9dc1" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ToolTip</name></member>
      <member refid="classBView_1ab16cc72cf8ae3b40abcf1f714e7e9b74" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Transform</name></member>
      <member refid="classBView_1a98597d70ae48b2576683f25078135534" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>TransformTo</name></member>
      <member refid="classBView_1a8ae6d4e1cdfeeee33b753d56bee6ae7f" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>TranslateBy</name></member>
      <member refid="classBView_1ac2e293fbdd999e4857b44b6e4d4c3820" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>TruncateString</name></member>
      <member refid="classBHandler_1ab131af7eb7aa2b9eea3a11ac1bfd4c03" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>UnlockLooper</name></member>
      <member refid="classBView_1a8b2b1d9e08ce0c1763dd6a077ed02fdd" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ViewColor</name></member>
      <member refid="classBView_1aec6c89446eb4f5ded151adced9126df8" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>ViewUIColor</name></member>
      <member refid="classBView_1a32733d357b76bc3504cae326d174f4a2" prot="public" virt="non-virtual"><scope>BSplitView</scope><name>Window</name></member>
      <member refid="classBView_1a5b7aeff0b2608ec63e2c01153a7717f6" prot="public" virt="virtual"><scope>BSplitView</scope><name>WindowActivated</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BSplitView</scope><name>~BArchivable</name></member>
      <member refid="classBHandler_1a928254034959d19ef588b7898a6f8194" prot="public" virt="virtual"><scope>BSplitView</scope><name>~BHandler</name></member>
      <member refid="classBSplitView_1aab3f4572e185bd47d15d4fba007082a9" prot="public" virt="virtual"><scope>BSplitView</scope><name>~BSplitView</name></member>
      <member refid="classBView_1a7df0d7eaeb97a3c8a800f9e321f23f67" prot="public" virt="virtual"><scope>BSplitView</scope><name>~BView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
