<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBGridLayout" kind="class" language="C++" prot="public">
    <compoundname>BGridLayout</compoundname>
    <basecompoundref refid="classBTwoDimensionalLayout" prot="public" virt="non-virtual">BTwoDimensionalLayout</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBGridLayout_1aac461d37fd5e665f49b3474fc7555918" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BGridLayout::_reserved[5]</definition>
        <argsstring>[5]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BGridLayout::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="130" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/GridLayout.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBGridLayout_1aaa361a891c613ae264c50e7d16542fde" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BGridLayout::fColumnCount</definition>
        <argsstring></argsstring>
        <name>fColumnCount</name>
        <qualifiedname>BGridLayout::fColumnCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="121" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/GridLayout.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBGridLayout_1a411608806b6954014c49a3f0e3e02364" prot="private" static="no" mutable="no">
        <type>RowInfoArray *</type>
        <definition>RowInfoArray* BGridLayout::fColumnInfos</definition>
        <argsstring></argsstring>
        <name>fColumnInfos</name>
        <qualifiedname>BGridLayout::fColumnInfos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="125" column="13" bodyfile="/boot/home/src/haiku/headers/os/interface/GridLayout.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBGridLayout_1a213e215a3f400141bb7e2d024777387d" prot="private" static="no" mutable="no">
        <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> ***</type>
        <definition>BLayoutItem*** BGridLayout::fGrid</definition>
        <argsstring></argsstring>
        <name>fGrid</name>
        <qualifiedname>BGridLayout::fGrid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="120" column="12" bodyfile="/boot/home/src/haiku/headers/os/interface/GridLayout.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBGridLayout_1a2d47cd577dc5cc920b3ba0cecc0ae771" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BGridLayout::fMultiColumnItems</definition>
        <argsstring></argsstring>
        <name>fMultiColumnItems</name>
        <qualifiedname>BGridLayout::fMultiColumnItems</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="127" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/GridLayout.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBGridLayout_1a8dce9d7d21f19c9703a1d3261d8788cb" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BGridLayout::fMultiRowItems</definition>
        <argsstring></argsstring>
        <name>fMultiRowItems</name>
        <qualifiedname>BGridLayout::fMultiRowItems</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="128" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/GridLayout.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBGridLayout_1a318002425ece0165074cd25de0024593" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BGridLayout::fRowCount</definition>
        <argsstring></argsstring>
        <name>fRowCount</name>
        <qualifiedname>BGridLayout::fRowCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="122" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/GridLayout.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBGridLayout_1a71850f931ef81b95c40e8eb9e56597c8" prot="private" static="no" mutable="no">
        <type>RowInfoArray *</type>
        <definition>RowInfoArray* BGridLayout::fRowInfos</definition>
        <argsstring></argsstring>
        <name>fRowInfos</name>
        <qualifiedname>BGridLayout::fRowInfos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="124" column="13" bodyfile="/boot/home/src/haiku/headers/os/interface/GridLayout.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBGridLayout_1a184f72474433df9990cbf2719bd0bf78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BGridLayout::BGridLayout</definition>
        <argsstring>(BMessage *from)</argsstring>
        <name>BGridLayout</name>
        <qualifiedname>BGridLayout::BGridLayout</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Archive constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to build the <ref refid="classBGridLayout" kindref="compound">BGridLayout</ref> from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a4a02d826ce903a42aebfb5b929160e95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BGridLayout::BGridLayout</definition>
        <argsstring>(float horizontal=B_USE_DEFAULT_SPACING, float vertical=B_USE_DEFAULT_SPACING)</argsstring>
        <name>BGridLayout</name>
        <qualifiedname>BGridLayout::BGridLayout</qualifiedname>
        <param>
          <type>float</type>
          <declname>horizontal</declname>
          <defval>B_USE_DEFAULT_SPACING</defval>
        </param>
        <param>
          <type>float</type>
          <declname>vertical</declname>
          <defval>B_USE_DEFAULT_SPACING</defval>
        </param>
        <briefdescription>
<para>Create a <ref refid="classBGridLayout" kindref="compound">BGridLayout</ref> with <emphasis>horizontal</emphasis> space between columns and <emphasis>vertical</emphasis> space between rows. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1af7ebd1830dfc307aa827fde117c22bd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BGridLayout::~BGridLayout</definition>
        <argsstring>()</argsstring>
        <name>~BGridLayout</name>
        <qualifiedname>BGridLayout::~BGridLayout</qualifiedname>
        <briefdescription>
<para>Destructor method. </para>
        </briefdescription>
        <detaileddescription>
<para>Standard Destructor.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="18" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a2428b80791df9c5d01c5c88a62455d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>BLayoutItem * BGridLayout::AddItem</definition>
        <argsstring>(BLayoutItem *item)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BGridLayout::AddItem</qualifiedname>
        <reimplements refid="classBLayout_1a61bab6592bb26173d12488526b203ead">AddItem</reimplements>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Adds <emphasis>item</emphasis> to this layout in the first empty cell available, or in a new column in the first row if there are no emtpy cells. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="55" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a091ce0e801d97117595bd53bb220d5a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>BLayoutItem * BGridLayout::AddItem</definition>
        <argsstring>(BLayoutItem *item, int32 column, int32 row, int32 columnCount=1, int32 rowCount=1)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BGridLayout::AddItem</qualifiedname>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>columnCount</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>rowCount</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Adds <emphasis>item</emphasis> to this layout at <emphasis>column</emphasis> and <emphasis>row</emphasis>. <emphasis>item</emphasis> may also occupy additional cells if <emphasis>columnCount</emphasis> or <emphasis>rowCount</emphasis> are greater than 1. </para>
        </briefdescription>
        <detaileddescription>
<para>Fails and returns <computeroutput>NULL</computeroutput> if the requested area is occupied, or if internal memory allocations fail.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="57" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a016186a888ad44a8807d7686c00f2d84" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>BLayoutItem * BGridLayout::AddItem</definition>
        <argsstring>(int32 index, BLayoutItem *item)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BGridLayout::AddItem</qualifiedname>
        <reimplements refid="classBLayout_1a1b9a50f6a573a777afc2b27bac65c7f6">AddItem</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para><ref refid="classBGridLayout_1a2428b80791df9c5d01c5c88a62455d7e" kindref="member">BGridLayout::AddItem(BLayoutItem*)</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="56" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a226fb320cbb2f5028fe4b537d9922fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
        <definition>BLayoutItem * BGridLayout::AddView</definition>
        <argsstring>(BView *child)</argsstring>
        <name>AddView</name>
        <qualifiedname>BGridLayout::AddView</qualifiedname>
        <reimplements refid="classBLayout_1a83f286f504a1a735f07304c7647ba7f9">AddView</reimplements>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Adds <emphasis>child</emphasis> to this layout in the first empty cell available, or in a new column in the first row if there are no emtpy cells. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="50" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a57eef9f3b083c46ba4381f36b86e39a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
        <definition>BLayoutItem * BGridLayout::AddView</definition>
        <argsstring>(BView *child, int32 column, int32 row, int32 columnCount=1, int32 rowCount=1)</argsstring>
        <name>AddView</name>
        <qualifiedname>BGridLayout::AddView</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>columnCount</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>rowCount</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Adds <emphasis>child</emphasis> to this layout at <emphasis>column</emphasis> and <emphasis>row</emphasis>. <emphasis>child</emphasis> may also occupy additional cells if <emphasis>columnCount</emphasis> or <emphasis>rowCount</emphasis> are greater than <computeroutput>1</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Fails and returns NULL if the requested area is occupied, or if internal memory allocations fail.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="52" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a98676374bc080f6070686362409b4378" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
        <definition>BLayoutItem * BGridLayout::AddView</definition>
        <argsstring>(int32 index, BView *child)</argsstring>
        <name>AddView</name>
        <qualifiedname>BGridLayout::AddView</qualifiedname>
        <reimplements refid="classBLayout_1ad7ff945dc53e94a34954da6eaf9e2268">AddView</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para><ref refid="classBGridLayout_1a226fb320cbb2f5028fe4b537d9922fb3" kindref="member">BGridLayout::AddView(BView*)</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="51" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1aab5e2df95091bb76bb93628dcd01013e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BGridLayout::Archive</definition>
        <argsstring>(BMessage *into, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BGridLayout::Archive</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1a405b207a3fa1770d5349de6d66705390">Archive</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>into</declname>
          <defname>archive</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Archives this layout into <emphasis>archive</emphasis>. If deep is true, also archives the items in this layout, calling <ref refid="classBGridLayout_1aa78c81cd57baacbdb8890b0de281f720" kindref="member">ItemArchived()</ref> for each one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="61" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a293c2fa0ead94d8618a8406b13ffebe2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BGridLayout::ColumnWeight</definition>
        <argsstring>(int32 column) const</argsstring>
        <name>ColumnWeight</name>
        <qualifiedname>BGridLayout::ColumnWeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Returns the weight for the specified <emphasis>column</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <emphasis>column</emphasis> weight as a float.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="30" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a41d11f5014ee5fe80f4569c482a8f7d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BGridLayout::CountColumns</definition>
        <argsstring>() const</argsstring>
        <name>CountColumns</name>
        <qualifiedname>BGridLayout::CountColumns</qualifiedname>
        <briefdescription>
<para>Returns the number of active columns in this layout. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of active columns in the layout.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="20" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a09262c74dc1eafac49376414987fe05e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BGridLayout::CountRows</definition>
        <argsstring>() const</argsstring>
        <name>CountRows</name>
        <qualifiedname>BGridLayout::CountRows</qualifiedname>
        <briefdescription>
<para>Returns the number of active rows in this layout. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of active rows in the layout.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="21" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1aa7c56dd61733adac9bc30055ac3d72be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BGridLayout::HorizontalSpacing</definition>
        <argsstring>() const</argsstring>
        <name>HorizontalSpacing</name>
        <qualifiedname>BGridLayout::HorizontalSpacing</qualifiedname>
        <briefdescription>
<para>Returns the spacing between columns for this layout. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The spacing between columns for the layout.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="23" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a1d39c90b5377087ca099830b03a7505b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
        <definition>BLayoutItem * BGridLayout::ItemAt</definition>
        <argsstring>(int32 column, int32 row) const</argsstring>
        <name>ItemAt</name>
        <qualifiedname>BGridLayout::ItemAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Get a pointer to the item at the requested cell in the grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>The column, starting with <computeroutput>0</computeroutput> for the leftmost column. Note that the value should be 0 or higher. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>The row, starting with <computeroutput>0</computeroutput> for the topmost row. Note that the value should be 0 or higher.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the layout item at these coordinates, or <computeroutput>NULL</computeroutput> if there is no item. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="48" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a2415f7ea73feec40c86b051a2e988d80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BGridLayout::MaxColumnWidth</definition>
        <argsstring>(int32 column) const</argsstring>
        <name>MaxColumnWidth</name>
        <qualifiedname>BGridLayout::MaxColumnWidth</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Returns the maximum width for <emphasis>column</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>The column to get the maximum width of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The maximum width for <emphasis>column</emphasis> as a float.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="36" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a8538b5d0f105f6640149751f08d1b30f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BGridLayout::MaxRowHeight</definition>
        <argsstring>(int32 row) const</argsstring>
        <name>MaxRowHeight</name>
        <qualifiedname>BGridLayout::MaxRowHeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Returns the maximum height for <emphasis>row</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="45" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1ad354c9e58a25cc05e750b880bc9968fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BGridLayout::MinColumnWidth</definition>
        <argsstring>(int32 column) const</argsstring>
        <name>MinColumnWidth</name>
        <qualifiedname>BGridLayout::MinColumnWidth</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Returns the minimum width for <emphasis>column</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>The column to get the minimum width of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The minimum width for <emphasis>column</emphasis> as a float.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="33" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a183c52fea05a42d7a93057c6ab8b875f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BGridLayout::MinRowHeight</definition>
        <argsstring>(int row) const</argsstring>
        <name>MinRowHeight</name>
        <qualifiedname>BGridLayout::MinRowHeight</qualifiedname>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Returns the minimum height for <emphasis>row</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="42" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a0ab603b381b9ba4d7efb3efbeae4940f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BGridLayout::Perform</definition>
        <argsstring>(perform_code d, void *arg)</argsstring>
        <name>Perform</name>
        <qualifiedname>BGridLayout::Perform</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1aac851d9c86397296d0e7e69716c01926">Perform</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" kindref="member">perform_code</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Perform some action (Internal method defined for binary compatibility purposes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="64" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1acf3c8a0b536feb54a3b4470dcff6bc07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BGridLayout::RowWeight</definition>
        <argsstring>(int32 row) const</argsstring>
        <name>RowWeight</name>
        <qualifiedname>BGridLayout::RowWeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Returns the weight of the specified <emphasis>row</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The weight of the <emphasis>row</emphasis>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="39" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a48a5af01e506c38dd7bd191fb80de81c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGridLayout::SetColumnWeight</definition>
        <argsstring>(int32 column, float weight)</argsstring>
        <name>SetColumnWeight</name>
        <qualifiedname>BGridLayout::SetColumnWeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Set the weight for <emphasis>column</emphasis> to <emphasis>weight</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>The column to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The weight to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a9012b327299ab6222e2b6e50ee7fab69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGridLayout::SetHorizontalSpacing</definition>
        <argsstring>(float spacing)</argsstring>
        <name>SetHorizontalSpacing</name>
        <qualifiedname>BGridLayout::SetHorizontalSpacing</qualifiedname>
        <param>
          <type>float</type>
          <declname>spacing</declname>
        </param>
        <briefdescription>
<para>Set the spacing between columns for this layout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spacing</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of pixels of spacing to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="26" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1af91df9043a9b58b830385a45e0e01b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGridLayout::SetMaxColumnWidth</definition>
        <argsstring>(int32 column, float width)</argsstring>
        <name>SetMaxColumnWidth</name>
        <qualifiedname>BGridLayout::SetMaxColumnWidth</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Sets the maximum width for <emphasis>column</emphasis> to <emphasis>width</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>The column to set the maximum width of. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>width</emphasis> to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1af690e5a00ac638577dde537d12e5a580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGridLayout::SetMaxRowHeight</definition>
        <argsstring>(int32 row, float height)</argsstring>
        <name>SetMaxRowHeight</name>
        <qualifiedname>BGridLayout::SetMaxRowHeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Sets the maximum height for <emphasis>row</emphasis> to <emphasis>width</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="46" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a17dae22d385c8a1c94f049c51aeeb2af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGridLayout::SetMinColumnWidth</definition>
        <argsstring>(int32 column, float width)</argsstring>
        <name>SetMinColumnWidth</name>
        <qualifiedname>BGridLayout::SetMinColumnWidth</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Sets the minimum width for <emphasis>column</emphasis> to <emphasis>width</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>column</emphasis> to set the minimum width of. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>width</emphasis> to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="34" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a6a3e987054c7cf38ab74f8a2ebe8e31c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGridLayout::SetMinRowHeight</definition>
        <argsstring>(int32 row, float height)</argsstring>
        <name>SetMinRowHeight</name>
        <qualifiedname>BGridLayout::SetMinRowHeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Sets the minimum height for <emphasis>row</emphasis> to <emphasis>width</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="43" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a5c75c2287517197736cb92ddd07a4938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGridLayout::SetRowWeight</definition>
        <argsstring>(int32 row, float weight)</argsstring>
        <name>SetRowWeight</name>
        <qualifiedname>BGridLayout::SetRowWeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Set the weight of <emphasis>row</emphasis> to <emphasis>weight</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>row</emphasis> number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>weight</emphasis> to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a43544ce6335ef85027999a9b97fa2e86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGridLayout::SetSpacing</definition>
        <argsstring>(float horizontal, float vertical)</argsstring>
        <name>SetSpacing</name>
        <qualifiedname>BGridLayout::SetSpacing</qualifiedname>
        <param>
          <type>float</type>
          <declname>horizontal</declname>
        </param>
        <param>
          <type>float</type>
          <declname>vertical</declname>
        </param>
        <briefdescription>
<para>Set the spacing between columns and rows for this layout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>horizontal</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of <emphasis>horizontal</emphasis> pixels of spacing to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertical</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of <emphasis>vertical</emphasis> pixels of spacing to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="28" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1ab3b0bdb1197c4a9b632c349919b795a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGridLayout::SetVerticalSpacing</definition>
        <argsstring>(float spacing)</argsstring>
        <name>SetVerticalSpacing</name>
        <qualifiedname>BGridLayout::SetVerticalSpacing</qualifiedname>
        <param>
          <type>float</type>
          <declname>spacing</declname>
        </param>
        <briefdescription>
<para>Set the spacing between rows for this layout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spacing</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of pixels of spacing to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a0d747cd760a2e11913264be63992cf01" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BGridLayout::VerticalSpacing</definition>
        <argsstring>() const</argsstring>
        <name>VerticalSpacing</name>
        <qualifiedname>BGridLayout::VerticalSpacing</qualifiedname>
        <briefdescription>
<para>Returns the spacing between rows for this layout. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The spacing between rows for the layout.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="24" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBGridLayout_1ac746e6afc50265c2d38d8ee9adea53d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>static BArchivable * BGridLayout::Instantiate</definition>
        <argsstring>(BMessage *from)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BGridLayout::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Instantiate the layout from the message <emphasis>from</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="62" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBGridLayout_1adddbabf3f060e0e3d20af12cf3f3dab1" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BGridLayout::AllArchived</definition>
        <argsstring>(BMessage *into) const</argsstring>
        <name>AllArchived</name>
        <qualifiedname>BGridLayout::AllArchived</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1adb001699008fe0cb2eff51661da175e6">AllArchived</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
          <defname>into</defname>
        </param>
        <briefdescription>
<para>Method relating to the use of <computeroutput><ref refid="classBArchiver" kindref="compound">BArchiver</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This hook function is called once the first <ref refid="classBArchiver" kindref="compound">BArchiver</ref> that was created in an archiving session is either destroyed, or has its Finish() method called. Implementations of this method can be used, in conjunction with <ref refid="classBArchiver_1a77f099b123416c719be2cd78eb999d19" kindref="member">BArchiver::IsArchived()</ref>, to reference objects in your archive that you do not own, depending on whether or not those objects were archived by their owners. Implementations of this method should call the implementation of their parent class, the same as for the <ref refid="classBGridLayout_1aab5e2df95091bb76bb93628dcd01013e" kindref="member">Archive()</ref> method.</para>
<para><simplesect kind="warning"><para>To guarantee that your <ref refid="classBGridLayout_1adddbabf3f060e0e3d20af12cf3f3dab1" kindref="member">AllArchived()</ref> method will be called during archival, you must create a <ref refid="classBArchiver" kindref="compound">BArchiver</ref> object in your <ref refid="classBGridLayout_1aab5e2df95091bb76bb93628dcd01013e" kindref="member">Archive()</ref> implementation.</para>
</simplesect>
<simplesect kind="warning"><para>You should archive any objects you own in your <ref refid="classBGridLayout_1aab5e2df95091bb76bb93628dcd01013e" kindref="member">Archive()</ref> method implementation, and <bold>NOT</bold> your <ref refid="classBGridLayout_1adddbabf3f060e0e3d20af12cf3f3dab1" kindref="member">AllArchived()</ref> method.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBArchiver" kindref="compound">BArchiver</ref> <ref refid="classBArchiver_1a7c82dbc0fb42795c575ac2c6a5405297" kindref="member">BArchiver::Finish()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="67" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a2cd9bd9915c14ac32c0081234e12a5fb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BGridLayout::AllUnarchived</definition>
        <argsstring>(const BMessage *from)</argsstring>
        <name>AllUnarchived</name>
        <qualifiedname>BGridLayout::AllUnarchived</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1a67ba660a95e7cf8647be8835184b6cc3">AllUnarchived</reimplements>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Unarchives the <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref>&apos;s for this layout, calling <ref refid="classBGridLayout_1ad7bda5e11e67558de88b0ccaeccd3949" kindref="member">ItemUnarchived()</ref> for each one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="68" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a2bc20cb5debda316d2ba0144acece99d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::GetColumnRowConstraints</definition>
        <argsstring>(orientation orientation, int32 index, ColumnRowConstraints *constraints)</argsstring>
        <name>GetColumnRowConstraints</name>
        <qualifiedname>BGridLayout::GetColumnRowConstraints</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1acfbb5ddafdbd9a22f0c2a7e23d706e6f">GetColumnRowConstraints</reimplements>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="structBTwoDimensionalLayout_1_1ColumnRowConstraints" kindref="compound">ColumnRowConstraints</ref> *</type>
          <declname>constraints</declname>
        </param>
        <briefdescription>
<para>Fill in the ColumnRowConstraints for a certain column or row in the <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is used to communicate the size constraints and weight for a given row/column in the <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref>.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="82" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a7b5b1de10775ef2d2f35dc3956a63bee" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::GetItemDimensions</definition>
        <argsstring>(BLayoutItem *item, Dimensions *dimensions)</argsstring>
        <name>GetItemDimensions</name>
        <qualifiedname>BGridLayout::GetItemDimensions</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1a537932c4a364b7e206e87788dafe40a6">GetItemDimensions</reimplements>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="structBTwoDimensionalLayout_1_1Dimensions" kindref="compound">Dimensions</ref> *</type>
          <declname>dimensions</declname>
        </param>
        <briefdescription>
<para>Tell the base class what column and row a <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> is in as well as how many columns and rows it covers. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="86" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1aac43e2331af65b3c4fa7f07334871ed7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BGridLayout::HasMultiColumnItems</definition>
        <argsstring>()</argsstring>
        <name>HasMultiColumnItems</name>
        <qualifiedname>BGridLayout::HasMultiColumnItems</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1ad8e56e07b576c30be9e19dba72818486">HasMultiColumnItems</reimplements>
        <briefdescription>
<para>Tests whether or not this <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref> contains any <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref>'s spanning more than one column. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref> implementation returns false.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="77" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1af37fc1cf8cfee1ec101b7b4ee8913c1e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BGridLayout::HasMultiRowItems</definition>
        <argsstring>()</argsstring>
        <name>HasMultiRowItems</name>
        <qualifiedname>BGridLayout::HasMultiRowItems</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1a3a50bf74279d04218188c5574d82ff0d">HasMultiRowItems</reimplements>
        <briefdescription>
<para>Tests whether or not this <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref> contains any <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref>'s spanning more than one row. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref> implementation returns false.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="78" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a40fef2bcfdd8063cfc43c64f4a00c5fe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BGridLayout::InternalCountColumns</definition>
        <argsstring>()</argsstring>
        <name>InternalCountColumns</name>
        <qualifiedname>BGridLayout::InternalCountColumns</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1a1e5383c9bfe9813c83d611c2069b3418">InternalCountColumns</reimplements>
        <briefdescription>
<para>Get the number of columns in the <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of columns in the <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="80" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a3cf37b7dd7b769b41e262b3009a3987c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BGridLayout::InternalCountRows</definition>
        <argsstring>()</argsstring>
        <name>InternalCountRows</name>
        <qualifiedname>BGridLayout::InternalCountRows</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1afac018580a44f991c9d604e226226e76">InternalCountRows</reimplements>
        <briefdescription>
<para>Get the number of rows in the <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of rows in the <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="81" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a5edc94b8a647debd21f7303a225c0bfe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BGridLayout::ItemAdded</definition>
        <argsstring>(BLayoutItem *item, int32 atIndex)</argsstring>
        <name>ItemAdded</name>
        <qualifiedname>BGridLayout::ItemAdded</qualifiedname>
        <reimplements refid="classBAbstractLayout_1a842b424b62039753db229d3deafd0d10">ItemAdded</reimplements>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>atIndex</declname>
        </param>
        <briefdescription>
<para>Hook method called when <emphasis>item</emphasis> is added to this layout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> that is being added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>atIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> on succcess, false if <emphasis>item</emphasis> will not be added.</para>
</simplesect>
<simplesect kind="note"><para>This is a good time to allocate data for a <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> and attach it to <emphasis>item</emphasis> via <ref refid="classBLayoutItem_1abffd9c09f9951f25b4a752a06e4040c3" kindref="member">BLayoutItem::SetLayoutData()</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="74" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1aa78c81cd57baacbdb8890b0de281f720" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BGridLayout::ItemArchived</definition>
        <argsstring>(BMessage *into, BLayoutItem *item, int32 index) const</argsstring>
        <name>ItemArchived</name>
        <qualifiedname>BGridLayout::ItemArchived</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1af70e3bd455f4dafa684ac6352223fcc4">ItemArchived</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>into</declname>
        </param>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Hook for derived classes to add data specific to <emphasis>item</emphasis> to the <emphasis>into</emphasis> <ref refid="classBMessage" kindref="compound">BMessage</ref>. <emphasis>item</emphasis> resides at <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The same archive is passed to <ref refid="classBLayout_1a7b342780ed464d0074a63fe8fac67003" kindref="member">BLayout::ItemArchived()</ref> for all items, so any data added for each item will be stored in an array.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="69" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a69ef1fdfffae399d06a09fe99b72fda0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::ItemRemoved</definition>
        <argsstring>(BLayoutItem *item, int32 fromIndex)</argsstring>
        <name>ItemRemoved</name>
        <qualifiedname>BGridLayout::ItemRemoved</qualifiedname>
        <reimplements refid="classBAbstractLayout_1a4df45f148af285d521bc5d6a491dac7b">ItemRemoved</reimplements>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromIndex</declname>
        </param>
        <briefdescription>
<para>Hook method called when <emphasis>item</emphasis> is removed from this layout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> being removed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fromIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index where <emphasis>item</emphasis> used to reside.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
When this hook is called, <emphasis>item</emphasis> is not yet completely removed. It can no longer be accessed with LayoutItemAt(), nor does it contribute to the value of <ref refid="classBLayout_1ab7d1b881e91213047412abdcb10eae4f" kindref="member">CountItems()</ref>, but the item has not yet had its ItemDetached() hook called.</para>
<para><simplesect kind="note"><para>This is a good time to delete the data you&apos;ve attached to <emphasis>item</emphasis> via <ref refid="classBLayoutItem_1abffd9c09f9951f25b4a752a06e4040c3" kindref="member">BLayoutItem::SetLayoutData()</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="75" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1ad7bda5e11e67558de88b0ccaeccd3949" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BGridLayout::ItemUnarchived</definition>
        <argsstring>(const BMessage *from, BLayoutItem *item, int32 index)</argsstring>
        <name>ItemUnarchived</name>
        <qualifiedname>BGridLayout::ItemUnarchived</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1a7e98a6fb9b41e0856e353f6c0baaee12">ItemUnarchived</reimplements>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Hook for derived classes to retrieve data specific to <emphasis>item</emphasis> from the <emphasis>from</emphasis> <ref refid="classBMessage" kindref="compound">BMessage</ref>. <emphasis>item</emphasis> resides at <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The same archive is passed to <ref refid="classBLayout_1a7b342780ed464d0074a63fe8fac67003" kindref="member">BLayout::ItemArchived()</ref> for all items, so any data added for each item will be stored in an array. You should pass <emphasis>index</emphasis> to the <ref refid="classBMessage" kindref="compound">BMessage</ref> methods you will be using in this method.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="71" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBGridLayout_1a7742c6c52e5da6201e267bb2eec4708f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BGridLayout::BGridLayout</definition>
        <argsstring>(const BGridLayout &amp;)</argsstring>
        <name>BGridLayout</name>
        <qualifiedname>BGridLayout::BGridLayout</qualifiedname>
        <param>
          <type>const <ref refid="classBGridLayout" kindref="compound">BGridLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1ae961267c4d60f2863a48778c7ada08ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BGridLayout::_AreGridCellsEmpty</definition>
        <argsstring>(int32 column, int32 row, int32 columnCount, int32 rowCount)</argsstring>
        <name>_AreGridCellsEmpty</name>
        <qualifiedname>BGridLayout::_AreGridCellsEmpty</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>columnCount</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>rowCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="94" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a3adc19257683f65827eaa6200b5372d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BGridLayout::_InsertItemIntoGrid</definition>
        <argsstring>(BLayoutItem *item)</argsstring>
        <name>_InsertItemIntoGrid</name>
        <qualifiedname>BGridLayout::_InsertItemIntoGrid</qualifiedname>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="97" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1afa094ec995f493b305258ab93a95cdb0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BGridLayout::_IsGridCellEmpty</definition>
        <argsstring>(int32 column, int32 row)</argsstring>
        <name>_IsGridCellEmpty</name>
        <qualifiedname>BGridLayout::_IsGridCellEmpty</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="93" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1abbe96afab4e198bce14873cc7ad45115" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ItemLayoutData *</type>
        <definition>ItemLayoutData * BGridLayout::_LayoutDataForItem</definition>
        <argsstring>(BLayoutItem *item) const</argsstring>
        <name>_LayoutDataForItem</name>
        <qualifiedname>BGridLayout::_LayoutDataForItem</qualifiedname>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="100" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a211ac60b7dcf7a63fae46d1b8b8a88b0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::_ReservedGridLayout1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGridLayout1</name>
        <qualifiedname>BGridLayout::_ReservedGridLayout1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="105" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a5189ad2281cb2d5267a2d8e29b57e0ee" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::_ReservedGridLayout10</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGridLayout10</name>
        <qualifiedname>BGridLayout::_ReservedGridLayout10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="114" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1aa37d2ecdc66979122e1d770da1f9eecf" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::_ReservedGridLayout2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGridLayout2</name>
        <qualifiedname>BGridLayout::_ReservedGridLayout2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="106" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a1f95807a48eba6804c8ba5de04466d20" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::_ReservedGridLayout3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGridLayout3</name>
        <qualifiedname>BGridLayout::_ReservedGridLayout3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="107" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a78b74fd725e89818e2f6c21e65a1ae8d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::_ReservedGridLayout4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGridLayout4</name>
        <qualifiedname>BGridLayout::_ReservedGridLayout4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="108" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a47a939ecd9dee5eabb11f5fdf6b36328" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::_ReservedGridLayout5</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGridLayout5</name>
        <qualifiedname>BGridLayout::_ReservedGridLayout5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="109" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a7554a42a483aae1fcc25d59aa6589846" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::_ReservedGridLayout6</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGridLayout6</name>
        <qualifiedname>BGridLayout::_ReservedGridLayout6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="110" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1ad676b4a41a79e6cddec093d02d024d92" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::_ReservedGridLayout7</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGridLayout7</name>
        <qualifiedname>BGridLayout::_ReservedGridLayout7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="111" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a7f64c70846a02681458b09c03966e007" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::_ReservedGridLayout8</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGridLayout8</name>
        <qualifiedname>BGridLayout::_ReservedGridLayout8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="112" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a4f9abb35ff6f696daab6e618077932e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGridLayout::_ReservedGridLayout9</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGridLayout9</name>
        <qualifiedname>BGridLayout::_ReservedGridLayout9</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="113" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1a02c36f88fb28f81301b8b6ac3a905a62" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BGridLayout::_ResizeGrid</definition>
        <argsstring>(int32 columnCount, int32 rowCount)</argsstring>
        <name>_ResizeGrid</name>
        <qualifiedname>BGridLayout::_ResizeGrid</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>columnCount</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>rowCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="98" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGridLayout_1ad3bb33c0351f9636b7f0c1be1cd6d52f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGridLayout::operator=</definition>
        <argsstring>(const BGridLayout &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>BGridLayout::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBGridLayout" kindref="compound">BGridLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="118" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classBGridLayout" kindref="compound">BGridLayout</ref> class a <ref refid="classBLayout" kindref="compound">BLayout</ref> subclass that arranges the items it holds in a grid. </para>
    </briefdescription>
    <detaileddescription>
<para>Each item in a <ref refid="classBGridLayout" kindref="compound">BGridLayout</ref> receives a rectangular area which can span more than a single row or column. The indexing of columns and rows is zero based, starting in the top-left.</para>
<para><simplesect kind="warning"><para>This class is not yet finalized, if you use it in your software assume that it will break some time in the future.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>BAbstractLayout</label>
        <link refid="classBAbstractLayout"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BGridLayout</label>
        <link refid="classBGridLayout"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BLayout</label>
        <link refid="classBLayout"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BLayoutItem</label>
        <link refid="classBLayoutItem"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BTwoDimensionalLayout</label>
        <link refid="classBTwoDimensionalLayout"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>BAbstractLayout</label>
        <link refid="classBAbstractLayout"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BGridLayout</label>
        <link refid="classBGridLayout"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BLayout</label>
        <link refid="classBLayout"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BLayoutItem</label>
        <link refid="classBLayoutItem"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BTwoDimensionalLayout</label>
        <link refid="classBTwoDimensionalLayout"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/interface/GridLayout.h" line="12" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/GridLayout.h" bodystart="12" bodyend="131"/>
    <listofallmembers>
      <member refid="classBGridLayout_1ae961267c4d60f2863a48778c7ada08ce" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>_AreGridCellsEmpty</name></member>
      <member refid="classBGridLayout_1a3adc19257683f65827eaa6200b5372d0" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>_InsertItemIntoGrid</name></member>
      <member refid="classBGridLayout_1afa094ec995f493b305258ab93a95cdb0" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>_IsGridCellEmpty</name></member>
      <member refid="classBGridLayout_1abbe96afab4e198bce14873cc7ad45115" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>_LayoutDataForItem</name></member>
      <member refid="classBGridLayout_1aac461d37fd5e665f49b3474fc7555918" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>_reserved</name></member>
      <member refid="classBGridLayout_1a211ac60b7dcf7a63fae46d1b8b8a88b0" prot="private" virt="virtual"><scope>BGridLayout</scope><name>_ReservedGridLayout1</name></member>
      <member refid="classBGridLayout_1a5189ad2281cb2d5267a2d8e29b57e0ee" prot="private" virt="virtual"><scope>BGridLayout</scope><name>_ReservedGridLayout10</name></member>
      <member refid="classBGridLayout_1aa37d2ecdc66979122e1d770da1f9eecf" prot="private" virt="virtual"><scope>BGridLayout</scope><name>_ReservedGridLayout2</name></member>
      <member refid="classBGridLayout_1a1f95807a48eba6804c8ba5de04466d20" prot="private" virt="virtual"><scope>BGridLayout</scope><name>_ReservedGridLayout3</name></member>
      <member refid="classBGridLayout_1a78b74fd725e89818e2f6c21e65a1ae8d" prot="private" virt="virtual"><scope>BGridLayout</scope><name>_ReservedGridLayout4</name></member>
      <member refid="classBGridLayout_1a47a939ecd9dee5eabb11f5fdf6b36328" prot="private" virt="virtual"><scope>BGridLayout</scope><name>_ReservedGridLayout5</name></member>
      <member refid="classBGridLayout_1a7554a42a483aae1fcc25d59aa6589846" prot="private" virt="virtual"><scope>BGridLayout</scope><name>_ReservedGridLayout6</name></member>
      <member refid="classBGridLayout_1ad676b4a41a79e6cddec093d02d024d92" prot="private" virt="virtual"><scope>BGridLayout</scope><name>_ReservedGridLayout7</name></member>
      <member refid="classBGridLayout_1a7f64c70846a02681458b09c03966e007" prot="private" virt="virtual"><scope>BGridLayout</scope><name>_ReservedGridLayout8</name></member>
      <member refid="classBGridLayout_1a4f9abb35ff6f696daab6e618077932e8" prot="private" virt="virtual"><scope>BGridLayout</scope><name>_ReservedGridLayout9</name></member>
      <member refid="classBGridLayout_1a02c36f88fb28f81301b8b6ac3a905a62" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>_ResizeGrid</name></member>
      <member refid="classBTwoDimensionalLayout_1ab6d8341da8769dd0ad704e53adfa50d7" prot="protected" virt="non-virtual"><scope>BGridLayout</scope><name>AddInsets</name></member>
      <member refid="classBTwoDimensionalLayout_1a93aa980ac6253fc952772dc2cf283dfc" prot="protected" virt="non-virtual"><scope>BGridLayout</scope><name>AddInsets</name></member>
      <member refid="classBGridLayout_1a2428b80791df9c5d01c5c88a62455d7e" prot="public" virt="virtual"><scope>BGridLayout</scope><name>AddItem</name></member>
      <member refid="classBGridLayout_1a016186a888ad44a8807d7686c00f2d84" prot="public" virt="virtual"><scope>BGridLayout</scope><name>AddItem</name></member>
      <member refid="classBGridLayout_1a091ce0e801d97117595bd53bb220d5a4" prot="public" virt="virtual"><scope>BGridLayout</scope><name>AddItem</name></member>
      <member refid="classBGridLayout_1a226fb320cbb2f5028fe4b537d9922fb3" prot="public" virt="virtual"><scope>BGridLayout</scope><name>AddView</name></member>
      <member refid="classBGridLayout_1a98676374bc080f6070686362409b4378" prot="public" virt="virtual"><scope>BGridLayout</scope><name>AddView</name></member>
      <member refid="classBGridLayout_1a57eef9f3b083c46ba4381f36b86e39a3" prot="public" virt="virtual"><scope>BGridLayout</scope><name>AddView</name></member>
      <member refid="classBLayoutItem_1a3b5b23daa375b3333fc58c9c22ce62fa" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>AlignInFrame</name></member>
      <member refid="classBTwoDimensionalLayout_1a873328fd96e352f3822c74c10b191399" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>AlignLayoutWith</name></member>
      <member refid="classBAbstractLayout_1a218c3772949ac855126f461162fc1ee9" prot="public" virt="virtual"><scope>BGridLayout</scope><name>Alignment</name></member>
      <member refid="classBGridLayout_1adddbabf3f060e0e3d20af12cf3f3dab1" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>AllArchived</name></member>
      <member refid="classBGridLayout_1a2cd9bd9915c14ac32c0081234e12a5fb" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>AllUnarchived</name></member>
      <member refid="classBLayout_1a4f2ff9362ef1e84d7c886c58881d2be9" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>AncestorsVisible</name></member>
      <member refid="classBAbstractLayout_1a5e36e0a2cb89ef4f45905c20159ef371" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>AncestorVisibilityChanged</name></member>
      <member refid="classBGridLayout_1aab5e2df95091bb76bb93628dcd01013e" prot="public" virt="virtual"><scope>BGridLayout</scope><name>Archive</name></member>
      <member refid="classBAbstractLayout_1a0eb40b1488e9b5f524cbc263106e7f3b" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>AttachedToLayout</name></member>
      <member refid="classBAbstractLayout_1ac31ae4b204f6731fec17f7af2ed25859" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>BAbstractLayout</name></member>
      <member refid="classBAbstractLayout_1ae7eea1f1b57d19981c210085953cae76" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>BAbstractLayout</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>BArchivable</name></member>
      <member refid="classBTwoDimensionalLayout_1a02f5827bf18fdfc50b2aef94733a97a0" prot="public" virt="virtual"><scope>BGridLayout</scope><name>BaseAlignment</name></member>
      <member refid="classBTwoDimensionalLayout_1a9cba96eda27d17e4d7c8c5b3046a1164" prot="public" virt="virtual"><scope>BGridLayout</scope><name>BaseMaxSize</name></member>
      <member refid="classBTwoDimensionalLayout_1ad56f8b3d3ffb022153d9a06bc5f1f8b4" prot="public" virt="virtual"><scope>BGridLayout</scope><name>BaseMinSize</name></member>
      <member refid="classBTwoDimensionalLayout_1a03bcab80b28f949927ce42ccc428e52f" prot="public" virt="virtual"><scope>BGridLayout</scope><name>BasePreferredSize</name></member>
      <member refid="classBGridLayout_1a4a02d826ce903a42aebfb5b929160e95" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>BGridLayout</name></member>
      <member refid="classBGridLayout_1a184f72474433df9990cbf2719bd0bf78" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>BGridLayout</name></member>
      <member refid="classBGridLayout_1a7742c6c52e5da6201e267bb2eec4708f" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>BGridLayout</name></member>
      <member refid="classBLayout_1a95bf53912a8c34a70e63f74b155b42cb" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>BLayout</name></member>
      <member refid="classBLayout_1a972a6ece042bd46710f6b945d9d87763" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>BLayout</name></member>
      <member refid="classBLayoutItem_1ae147b703a6d2583545407d5f48809bac" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>BLayoutItem</name></member>
      <member refid="classBLayoutItem_1ac639d9cfa9b8124106ef2d8bc5badb2e" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>BLayoutItem</name></member>
      <member refid="classBTwoDimensionalLayout_1a98f591898a00421664defadb6aee0d3c" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>BTwoDimensionalLayout</name></member>
      <member refid="classBTwoDimensionalLayout_1af3d37ee41a0ce6394c4d532da519f444" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>BTwoDimensionalLayout</name></member>
      <member refid="classBGridLayout_1a293c2fa0ead94d8618a8406b13ffebe2" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>ColumnWeight</name></member>
      <member refid="classBGridLayout_1a41d11f5014ee5fe80f4569c482a8f7d9" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>CountColumns</name></member>
      <member refid="classBLayout_1ab7d1b881e91213047412abdcb10eae4f" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>CountItems</name></member>
      <member refid="classBGridLayout_1a09262c74dc1eafac49376414987fe05e" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>CountRows</name></member>
      <member refid="classBAbstractLayout_1a4535f6de7c5193ba20038b891944864b" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>DetachedFromLayout</name></member>
      <member refid="classBLayout_1a509ff18ffa060bd9aab042c4ee6af245" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>DisableLayoutInvalidation</name></member>
      <member refid="classBTwoDimensionalLayout_1a18eeeb1d0b5fa7b4b57d8a2a9dc3824b" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>DoLayout</name></member>
      <member refid="classBLayout_1a7f369cb77173c3922dddbb38db893a6c" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>EnableLayoutInvalidation</name></member>
      <member refid="classBTwoDimensionalLayout_1a8e55843e4e569083ecd8265d4f793099" prot="protected" virt="non-virtual"><scope>BGridLayout</scope><name>fBottomInset</name></member>
      <member refid="classBGridLayout_1aaa361a891c613ae264c50e7d16542fde" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>fColumnCount</name></member>
      <member refid="classBGridLayout_1a411608806b6954014c49a3f0e3e02364" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>fColumnInfos</name></member>
      <member refid="classBGridLayout_1a213e215a3f400141bb7e2d024777387d" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>fGrid</name></member>
      <member refid="classBTwoDimensionalLayout_1adfad5192bbe0341d5906c5216f0dcbae" prot="protected" virt="non-virtual"><scope>BGridLayout</scope><name>fHSpacing</name></member>
      <member refid="classBTwoDimensionalLayout_1ac0aa796c2d64b0068a357d969561de90" prot="protected" virt="non-virtual"><scope>BGridLayout</scope><name>fLeftInset</name></member>
      <member refid="classBGridLayout_1a2d47cd577dc5cc920b3ba0cecc0ae771" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>fMultiColumnItems</name></member>
      <member refid="classBGridLayout_1a8dce9d7d21f19c9703a1d3261d8788cb" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>fMultiRowItems</name></member>
      <member refid="classBAbstractLayout_1a931bce77912316857d2e8d2a557e4241" prot="public" virt="virtual"><scope>BGridLayout</scope><name>Frame</name></member>
      <member refid="classBTwoDimensionalLayout_1a1dc695acf8c1f94f8653a4398feac5a5" prot="protected" virt="non-virtual"><scope>BGridLayout</scope><name>fRightInset</name></member>
      <member refid="classBGridLayout_1a318002425ece0165074cd25de0024593" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>fRowCount</name></member>
      <member refid="classBGridLayout_1a71850f931ef81b95c40e8eb9e56597c8" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>fRowInfos</name></member>
      <member refid="classBTwoDimensionalLayout_1abc4e661aa6fd2e9197e561892d40b2f3" prot="protected" virt="non-virtual"><scope>BGridLayout</scope><name>fTopInset</name></member>
      <member refid="classBTwoDimensionalLayout_1a898f35c225919e096d1f154ad9ff6642" prot="protected" virt="non-virtual"><scope>BGridLayout</scope><name>fVSpacing</name></member>
      <member refid="classBGridLayout_1a2bc20cb5debda316d2ba0144acece99d" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>GetColumnRowConstraints</name></member>
      <member refid="classBTwoDimensionalLayout_1a360c3c27eb293edea81b8cf8742d3913" prot="public" virt="virtual"><scope>BGridLayout</scope><name>GetHeightForWidth</name></member>
      <member refid="classBTwoDimensionalLayout_1a6b4a8eeb31c191a4aa94129d0133f32d" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>GetInsets</name></member>
      <member refid="classBGridLayout_1a7b5b1de10775ef2d2f35dc3956a63bee" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>GetItemDimensions</name></member>
      <member refid="classBTwoDimensionalLayout_1a8b14614c8b378412107043b1e8e24ead" prot="public" virt="virtual"><scope>BGridLayout</scope><name>HasHeightForWidth</name></member>
      <member refid="classBGridLayout_1aac43e2331af65b3c4fa7f07334871ed7" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>HasMultiColumnItems</name></member>
      <member refid="classBGridLayout_1af37fc1cf8cfee1ec101b7b4ee8913c1e" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>HasMultiRowItems</name></member>
      <member refid="classBGridLayout_1aa7c56dd61733adac9bc30055ac3d72be" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>HorizontalSpacing</name></member>
      <member refid="classBLayout_1a1d3746cfb977dce44b052e7d58bd481c" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>IndexOfItem</name></member>
      <member refid="classBLayout_1ade2afbfa0bd50c01a1ce3db6654eaa0c" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>IndexOfView</name></member>
      <member refid="classBGridLayout_1ac746e6afc50265c2d38d8ee9adea53d8" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>Instantiate</name></member>
      <member refid="classBGridLayout_1a40fef2bcfdd8063cfc43c64f4a00c5fe" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>InternalCountColumns</name></member>
      <member refid="classBGridLayout_1a3cf37b7dd7b769b41e262b3009a3987c" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>InternalCountRows</name></member>
      <member refid="classBLayout_1a2b775de411ef6e9ecb4f7c412a26bf31" prot="public" virt="virtual"><scope>BGridLayout</scope><name>InvalidateLayout</name></member>
      <member refid="classBLayout_1a9b5b6b764433dee59ed4d1f01aaada04" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>IsValid</name></member>
      <member refid="classBAbstractLayout_1aac40eebbdd9c0fa7e594e5d1d9201a87" prot="public" virt="virtual"><scope>BGridLayout</scope><name>IsVisible</name></member>
      <member refid="classBGridLayout_1a5edc94b8a647debd21f7303a225c0bfe" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>ItemAdded</name></member>
      <member refid="classBGridLayout_1aa78c81cd57baacbdb8890b0de281f720" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>ItemArchived</name></member>
      <member refid="classBGridLayout_1a1d39c90b5377087ca099830b03a7505b" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>ItemAt</name></member>
      <member refid="classBLayout_1ad47d881e6008578d2f8cc0e3c6ea467a" prot="public" virt="non-virtual" ambiguityscope="BTwoDimensionalLayout::"><scope>BGridLayout</scope><name>ItemAt</name></member>
      <member refid="classBGridLayout_1a69ef1fdfffae399d06a09fe99b72fda0" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>ItemRemoved</name></member>
      <member refid="classBGridLayout_1ad7bda5e11e67558de88b0ccaeccd3949" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>ItemUnarchived</name></member>
      <member refid="classBLayoutItem_1ab760ea9f0eb6bb25063b5bac7a52ec3d" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>Layout</name></member>
      <member refid="classBLayout_1a25735d4b3149817ab91b2f4cff0a2fed" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>LayoutArea</name></member>
      <member refid="classBLayout_1a7d2db371223df3a53cd7a1c5f19f309a" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>LayoutContext</name></member>
      <member refid="classBLayoutItem_1a82ba24d424129d989855b74eb3a86627" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>LayoutData</name></member>
      <member refid="classBTwoDimensionalLayout_1a213da2d0c283091e48562e8fbb448c5f" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>LayoutInvalidated</name></member>
      <member refid="classBLayout_1a683aba3445c345b47c7fa38a2b6c3c1a" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>LayoutItems</name></member>
      <member refid="classBGridLayout_1a2415f7ea73feec40c86b051a2e988d80" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>MaxColumnWidth</name></member>
      <member refid="classBGridLayout_1a8538b5d0f105f6640149751f08d1b30f" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>MaxRowHeight</name></member>
      <member refid="classBAbstractLayout_1ad1ea5d04a5c8028f8295efde7106a66c" prot="public" virt="virtual"><scope>BGridLayout</scope><name>MaxSize</name></member>
      <member refid="classBGridLayout_1ad354c9e58a25cc05e750b880bc9968fc" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>MinColumnWidth</name></member>
      <member refid="classBGridLayout_1a183c52fea05a42d7a93057c6ab8b875f" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>MinRowHeight</name></member>
      <member refid="classBAbstractLayout_1a3f692cb3306ce726e3cc6d2771824cd5" prot="public" virt="virtual"><scope>BGridLayout</scope><name>MinSize</name></member>
      <member refid="classBGridLayout_1ad3bb33c0351f9636b7f0c1be1cd6d52f" prot="private" virt="non-virtual"><scope>BGridLayout</scope><name>operator=</name></member>
      <member refid="classBLayout_1adb34c16c239813c45d8159d3f18d96d9" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>Owner</name></member>
      <member refid="classBAbstractLayout_1a3aca5334eed301df4013fb2a3fdfd5ac" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>OwnerChanged</name></member>
      <member refid="classBGridLayout_1a0ab603b381b9ba4d7efb3efbeae4940f" prot="public" virt="virtual"><scope>BGridLayout</scope><name>Perform</name></member>
      <member refid="classBAbstractLayout_1af5f21d9900c85ca053dba3938bef3fd3" prot="public" virt="virtual"><scope>BGridLayout</scope><name>PreferredSize</name></member>
      <member refid="classBTwoDimensionalLayout_1a4f14f46b98fd590a562b5914e57b111a" prot="protected" virt="virtual"><scope>BGridLayout</scope><name>PrepareItems</name></member>
      <member refid="classBLayout_1a2a168d993feaf8fc58b53ded8243e7b7" prot="public" virt="virtual"><scope>BGridLayout</scope><name>Relayout</name></member>
      <member refid="classBLayout_1abf0b19d4203e1a41292137fd8a2038d0" prot="public" virt="virtual"><scope>BGridLayout</scope><name>RemoveItem</name></member>
      <member refid="classBLayout_1a34a299447961069bdd54d19ae7a5176a" prot="public" virt="virtual"><scope>BGridLayout</scope><name>RemoveItem</name></member>
      <member refid="classBLayoutItem_1af4059e73a30336f0ae6bbbc04c70dd6a" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>RemoveSelf</name></member>
      <member refid="classBLayout_1a3120e95dc34ab57ab276c324ec94654c" prot="public" virt="virtual"><scope>BGridLayout</scope><name>RemoveView</name></member>
      <member refid="classBLayout_1a1983a8770e7cd89c3f1afc4d961230d5" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>RequireLayout</name></member>
      <member refid="classBLayout_1aacf1392bbef13efc20277e15595bb329" prot="protected" virt="non-virtual"><scope>BGridLayout</scope><name>ResetLayoutInvalidation</name></member>
      <member refid="classBGridLayout_1acf3c8a0b536feb54a3b4470dcff6bc07" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>RowWeight</name></member>
      <member refid="classBGridLayout_1a48a5af01e506c38dd7bd191fb80de81c" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetColumnWeight</name></member>
      <member refid="classBAbstractLayout_1a3e7f4071b63452d77210f852cb92604d" prot="public" virt="virtual"><scope>BGridLayout</scope><name>SetExplicitAlignment</name></member>
      <member refid="classBAbstractLayout_1aeb41b2e1e0b6414d0de4eeb4e5fb93e4" prot="public" virt="virtual"><scope>BGridLayout</scope><name>SetExplicitMaxSize</name></member>
      <member refid="classBAbstractLayout_1af63e5777fabfb9be1f29286bf6931fe6" prot="public" virt="virtual"><scope>BGridLayout</scope><name>SetExplicitMinSize</name></member>
      <member refid="classBAbstractLayout_1a577b9839ac8e726bbecc7f3e40bb01a3" prot="public" virt="virtual"><scope>BGridLayout</scope><name>SetExplicitPreferredSize</name></member>
      <member refid="classBLayoutItem_1ac630c7ab0e98d5da0225792e31f596f1" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetExplicitSize</name></member>
      <member refid="classBTwoDimensionalLayout_1a8a4f4e152b4f6106cbc88fc0bb1f32d8" prot="public" virt="virtual"><scope>BGridLayout</scope><name>SetFrame</name></member>
      <member refid="classBGridLayout_1a9012b327299ab6222e2b6e50ee7fab69" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetHorizontalSpacing</name></member>
      <member refid="classBTwoDimensionalLayout_1acaf4ec650969994cb39dd015e3bebd91" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetInsets</name></member>
      <member refid="classBTwoDimensionalLayout_1a03d3adcb77ff7b3073e890ce42c63f9a" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetInsets</name></member>
      <member refid="classBTwoDimensionalLayout_1aaae5175781d0bc8c96e1e0fcaccc81da" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetInsets</name></member>
      <member refid="classBLayoutItem_1abffd9c09f9951f25b4a752a06e4040c3" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetLayoutData</name></member>
      <member refid="classBGridLayout_1af91df9043a9b58b830385a45e0e01b9b" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetMaxColumnWidth</name></member>
      <member refid="classBGridLayout_1af690e5a00ac638577dde537d12e5a580" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetMaxRowHeight</name></member>
      <member refid="classBGridLayout_1a17dae22d385c8a1c94f049c51aeeb2af" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetMinColumnWidth</name></member>
      <member refid="classBGridLayout_1a6a3e987054c7cf38ab74f8a2ebe8e31c" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetMinRowHeight</name></member>
      <member refid="classBGridLayout_1a5c75c2287517197736cb92ddd07a4938" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetRowWeight</name></member>
      <member refid="classBGridLayout_1a43544ce6335ef85027999a9b97fa2e86" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetSpacing</name></member>
      <member refid="classBGridLayout_1ab3b0bdb1197c4a9b632c349919b795a0" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>SetVerticalSpacing</name></member>
      <member refid="classBAbstractLayout_1ae40de089e697c7ecb8466ec3e8bd87e8" prot="public" virt="virtual"><scope>BGridLayout</scope><name>SetVisible</name></member>
      <member refid="classBTwoDimensionalLayout_1a2e2f066f679835398fd2a0bf2044115b" prot="protected" virt="non-virtual"><scope>BGridLayout</scope><name>SubtractInsets</name></member>
      <member refid="classBLayout_1a14639db95758a7b1b9604473e8f3a7c9" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>TargetView</name></member>
      <member refid="classBGridLayout_1a0d747cd760a2e11913264be63992cf01" prot="public" virt="non-virtual"><scope>BGridLayout</scope><name>VerticalSpacing</name></member>
      <member refid="classBLayout_1aefd7bf5546d6b69d1561e7baebf15387" prot="public" virt="virtual"><scope>BGridLayout</scope><name>View</name></member>
      <member refid="classBLayout_1a7df37ec98c2d29dca5ce4f2246c5665a" prot="protected" virt="non-virtual"><scope>BGridLayout</scope><name>VisibilityChanged</name></member>
      <member refid="classBAbstractLayout_1ad838535e6e51bb5b22b5dc7b05bbf5af" prot="public" virt="virtual"><scope>BGridLayout</scope><name>~BAbstractLayout</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BGridLayout</scope><name>~BArchivable</name></member>
      <member refid="classBGridLayout_1af7ebd1830dfc307aa827fde117c22bd9" prot="public" virt="virtual"><scope>BGridLayout</scope><name>~BGridLayout</name></member>
      <member refid="classBLayout_1aa3250586083f6cbd106051efaa6982d9" prot="public" virt="virtual"><scope>BGridLayout</scope><name>~BLayout</name></member>
      <member refid="classBLayoutItem_1ab2ab08ac19615c24d09f3461926acce2" prot="public" virt="virtual"><scope>BGridLayout</scope><name>~BLayoutItem</name></member>
      <member refid="classBTwoDimensionalLayout_1a286cc9889f960352719001741937f7fd" prot="public" virt="virtual"><scope>BGridLayout</scope><name>~BTwoDimensionalLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
