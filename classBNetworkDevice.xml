<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBNetworkDevice" kind="class" language="C++" prot="public">
    <compoundname>BNetworkDevice</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBNetworkDevice_1a715d165dd4587af56c6efe78db6d9b00" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char BNetworkDevice::fName[IF_NAMESIZE]</definition>
        <argsstring>[IF_NAMESIZE]</argsstring>
        <name>fName</name>
        <qualifiedname>BNetworkDevice::fName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="139" column="5" bodyfile="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBNetworkDevice_1a302740aab8c98ea74dc1330d22740fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetworkDevice::BNetworkDevice</definition>
        <argsstring>()</argsstring>
        <name>BNetworkDevice</name>
        <qualifiedname>BNetworkDevice::BNetworkDevice</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1ae75aa92b8f59f8de62e7c49827525cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetworkDevice::BNetworkDevice</definition>
        <argsstring>(const char *name)</argsstring>
        <name>BNetworkDevice</name>
        <qualifiedname>BNetworkDevice::BNetworkDevice</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1ade2ff5913286670e3ef106b7fdc55feb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetworkDevice::~BNetworkDevice</definition>
        <argsstring>()</argsstring>
        <name>~BNetworkDevice</name>
        <qualifiedname>BNetworkDevice::~BNetworkDevice</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1abdbee44fe61dba73ef37e9a02fe62d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::Control</definition>
        <argsstring>(int option, void *request)</argsstring>
        <name>Control</name>
        <qualifiedname>BNetworkDevice::Control</qualifiedname>
        <param>
          <type>int</type>
          <declname>option</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="110" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1a19a8b61deb084ad7547a9dea8273be2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BNetworkDevice::Exists</definition>
        <argsstring>() const</argsstring>
        <name>Exists</name>
        <qualifiedname>BNetworkDevice::Exists</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="96" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1a4e806826c18ccf26920d4455498a2ec8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BNetworkDevice::Flags</definition>
        <argsstring>() const</argsstring>
        <name>Flags</name>
        <qualifiedname>BNetworkDevice::Flags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="99" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1acee63258691cdf7d28ca59ac25f0e7c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::GetHardwareAddress</definition>
        <argsstring>(BNetworkAddress &amp;address)</argsstring>
        <name>GetHardwareAddress</name>
        <qualifiedname>BNetworkDevice::GetHardwareAddress</qualifiedname>
        <param>
          <type>BNetworkAddress &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="105" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1aea42de6bbd9f5229f09f1265d6c85e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::GetNetwork</definition>
        <argsstring>(const BNetworkAddress &amp;address, wireless_network &amp;network)</argsstring>
        <name>GetNetwork</name>
        <qualifiedname>BNetworkDevice::GetNetwork</qualifiedname>
        <param>
          <type>const BNetworkAddress &amp;</type>
          <declname>address</declname>
        </param>
        <param>
          <type>wireless_network &amp;</type>
          <declname>network</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="119" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1a80e442e414f32d326eac916fe8d1db61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::GetNetwork</definition>
        <argsstring>(const char *name, wireless_network &amp;network)</argsstring>
        <name>GetNetwork</name>
        <qualifiedname>BNetworkDevice::GetNetwork</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>wireless_network &amp;</type>
          <declname>network</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="117" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1ad6829a4e6bf21d2285264635f18cc469" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::GetNetworks</definition>
        <argsstring>(wireless_network *&amp;networks, uint32 &amp;count)</argsstring>
        <name>GetNetworks</name>
        <qualifiedname>BNetworkDevice::GetNetworks</qualifiedname>
        <param>
          <type>wireless_network *&amp;</type>
          <declname>networks</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> &amp;</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="115" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1a9e7b907b8e4015db469f21f9fbb35f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::GetNextAssociatedNetwork</definition>
        <argsstring>(uint32 &amp;cookie, BNetworkAddress &amp;address)</argsstring>
        <name>GetNextAssociatedNetwork</name>
        <qualifiedname>BNetworkDevice::GetNextAssociatedNetwork</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> &amp;</type>
          <declname>cookie</declname>
        </param>
        <param>
          <type>BNetworkAddress &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="135" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1ae3ae9acc3777bc373762f71e0c62b4d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::GetNextAssociatedNetwork</definition>
        <argsstring>(uint32 &amp;cookie, wireless_network &amp;network)</argsstring>
        <name>GetNextAssociatedNetwork</name>
        <qualifiedname>BNetworkDevice::GetNextAssociatedNetwork</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref> &amp;</type>
          <declname>cookie</declname>
        </param>
        <param>
          <type>wireless_network &amp;</type>
          <declname>network</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="133" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1aed2944bcfd727d14487dad458e8fd8db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BNetworkDevice::HasLink</definition>
        <argsstring>() const</argsstring>
        <name>HasLink</name>
        <qualifiedname>BNetworkDevice::HasLink</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="100" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1a9def8d92b0402a4a1d480c51f458d6c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BNetworkDevice::Index</definition>
        <argsstring>() const</argsstring>
        <name>Index</name>
        <qualifiedname>BNetworkDevice::Index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="97" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1a3a448f921b65c16f7323e0aeb98b046e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BNetworkDevice::IsEthernet</definition>
        <argsstring>()</argsstring>
        <name>IsEthernet</name>
        <qualifiedname>BNetworkDevice::IsEthernet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="107" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1a3b0dfc7f230746c0056b77a58804fadf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BNetworkDevice::IsWireless</definition>
        <argsstring>()</argsstring>
        <name>IsWireless</name>
        <qualifiedname>BNetworkDevice::IsWireless</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="108" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1aa690aa8ca5192cae910c62f5f702005f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::JoinNetwork</definition>
        <argsstring>(const BNetworkAddress &amp;address, const char *password=NULL)</argsstring>
        <name>JoinNetwork</name>
        <qualifiedname>BNetworkDevice::JoinNetwork</qualifiedname>
        <param>
          <type>const BNetworkAddress &amp;</type>
          <declname>address</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>password</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="126" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1a3158219268f4e2b75c990089953ea315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::JoinNetwork</definition>
        <argsstring>(const char *name, const char *password=NULL)</argsstring>
        <name>JoinNetwork</name>
        <qualifiedname>BNetworkDevice::JoinNetwork</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>password</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="122" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1adb46628fa3b234d92cea261c82ca37ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::JoinNetwork</definition>
        <argsstring>(const wireless_network &amp;network, const char *password=NULL)</argsstring>
        <name>JoinNetwork</name>
        <qualifiedname>BNetworkDevice::JoinNetwork</qualifiedname>
        <param>
          <type>const wireless_network &amp;</type>
          <declname>network</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>password</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="124" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1ae89086c5ae6e8ba27c3c5bd30138dc0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::LeaveNetwork</definition>
        <argsstring>(const BNetworkAddress &amp;address)</argsstring>
        <name>LeaveNetwork</name>
        <qualifiedname>BNetworkDevice::LeaveNetwork</qualifiedname>
        <param>
          <type>const BNetworkAddress &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="131" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1aea9defc65a03bcc9fdbae0a6430983fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::LeaveNetwork</definition>
        <argsstring>(const char *name)</argsstring>
        <name>LeaveNetwork</name>
        <qualifiedname>BNetworkDevice::LeaveNetwork</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="129" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1aa2b63e4b2b7ca9e5820f9c6695514d12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::LeaveNetwork</definition>
        <argsstring>(const wireless_network &amp;network)</argsstring>
        <name>LeaveNetwork</name>
        <qualifiedname>BNetworkDevice::LeaveNetwork</qualifiedname>
        <param>
          <type>const wireless_network &amp;</type>
          <declname>network</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="130" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1a6195a75d3942148efb4c4dd4a194605d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BNetworkDevice::Media</definition>
        <argsstring>() const</argsstring>
        <name>Media</name>
        <qualifiedname>BNetworkDevice::Media</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="102" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1a739d0eb0fd3e79bb5b938bf890752cb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BNetworkDevice::Name</definition>
        <argsstring>() const</argsstring>
        <name>Name</name>
        <qualifiedname>BNetworkDevice::Name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="95" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1a961291e1ab2cb218c673e2cc40724e86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::Scan</definition>
        <argsstring>(bool wait=true, bool forceRescan=true)</argsstring>
        <name>Scan</name>
        <qualifiedname>BNetworkDevice::Scan</qualifiedname>
        <param>
          <type>bool</type>
          <declname>wait</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>forceRescan</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="112" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1ad1f5f189c3f0f1e002646187da848f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetworkDevice::SetMedia</definition>
        <argsstring>(int32 media)</argsstring>
        <name>SetMedia</name>
        <qualifiedname>BNetworkDevice::SetMedia</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>media</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="103" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1a8740a432c3ecd9b3ccee2902ff5623dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BNetworkDevice::SetTo</definition>
        <argsstring>(const char *name)</argsstring>
        <name>SetTo</name>
        <qualifiedname>BNetworkDevice::SetTo</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="93" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBNetworkDevice_1ab7ad677ccc7ac832fc18ca965b62d7e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BNetworkDevice::Unset</definition>
        <argsstring>()</argsstring>
        <name>Unset</name>
        <qualifiedname>BNetworkDevice::Unset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="92" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" line="86" column="1" bodyfile="/boot/home/src/haiku/headers/os/net/NetworkDevice.h" bodystart="86" bodyend="140"/>
    <listofallmembers>
      <member refid="classBNetworkDevice_1a302740aab8c98ea74dc1330d22740fc5" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>BNetworkDevice</name></member>
      <member refid="classBNetworkDevice_1ae75aa92b8f59f8de62e7c49827525cb7" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>BNetworkDevice</name></member>
      <member refid="classBNetworkDevice_1abdbee44fe61dba73ef37e9a02fe62d94" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>Control</name></member>
      <member refid="classBNetworkDevice_1a19a8b61deb084ad7547a9dea8273be2e" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>Exists</name></member>
      <member refid="classBNetworkDevice_1a4e806826c18ccf26920d4455498a2ec8" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>Flags</name></member>
      <member refid="classBNetworkDevice_1a715d165dd4587af56c6efe78db6d9b00" prot="private" virt="non-virtual"><scope>BNetworkDevice</scope><name>fName</name></member>
      <member refid="classBNetworkDevice_1acee63258691cdf7d28ca59ac25f0e7c3" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>GetHardwareAddress</name></member>
      <member refid="classBNetworkDevice_1a80e442e414f32d326eac916fe8d1db61" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>GetNetwork</name></member>
      <member refid="classBNetworkDevice_1aea42de6bbd9f5229f09f1265d6c85e0a" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>GetNetwork</name></member>
      <member refid="classBNetworkDevice_1ad6829a4e6bf21d2285264635f18cc469" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>GetNetworks</name></member>
      <member refid="classBNetworkDevice_1ae3ae9acc3777bc373762f71e0c62b4d7" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>GetNextAssociatedNetwork</name></member>
      <member refid="classBNetworkDevice_1a9e7b907b8e4015db469f21f9fbb35f71" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>GetNextAssociatedNetwork</name></member>
      <member refid="classBNetworkDevice_1aed2944bcfd727d14487dad458e8fd8db" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>HasLink</name></member>
      <member refid="classBNetworkDevice_1a9def8d92b0402a4a1d480c51f458d6c7" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>Index</name></member>
      <member refid="classBNetworkDevice_1a3a448f921b65c16f7323e0aeb98b046e" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>IsEthernet</name></member>
      <member refid="classBNetworkDevice_1a3b0dfc7f230746c0056b77a58804fadf" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>IsWireless</name></member>
      <member refid="classBNetworkDevice_1a3158219268f4e2b75c990089953ea315" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>JoinNetwork</name></member>
      <member refid="classBNetworkDevice_1adb46628fa3b234d92cea261c82ca37ec" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>JoinNetwork</name></member>
      <member refid="classBNetworkDevice_1aa690aa8ca5192cae910c62f5f702005f" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>JoinNetwork</name></member>
      <member refid="classBNetworkDevice_1aea9defc65a03bcc9fdbae0a6430983fb" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>LeaveNetwork</name></member>
      <member refid="classBNetworkDevice_1aa2b63e4b2b7ca9e5820f9c6695514d12" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>LeaveNetwork</name></member>
      <member refid="classBNetworkDevice_1ae89086c5ae6e8ba27c3c5bd30138dc0f" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>LeaveNetwork</name></member>
      <member refid="classBNetworkDevice_1a6195a75d3942148efb4c4dd4a194605d" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>Media</name></member>
      <member refid="classBNetworkDevice_1a739d0eb0fd3e79bb5b938bf890752cb3" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>Name</name></member>
      <member refid="classBNetworkDevice_1a961291e1ab2cb218c673e2cc40724e86" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>Scan</name></member>
      <member refid="classBNetworkDevice_1ad1f5f189c3f0f1e002646187da848f8f" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>SetMedia</name></member>
      <member refid="classBNetworkDevice_1a8740a432c3ecd9b3ccee2902ff5623dd" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>SetTo</name></member>
      <member refid="classBNetworkDevice_1ab7ad677ccc7ac832fc18ca965b62d7e6" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>Unset</name></member>
      <member refid="classBNetworkDevice_1ade2ff5913286670e3ef106b7fdc55feb" prot="public" virt="non-virtual"><scope>BNetworkDevice</scope><name>~BNetworkDevice</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
