<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBFormat" kind="class" language="C++" prot="public">
    <compoundname>BFormat</compoundname>
    <derivedcompoundref refid="classBDateFormat" prot="public" virt="non-virtual">BDateFormat</derivedcompoundref>
    <derivedcompoundref refid="classBDateTimeFormat" prot="public" virt="non-virtual">BDateTimeFormat</derivedcompoundref>
    <derivedcompoundref refid="classBDurationFormat" prot="public" virt="non-virtual">BDurationFormat</derivedcompoundref>
    <derivedcompoundref refid="classBNumberFormat" prot="public" virt="non-virtual">BNumberFormat</derivedcompoundref>
    <derivedcompoundref refid="classBRelativeDateTimeFormat" prot="public" virt="non-virtual">BRelativeDateTimeFormat</derivedcompoundref>
    <derivedcompoundref refid="classBStringFormat" prot="public" virt="non-virtual">BStringFormat</derivedcompoundref>
    <derivedcompoundref refid="classBTimeFormat" prot="public" virt="non-virtual">BTimeFormat</derivedcompoundref>
    <derivedcompoundref refid="classBTimeUnitFormat" prot="public" virt="non-virtual">BTimeUnitFormat</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classBFormat_1acb27d863a711eb8b2aeb62ca56024e36" prot="protected" static="no" mutable="no">
        <type>BFormattingConventions</type>
        <definition>BFormattingConventions BFormat::fConventions</definition>
        <argsstring></argsstring>
        <name>fConventions</name>
        <qualifiedname>BFormat::fConventions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Format.h" line="62" column="23" bodyfile="/boot/home/src/haiku/headers/os/locale/Format.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBFormat_1a50d5bddcf4f91d741d4fbba1ac090de5" prot="protected" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BFormat::fInitStatus</definition>
        <argsstring></argsstring>
        <name>fInitStatus</name>
        <qualifiedname>BFormat::fInitStatus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Format.h" line="64" column="9" bodyfile="/boot/home/src/haiku/headers/os/locale/Format.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBFormat_1a9ccf84a90e0dbc89623f03e7bb325e7e" prot="protected" static="no" mutable="no">
        <type>BLanguage</type>
        <definition>BLanguage BFormat::fLanguage</definition>
        <argsstring></argsstring>
        <name>fLanguage</name>
        <qualifiedname>BFormat::fLanguage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Format.h" line="63" column="10" bodyfile="/boot/home/src/haiku/headers/os/locale/Format.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBFormat_1a1c2b885fb22f2c3da84e098bc5e3e95f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BFormat::InitCheck</definition>
        <argsstring>() const</argsstring>
        <name>InitCheck</name>
        <qualifiedname>BFormat::InitCheck</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Format.h" line="45" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBFormat_1ab5d495c8408849155a7ff7fc16161e75" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BFormat::BFormat</definition>
        <argsstring>(const BFormat &amp;other)</argsstring>
        <name>BFormat</name>
        <qualifiedname>BFormat::BFormat</qualifiedname>
        <param>
          <type>const BFormat &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Format.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBFormat_1acd966f960c76ac04a64eb65399d73c85" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BFormat::BFormat</definition>
        <argsstring>(const BLanguage &amp;language, const BFormattingConventions &amp;conventions)</argsstring>
        <name>BFormat</name>
        <qualifiedname>BFormat::BFormat</qualifiedname>
        <param>
          <type>const BLanguage &amp;</type>
          <declname>language</declname>
        </param>
        <param>
          <type>const BFormattingConventions &amp;</type>
          <declname>conventions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Format.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBFormat_1a1ff84e6b18584d40445fea46931bafd0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BFormat::BFormat</definition>
        <argsstring>(const BLocale *locale=NULL)</argsstring>
        <name>BFormat</name>
        <qualifiedname>BFormat::BFormat</qualifiedname>
        <param>
          <type>const <ref refid="classBLocale" kindref="compound">BLocale</ref> *</type>
          <declname>locale</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Format.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBFormat_1a2824e15e80fac46c80cfd0d19e9f45fc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BFormat::~BFormat</definition>
        <argsstring>()</argsstring>
        <name>~BFormat</name>
        <qualifiedname>BFormat::~BFormat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Format.h" line="52" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBFormat_1ad3da2acdbd1596d0a1e7b62fceb2db90" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BFormat::_Initialize</definition>
        <argsstring>(const BLanguage &amp;language, const BFormattingConventions &amp;conventions)</argsstring>
        <name>_Initialize</name>
        <qualifiedname>BFormat::_Initialize</qualifiedname>
        <param>
          <type>const BLanguage &amp;</type>
          <declname>language</declname>
        </param>
        <param>
          <type>const BFormattingConventions &amp;</type>
          <declname>conventions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Format.h" line="58" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBFormat_1a99663a9f1992dd7957170a2b9beb9610" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BFormat::_Initialize</definition>
        <argsstring>(const BLocale &amp;locale)</argsstring>
        <name>_Initialize</name>
        <qualifiedname>BFormat::_Initialize</qualifiedname>
        <param>
          <type>const <ref refid="classBLocale" kindref="compound">BLocale</ref> &amp;</type>
          <declname>locale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Format.h" line="57" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBFormat_1a54970735da8dc5eddbdd9f94aa45884d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BFormat &amp;</type>
        <definition>BFormat &amp; BFormat::operator=</definition>
        <argsstring>(const BFormat &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BFormat::operator=</qualifiedname>
        <param>
          <type>const BFormat &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Format.h" line="55" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BDateFormat</label>
        <link refid="classBDateFormat"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BDateTimeFormat</label>
        <link refid="classBDateTimeFormat"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BDurationFormat</label>
        <link refid="classBDurationFormat"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BFormat</label>
      </node>
      <node id="5">
        <label>BNumberFormat</label>
        <link refid="classBNumberFormat"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BTimeFormat</label>
        <link refid="classBTimeFormat"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/boot/home/src/haiku/headers/os/locale/Format.h" line="43" column="1" bodyfile="/boot/home/src/haiku/headers/os/locale/Format.h" bodystart="43" bodyend="65"/>
    <listofallmembers>
      <member refid="classBFormat_1a99663a9f1992dd7957170a2b9beb9610" prot="private" virt="non-virtual"><scope>BFormat</scope><name>_Initialize</name></member>
      <member refid="classBFormat_1ad3da2acdbd1596d0a1e7b62fceb2db90" prot="private" virt="non-virtual"><scope>BFormat</scope><name>_Initialize</name></member>
      <member refid="classBFormat_1a1ff84e6b18584d40445fea46931bafd0" prot="protected" virt="non-virtual"><scope>BFormat</scope><name>BFormat</name></member>
      <member refid="classBFormat_1acd966f960c76ac04a64eb65399d73c85" prot="protected" virt="non-virtual"><scope>BFormat</scope><name>BFormat</name></member>
      <member refid="classBFormat_1ab5d495c8408849155a7ff7fc16161e75" prot="protected" virt="non-virtual"><scope>BFormat</scope><name>BFormat</name></member>
      <member refid="classBFormat_1acb27d863a711eb8b2aeb62ca56024e36" prot="protected" virt="non-virtual"><scope>BFormat</scope><name>fConventions</name></member>
      <member refid="classBFormat_1a50d5bddcf4f91d741d4fbba1ac090de5" prot="protected" virt="non-virtual"><scope>BFormat</scope><name>fInitStatus</name></member>
      <member refid="classBFormat_1a9ccf84a90e0dbc89623f03e7bb325e7e" prot="protected" virt="non-virtual"><scope>BFormat</scope><name>fLanguage</name></member>
      <member refid="classBFormat_1a1c2b885fb22f2c3da84e098bc5e3e95f" prot="public" virt="non-virtual"><scope>BFormat</scope><name>InitCheck</name></member>
      <member refid="classBFormat_1a54970735da8dc5eddbdd9f94aa45884d" prot="private" virt="non-virtual"><scope>BFormat</scope><name>operator=</name></member>
      <member refid="classBFormat_1a2824e15e80fac46c80cfd0d19e9f45fc" prot="protected" virt="virtual"><scope>BFormat</scope><name>~BFormat</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
