<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBChannelControl" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>BChannelControl</compoundname>
    <basecompoundref refid="classBControl" prot="public" virt="non-virtual">BControl</basecompoundref>
    <derivedcompoundref refid="classBChannelSlider" prot="public" virt="non-virtual">BChannelSlider</derivedcompoundref>
    <includes local="no">ChannelControl.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBChannelControl_1aea89d5d6de3b004baf6f99e8bfeaeebf" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BChannelControl::_reserved_[15]</definition>
        <argsstring>[15]</argsstring>
        <name>_reserved_</name>
        <qualifiedname>BChannelControl::_reserved_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="148" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBChannelControl_1aa896b9f4be33a53ff81554e33df3c52d" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BChannelControl::fChannelCount</definition>
        <argsstring></argsstring>
        <name>fChannelCount</name>
        <qualifiedname>BChannelControl::fChannelCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="135" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBChannelControl_1aa17a6a41b6dd1a513a69074615b1b134" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
        <definition>int32* BChannelControl::fChannelMax</definition>
        <argsstring></argsstring>
        <name>fChannelMax</name>
        <qualifiedname>BChannelControl::fChannelMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="138" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBChannelControl_1ae6075119b27e220c640dc2950d90fb5c" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
        <definition>int32* BChannelControl::fChannelMin</definition>
        <argsstring></argsstring>
        <name>fChannelMin</name>
        <qualifiedname>BChannelControl::fChannelMin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="137" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBChannelControl_1a2e2a7e9906f3bf43b2ffa51d3d3f34bf" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
        <definition>int32* BChannelControl::fChannelValues</definition>
        <argsstring></argsstring>
        <name>fChannelValues</name>
        <qualifiedname>BChannelControl::fChannelValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="139" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBChannelControl_1aec39b2c6e6f6c2f97664e99b18647541" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BChannelControl::fCurrentChannel</definition>
        <argsstring></argsstring>
        <name>fCurrentChannel</name>
        <qualifiedname>BChannelControl::fCurrentChannel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="136" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBChannelControl_1ac98666f7dc5636b196995c240cf339ac" prot="private" static="no" mutable="no">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BChannelControl::fMaxLabel</definition>
        <argsstring></argsstring>
        <name>fMaxLabel</name>
        <qualifiedname>BChannelControl::fMaxLabel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="142" column="8" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBChannelControl_1ab0aa15e17a40305868244b72151bef03" prot="private" static="no" mutable="no">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BChannelControl::fMinLabel</definition>
        <argsstring></argsstring>
        <name>fMinLabel</name>
        <qualifiedname>BChannelControl::fMinLabel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="141" column="8" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBChannelControl_1a2d19019b6604f75ce8c6f898aa0e5b56" prot="private" static="no" mutable="no">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>BMessage* BChannelControl::fModificationMsg</definition>
        <argsstring></argsstring>
        <name>fModificationMsg</name>
        <qualifiedname>BChannelControl::fModificationMsg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="146" column="9" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBChannelControl_1af2add77a07b0c239f8823d6ddb137cee" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* BChannelControl::fMultiLabels</definition>
        <argsstring></argsstring>
        <name>fMultiLabels</name>
        <qualifiedname>BChannelControl::fMultiLabels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="144" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBChannelControl_1a160aeb63f485374042ecd2e74d4e13f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BChannelControl::BChannelControl</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>BChannelControl</name>
        <qualifiedname>BChannelControl::BChannelControl</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>archive</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a7aad143836f232403de12625b4feea5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BChannelControl::BChannelControl</definition>
        <argsstring>(BRect frame, const char *name, const char *label, BMessage *model, int32 channelCount=1, uint32 resizingMode=B_FOLLOW_LEFT_TOP, uint32 flags=B_WILL_DRAW)</argsstring>
        <name>BChannelControl</name>
        <qualifiedname>BChannelControl::BChannelControl</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channelCount</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>resizingMode</declname>
          <defval><ref refid="View_8h_1a8a6df90f52ddaede7f1aaf43339638e5" kindref="member">B_FOLLOW_LEFT_TOP</ref></defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval><ref refid="View_8h_1a59354fa34a5663d714649927705fd4bf" kindref="member">B_WILL_DRAW</ref></defval>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resizingMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a520a2662a98db39d777c4f44d5c118b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BChannelControl::BChannelControl</definition>
        <argsstring>(const char *name, const char *label, BMessage *model, int32 channelCount=1, uint32 flags=B_WILL_DRAW)</argsstring>
        <name>BChannelControl</name>
        <qualifiedname>BChannelControl::BChannelControl</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channelCount</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval><ref refid="View_8h_1a59354fa34a5663d714649927705fd4bf" kindref="member">B_WILL_DRAW</ref></defval>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a5587395ab862480fb326a9c88d96d688" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BChannelControl::~BChannelControl</definition>
        <argsstring>()</argsstring>
        <name>~BChannelControl</name>
        <qualifiedname>BChannelControl::~BChannelControl</qualifiedname>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="28" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1aa71189c8b008cb3329c17b58f786617e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::Archive</definition>
        <argsstring>(BMessage *data, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BChannelControl::Archive</qualifiedname>
        <reimplements refid="classBControl_1a2581a447a34eef102c62d0e998155290">Archive</reimplements>
        <reimplementedby refid="classBChannelSlider_1ac216b412d86275115516b886c4f9b578">Archive</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deep</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="30" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1aaed17a427fd040df721062ea646ee360" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BChannelControl::AttachedToWindow</definition>
        <argsstring>()</argsstring>
        <name>AttachedToWindow</name>
        <qualifiedname>BChannelControl::AttachedToWindow</qualifiedname>
        <reimplements refid="classBControl_1a460fa93bcdd5309d8d86f8bfcd53b584">AttachedToWindow</reimplements>
        <reimplementedby refid="classBChannelSlider_1a896559c9ffdf6c29fec0071f7e74326e">AttachedToWindow</reimplementedby>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="40" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a7cbb592d5e5e29abae0b1bc25477fa53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BChannelControl::CountChannels</definition>
        <argsstring>() const</argsstring>
        <name>CountChannels</name>
        <qualifiedname>BChannelControl::CountChannels</qualifiedname>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="75" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a70cedb7243bbc4b7635097560c7cb658" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BChannelControl::CurrentChannel</definition>
        <argsstring>() const</argsstring>
        <name>CurrentChannel</name>
        <qualifiedname>BChannelControl::CurrentChannel</qualifiedname>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="73" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a2ba05bb52a1d79b9e840c28e08531e98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BChannelControl::DetachedFromWindow</definition>
        <argsstring>()</argsstring>
        <name>DetachedFromWindow</name>
        <qualifiedname>BChannelControl::DetachedFromWindow</qualifiedname>
        <reimplements refid="classBControl_1a588fea0ded4cdc4c1b4fb5d1f5565f27">DetachedFromWindow</reimplements>
        <reimplementedby refid="classBChannelSlider_1a0e62e869e80944ad32a2c0dc8b813e35">DetachedFromWindow</reimplementedby>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="41" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1ae898048a4dab959bb37dfbbbdd0bc8f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>void BChannelControl::Draw</definition>
        <argsstring>(BRect updateRect)=0</argsstring>
        <name>Draw</name>
        <qualifiedname>BChannelControl::Draw</qualifiedname>
        <reimplements refid="classBView_1aa55014241fc2f5556415850692b52db2">Draw</reimplements>
        <reimplementedby refid="classBChannelSlider_1a08090615a13b65d7877b2e38958fb725">Draw</reimplementedby>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>updateRect</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>updateRect</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="32" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a8fbfdedacf261023b38c28fc117cf6b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BChannelControl::FrameResized</definition>
        <argsstring>(float newWidth, float newHeight)</argsstring>
        <name>FrameResized</name>
        <qualifiedname>BChannelControl::FrameResized</qualifiedname>
        <reimplements refid="classBView_1a85d88f9c2bb6800560874b2061378fa0">FrameResized</reimplements>
        <reimplementedby refid="classBChannelSlider_1a620b639a7f8051f8e47073873b2f0dd8">FrameResized</reimplementedby>
        <param>
          <type>float</type>
          <declname>newWidth</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newHeight</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="36" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a615503c6b77d787d4e735661c5e74bab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::GetLimits</definition>
        <argsstring>(int32 *_minimum, int32 *_maximum) const</argsstring>
        <name>GetLimits</name>
        <qualifiedname>BChannelControl::GetLimits</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_minimum</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_maximum</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_minimum</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_maximum</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="96" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a437863baaf6998f5c6a9d0e07df9ba1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::GetLimitsFor</definition>
        <argsstring>(int32 channel, int32 *_minimum, int32 *_maximum) const</argsstring>
        <name>GetLimitsFor</name>
        <qualifiedname>BChannelControl::GetLimitsFor</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_minimum</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_maximum</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_minimum</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_maximum</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="87" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a9a8bbf851acc271577ef069cd7b45c53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::GetLimitsFor</definition>
        <argsstring>(int32 fromChannel, int32 channelCount, int32 *minima, int32 *maxima) const</argsstring>
        <name>GetLimitsFor</name>
        <qualifiedname>BChannelControl::GetLimitsFor</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromChannel</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channelCount</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>minima</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>maxima</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fromChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minima</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxima</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="92" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1aacccdb670d6553e5204c8ae317f6029a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>void BChannelControl::GetPreferredSize</definition>
        <argsstring>(float *width, float *height)=0</argsstring>
        <name>GetPreferredSize</name>
        <qualifiedname>BChannelControl::GetPreferredSize</qualifiedname>
        <reimplements refid="classBControl_1a22455c705a4ed0fd09908b36a8dda3ae">GetPreferredSize</reimplements>
        <reimplementedby refid="classBChannelSlider_1a0f2838b9bd42bd8454658dbdd78b179b">GetPreferredSize</reimplementedby>
        <param>
          <type>float *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="43" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1abfb5744f9faf08ed02d22a33ae9e9ab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::GetSupportedSuites</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>GetSupportedSuites</name>
        <qualifiedname>BChannelControl::GetSupportedSuites</qualifiedname>
        <reimplements refid="classBControl_1a3b545ffe2ee04f62eaa567582225adba">GetSupportedSuites</reimplements>
        <reimplementedby refid="classBChannelSlider_1affd29de4f880e122c72d4d3b25b7ed9d">GetSupportedSuites</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="51" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a127875bd84bb1bbfef908f2d233508a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BChannelControl::GetValue</definition>
        <argsstring>(int32 *_values, int32 fromChannel, int32 channelCount) const</argsstring>
        <name>GetValue</name>
        <qualifiedname>BChannelControl::GetValue</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_values</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromChannel</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channelCount</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_values</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fromChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="79" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a29dcbf2de885c423dc2981c95b225691" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::Invoke</definition>
        <argsstring>(BMessage *message=NULL)</argsstring>
        <name>Invoke</name>
        <qualifiedname>BChannelControl::Invoke</qualifiedname>
        <reimplements refid="classBControl_1afa04e938d3c42b1de43baa48edb8fd3e">Invoke</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="56" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1aadabf9e1b8a8e4984c2386d748df102a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::InvokeChannel</definition>
        <argsstring>(BMessage *message=NULL, int32 fromChannel=0, int32 channelCount=-1, const bool *_mask=NULL)</argsstring>
        <name>InvokeChannel</name>
        <qualifiedname>BChannelControl::InvokeChannel</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromChannel</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channelCount</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>const bool *</type>
          <declname>_mask</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>These methods are similar to <ref refid="classBChannelControl_1a29dcbf2de885c423dc2981c95b225691" kindref="member">Invoke()</ref> <ref refid="classBChannelControl_1a29dcbf2de885c423dc2981c95b225691" kindref="member">Invoke()</ref> and <ref refid="classBInvoker_1ab009fe9c6a1f64798c614612e8c3db20" kindref="member">InvokeNotify()</ref>, but. </para>
        </briefdescription>
        <detaileddescription>
<para>Undocumented public method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fromChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="60" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a141b106b1f2103eb2bbdb1c4572ae11c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::InvokeNotifyChannel</definition>
        <argsstring>(BMessage *message=NULL, uint32 kind=B_CONTROL_INVOKED, int32 fromChannel=0, int32 channelCount=-1, const bool *_mask=NULL)</argsstring>
        <name>InvokeNotifyChannel</name>
        <qualifiedname>BChannelControl::InvokeNotifyChannel</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>kind</declname>
          <defval>B_CONTROL_INVOKED</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromChannel</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channelCount</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>const bool *</type>
          <declname>_mask</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fromChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="64" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a37ac118342e3d4fe79faa33b88e56813" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>void BChannelControl::KeyDown</definition>
        <argsstring>(const char *bytes, int32 numBytes)=0</argsstring>
        <name>KeyDown</name>
        <qualifiedname>BChannelControl::KeyDown</qualifiedname>
        <reimplements refid="classBControl_1ade80a87b7da08e9b84b188c629ec36c8">KeyDown</reimplements>
        <reimplementedby refid="classBChannelSlider_1acea7a9db888f42a0a20640efd9ad0a4b">KeyDown</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>numBytes</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="34" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a708bc78a40df7d3f8f51d5e122fc33cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BChannelControl::MaxChannelCount</definition>
        <argsstring>() const =0</argsstring>
        <name>MaxChannelCount</name>
        <qualifiedname>BChannelControl::MaxChannelCount</qualifiedname>
        <reimplementedby refid="classBChannelSlider_1a1b7e9aa6c2c2d5198a4a02f569ac153b">MaxChannelCount</reimplementedby>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="76" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a5f3f40be93c53d623cfd425ca211ec01" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BChannelControl::MaxLimitLabel</definition>
        <argsstring>() const</argsstring>
        <name>MaxLimitLabel</name>
        <qualifiedname>BChannelControl::MaxLimitLabel</qualifiedname>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="103" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a8d2b229bb68fb3097cff31b04a162aba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BChannelControl::MaxLimitLabelFor</definition>
        <argsstring>(int32 channel) const</argsstring>
        <name>MaxLimitLabelFor</name>
        <qualifiedname>BChannelControl::MaxLimitLabelFor</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="110" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a7c3c5174a2f31f0a24c3fe4258d372da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BChannelControl::MessageReceived</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>MessageReceived</name>
        <qualifiedname>BChannelControl::MessageReceived</qualifiedname>
        <reimplements refid="classBControl_1a19960b4d0a96144f73065a6ea1f2f8e2">MessageReceived</reimplements>
        <reimplementedby refid="classBChannelSlider_1aa60391cfc92b6c1a59ae7e92aa1f5bae">MessageReceived</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="46" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1aad02806db9e57f97275a52e547be4f9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BChannelControl::MinLimitLabel</definition>
        <argsstring>() const</argsstring>
        <name>MinLimitLabel</name>
        <qualifiedname>BChannelControl::MinLimitLabel</qualifiedname>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="102" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a00185e78adec51048d1cbfceab5f0953" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BChannelControl::MinLimitLabelFor</definition>
        <argsstring>(int32 channel) const</argsstring>
        <name>MinLimitLabelFor</name>
        <qualifiedname>BChannelControl::MinLimitLabelFor</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="109" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1af3ea0a9f8bf0896334e2595ac187af24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>BMessage * BChannelControl::ModificationMessage</definition>
        <argsstring>() const</argsstring>
        <name>ModificationMessage</name>
        <qualifiedname>BChannelControl::ModificationMessage</qualifiedname>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="54" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a00e4315bf31cfe8b0a071cf5766427a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>void BChannelControl::MouseDown</definition>
        <argsstring>(BPoint where)=0</argsstring>
        <name>MouseDown</name>
        <qualifiedname>BChannelControl::MouseDown</qualifiedname>
        <reimplements refid="classBControl_1aae264c07bf8006acf1fa96ceedc5f74d">MouseDown</reimplements>
        <reimplementedby refid="classBChannelSlider_1a858647630d03d081d3a2817e00f2e548">MouseDown</reimplementedby>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="33" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a6df6fe17dedbf19a1d4e868ad24410f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BChannelControl::ResizeToPreferred</definition>
        <argsstring>()</argsstring>
        <name>ResizeToPreferred</name>
        <qualifiedname>BChannelControl::ResizeToPreferred</qualifiedname>
        <reimplements refid="classBControl_1ad25f5ce6f17b5fe6fd6347021e9222e4">ResizeToPreferred</reimplements>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="42" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1af12f883b6e60f2ea071bb18724593350" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
        <definition>BHandler * BChannelControl::ResolveSpecifier</definition>
        <argsstring>(BMessage *message, int32 index, BMessage *specifier, int32 what, const char *property)</argsstring>
        <name>ResolveSpecifier</name>
        <qualifiedname>BChannelControl::ResolveSpecifier</qualifiedname>
        <reimplements refid="classBControl_1a084be37bbc0c49627c42a078c4b4dac8">ResolveSpecifier</reimplements>
        <reimplementedby refid="classBChannelSlider_1ab95b5eebb6adcc7502c856789f08b6d2">ResolveSpecifier</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>what</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>what</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="48" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a9caa64ff5e61883a96949e444087b280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::SetAllValue</definition>
        <argsstring>(int32 values)</argsstring>
        <name>SetAllValue</name>
        <qualifiedname>BChannelControl::SetAllValue</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="84" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a28dd4fb53295f1df2f1038c108abc675" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::SetChannelCount</definition>
        <argsstring>(int32 count)</argsstring>
        <name>SetChannelCount</name>
        <qualifiedname>BChannelControl::SetChannelCount</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="77" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1adc7dd04b2020c6b54922996ca9aa6f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::SetCurrentChannel</definition>
        <argsstring>(int32 index)</argsstring>
        <name>SetCurrentChannel</name>
        <qualifiedname>BChannelControl::SetCurrentChannel</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="72" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1ac410bc781b8679e529663607a4134951" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BChannelControl::SetFont</definition>
        <argsstring>(const BFont *font, uint32 mask=B_FONT_ALL)</argsstring>
        <name>SetFont</name>
        <qualifiedname>BChannelControl::SetFont</qualifiedname>
        <reimplements refid="classBView_1a9247127c151153542a3e6bc1f3904433">SetFont</reimplements>
        <reimplementedby refid="classBChannelSlider_1af208806038eee0044da24f6b8ebe1d5c">SetFont</reimplementedby>
        <param>
          <type>const <ref refid="classBFont" kindref="compound">BFont</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>mask</declname>
          <defval><ref refid="View_8h_1af715e26dfffd1f8de1c18449e2770cffa2cc16d47078da54b17b7ed4fe2d64798" kindref="member">B_FONT_ALL</ref></defval>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="37" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a88a03b786b6a2ba4ec79b6b0bad515c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::SetLimitLabels</definition>
        <argsstring>(const char *minLabel, const char *maxLabel)</argsstring>
        <name>SetLimitLabels</name>
        <qualifiedname>BChannelControl::SetLimitLabels</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>minLabel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>maxLabel</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minLabel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLabel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="100" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a292e018db81d5e38c0e6fa1249d9e1cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::SetLimitLabelsFor</definition>
        <argsstring>(int32 channel, const char *minLabel, const char *maxLabel)</argsstring>
        <name>SetLimitLabelsFor</name>
        <qualifiedname>BChannelControl::SetLimitLabelsFor</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>minLabel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>maxLabel</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minLabel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLabel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="104" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a9178d6a4c731d0643e4a1060192b7828" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::SetLimitLabelsFor</definition>
        <argsstring>(int32 fromChannel, int32 channelCount, const char *minLabel, const char *maxLabel)</argsstring>
        <name>SetLimitLabelsFor</name>
        <qualifiedname>BChannelControl::SetLimitLabelsFor</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromChannel</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channelCount</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>minLabel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>maxLabel</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fromChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minLabel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLabel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="106" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1ae6fe8cc93e7d03f63774246d41ede140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::SetLimits</definition>
        <argsstring>(int32 minimum, int32 maximum)</argsstring>
        <name>SetLimits</name>
        <qualifiedname>BChannelControl::SetLimits</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>minimum</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>maximum</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minimum</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximum</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="95" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a2e4dc5fefe5494db1f2f1a9975b1d958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::SetLimitsFor</definition>
        <argsstring>(int32 channel, int32 minimum, int32 maximum)</argsstring>
        <name>SetLimitsFor</name>
        <qualifiedname>BChannelControl::SetLimitsFor</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>minimum</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>maximum</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minimum</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximum</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="85" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a52c159bbe9ac20e7967513d76d523efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::SetLimitsFor</definition>
        <argsstring>(int32 fromChannel, int32 channelCount, const int32 *minima, const int32 *maxima)</argsstring>
        <name>SetLimitsFor</name>
        <qualifiedname>BChannelControl::SetLimitsFor</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromChannel</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channelCount</declname>
        </param>
        <param>
          <type>const <ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>minima</declname>
        </param>
        <param>
          <type>const <ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>maxima</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fromChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minima</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxima</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="89" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a69419e5d61a4abd08d7efa9b50725e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BChannelControl::SetModificationMessage</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>SetModificationMessage</name>
        <qualifiedname>BChannelControl::SetModificationMessage</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="53" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a0f29dff8436002aed9a3b3ce0d8ffc58" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::SetValue</definition>
        <argsstring>(int32 fromChannel, int32 channelCount, const int32 *values)</argsstring>
        <name>SetValue</name>
        <qualifiedname>BChannelControl::SetValue</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromChannel</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channelCount</declname>
        </param>
        <param>
          <type>const <ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fromChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="82" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a689d5c240ce7cea39f2b9da865ad5627" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BChannelControl::SetValue</definition>
        <argsstring>(int32 value)</argsstring>
        <name>SetValue</name>
        <qualifiedname>BChannelControl::SetValue</qualifiedname>
        <reimplements refid="classBControl_1a7841a122e7fa9ab5efb5217c562e763d">SetValue</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="70" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a5d8c60ab1d13545776b9f896dbcbbee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::SetValueFor</definition>
        <argsstring>(int32 channel, int32 value)</argsstring>
        <name>SetValueFor</name>
        <qualifiedname>BChannelControl::SetValueFor</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="81" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a5c312450f9a4d5d008cedf28c72380a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>bool BChannelControl::SupportsIndividualLimits</definition>
        <argsstring>() const =0</argsstring>
        <name>SupportsIndividualLimits</name>
        <qualifiedname>BChannelControl::SupportsIndividualLimits</qualifiedname>
        <reimplementedby refid="classBChannelSlider_1adfd838868fb0f2131cddaad8cc8d39c1">SupportsIndividualLimits</reimplementedby>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="99" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a3137b306fdf08112a31c7368dad66324" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BChannelControl::ValueFor</definition>
        <argsstring>(int32 channel) const</argsstring>
        <name>ValueFor</name>
        <qualifiedname>BChannelControl::ValueFor</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Undocumented public method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="78" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBChannelControl_1ac44b9eec0952eab9e96720b2fa7d619b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BChannelControl::BChannelControl</definition>
        <argsstring>(const BChannelControl &amp;other)</argsstring>
        <name>BChannelControl</name>
        <qualifiedname>BChannelControl::BChannelControl</qualifiedname>
        <param>
          <type>const <ref refid="classBChannelControl" kindref="compound">BChannelControl</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a00988a9a8e33f19d1ae0e82d717e2108" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BChannelControl::_Reserverd_ChannelControl_0</definition>
        <argsstring>(void *,...)</argsstring>
        <name>_Reserverd_ChannelControl_0</name>
        <qualifiedname>BChannelControl::_Reserverd_ChannelControl_0</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="116" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1abd78dff5f8f93c28bef9d4609d4c85ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BChannelControl::_Reserverd_ChannelControl_1</definition>
        <argsstring>(void *,...)</argsstring>
        <name>_Reserverd_ChannelControl_1</name>
        <qualifiedname>BChannelControl::_Reserverd_ChannelControl_1</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="117" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1affc85cfbc7b88982de03cbea8281a6b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BChannelControl::_Reserverd_ChannelControl_10</definition>
        <argsstring>(void *,...)</argsstring>
        <name>_Reserverd_ChannelControl_10</name>
        <qualifiedname>BChannelControl::_Reserverd_ChannelControl_10</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="126" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a4d481016ecc3fc7042df99674c56e2ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BChannelControl::_Reserverd_ChannelControl_11</definition>
        <argsstring>(void *,...)</argsstring>
        <name>_Reserverd_ChannelControl_11</name>
        <qualifiedname>BChannelControl::_Reserverd_ChannelControl_11</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="127" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a45224407e4869033d4ea45f5492bc6e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BChannelControl::_Reserverd_ChannelControl_2</definition>
        <argsstring>(void *,...)</argsstring>
        <name>_Reserverd_ChannelControl_2</name>
        <qualifiedname>BChannelControl::_Reserverd_ChannelControl_2</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="118" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a3fe89520ef382e87c6cd48f4b1a9b779" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BChannelControl::_Reserverd_ChannelControl_3</definition>
        <argsstring>(void *,...)</argsstring>
        <name>_Reserverd_ChannelControl_3</name>
        <qualifiedname>BChannelControl::_Reserverd_ChannelControl_3</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="119" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1acb4ef717c33d08c718c6dd862f58ea94" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BChannelControl::_Reserverd_ChannelControl_4</definition>
        <argsstring>(void *,...)</argsstring>
        <name>_Reserverd_ChannelControl_4</name>
        <qualifiedname>BChannelControl::_Reserverd_ChannelControl_4</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="120" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1af56969c16ebaf1dbc2563554222aef31" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BChannelControl::_Reserverd_ChannelControl_5</definition>
        <argsstring>(void *,...)</argsstring>
        <name>_Reserverd_ChannelControl_5</name>
        <qualifiedname>BChannelControl::_Reserverd_ChannelControl_5</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="121" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a08fd0328d7c177c0689a91f3b0041f0f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BChannelControl::_Reserverd_ChannelControl_6</definition>
        <argsstring>(void *,...)</argsstring>
        <name>_Reserverd_ChannelControl_6</name>
        <qualifiedname>BChannelControl::_Reserverd_ChannelControl_6</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="122" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a8aadc9c00fae02bd4e89f13c530185dc" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BChannelControl::_Reserverd_ChannelControl_7</definition>
        <argsstring>(void *,...)</argsstring>
        <name>_Reserverd_ChannelControl_7</name>
        <qualifiedname>BChannelControl::_Reserverd_ChannelControl_7</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="123" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a3023c04e8598080619b33151a1e86342" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BChannelControl::_Reserverd_ChannelControl_8</definition>
        <argsstring>(void *,...)</argsstring>
        <name>_Reserverd_ChannelControl_8</name>
        <qualifiedname>BChannelControl::_Reserverd_ChannelControl_8</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="124" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a44583bbb5cbb8d15814f59777c014704" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BChannelControl::_Reserverd_ChannelControl_9</definition>
        <argsstring>(void *,...)</argsstring>
        <name>_Reserverd_ChannelControl_9</name>
        <qualifiedname>BChannelControl::_Reserverd_ChannelControl_9</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="125" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1ad7731c3e558e3ba98a0ec9d1a44179f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBChannelControl" kindref="compound">BChannelControl</ref> &amp;</type>
        <definition>BChannelControl &amp; BChannelControl::operator=</definition>
        <argsstring>(const BChannelControl &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BChannelControl::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBChannelControl" kindref="compound">BChannelControl</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="114" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1abe7a5636ff3055a77e722ca2acd93d28" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BChannelControl::StuffValues</definition>
        <argsstring>(int32 fromChannel, int32 channelCount, const int32 *values)</argsstring>
        <name>StuffValues</name>
        <qualifiedname>BChannelControl::StuffValues</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromChannel</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>channelCount</declname>
        </param>
        <param>
          <type>const <ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="150" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBChannelControl_1a9939c94accd0159882e2a5b6b949825e" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *const &amp;</type>
        <definition>int32 *const  &amp; BChannelControl::MaxLimitList</definition>
        <argsstring>() const</argsstring>
        <name>MaxLimitList</name>
        <qualifiedname>BChannelControl::MaxLimitList</qualifiedname>
        <briefdescription>
<para>Undocumented protected method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="131" column="18" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1a31a272c6cc255c48bd98826908a91788" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *const &amp;</type>
        <definition>int32 *const  &amp; BChannelControl::MinLimitList</definition>
        <argsstring>() const</argsstring>
        <name>MinLimitList</name>
        <qualifiedname>BChannelControl::MinLimitList</qualifiedname>
        <briefdescription>
<para>Undocumented protected method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="130" column="18" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classBChannelControl_1ad6e4ed8285ce7eef9d9821e4dab56c0f" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *const &amp;</type>
        <definition>int32 *const  &amp; BChannelControl::ValueList</definition>
        <argsstring>() const</argsstring>
        <name>ValueList</name>
        <qualifiedname>BChannelControl::ValueList</qualifiedname>
        <briefdescription>
<para>Undocumented protected method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Undocumented </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&lt;value&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="132" column="18" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="170" bodyend="173"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBChannelControl" kindref="compound">BChannelControl</ref> is the base class for controls that have several. </para>
    </briefdescription>
    <detaileddescription>
<para>Undocumented class.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BChannelControl</label>
        <link refid="classBChannelControl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>BChannelSlider</label>
        <link refid="classBChannelSlider"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BControl</label>
        <link refid="classBControl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BInvoker</label>
        <link refid="classBInvoker"/>
      </node>
      <node id="3">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BChannelControl</label>
        <link refid="classBChannelControl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BControl</label>
        <link refid="classBControl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BInvoker</label>
        <link refid="classBInvoker"/>
      </node>
      <node id="3">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" line="16" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/ChannelControl.h" bodystart="16" bodyend="152"/>
    <listofallmembers>
      <member refid="classBChannelControl_1aea89d5d6de3b004baf6f99e8bfeaeebf" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>_reserved_</name></member>
      <member refid="classBChannelControl_1a00988a9a8e33f19d1ae0e82d717e2108" prot="private" virt="virtual"><scope>BChannelControl</scope><name>_Reserverd_ChannelControl_0</name></member>
      <member refid="classBChannelControl_1abd78dff5f8f93c28bef9d4609d4c85ed" prot="private" virt="virtual"><scope>BChannelControl</scope><name>_Reserverd_ChannelControl_1</name></member>
      <member refid="classBChannelControl_1affc85cfbc7b88982de03cbea8281a6b5" prot="private" virt="virtual"><scope>BChannelControl</scope><name>_Reserverd_ChannelControl_10</name></member>
      <member refid="classBChannelControl_1a4d481016ecc3fc7042df99674c56e2ef" prot="private" virt="virtual"><scope>BChannelControl</scope><name>_Reserverd_ChannelControl_11</name></member>
      <member refid="classBChannelControl_1a45224407e4869033d4ea45f5492bc6e4" prot="private" virt="virtual"><scope>BChannelControl</scope><name>_Reserverd_ChannelControl_2</name></member>
      <member refid="classBChannelControl_1a3fe89520ef382e87c6cd48f4b1a9b779" prot="private" virt="virtual"><scope>BChannelControl</scope><name>_Reserverd_ChannelControl_3</name></member>
      <member refid="classBChannelControl_1acb4ef717c33d08c718c6dd862f58ea94" prot="private" virt="virtual"><scope>BChannelControl</scope><name>_Reserverd_ChannelControl_4</name></member>
      <member refid="classBChannelControl_1af56969c16ebaf1dbc2563554222aef31" prot="private" virt="virtual"><scope>BChannelControl</scope><name>_Reserverd_ChannelControl_5</name></member>
      <member refid="classBChannelControl_1a08fd0328d7c177c0689a91f3b0041f0f" prot="private" virt="virtual"><scope>BChannelControl</scope><name>_Reserverd_ChannelControl_6</name></member>
      <member refid="classBChannelControl_1a8aadc9c00fae02bd4e89f13c530185dc" prot="private" virt="virtual"><scope>BChannelControl</scope><name>_Reserverd_ChannelControl_7</name></member>
      <member refid="classBChannelControl_1a3023c04e8598080619b33151a1e86342" prot="private" virt="virtual"><scope>BChannelControl</scope><name>_Reserverd_ChannelControl_8</name></member>
      <member refid="classBChannelControl_1a44583bbb5cbb8d15814f59777c014704" prot="private" virt="virtual"><scope>BChannelControl</scope><name>_Reserverd_ChannelControl_9</name></member>
      <member refid="classBView_1ab6382c582e5e1be527d3199459d05e8f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>AddChild</name></member>
      <member refid="classBView_1a5d30ae4fa0119bf5286f52f83c2f351c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>AddChild</name></member>
      <member refid="classBHandler_1a862bea548363faac6f883b348cbed838" prot="public" virt="virtual"><scope>BChannelControl</scope><name>AddFilter</name></member>
      <member refid="classBView_1a88440336a66ee9b1a4b1661e9ba9e59c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>AddLine</name></member>
      <member refid="classBView_1ac780f029d415ee0a915792b4e756fa77" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>AdoptParentColors</name></member>
      <member refid="classBView_1a0e429a82fe06e9ab390b06d993ee31be" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>AdoptSystemColors</name></member>
      <member refid="classBView_1ab68ad7103708884f9e6fd84e8a579746" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>AdoptViewColors</name></member>
      <member refid="classBView_1a561e82ed41cbb93d3bacf371787497bf" prot="public" virt="virtual"><scope>BChannelControl</scope><name>AllArchived</name></member>
      <member refid="classBControl_1a2abeec720f873da7c4bc3a2709ff8be0" prot="public" virt="virtual"><scope>BChannelControl</scope><name>AllAttached</name></member>
      <member refid="classBControl_1a991c0eecd0279cbc27c5f9a0fbc37920" prot="public" virt="virtual"><scope>BChannelControl</scope><name>AllDetached</name></member>
      <member refid="classBView_1ab7bd04272afed8b28bf57d1de33cbe05" prot="public" virt="virtual"><scope>BChannelControl</scope><name>AllUnarchived</name></member>
      <member refid="classBView_1a2d73d2f2b0b35390929cf54fbfa5ecff" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>AppendToPicture</name></member>
      <member refid="classBChannelControl_1aa71189c8b008cb3329c17b58f786617e" prot="public" virt="virtual"><scope>BChannelControl</scope><name>Archive</name></member>
      <member refid="classBChannelControl_1aaed17a427fd040df721062ea646ee360" prot="public" virt="virtual"><scope>BChannelControl</scope><name>AttachedToWindow</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BArchivable</name></member>
      <member refid="classBChannelControl_1a7aad143836f232403de12625b4feea5b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BChannelControl</name></member>
      <member refid="classBChannelControl_1a520a2662a98db39d777c4f44d5c118b8" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BChannelControl</name></member>
      <member refid="classBChannelControl_1a160aeb63f485374042ecd2e74d4e13f6" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BChannelControl</name></member>
      <member refid="classBChannelControl_1ac44b9eec0952eab9e96720b2fa7d619b" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>BChannelControl</name></member>
      <member refid="classBControl_1ae2bd77f0349ca0197b7599393a6ae3ca" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BControl</name></member>
      <member refid="classBControl_1a6243ab82eecb7ac3a5c35592a057845d" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BControl</name></member>
      <member refid="classBControl_1a1224f952eb63f1b0d338720b88fdf220" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BControl</name></member>
      <member refid="classBInvoker_1ada272cb8671448d7f7efd607791f31a7" prot="protected" virt="non-virtual"><scope>BChannelControl</scope><name>BeginInvokeNotify</name></member>
      <member refid="classBView_1abe65757b7c83c8db390bf0c87457a343" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BeginLayer</name></member>
      <member refid="classBView_1ab3f2e9f54d2b93952b27e182ac552983" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BeginLineArray</name></member>
      <member refid="classBView_1a14155192773aad22ebe47a9975afac5f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BeginPicture</name></member>
      <member refid="classBView_1ac1eb1eeee67ec97205a4acc6955185bd" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BeginRectTracking</name></member>
      <member refid="classBHandler_1a2142e21fe781b24f914ec2086e5f05b7" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BHandler</name></member>
      <member refid="classBHandler_1add8fa081a7bb8633581e78777b215d0b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BHandler</name></member>
      <member refid="classBInvoker_1ad03149db91cd6460f12adb72780a7080" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BInvoker</name></member>
      <member refid="classBInvoker_1a6405334f1589c7a9fc3604ff8a4c8c83" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BInvoker</name></member>
      <member refid="classBInvoker_1adaf9b3df1b4a318e10df04a5eb9f59ee" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BInvoker</name></member>
      <member refid="classBView_1acbb8ea442346e91428689163db9d633e" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Bounds</name></member>
      <member refid="classBView_1ab148f59c41c9a22ced87bf7a0221ed62" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BView</name></member>
      <member refid="classBView_1ae3a1b2a66dc19690e766623be65c37e2" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BView</name></member>
      <member refid="classBView_1ae982fac35c278cc64990c506efe3965e" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>BView</name></member>
      <member refid="classBView_1aaf91592f50f2f44d16f23e7504f494cb" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ChildAt</name></member>
      <member refid="classBView_1ae7582b9a2b0b446a1de16c681f23baf9" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ClearViewBitmap</name></member>
      <member refid="classBView_1a0ae48f37c3f56b422841638971488cc0" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ClearViewOverlay</name></member>
      <member refid="classBView_1a18d61bcae2a7ca8a1a0977ac23d15171" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ClipToInversePicture</name></member>
      <member refid="classBView_1ad1762d160500ec3ce90c7bd73944d8a7" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ClipToInverseRect</name></member>
      <member refid="classBView_1a17dcb4f2e92994cde9a9ece9caa619c2" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ClipToInverseShape</name></member>
      <member refid="classBView_1a9c92c9e8e306d00dbfef81f2b0282339" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ClipToPicture</name></member>
      <member refid="classBView_1a22ff147a2f0a0bd65de494c9a039acee" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ClipToRect</name></member>
      <member refid="classBView_1ac0884c62949361a7eb6a4834f46b902c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ClipToShape</name></member>
      <member refid="classBInvoker_1a6eb323ab957a5ee99e8db2b2fb0e9800" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Command</name></member>
      <member refid="classBView_1a656b8d82a6a7c7c6ab33c3dd08aad6ec" prot="public" virt="virtual"><scope>BChannelControl</scope><name>ConstrainClippingRegion</name></member>
      <member refid="classBView_1a43c16140dd4491a6a6f7bad11bbea1f9" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1aa3201bdf5c489fbab7d67afe3453466d" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1ab2aeeb14409a18f950173e7cb22e147c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1a45b405f10c29442aea8b70161410565f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1a4b794ccd899dc6a0cafd886169122df5" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a75f1d68cf77bccc03930eb8e273f2967" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a3fbc496f437925cb02ccf9e817406e4e" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a44c3b5174e4ccfa4c123e0d5d54e9408" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1ab20700567eabd5f8135be179b4232e2c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1a91e6a7edab78547be47cb8dc84cfdecf" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1ac7bd2e0e7aac40d1be9a47999b5701a9" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1ae3b385e4d1b9f70bc848bf2fd0b7753c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1aefefb1242613b869feb6b8e0cc119518" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1af90cdeb62cc60adf64eb9a669c37c153" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1ad99f5af006f28c485f02484752a2ac5d" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1ae60c56c306d0cf3f504d710fac8b9bed" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1a8ace5c5cc811c4ad16acf281ffd1a48d" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>CopyBits</name></member>
      <member refid="classBChannelControl_1a7cbb592d5e5e29abae0b1bc25477fa53" prot="public" virt="virtual"><scope>BChannelControl</scope><name>CountChannels</name></member>
      <member refid="classBView_1ae30d094a1cb1f3357c4aa7caa4b0e29d" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>CountChildren</name></member>
      <member refid="classBChannelControl_1a70cedb7243bbc4b7635097560c7cb658" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>CurrentChannel</name></member>
      <member refid="classBView_1ae2a9da1ca04489dd60ef8aefa86331ed" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DelayedInvalidate</name></member>
      <member refid="classBView_1a6389a46cf1842eb0d412b44958955e61" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DelayedInvalidate</name></member>
      <member refid="classBChannelControl_1a2ba05bb52a1d79b9e840c28e08531e98" prot="public" virt="virtual"><scope>BChannelControl</scope><name>DetachedFromWindow</name></member>
      <member refid="classBView_1aa165cbaac7d6915feaae6048c4378c85" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DisableLayoutInvalidation</name></member>
      <member refid="classBView_1a9d766a06d0885200c6ababba4c87808b" prot="protected" virt="virtual"><scope>BChannelControl</scope><name>DoLayout</name></member>
      <member refid="classBView_1a1f4f0c3c5946df1d14e6031e5e12f40b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DragMessage</name></member>
      <member refid="classBView_1a466287a3d939759cc09e4a6d1c9982cd" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DragMessage</name></member>
      <member refid="classBView_1ae1caa1d0bef9452db00c2adc8e3280b4" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DragMessage</name></member>
      <member refid="classBChannelControl_1ae898048a4dab959bb37dfbbbdd0bc8f4" prot="public" virt="pure-virtual"><scope>BChannelControl</scope><name>Draw</name></member>
      <member refid="classBView_1abb50623b4236926b068fc5a2264f6a48" prot="public" virt="virtual"><scope>BChannelControl</scope><name>DrawAfterChildren</name></member>
      <member refid="classBView_1a6171150993fbf7c73966c7c302a95573" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a63db7245fd9b9fefd461d7596c15f9cc" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1abce81666128d183d59b5cf2ed75c7f07" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a1c8b6e3e9218388a68ae43dd408a187c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a769c3e3dee7d86ed50308f7a3f46ef91" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1ae66727344d35f05c56b6163ad70e360c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a0ef432afa41aefcb3fdd537e2d290001" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1aa3275b791787a66f3638611cd6a5ae09" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a6931c5fe803eb5fa9e66438d347c4b6d" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1ab50fba0500357abebb9f3ef3832f2e68" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a02ba5c68f21d4345ec3ee683496ce851" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawChar</name></member>
      <member refid="classBView_1a2ed7c3628692426116fc0bb450c0f0c7" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawChar</name></member>
      <member refid="classBView_1ae7953a2e451fb6e5a439df9e9dc8451a" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawingMode</name></member>
      <member refid="classBView_1ae4b252943befd9f0b62e30517b3ecec2" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a2fdf36421cccce9136cdd9966a971955" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a9f5781a2b37113c55950c93b621984a7" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a65498927c21d6681a0e77c4e3d29efba" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a05881f8b07989e1e9db0bd41f8181341" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a7f2fde4e7719bded5af33805b8242b06" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a5c261dbbb4e8157799e85d6ad1530920" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawString</name></member>
      <member refid="classBView_1a83d77965bd9cda6212189d92b97d8198" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawString</name></member>
      <member refid="classBView_1ad3830d09ed0300a1144d47ac78cd2dde" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawString</name></member>
      <member refid="classBView_1a4e1f1c59352a1373ccace7255a0ccf23" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawString</name></member>
      <member refid="classBView_1a5dacf5d193a0c492f296bc1e402e6370" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawString</name></member>
      <member refid="classBView_1a135868eb5cd1b35ee1c2d03517b9a33f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawString</name></member>
      <member refid="classBView_1a8848d931fd0354860a0e71934e66cb03" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawTiledBitmap</name></member>
      <member refid="classBView_1ad281a4e40f212e3cb56c23fa6e574a84" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>DrawTiledBitmapAsync</name></member>
      <member refid="classBView_1ad43cc5c22f83d95632d3d81eff73f425" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>EnableLayoutInvalidation</name></member>
      <member refid="classBInvoker_1a2169cfbba1c3da1921baa9a550581b54" prot="protected" virt="non-virtual"><scope>BChannelControl</scope><name>EndInvokeNotify</name></member>
      <member refid="classBView_1a9f54d4478a12823f116168a45af30898" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>EndLayer</name></member>
      <member refid="classBView_1a24ba922f9698936bc27f48b3c51349a1" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>EndLineArray</name></member>
      <member refid="classBView_1ae01506892a9b2d39f6df13726be9d0af" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>EndPicture</name></member>
      <member refid="classBView_1a7bcc3532c03eeeb929278de8fcc1fd25" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>EndRectTracking</name></member>
      <member refid="classBView_1a8851d500773c732ddbb1a4b31f0ad664" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>EventMask</name></member>
      <member refid="classBView_1a1f078f5c987061c5cf3059f7091bcb1a" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ExplicitAlignment</name></member>
      <member refid="classBView_1a4e63cc8ca1f604ccb20f5891adade70f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ExplicitMaxSize</name></member>
      <member refid="classBView_1a1b24db754473008766cdd0fd9c4ee3b7" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ExplicitMinSize</name></member>
      <member refid="classBView_1a218cd0d238104a6ff31c1d72ae2d9e6e" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ExplicitPreferredSize</name></member>
      <member refid="classBChannelControl_1aa896b9f4be33a53ff81554e33df3c52d" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>fChannelCount</name></member>
      <member refid="classBChannelControl_1aa17a6a41b6dd1a513a69074615b1b134" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>fChannelMax</name></member>
      <member refid="classBChannelControl_1ae6075119b27e220c640dc2950d90fb5c" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>fChannelMin</name></member>
      <member refid="classBChannelControl_1a2e2a7e9906f3bf43b2ffa51d3d3f34bf" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>fChannelValues</name></member>
      <member refid="classBChannelControl_1aec39b2c6e6f6c2f97664e99b18647541" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>fCurrentChannel</name></member>
      <member refid="classBView_1af0e5d362474d39199116045aa9621aa5" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillArc</name></member>
      <member refid="classBView_1ac216c652253a21f0f28a7caef07deb77" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillArc</name></member>
      <member refid="classBView_1a49017edefe45ca5c74954e1227e673bb" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillArc</name></member>
      <member refid="classBView_1a4304fe45708f72d0ba20b579870c24ce" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillArc</name></member>
      <member refid="classBView_1a531ad43e129d810ee64208123b550193" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillBezier</name></member>
      <member refid="classBView_1a7cf8a5eaa5451b2c7df0d6fa392012bd" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillBezier</name></member>
      <member refid="classBView_1a06942f0dd4c13175bcfff6a88eae7cc0" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a98a73cbccb42edfc61b93f9aa6f4a13b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a2738cf2f3d39f560d0cff90543f45afa" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a86de91f260577187eaf22ba0fdf32fba" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillEllipse</name></member>
      <member refid="classBView_1ae72733cae8a1fc2da8feb47c0c2149fa" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillPolygon</name></member>
      <member refid="classBView_1adc7d96f2d60a819f03685eb11b6945e2" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a1bdc02a311b2a051ad7fbdbf1789e958" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a96cdb60a8c87e4958380a3077a2197a5" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a22a5ce1f024e622b6eade6a9176ff1f7" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a57b0870cd6a0109c347d80c34ca2f34a" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a4d074663998c7ba922a9d981d0cfe086" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillRect</name></member>
      <member refid="classBView_1aae6a3ff6683bb15ac8c647c946475e8f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillRect</name></member>
      <member refid="classBView_1a4810086c415d90bffa25ab2963716936" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillRegion</name></member>
      <member refid="classBView_1a56828d13947717462b661e1645305509" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillRegion</name></member>
      <member refid="classBView_1a38d7e7b15a13591c20020599886402b5" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillRoundRect</name></member>
      <member refid="classBView_1a73956d28b356b2eee83ebc19bd6e398b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillRoundRect</name></member>
      <member refid="classBView_1a3a2fd2d7313a9bb7dff359a4f4362a5f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillRule</name></member>
      <member refid="classBView_1a91b9ce4b8b8ee13ff5f1071e1fb0d829" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillShape</name></member>
      <member refid="classBView_1a9a82da733397e97b985875be941f77a6" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillShape</name></member>
      <member refid="classBView_1a46ec16609a402d03baa322a04d8c50e2" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillTriangle</name></member>
      <member refid="classBView_1af512b76752705cba87f89c8dac313005" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillTriangle</name></member>
      <member refid="classBView_1a5dd1c64839c11a79e80581e37656cc26" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillTriangle</name></member>
      <member refid="classBView_1a0878dea14a61d58c951bd8e11c0a2ef6" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FillTriangle</name></member>
      <member refid="classBHandler_1a909662a049856f6863a934cf18161554" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FilterList</name></member>
      <member refid="classBView_1ab83ef89f1876913174c825ff7cd02c4a" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>FindView</name></member>
      <member refid="classBView_1a561b10abf94dd65a26b02253af667508" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Flags</name></member>
      <member refid="classBView_1a15465930f84d2d01f7818bd79bc91c3e" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Flush</name></member>
      <member refid="classBChannelControl_1ac98666f7dc5636b196995c240cf339ac" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>fMaxLabel</name></member>
      <member refid="classBChannelControl_1ab0aa15e17a40305868244b72151bef03" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>fMinLabel</name></member>
      <member refid="classBChannelControl_1a2d19019b6604f75ce8c6f898aa0e5b56" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>fModificationMsg</name></member>
      <member refid="classBChannelControl_1af2add77a07b0c239f8823d6ddb137cee" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>fMultiLabels</name></member>
      <member refid="classBView_1a424161ccf6f52a354fdd67ed1376d196" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ForceFontAliasing</name></member>
      <member refid="classBView_1a487b04a3aaffdd1a1afb730dca36a7e2" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Frame</name></member>
      <member refid="classBView_1a551c22b45301e13a3ba959eece3cec7f" prot="public" virt="virtual"><scope>BChannelControl</scope><name>FrameMoved</name></member>
      <member refid="classBChannelControl_1a8fbfdedacf261023b38c28fc117cf6b5" prot="public" virt="virtual"><scope>BChannelControl</scope><name>FrameResized</name></member>
      <member refid="classBView_1ad50d5ba2249fdf3dd8640b3573c2a2e8" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>GetBlendingMode</name></member>
      <member refid="classBView_1acf50a063c9621f35a84b1d0245b12d69" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>GetClippingRegion</name></member>
      <member refid="classBView_1af244d01f85e6d9ae7f5fcca4637dc78c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>GetFont</name></member>
      <member refid="classBView_1a5bf95d66754634c647b2ddf7d39b4dfb" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>GetFontHeight</name></member>
      <member refid="classBView_1ad34bee968b1ec98a0bf89343340b6b07" prot="public" virt="virtual"><scope>BChannelControl</scope><name>GetHeightForWidth</name></member>
      <member refid="classBView_1aec2975b51966c397aa52b9e3eebd2c85" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>GetLayout</name></member>
      <member refid="classBChannelControl_1a615503c6b77d787d4e735661c5e74bab" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>GetLimits</name></member>
      <member refid="classBChannelControl_1a437863baaf6998f5c6a9d0e07df9ba1b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>GetLimitsFor</name></member>
      <member refid="classBChannelControl_1a9a8bbf851acc271577ef069cd7b45c53" prot="public" virt="virtual"><scope>BChannelControl</scope><name>GetLimitsFor</name></member>
      <member refid="classBView_1a830ce9cf2ac2ffb5f73f526ee5d6e53d" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>GetMouse</name></member>
      <member refid="classBChannelControl_1aacccdb670d6553e5204c8ae317f6029a" prot="public" virt="pure-virtual"><scope>BChannelControl</scope><name>GetPreferredSize</name></member>
      <member refid="classBView_1aaae0dc93bc61d7f221465fbe0aecd30a" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>GetStringWidths</name></member>
      <member refid="classBChannelControl_1abfb5744f9faf08ed02d22a33ae9e9ab8" prot="public" virt="virtual"><scope>BChannelControl</scope><name>GetSupportedSuites</name></member>
      <member refid="classBView_1afb826fe9b8964e4d843cae190170badf" prot="protected" virt="virtual"><scope>BChannelControl</scope><name>GetToolTipAt</name></member>
      <member refid="classBChannelControl_1a127875bd84bb1bbfef908f2d233508a3" prot="public" virt="virtual"><scope>BChannelControl</scope><name>GetValue</name></member>
      <member refid="classBInvoker_1a710e78abc03eb29e9e25d11d34c874cc" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>HandlerForReply</name></member>
      <member refid="classBView_1a606e0e7e03516dccb53bf073827460a8" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>HasDefaultColors</name></member>
      <member refid="classBView_1abd411461b7e23ad17e7294f8f5e1cbeb" prot="public" virt="virtual"><scope>BChannelControl</scope><name>HasHeightForWidth</name></member>
      <member refid="classBView_1aa9aacc95606b650e6a8d776b51cb902b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>HasSystemColors</name></member>
      <member refid="classBView_1a7688dc04178a2955950154ee3670d029" prot="public" virt="virtual"><scope>BChannelControl</scope><name>Hide</name></member>
      <member refid="classBView_1af75bbc1131ad6a90e299c6cbcf623fa7" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>HideToolTip</name></member>
      <member refid="classBView_1abda3583967fba9f6ed9524058d00a6e9" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>HighColor</name></member>
      <member refid="classBView_1aa86f548fba2e82d022066198be6d5af6" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>HighUIColor</name></member>
      <member refid="classBControl_1a186746c30c79d2645fb94301ef05dfff" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>IconBitmap</name></member>
      <member refid="classBControl_1ad5ba32b4f839a5a9bc60fcf037e23846" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Instantiate</name></member>
      <member refid="classBView_1a8c767d948dc9435c006cabdcab1cd08e" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Invalidate</name></member>
      <member refid="classBView_1ac70b682819c0f9b008c428e02015b19b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Invalidate</name></member>
      <member refid="classBView_1adfced0dcb244e199f872fdbd48349a05" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Invalidate</name></member>
      <member refid="classBView_1a4a711316094e43076a3f5478d937accf" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>InvalidateLayout</name></member>
      <member refid="classBView_1af7e5ebc41cd5a471dcdcfa1f3db801a5" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>InvertRect</name></member>
      <member refid="classBChannelControl_1a29dcbf2de885c423dc2981c95b225691" prot="public" virt="virtual"><scope>BChannelControl</scope><name>Invoke</name></member>
      <member refid="classBChannelControl_1aadabf9e1b8a8e4984c2386d748df102a" prot="public" virt="virtual"><scope>BChannelControl</scope><name>InvokeChannel</name></member>
      <member refid="classBInvoker_1a6e33e81c7ee307621295e8da6181d3f8" prot="protected" virt="non-virtual"><scope>BChannelControl</scope><name>InvokeKind</name></member>
      <member refid="classBInvoker_1ab009fe9c6a1f64798c614612e8c3db20" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>InvokeNotify</name></member>
      <member refid="classBChannelControl_1a141b106b1f2103eb2bbdb1c4572ae11c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>InvokeNotifyChannel</name></member>
      <member refid="classBControl_1a179de32505328b72911cd85bf2c3cfe8" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>IsEnabled</name></member>
      <member refid="classBView_1a165719de682845f80735042a499692ff" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>IsFocus</name></member>
      <member refid="classBControl_1aac106958d27f3e56b2d5ddd3eca5117a" prot="protected" virt="non-virtual"><scope>BChannelControl</scope><name>IsFocusChanging</name></member>
      <member refid="classBView_1a33a65050c2315b19b4c5af16c48e3cdb" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>IsHidden</name></member>
      <member refid="classBView_1a95cfa8ee585230ea8fb224e88eddc503" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>IsHidden</name></member>
      <member refid="classBView_1a4e86b719129a12afbda7c10371eeca47" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>IsLayoutInvalidationDisabled</name></member>
      <member refid="classBView_1a00a5d5d6edee7d488d77df03945b3e94" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>IsLayoutValid</name></member>
      <member refid="classBView_1a8e3f1722e40fdf01c5131e49199ec3ff" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>IsPrinting</name></member>
      <member refid="classBInvoker_1a17470932a103267815f01d0df9e891e9" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>IsTargetLocal</name></member>
      <member refid="classBControl_1a253dcd4904a221e750c58ce41cea6c8c" prot="protected" virt="non-virtual"><scope>BChannelControl</scope><name>IsTracking</name></member>
      <member refid="classBHandler_1a581b84f0f067afa88768ce6a0c07f59f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>IsWatched</name></member>
      <member refid="classBChannelControl_1a37ac118342e3d4fe79faa33b88e56813" prot="public" virt="pure-virtual"><scope>BChannelControl</scope><name>KeyDown</name></member>
      <member refid="classBView_1acbc528bb70be49993bd99aa136dbb089" prot="public" virt="virtual"><scope>BChannelControl</scope><name>KeyUp</name></member>
      <member refid="classBControl_1a0c345befac88d6af592ce2b3e7d7214e" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Label</name></member>
      <member refid="classBView_1a854b6ca54eeca610db9eab8b58d68a8b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Layout</name></member>
      <member refid="classBView_1a2f74b3e7c602045d8c927f923f45eefa" prot="public" virt="virtual"><scope>BChannelControl</scope><name>LayoutAlignment</name></member>
      <member refid="classBView_1ada521f848e4c800cd02eb4fe529e7ea0" prot="protected" virt="virtual"><scope>BChannelControl</scope><name>LayoutChanged</name></member>
      <member refid="classBView_1ae066513c0a788a9544744d409f28cada" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>LayoutContext</name></member>
      <member refid="classBView_1a0a552cc0d8678939c619f98dcc80d254" prot="protected" virt="virtual"><scope>BChannelControl</scope><name>LayoutInvalidated</name></member>
      <member refid="classBView_1a5d252dfe28eee049be2192d1a01ed6e3" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>LeftTop</name></member>
      <member refid="classBView_1a551f5961188e4f26ef310eb5eea7c926" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>LineCapMode</name></member>
      <member refid="classBView_1a0aa47adb29d91b4cc6c4924b7f436012" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>LineJoinMode</name></member>
      <member refid="classBView_1ab1cd7cf77a4fa01755d186a05163cfbe" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>LineMiterLimit</name></member>
      <member refid="classBHandler_1a9d64bf66b4914918e24390d117e83477" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>LockLooper</name></member>
      <member refid="classBHandler_1afa0099ff6defcb6d64e3ee1c2fb47afe" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>LockLooperWithTimeout</name></member>
      <member refid="classBHandler_1ac8e949959b12e602e3b0c4f023c60e6c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Looper</name></member>
      <member refid="classBView_1a423c54f22ab95745b28b583af999e554" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>LowColor</name></member>
      <member refid="classBView_1ae32ca6d8f106d44b5b51df82a7eb64c5" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>LowUIColor</name></member>
      <member refid="classBControl_1aaeeae39969b598868ad0e8d3298efb00" prot="public" virt="virtual"><scope>BChannelControl</scope><name>MakeFocus</name></member>
      <member refid="classBChannelControl_1a708bc78a40df7d3f8f51d5e122fc33cc" prot="public" virt="pure-virtual"><scope>BChannelControl</scope><name>MaxChannelCount</name></member>
      <member refid="classBChannelControl_1a5f3f40be93c53d623cfd425ca211ec01" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>MaxLimitLabel</name></member>
      <member refid="classBChannelControl_1a8d2b229bb68fb3097cff31b04a162aba" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>MaxLimitLabelFor</name></member>
      <member refid="classBChannelControl_1a9939c94accd0159882e2a5b6b949825e" prot="protected" virt="non-virtual"><scope>BChannelControl</scope><name>MaxLimitList</name></member>
      <member refid="classBView_1ad1f1843a380e850948cf7e4ed2d5f1ba" prot="public" virt="virtual"><scope>BChannelControl</scope><name>MaxSize</name></member>
      <member refid="classBInvoker_1ab0b73729de282c93b4da51e6b9dbc170" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Message</name></member>
      <member refid="classBChannelControl_1a7c3c5174a2f31f0a24c3fe4258d372da" prot="public" virt="virtual"><scope>BChannelControl</scope><name>MessageReceived</name></member>
      <member refid="classBInvoker_1aac0992846032f0caaed3d968cd9a1fca" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Messenger</name></member>
      <member refid="classBChannelControl_1aad02806db9e57f97275a52e547be4f9d" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>MinLimitLabel</name></member>
      <member refid="classBChannelControl_1a00185e78adec51048d1cbfceab5f0953" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>MinLimitLabelFor</name></member>
      <member refid="classBChannelControl_1a31a272c6cc255c48bd98826908a91788" prot="protected" virt="non-virtual"><scope>BChannelControl</scope><name>MinLimitList</name></member>
      <member refid="classBView_1acfb0cffde35b853dab6bc5d1bb03265f" prot="public" virt="virtual"><scope>BChannelControl</scope><name>MinSize</name></member>
      <member refid="classBChannelControl_1af3ea0a9f8bf0896334e2595ac187af24" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ModificationMessage</name></member>
      <member refid="classBChannelControl_1a00e4315bf31cfe8b0a071cf5766427a8" prot="public" virt="pure-virtual"><scope>BChannelControl</scope><name>MouseDown</name></member>
      <member refid="classBControl_1aafa3507bfcf6f058d269a6e3bd6d30be" prot="public" virt="virtual"><scope>BChannelControl</scope><name>MouseMoved</name></member>
      <member refid="classBControl_1aeef31f13aee4d5d0b3dbb0f7e12beb39" prot="public" virt="virtual"><scope>BChannelControl</scope><name>MouseUp</name></member>
      <member refid="classBView_1a6e122baca4494f6ce739a507054fa81f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>MoveBy</name></member>
      <member refid="classBView_1a979f8f0090284919b6e7c6c04d91cbde" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>MovePenBy</name></member>
      <member refid="classBView_1acb61254a2121f569f6223a95cd835abd" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>MovePenTo</name></member>
      <member refid="classBView_1ae32d7951a4ce9cff6b81899f5208a25f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>MovePenTo</name></member>
      <member refid="classBView_1acce9c93118a3db24078f16bdabc6fbec" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>MoveTo</name></member>
      <member refid="classBView_1a1c9b2df47ba1b9f3a1ce3286995fb8bd" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>MoveTo</name></member>
      <member refid="classBHandler_1a40b246ac272e09b2f641d1290be21200" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Name</name></member>
      <member refid="classBHandler_1a92855d8f88f6072e7225bde292feaa38" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>NextHandler</name></member>
      <member refid="classBView_1a76e7d862fe78e4d2766573bf073b9d30" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>NextSibling</name></member>
      <member refid="classBChannelControl_1ad7731c3e558e3ba98a0ec9d1a44179f0" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>operator=</name></member>
      <member refid="classBView_1aefbf71a7a403900e960ffa3943dc9901" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Origin</name></member>
      <member refid="classBView_1a332f34d9862000dbc859fd4e308839dd" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Parent</name></member>
      <member refid="classBView_1a2774e13c2b12c6a5fee333e95b76b07d" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>PenLocation</name></member>
      <member refid="classBView_1a69d8657d26b49773fa2de914f263b204" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>PenSize</name></member>
      <member refid="classBControl_1a0b32524cd2abfb7ea37b9988b180c733" prot="public" virt="virtual"><scope>BChannelControl</scope><name>Perform</name></member>
      <member refid="classBView_1abc0d202fe13366b80703afbdb3832951" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>PopState</name></member>
      <member refid="classBView_1a7f51d63e71b60a2721d04436ffbcfe36" prot="public" virt="virtual"><scope>BChannelControl</scope><name>PreferredSize</name></member>
      <member refid="classBView_1a2a46f78756eacca3f3d4c90d31c758b1" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>PreviousSibling</name></member>
      <member refid="classBView_1a0ae8ec3e94ee3d41cb329e3df6966566" prot="public" virt="virtual"><scope>BChannelControl</scope><name>Pulse</name></member>
      <member refid="classBView_1a1dcb914cd0c6ef8d1291aa8492968d40" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>PushState</name></member>
      <member refid="classBView_1a2cf4e698a4322ecfb946e440e0f7ac62" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Relayout</name></member>
      <member refid="classBView_1a5f93a23d06267da83c128bce222ceb17" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>RemoveChild</name></member>
      <member refid="classBHandler_1a2b608135b27f283802648e7c6f8cdc83" prot="public" virt="virtual"><scope>BChannelControl</scope><name>RemoveFilter</name></member>
      <member refid="classBView_1a87e0848b1760a9f28aad4516467a03ed" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>RemoveSelf</name></member>
      <member refid="classBView_1a127933a3820f0bfe0497b5e7ddfa191f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ResetLayoutInvalidation</name></member>
      <member refid="classBView_1ace23acc948bbc9b9272da8dc7f01d3ce" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ResizeBy</name></member>
      <member refid="classBView_1a742bccd6034ef9ade65b0e596fba55f2" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ResizeTo</name></member>
      <member refid="classBView_1a6134097569f75679616257a361086d7a" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ResizeTo</name></member>
      <member refid="classBChannelControl_1a6df6fe17dedbf19a1d4e868ad24410f6" prot="public" virt="virtual"><scope>BChannelControl</scope><name>ResizeToPreferred</name></member>
      <member refid="classBView_1a1e93df523fc9edc807274ac6cfd2dc8d" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ResizingMode</name></member>
      <member refid="classBChannelControl_1af12f883b6e60f2ea071bb18724593350" prot="public" virt="virtual"><scope>BChannelControl</scope><name>ResolveSpecifier</name></member>
      <member refid="classBView_1a02ab6b6196b140b20ae516a55680e30b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>RotateBy</name></member>
      <member refid="classBView_1a50e12d6b8080b3bc6bc617d31d1ab200" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Scale</name></member>
      <member refid="classBView_1ac83f9fdfb882f849e3ac79bfb06a0fd6" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ScaleBy</name></member>
      <member refid="classBView_1a0878bc7981ba814190b822349599a120" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ScrollBar</name></member>
      <member refid="classBView_1ae20e2a3c46fc30a2a292c832eead7387" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ScrollBy</name></member>
      <member refid="classBView_1a33ed2a9eeff474a756b548996a82b964" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ScrollTo</name></member>
      <member refid="classBView_1a2b76ddc60289ce92e1fb706332edbafc" prot="public" virt="virtual"><scope>BChannelControl</scope><name>ScrollTo</name></member>
      <member refid="classBView_1a54991372110199183fed775598ae1912" prot="protected" virt="non-virtual"><scope>BChannelControl</scope><name>ScrollWithMouseWheelDelta</name></member>
      <member refid="classBHandler_1a71bf72dc17a64bcd42656722271a9e0c" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SendNotices</name></member>
      <member refid="classBChannelControl_1a9caa64ff5e61883a96949e444087b280" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetAllValue</name></member>
      <member refid="classBView_1ad01fc0fd68e4683af9b9386bf33abf63" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetBlendingMode</name></member>
      <member refid="classBChannelControl_1a28dd4fb53295f1df2f1038c108abc675" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetChannelCount</name></member>
      <member refid="classBChannelControl_1adc7dd04b2020c6b54922996ca9aa6f69" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetCurrentChannel</name></member>
      <member refid="classBView_1a8ba0fe3a3dbeec1b7fd8c9655070ef64" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetDiskMode</name></member>
      <member refid="classBView_1a0c392ed0e36213e1007322a9cbca71c0" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetDrawingMode</name></member>
      <member refid="classBControl_1a54529bfa2d272ef17f1b790d27c7ff17" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetEnabled</name></member>
      <member refid="classBView_1a5d8d6b469a8a11a577d1d138cfc31162" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetEventMask</name></member>
      <member refid="classBView_1a6906e47d4fdd6923dd51edb60a83ccea" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetExplicitAlignment</name></member>
      <member refid="classBView_1acd759dd7505050f9cbd8213c71991b8b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetExplicitMaxSize</name></member>
      <member refid="classBView_1abfcb5c761f9b06da3b4a6788aad5d0ee" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetExplicitMinSize</name></member>
      <member refid="classBView_1a98b7d450210099ed59b7cd34f2575e20" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetExplicitPreferredSize</name></member>
      <member refid="classBView_1aeef8a27a5577db87251412ce44421494" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetExplicitSize</name></member>
      <member refid="classBView_1a2019def93337069c0b7d416e103522e9" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetFillRule</name></member>
      <member refid="classBHandler_1a503344dc801858e1f5f419be3919e9cf" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetFilterList</name></member>
      <member refid="classBView_1a4740f9a1e1163073b042102a421a2e33" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetFlags</name></member>
      <member refid="classBChannelControl_1ac410bc781b8679e529663607a4134951" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetFont</name></member>
      <member refid="classBView_1a443e4d9ff182f85a6b1c8478ef22ffe8" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetFontSize</name></member>
      <member refid="classBInvoker_1a9983897bef828eea70f574f9571b8e85" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetHandlerForReply</name></member>
      <member refid="classBView_1ab5482f91a642d545bc3fcefe199f95e9" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetHighColor</name></member>
      <member refid="classBView_1aff9e1ab5e88f33027e72b39874868e9b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetHighColor</name></member>
      <member refid="classBView_1a54eefc28bf7a4bc30612cf83aff2963b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetHighUIColor</name></member>
      <member refid="classBControl_1acf788aa66dd061c78256f357df691765" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetIcon</name></member>
      <member refid="classBControl_1a1017ff0cf130fa1246291a016b2a7f2b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetIconBitmap</name></member>
      <member refid="classBControl_1a2894bf781c41b3ab8a99417f098e71dc" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetLabel</name></member>
      <member refid="classBView_1acac1ebbba8c76e543e1b06e84dffab02" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetLayout</name></member>
      <member refid="classBChannelControl_1a88a03b786b6a2ba4ec79b6b0bad515c6" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetLimitLabels</name></member>
      <member refid="classBChannelControl_1a292e018db81d5e38c0e6fa1249d9e1cb" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetLimitLabelsFor</name></member>
      <member refid="classBChannelControl_1a9178d6a4c731d0643e4a1060192b7828" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetLimitLabelsFor</name></member>
      <member refid="classBChannelControl_1ae6fe8cc93e7d03f63774246d41ede140" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetLimits</name></member>
      <member refid="classBChannelControl_1a2e4dc5fefe5494db1f2f1a9975b1d958" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetLimitsFor</name></member>
      <member refid="classBChannelControl_1a52c159bbe9ac20e7967513d76d523efd" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetLimitsFor</name></member>
      <member refid="classBView_1ae97bfe6c0c93fce98bc7bbd93761dbfb" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetLineMode</name></member>
      <member refid="classBView_1af0426243110fb150ad7ef0705209a12c" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetLowColor</name></member>
      <member refid="classBView_1a929fb1ca47a00220c355ae55a0ea6077" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetLowColor</name></member>
      <member refid="classBView_1a879ab88d4e64345069f1041d3a7b652f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetLowUIColor</name></member>
      <member refid="classBInvoker_1a42fae8f984af3765c1a6af404dc36816" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetMessage</name></member>
      <member refid="classBChannelControl_1a69419e5d61a4abd08d7efa9b50725e3b" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetModificationMessage</name></member>
      <member refid="classBView_1ae7705783d064a8613dcc6f36a2866ab2" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetMouseEventMask</name></member>
      <member refid="classBHandler_1abf861126df4b6e71b9261a99da4ad0eb" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetName</name></member>
      <member refid="classBHandler_1a02f78779c8141987d6030e73c22e734a" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetNextHandler</name></member>
      <member refid="classBView_1a769e5fa6486adf12e7a3511ed372a06c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetOrigin</name></member>
      <member refid="classBView_1a7cf4e3ac5b0759b9c38d7b36517f2337" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetOrigin</name></member>
      <member refid="classBView_1a80ea4cb97d2e6e2c3088e610a9e157e6" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetPenSize</name></member>
      <member refid="classBView_1a38d29ea581880c3978d7e50dcc851696" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetResizingMode</name></member>
      <member refid="classBView_1a077136ea06f0a6b39aa0b8b24311cce8" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetScale</name></member>
      <member refid="classBInvoker_1ac857ceb882d95a5826447dc12dd06c74" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetTarget</name></member>
      <member refid="classBInvoker_1a17e8040bfd829b6b084c2f6234776e11" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetTarget</name></member>
      <member refid="classBInvoker_1ab3c4f55b01f3775832871944b5c943de" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetTimeout</name></member>
      <member refid="classBView_1a75fb825a3ef69c1c6fbf3535ee2260ab" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetToolTip</name></member>
      <member refid="classBView_1aa377bad64048a2d3cd1c2b272ae3079b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetToolTip</name></member>
      <member refid="classBControl_1a28daada6c5a36e5fd8445d1b5580b6c2" prot="protected" virt="non-virtual"><scope>BChannelControl</scope><name>SetTracking</name></member>
      <member refid="classBView_1afbd9b8f35226ba89980c450f7626fc85" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetTransform</name></member>
      <member refid="classBChannelControl_1a689d5c240ce7cea39f2b9da865ad5627" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetValue</name></member>
      <member refid="classBChannelControl_1a0f29dff8436002aed9a3b3ce0d8ffc58" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetValue</name></member>
      <member refid="classBChannelControl_1a5d8c60ab1d13545776b9f896dbcbbee9" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetValueFor</name></member>
      <member refid="classBControl_1a367df71f0b9b64905f3acb98cd111cda" prot="protected" virt="non-virtual"><scope>BChannelControl</scope><name>SetValueNoUpdate</name></member>
      <member refid="classBView_1ac247ddc58f1cb719d60e354a77c51c1e" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetViewBitmap</name></member>
      <member refid="classBView_1a046a9c1656823db5401e530cf8121734" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetViewBitmap</name></member>
      <member refid="classBView_1ae8dde0e0330b394db016f3e609e7fb6a" prot="public" virt="virtual"><scope>BChannelControl</scope><name>SetViewColor</name></member>
      <member refid="classBView_1a7dace2963c85b5ce55b7d8e96946625c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetViewColor</name></member>
      <member refid="classBView_1a39b4878773b4436e3c76aee51c4fbc09" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetViewCursor</name></member>
      <member refid="classBView_1a576100502a8c6dfb46ff36b08cbe9405" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetViewOverlay</name></member>
      <member refid="classBView_1a9770c1bb97d7ffd797f7c40ca1339f98" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetViewOverlay</name></member>
      <member refid="classBView_1a34f020c4bb1008cef972cf1eec7dba0f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>SetViewUIColor</name></member>
      <member refid="classBView_1a06e0584057d6c7a7c7e048b6272b7016" prot="public" virt="virtual"><scope>BChannelControl</scope><name>Show</name></member>
      <member refid="classBView_1a61d28f55d6fdc55b59c38c44b9788205" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ShowToolTip</name></member>
      <member refid="classBHandler_1af7d600e33a0586af7444d9abc8500504" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a20713ff6ee9df49a014f391374eaf689" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a58d7c8d30e47fbb7590f10dea1f21166" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a31927c51d89e0e3b3bf609a786ee6c3b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a9d1f0d55b3dc7337058aba769b4e4f93" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1ad3544be491270f856a0af8d36ce02d78" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1a199c167e0dcee95aa65d09435804b3d9" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StopWatchingAll</name></member>
      <member refid="classBHandler_1a8b9a424ce63f5932666094b6eadf10cf" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StopWatchingAll</name></member>
      <member refid="classBView_1adef480de8a8bcd2fff3129660501616e" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StringWidth</name></member>
      <member refid="classBView_1aef3638cf597407e6a9f31bc75cd42097" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StringWidth</name></member>
      <member refid="classBView_1a57222cd40096dfe23e1df86a01277041" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokeArc</name></member>
      <member refid="classBView_1a9c958b9399925a8a0ea333afd337ebfd" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokeArc</name></member>
      <member refid="classBView_1a64ea2ad06018b0b3b156113d201c7ad7" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokeBezier</name></member>
      <member refid="classBView_1a042703445263f1d9a9213757fcf27414" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokeEllipse</name></member>
      <member refid="classBView_1ae7727ca808873634363e5306fdbcc09a" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokeEllipse</name></member>
      <member refid="classBView_1a909ee03901fac4ae5504f7faf5e41a7c" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokeLine</name></member>
      <member refid="classBView_1ab713fc42e330d0a091a9774edfb9626f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokeLine</name></member>
      <member refid="classBView_1ae871d03592c1bba5d6be3d5d982ea747" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1a1638c58553467f3ebe5ee2b3683d4905" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1a1482fddababe3dd1377f86a038f7119b" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1ad3893af66d3891855f9db7072bfb4de7" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokeRect</name></member>
      <member refid="classBView_1acf743b2ba22b82c8bc38eb514513df55" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokeRoundRect</name></member>
      <member refid="classBView_1a507e9b732e880ac8e6379e19e74d5757" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokeShape</name></member>
      <member refid="classBView_1a8221cce8942e590c2fea954f57933e78" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokeTriangle</name></member>
      <member refid="classBView_1ae59fc9e9cfaba5e2d6e79a90723a3330" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>StrokeTriangle</name></member>
      <member refid="classBChannelControl_1abe7a5636ff3055a77e722ca2acd93d28" prot="private" virt="non-virtual"><scope>BChannelControl</scope><name>StuffValues</name></member>
      <member refid="classBChannelControl_1a5c312450f9a4d5d008cedf28c72380a2" prot="public" virt="pure-virtual"><scope>BChannelControl</scope><name>SupportsIndividualLimits</name></member>
      <member refid="classBView_1a27e217abb3fefa45b6e4ceb7a54cb362" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Sync</name></member>
      <member refid="classBInvoker_1aba5a469f2e0c94c08553ebe59c238cc8" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Target</name></member>
      <member refid="classBView_1a668a4ed5419c86a7f2696ca7ece28df7" prot="public" virt="virtual"><scope>BChannelControl</scope><name>TargetedByScrollView</name></member>
      <member refid="classBInvoker_1af2632aee4882b11ed1bc34ce55ef4bbe" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Timeout</name></member>
      <member refid="classBView_1a127ceec2101b12c0fbe1e0e66a7b9dc1" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ToolTip</name></member>
      <member refid="classBView_1ab16cc72cf8ae3b40abcf1f714e7e9b74" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Transform</name></member>
      <member refid="classBView_1a98597d70ae48b2576683f25078135534" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>TransformTo</name></member>
      <member refid="classBView_1a8ae6d4e1cdfeeee33b753d56bee6ae7f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>TranslateBy</name></member>
      <member refid="classBView_1ac2e293fbdd999e4857b44b6e4d4c3820" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>TruncateString</name></member>
      <member refid="classBHandler_1ab131af7eb7aa2b9eea3a11ac1bfd4c03" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>UnlockLooper</name></member>
      <member refid="classBControl_1a759e9aebe200495c3773d2920e19e91f" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Value</name></member>
      <member refid="classBChannelControl_1a3137b306fdf08112a31c7368dad66324" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ValueFor</name></member>
      <member refid="classBChannelControl_1ad6e4ed8285ce7eef9d9821e4dab56c0f" prot="protected" virt="non-virtual"><scope>BChannelControl</scope><name>ValueList</name></member>
      <member refid="classBView_1a8b2b1d9e08ce0c1763dd6a077ed02fdd" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ViewColor</name></member>
      <member refid="classBView_1aec6c89446eb4f5ded151adced9126df8" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>ViewUIColor</name></member>
      <member refid="classBView_1a32733d357b76bc3504cae326d174f4a2" prot="public" virt="non-virtual"><scope>BChannelControl</scope><name>Window</name></member>
      <member refid="classBControl_1ab665fb93df191662a1757f78555a5b21" prot="public" virt="virtual"><scope>BChannelControl</scope><name>WindowActivated</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BChannelControl</scope><name>~BArchivable</name></member>
      <member refid="classBChannelControl_1a5587395ab862480fb326a9c88d96d688" prot="public" virt="virtual"><scope>BChannelControl</scope><name>~BChannelControl</name></member>
      <member refid="classBControl_1a82c073b898fb760954b80ada2c731962" prot="public" virt="virtual"><scope>BChannelControl</scope><name>~BControl</name></member>
      <member refid="classBHandler_1a928254034959d19ef588b7898a6f8194" prot="public" virt="virtual"><scope>BChannelControl</scope><name>~BHandler</name></member>
      <member refid="classBInvoker_1a68714c3b78a2cf2931daf54f5dc94dca" prot="public" virt="virtual"><scope>BChannelControl</scope><name>~BInvoker</name></member>
      <member refid="classBView_1a7df0d7eaeb97a3c8a800f9e321f23f67" prot="public" virt="virtual"><scope>BChannelControl</scope><name>~BView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
