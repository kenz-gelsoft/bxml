<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBListView" kind="class" language="C++" prot="public">
    <compoundname>BListView</compoundname>
    <basecompoundref refid="classBView" prot="public" virt="non-virtual">BView</basecompoundref>
    <basecompoundref refid="classBInvoker" prot="public" virt="non-virtual">BInvoker</basecompoundref>
    <derivedcompoundref refid="classBOutlineListView" prot="public" virt="non-virtual">BOutlineListView</derivedcompoundref>
    <innerclass refid="unionBListView_1_1MiscData" prot="protected">BListView::MiscData</innerclass>
      <sectiondef kind="user-defined">
      <header>Archiving</header>
      <memberdef kind="function" id="classBListView_1a89277e72296cc9ec516777e000f100e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BListView::Archive</definition>
        <argsstring>(BMessage *data, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BListView::Archive</qualifiedname>
        <reimplements refid="classBView_1ab6de1b48cbc3ef15a0d02113036f002d">Archive</reimplements>
        <reimplementedby refid="classBOutlineListView_1af590f60f193f47989f63c34dda0e6916">Archive</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Archive the <ref refid="classBListView" kindref="compound">BListView</ref> object to a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="classBMessage" kindref="compound">BMessage</ref> object to archive the object into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deep</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to archive child views as well.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code, <computeroutput>B_OK</computeroutput> if everything went well or an error code otherwise. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The object was archived successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while archiving the object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="44" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aab88c58cf141c90e6e7fa020f9e07a0b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>BArchivable * BListView::Instantiate</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BListView::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
          <defname>archive</defname>
        </param>
        <briefdescription>
<para>Create a new <ref refid="classBListView" kindref="compound">BListView</ref> object from the message <emphasis>archive</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A newly created <ref refid="classBView" kindref="compound">BView</ref> object or <computeroutput>NULL</computeroutput> if the message doesn&apos;t contain an archived <ref refid="classBView" kindref="compound">BView</ref>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="43" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Hook Methods</header>
      <memberdef kind="function" id="classBListView_1a7c284b74a68c3f15e7266ac7bca65d24" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::Draw</definition>
        <argsstring>(BRect updateRect)</argsstring>
        <name>Draw</name>
        <qualifiedname>BListView::Draw</qualifiedname>
        <reimplements refid="classBView_1aa55014241fc2f5556415850692b52db2">Draw</reimplements>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>updateRect</declname>
        </param>
        <briefdescription>
<para>Hook method called to draw the contents of the text view. </para>
        </briefdescription>
        <detaileddescription>
<para>You should not have to call this method directly, use <ref refid="classBView_1adfced0dcb244e199f872fdbd48349a05" kindref="member">Invalidate()</ref> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>updateRect</parametername>
</parameternamelist>
<parameterdescription>
<para>The rectangular area to draw.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBView_1aa55014241fc2f5556415850692b52db2" kindref="member">BView::Draw()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="47" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a172497b23a2c4ab6da666363ad51d90e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::AttachedToWindow</definition>
        <argsstring>()</argsstring>
        <name>AttachedToWindow</name>
        <qualifiedname>BListView::AttachedToWindow</qualifiedname>
        <reimplements refid="classBView_1ae8117cb4634f4a4413988eea07cf75a0">AttachedToWindow</reimplements>
        <briefdescription>
<para>Hook method called when the list view is added to the view hierarchy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="49" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a06439547091d244eec75cdb9b078d5ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::DetachedFromWindow</definition>
        <argsstring>()</argsstring>
        <name>DetachedFromWindow</name>
        <qualifiedname>BListView::DetachedFromWindow</qualifiedname>
        <reimplements refid="classBView_1a8abc2ea500951a0a22cf018e958ba791">DetachedFromWindow</reimplements>
        <reimplementedby refid="classBOutlineListView_1a7c71e9e2a55689bc05d63ef4c7a7cfde">DetachedFromWindow</reimplementedby>
        <briefdescription>
<para>Hook method that is called when the list view is removed from the view hierarchy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="50" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ae916566577d7d1b310d00861b26ef651" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::AllAttached</definition>
        <argsstring>()</argsstring>
        <name>AllAttached</name>
        <qualifiedname>BListView::AllAttached</qualifiedname>
        <reimplements refid="classBView_1a6d6379e0993bd525f2cac5f848718870">AllAttached</reimplements>
        <reimplementedby refid="classBOutlineListView_1a991cfdba0dd36ccebc812c10ced9f4a0">AllAttached</reimplementedby>
        <briefdescription>
<para>Hook method called once all views are attached to the view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="51" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a5f97a604910fbf576aa1acde9e4b8f36" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::AllDetached</definition>
        <argsstring>()</argsstring>
        <name>AllDetached</name>
        <qualifiedname>BListView::AllDetached</qualifiedname>
        <reimplements refid="classBView_1a19dd2213f4b953b54524d7f523d9b406">AllDetached</reimplements>
        <reimplementedby refid="classBOutlineListView_1a677488c290fcd8c263472840e06ea2b2">AllDetached</reimplementedby>
        <briefdescription>
<para>Hook method called once all views are detached from the view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="52" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1af4fdd5e524c68a7aa318179c8a5acadd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::FrameResized</definition>
        <argsstring>(float newWidth, float newHeight)</argsstring>
        <name>FrameResized</name>
        <qualifiedname>BListView::FrameResized</qualifiedname>
        <reimplements refid="classBView_1a85d88f9c2bb6800560874b2061378fa0">FrameResized</reimplements>
        <reimplementedby refid="classBOutlineListView_1af22b2e83a0298300f46e33c1319ca151">FrameResized</reimplementedby>
        <param>
          <type>float</type>
          <declname>newWidth</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newHeight</declname>
        </param>
        <briefdescription>
<para>Hook method called when the list view is resized. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>The new width of the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>The new height of the view.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="53" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aeed214d88c70fa121e1531a6c2cb9ba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::FrameMoved</definition>
        <argsstring>(BPoint newPosition)</argsstring>
        <name>FrameMoved</name>
        <qualifiedname>BListView::FrameMoved</qualifiedname>
        <reimplements refid="classBView_1a551c22b45301e13a3ba959eece3cec7f">FrameMoved</reimplements>
        <reimplementedby refid="classBOutlineListView_1ab061fa01aa2099c3373b80861d0b34ba">FrameMoved</reimplementedby>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>newPosition</declname>
        </param>
        <briefdescription>
<para>Hook method called when the list view is moved. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>The point of the top left corner of the frame that the view has been moved to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="54" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a453b373c9bd616f11a1bb195fb05bfbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::TargetedByScrollView</definition>
        <argsstring>(BScrollView *view)</argsstring>
        <name>TargetedByScrollView</name>
        <qualifiedname>BListView::TargetedByScrollView</qualifiedname>
        <reimplements refid="classBView_1a668a4ed5419c86a7f2696ca7ece28df7">TargetedByScrollView</reimplements>
        <param>
          <type><ref refid="classBScrollView" kindref="compound">BScrollView</ref> *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
<para>Hook method called when the list view is attached to a <ref refid="classBScrollView" kindref="compound">BScrollView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBScrollView" kindref="compound">BScrollView</ref> the list view is attached to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="55" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a85153f43edc12ca463f981b92e187a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::WindowActivated</definition>
        <argsstring>(bool active)</argsstring>
        <name>WindowActivated</name>
        <qualifiedname>BListView::WindowActivated</qualifiedname>
        <reimplements refid="classBView_1a5b7aeff0b2608ec63e2c01153a7717f6">WindowActivated</reimplements>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
<para>Hook method that is called when the window becomes the active window or gives up that status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>active</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> when the window becomes activated, <computeroutput>false</computeroutput> when the window becomes deactivated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="56" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ac00efce3ca37ce6e89c3f3fb5717311c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::MessageReceived</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>MessageReceived</name>
        <qualifiedname>BListView::MessageReceived</qualifiedname>
        <reimplements refid="classBView_1aca0a16b0e04288e1fdc0b63690ea7a6d">MessageReceived</reimplements>
        <reimplementedby refid="classBOutlineListView_1aad47f3bf68a98024413aa06a45b0bdad">MessageReceived</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Hook method called when a message is received by the list view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>message</emphasis> received by the associated looper.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBHandler_1aeecda5017e0081db617f23bbff71fb53" kindref="member">BHandler::MessageReceived()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="58" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aed97ff09a629d740b91c8f72dcf5893a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::KeyDown</definition>
        <argsstring>(const char *bytes, int32 numBytes)</argsstring>
        <name>KeyDown</name>
        <qualifiedname>BListView::KeyDown</qualifiedname>
        <reimplements refid="classBView_1abea50ea665ce5fcb76b32f1302a6852d">KeyDown</reimplements>
        <reimplementedby refid="classBOutlineListView_1a93a3143a1e783bf5a945bfc6b58e021f">KeyDown</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>numBytes</declname>
        </param>
        <briefdescription>
<para>Hook method that is called when a key is pressed while the view is the focus view of the active window. </para>
        </briefdescription>
        <detaileddescription>
<para>The following keys are used by the list view by default:<itemizedlist>
<listitem><para>Up Arrow Selects the previous item.</para>
</listitem><listitem><para>Down Arrow Selects the next item.</para>
</listitem><listitem><para>Page Up Selects the item one view height above the current item.</para>
</listitem><listitem><para>Page Down Selects the item one view height below the current item.</para>
</listitem><listitem><para>Home Selects the first item in the list.</para>
</listitem><listitem><para>End Select the last item in the list.</para>
</listitem><listitem><para>Enter and Spacebar Invokes the currently selected item.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>bytes</emphasis> representing the keys pushed down. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of <emphasis>bytes</emphasis>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBView_1abea50ea665ce5fcb76b32f1302a6852d" kindref="member">BView::KeyDown()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="59" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aad39bfe4a5db5d70a8adbf1c41b8edf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::MouseDown</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>MouseDown</name>
        <qualifiedname>BListView::MouseDown</qualifiedname>
        <reimplements refid="classBView_1a5f5bd975d15df94f2ebbc80eb79cc3f6">MouseDown</reimplements>
        <reimplementedby refid="classBOutlineListView_1ae974e26e01f4f31a2b7eb64d91f1a22b">MouseDown</reimplementedby>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
          <defname>point</defname>
        </param>
        <briefdescription>
<para>Hook method that is called when a mouse button is pushed down while the cursor is contained in the view. </para>
        </briefdescription>
        <detaileddescription>
<para>By default this method selects items on a single click, and invokes them on a double click. This method calls <ref refid="classBListView_1aa59a023c30bb60920167495c9c9edfbf" kindref="member">InitiateDrag()</ref> to allow derived classes the opportunity to drag and drop items from the list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>point</emphasis> where the mouse button was pushed down.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBView_1a5f5bd975d15df94f2ebbc80eb79cc3f6" kindref="member">BView::MouseDown()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="60" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a008356d002e19a7b3f2633e4298b4053" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::MouseUp</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>MouseUp</name>
        <qualifiedname>BListView::MouseUp</qualifiedname>
        <reimplements refid="classBView_1acdb92b30069157b2e3c522a3ef9d6ae4">MouseUp</reimplements>
        <reimplementedby refid="classBOutlineListView_1a65d774552d88ba39b6c4bb5bcccb048a">MouseUp</reimplementedby>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Hook method that is called when a mouse button is released while the cursor is contained in the view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>The location that the mouse button was released.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBView_1acdb92b30069157b2e3c522a3ef9d6ae4" kindref="member">BView::MouseUp()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="61" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aa83292db971a1bf0801d9669052c2b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::MouseMoved</definition>
        <argsstring>(BPoint where, uint32 code, const BMessage *dragMessage)</argsstring>
        <name>MouseMoved</name>
        <qualifiedname>BListView::MouseMoved</qualifiedname>
        <reimplements refid="classBView_1ac8b20516e42bab2f1eeb130e2432bde0">MouseMoved</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>dragMessage</declname>
        </param>
        <briefdescription>
<para>Hook method that is called whenever the mouse cursor enters, exits or moves inside the list view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>The point where the mouse cursor has moved to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>A code which indicating if the mouse entered or exited the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dragMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>A message containing drag and drop information.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBView_1ac8b20516e42bab2f1eeb130e2432bde0" kindref="member">BView::MouseMoved()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="62" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aef207f651fbaeed044a389e3a1ece909" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::SelectionChanged</definition>
        <argsstring>()</argsstring>
        <name>SelectionChanged</name>
        <qualifiedname>BListView::SelectionChanged</qualifiedname>
        <briefdescription>
<para>Hook method that is called when the selection changes. </para>
        </briefdescription>
        <detaileddescription>
<para>This method should be implemented by derived classes, the default implementation does nothing.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="127" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aa59a023c30bb60920167495c9c9edfbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BListView::InitiateDrag</definition>
        <argsstring>(BPoint where, int32 index, bool wasSelected)</argsstring>
        <name>InitiateDrag</name>
        <qualifiedname>BListView::InitiateDrag</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
          <defname>point</defname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wasSelected</declname>
        </param>
        <briefdescription>
<para>Hook method called when a drag and drop operation is initiated. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is used by derived classes to implement drag and drop. This method is called by the <ref refid="classBListView_1aad39bfe4a5db5d70a8adbf1c41b8edf3" kindref="member">MouseDown()</ref> method. If the derived class initiates the drag &amp; drop operation you should return <computeroutput>true</computeroutput>, otherwise return <computeroutput>false</computeroutput>. By default this method returns <computeroutput>false</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>Where the drag &amp; drop operation started. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wasSelected</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether or not the item was selected.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if a drag &amp; drop operation was initiated, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="129" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Resizing</header>
      <memberdef kind="function" id="classBListView_1aec8ab9ba29dffb6b14bfbc9530c88fbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::ResizeToPreferred</definition>
        <argsstring>()</argsstring>
        <name>ResizeToPreferred</name>
        <qualifiedname>BListView::ResizeToPreferred</qualifiedname>
        <reimplements refid="classBView_1abe8c63c85555e800e063388e7cf3e1a7">ResizeToPreferred</reimplements>
        <reimplementedby refid="classBOutlineListView_1a053c8871392cc82965ad42bb0302399c">ResizeToPreferred</reimplementedby>
        <briefdescription>
<para>Resize the view to its preferred size. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBView_1abe8c63c85555e800e063388e7cf3e1a7" kindref="member">BView::ResizeToPreferred()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="65" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1af763f7195c72abd00143441bef002b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::GetPreferredSize</definition>
        <argsstring>(float *_width, float *_height)</argsstring>
        <name>GetPreferredSize</name>
        <qualifiedname>BListView::GetPreferredSize</qualifiedname>
        <reimplements refid="classBView_1a089c3ff794c454388a9388c7b6568478">GetPreferredSize</reimplements>
        <reimplementedby refid="classBOutlineListView_1aa1b8b9ab01b3eb04a6e0fc1cd50833e4">GetPreferredSize</reimplementedby>
        <param>
          <type>float *</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_height</declname>
        </param>
        <briefdescription>
<para>Fill out the <emphasis>_width</emphasis> and <emphasis>_height</emphasis> parameters with the preferred width and height of the list view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_width</parametername>
</parameternamelist>
<parameterdescription>
<para>The list view&apos;s preferred width is written to <emphasis>_width</emphasis>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_height</parametername>
</parameternamelist>
<parameterdescription>
<para>The list view&apos;s preferred height is written to <emphasis>_height</emphasis>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBView_1a089c3ff794c454388a9388c7b6568478" kindref="member">BView::GetPreferredSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="66" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1acd2a6419c6ccad9f8ea52e1c728b1b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>BSize BListView::MinSize</definition>
        <argsstring>()</argsstring>
        <name>MinSize</name>
        <qualifiedname>BListView::MinSize</qualifiedname>
        <reimplements refid="classBView_1acfb0cffde35b853dab6bc5d1bb03265f">MinSize</reimplements>
        <briefdescription>
<para>Returns the minimum size of the list view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The minimum size of the list view as a <ref refid="classBSize" kindref="compound">BSize</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBView_1acfb0cffde35b853dab6bc5d1bb03265f" kindref="member">BView::MinSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="69" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a54878f820deb4ccc692f49bd6e8ce5c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>BSize BListView::MaxSize</definition>
        <argsstring>()</argsstring>
        <name>MaxSize</name>
        <qualifiedname>BListView::MaxSize</qualifiedname>
        <reimplements refid="classBView_1ad1f1843a380e850948cf7e4ed2d5f1ba">MaxSize</reimplements>
        <briefdescription>
<para>Returns the maximum size of the list view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The maximum size of the list view as a <ref refid="classBSize" kindref="compound">BSize</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBView_1ad1f1843a380e850948cf7e4ed2d5f1ba" kindref="member">BView::MaxSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="70" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aa353bb8e9a5d229141134df2fa3eddaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>BSize BListView::PreferredSize</definition>
        <argsstring>()</argsstring>
        <name>PreferredSize</name>
        <qualifiedname>BListView::PreferredSize</qualifiedname>
        <reimplements refid="classBView_1a7f51d63e71b60a2721d04436ffbcfe36">PreferredSize</reimplements>
        <briefdescription>
<para>Returns the preferred size of the list view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The preferred size of the list view as a <ref refid="classBSize" kindref="compound">BSize</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBView_1a7f51d63e71b60a2721d04436ffbcfe36" kindref="member">BView::PreferredSize()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="71" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Adding/Removing Items</header>
      <memberdef kind="function" id="classBListView_1a9c9daecdbf5b692e9d11660dc030af32" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BListView::AddItem</definition>
        <argsstring>(BListItem *item, int32 atIndex)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BListView::AddItem</qualifiedname>
        <reimplementedby refid="classBOutlineListView_1a165c59487327a445c7a44eca1107c9dc">AddItem</reimplementedby>
        <param>
          <type><ref refid="classBListItem" kindref="compound">BListItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>atIndex</declname>
          <defname>index</defname>
        </param>
        <briefdescription>
<para>Add an <emphasis>item</emphasis> to the list view at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list item to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of where to add the list item, if not specified the item is added to the end.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the list item was added, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="81" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ad5a44bb1cc57a998d20e86d7bbc69f16" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BListView::AddList</definition>
        <argsstring>(BList *newItems)</argsstring>
        <name>AddList</name>
        <qualifiedname>BListView::AddList</qualifiedname>
        <reimplementedby refid="classBOutlineListView_1afb86c17efba9d7e4a00e228e00eda1dc">AddList</reimplementedby>
        <param>
          <type><ref refid="classBList" kindref="compound">BList</ref> *</type>
          <declname>newItems</declname>
          <defname>list</defname>
        </param>
        <briefdescription>
<para>Add a <emphasis>list</emphasis> of list items to the end of the list view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>list</emphasis> of list items to add.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the <emphasis>list</emphasis> was added, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="82" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a60e412803bdc9e8fc3f887519429064d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BListView::AddList</definition>
        <argsstring>(BList *newItems, int32 atIndex)</argsstring>
        <name>AddList</name>
        <qualifiedname>BListView::AddList</qualifiedname>
        <reimplementedby refid="classBOutlineListView_1a827688c8e95af1a8e9a02f3f873d9df5">AddList</reimplementedby>
        <param>
          <type><ref refid="classBList" kindref="compound">BList</ref> *</type>
          <declname>newItems</declname>
          <defname>list</defname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>atIndex</declname>
          <defname>index</defname>
        </param>
        <briefdescription>
<para>Add a <emphasis>list</emphasis> of list items to the list view at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>list</emphasis> of list items to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of where to add the list, if not specified the <emphasis>list</emphasis> is added to the end.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the <emphasis>list</emphasis> was added, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="83" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a7d78918da16893b4bec59a49cc24c3be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BListView::RemoveItem</definition>
        <argsstring>(BListItem *item)</argsstring>
        <name>RemoveItem</name>
        <qualifiedname>BListView::RemoveItem</qualifiedname>
        <reimplementedby refid="classBOutlineListView_1a09f458b8e48041518527cf2a72fa424d">RemoveItem</reimplementedby>
        <param>
          <type><ref refid="classBListItem" kindref="compound">BListItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Remove the specified list item. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list item to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the <emphasis>item</emphasis> was removed, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="84" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a992402e7c2395376739b2129669aca57" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBListItem" kindref="compound">BListItem</ref> *</type>
        <definition>BListItem * BListView::RemoveItem</definition>
        <argsstring>(int32 index)</argsstring>
        <name>RemoveItem</name>
        <qualifiedname>BListView::RemoveItem</qualifiedname>
        <reimplementedby refid="classBOutlineListView_1a3e8dfd8556b9789e46be2920fe365e38">RemoveItem</reimplementedby>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Remove the item at <emphasis>index</emphasis> from the list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of the item to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the item was removed, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="85" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1af9ca954568e6397f02ebe13cd0eaafaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BListView::RemoveItems</definition>
        <argsstring>(int32 index, int32 count)</argsstring>
        <name>RemoveItems</name>
        <qualifiedname>BListView::RemoveItems</qualifiedname>
        <reimplementedby refid="classBOutlineListView_1a2fc47d713bc4a5a5be6a9304581ee2b6">RemoveItems</reimplementedby>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Removes the items from <emphasis>index</emphasis> and the next <emphasis>count</emphasis> items. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The location to start removing items from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of items past <emphasis>index</emphasis> to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
return <computeroutput>true</computeroutput> if the <emphasis>items</emphasis> were removed, <computeroutput>false</computeroutput> otherwise.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="86" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Selection and Invocation Message Methods</header>
      <memberdef kind="function" id="classBListView_1a5a89c2ca0da9111bf1e701d30235d597" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::SetSelectionMessage</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>SetSelectionMessage</name>
        <qualifiedname>BListView::SetSelectionMessage</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Sets the <emphasis>message</emphasis> that the list view sends when a new item is selected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The selection <emphasis>message</emphasis> to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="88" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1abe78c4cf6c7fc1327f9eee1822080b45" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::SetInvocationMessage</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>SetInvocationMessage</name>
        <qualifiedname>BListView::SetInvocationMessage</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the <emphasis>message</emphasis> that the list view sends when an item is invoked.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The invocation <emphasis>message</emphasis> to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBInvoker_1a42fae8f984af3765c1a6af404dc36816" kindref="member">BInvoker::SetMessage()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="89" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1acfea321631c35ff7d6608f5038213b58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>BMessage * BListView::SelectionMessage</definition>
        <argsstring>() const</argsstring>
        <name>SelectionMessage</name>
        <qualifiedname>BListView::SelectionMessage</qualifiedname>
        <briefdescription>
<para>Returns the message that is send when an item is selected. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current selection message as a <ref refid="classBMessage" kindref="compound">BMessage</ref>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="91" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1af9230fcb15b3dc47dbf5757146df90c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BListView::SelectionCommand</definition>
        <argsstring>() const</argsstring>
        <name>SelectionCommand</name>
        <qualifiedname>BListView::SelectionCommand</qualifiedname>
        <briefdescription>
<para>Returns the what parameter of the message that is send when an item is selected. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The what parameter of the current selection message.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="92" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a7eb35fca0ac1421ba172ea7436ec5f91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>BMessage * BListView::InvocationMessage</definition>
        <argsstring>() const</argsstring>
        <name>InvocationMessage</name>
        <qualifiedname>BListView::InvocationMessage</qualifiedname>
        <briefdescription>
<para>Returns the message that is send when an item is invoked. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current invocation method as a <ref refid="classBMessage" kindref="compound">BMessage</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBInvoker_1ab0b73729de282c93b4da51e6b9dbc170" kindref="member">BInvoker::Message()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="93" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a15bf860ae1edbcf092e29ecd1a42f412" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BListView::InvocationCommand</definition>
        <argsstring>() const</argsstring>
        <name>InvocationCommand</name>
        <qualifiedname>BListView::InvocationCommand</qualifiedname>
        <briefdescription>
<para>Returns the what parameter of the current invocation method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The what parameter of the currently set invocation method.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBInvoker_1a6eb323ab957a5ee99e8db2b2fb0e9800" kindref="member">BInvoker::Command()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="94" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>List Type Methods</header>
      <memberdef kind="function" id="classBListView_1a001b324eb67c6646cd6058ecab0b8bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::SetListType</definition>
        <argsstring>(list_view_type type)</argsstring>
        <name>SetListType</name>
        <qualifiedname>BListView::SetListType</qualifiedname>
        <param>
          <type>list_view_type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Sets the list view <emphasis>type</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The list view <emphasis>type</emphasis> to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="96" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1acfc235c5ec1d0a8662547e31042438f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>list_view_type</type>
        <definition>list_view_type BListView::ListType</definition>
        <argsstring>() const</argsstring>
        <name>ListType</name>
        <qualifiedname>BListView::ListType</qualifiedname>
        <briefdescription>
<para>Returns the current list view type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The list view type.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="97" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>List Methods</header>
      <memberdef kind="function" id="classBListView_1abe632df2c2af3f94ff2eb13e5523b0ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBListItem" kindref="compound">BListItem</ref> *</type>
        <definition>BListItem * BListView::ItemAt</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>ItemAt</name>
        <qualifiedname>BListView::ItemAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the list item at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The list item at the specified <emphasis>index</emphasis>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="99" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ab355cbfae34bdf8b97f4ce0c17fc93f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BListView::IndexOf</definition>
        <argsstring>(BPoint point) const</argsstring>
        <name>IndexOf</name>
        <qualifiedname>BListView::IndexOf</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Returns the index of the item at the specified <emphasis>point</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The location of the list item to get the index of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index of the list item at the specified <emphasis>point</emphasis>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="100" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a8bf217aa8eb31b198b4131902a661bbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BListView::IndexOf</definition>
        <argsstring>(BListItem *item) const</argsstring>
        <name>IndexOf</name>
        <qualifiedname>BListView::IndexOf</qualifiedname>
        <param>
          <type><ref refid="classBListItem" kindref="compound">BListItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the index of the specified <emphasis>item</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list item to get the index of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index of the specified <emphasis>item</emphasis>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="101" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a406ad1af19a84fcd6411f0b774e64ca4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBListItem" kindref="compound">BListItem</ref> *</type>
        <definition>BListItem * BListView::FirstItem</definition>
        <argsstring>() const</argsstring>
        <name>FirstItem</name>
        <qualifiedname>BListView::FirstItem</qualifiedname>
        <briefdescription>
<para>Returns a pointer to the first list item. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the first item in the list or <computeroutput>NULL</computeroutput> there are no items.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="102" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ae5d3f9a69caba47be72d746fda76136d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBListItem" kindref="compound">BListItem</ref> *</type>
        <definition>BListItem * BListView::LastItem</definition>
        <argsstring>() const</argsstring>
        <name>LastItem</name>
        <qualifiedname>BListView::LastItem</qualifiedname>
        <briefdescription>
<para>Returns a pointer to the last list item. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the last item in the list or <computeroutput>NULL</computeroutput> there are no items.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="103" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1af05bfde78ba0e06666861ad8c931f512" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::HasItem</definition>
        <argsstring>(BListItem *item) const</argsstring>
        <name>HasItem</name>
        <qualifiedname>BListView::HasItem</qualifiedname>
        <param>
          <type><ref refid="classBListItem" kindref="compound">BListItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the list contains the specified <emphasis>item</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The list item to check.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <emphasis>item</emphasis> is in the list, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="104" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ad75347c236ecc4ddd46083e587f5f459" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BListView::CountItems</definition>
        <argsstring>() const</argsstring>
        <name>CountItems</name>
        <qualifiedname>BListView::CountItems</qualifiedname>
        <briefdescription>
<para>Returns the number of items contained in the list view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of items.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="105" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a1b799b3004e142a491102a24a13b87b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::MakeEmpty</definition>
        <argsstring>()</argsstring>
        <name>MakeEmpty</name>
        <qualifiedname>BListView::MakeEmpty</qualifiedname>
        <reimplementedby refid="classBOutlineListView_1aa632085a0d8e60a727d9b701f1c4a72b">MakeEmpty</reimplementedby>
        <briefdescription>
<para>Empties the list view of all items. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="106" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aac64c30b47d51da3185f1fafa1955784" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <qualifiedname>BListView::IsEmpty</qualifiedname>
        <briefdescription>
<para>Returns whether or not the list view is empty. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the list view is empty, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="107" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a9a0978cc612ab6c7ce9efdabd3e37283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::DoForEach</definition>
        <argsstring>(bool(*func)(BListItem *item))</argsstring>
        <name>DoForEach</name>
        <qualifiedname>BListView::DoForEach</qualifiedname>
        <param>
          <type>bool(*)(<ref refid="classBListItem" kindref="compound">BListItem</ref> *item)</type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Calls the specified function on each item in the list. </para>
        </briefdescription>
        <detaileddescription>
<para>The <emphasis>func</emphasis> is called on the items in order starting with the item at index 0 and ending at the last item in the list. This method stops calling the <emphasis>func</emphasis> once it returns <emphasis>true</emphasis> or the end of the list is reached.</para>
<para>The first argument of <emphasis>func</emphasis> is a pointer to the list item.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to call on each item.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="108" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a3f520bde0f5691d3c5714c7edefc25b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::DoForEach</definition>
        <argsstring>(bool(*func)(BListItem *item, void *arg), void *arg)</argsstring>
        <name>DoForEach</name>
        <qualifiedname>BListView::DoForEach</qualifiedname>
        <param>
          <type>bool(*)(<ref refid="classBListItem" kindref="compound">BListItem</ref> *item, void *arg)</type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Calls the specified function on each item in the list. </para>
        </briefdescription>
        <detaileddescription>
<para>The <emphasis>func</emphasis> is called on the items in order starting with the item at index 0 and ending at the last item in the list. This method stops calling the <emphasis>func</emphasis> once it returns <emphasis>true</emphasis> or the end of the list is reached.</para>
<para>The first argument of <emphasis>func</emphasis> is a pointer to the list item, <emphasis>arg</emphasis> is passed in as the second argument.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to call on each item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>The second argument of the function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="109" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a6f9d113b935a8f5e998900be26758274" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classBListItem" kindref="compound">BListItem</ref> **</type>
        <definition>const BListItem ** BListView::Items</definition>
        <argsstring>() const</argsstring>
        <name>Items</name>
        <qualifiedname>BListView::Items</qualifiedname>
        <briefdescription>
<para>Returns a pointer to the list of list items. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a pointer to the list of list items.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="111" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Selection</header>
      <memberdef kind="function" id="classBListView_1a5a9efdb7c020e1a8048672812053e039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::ScrollToSelection</definition>
        <argsstring>()</argsstring>
        <name>ScrollToSelection</name>
        <qualifiedname>BListView::ScrollToSelection</qualifiedname>
        <briefdescription>
<para>Scrolls to selected list item. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="113" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aeeaff97dee9421ff4b7b01b89fec93c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::Select</definition>
        <argsstring>(int32 index, bool extend=false)</argsstring>
        <name>Select</name>
        <qualifiedname>BListView::Select</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extend</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Selects the list item at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of the item to select. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extend</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to also select child items.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="115" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a459712f3015aed95a20008b847e7d225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::Select</definition>
        <argsstring>(int32 from, int32 to, bool extend=false)</argsstring>
        <name>Select</name>
        <qualifiedname>BListView::Select</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>from</declname>
          <defname>start</defname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>to</declname>
          <defname>finish</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>extend</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Select items from <emphasis>start</emphasis> to <emphasis>finish</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the item to start the selection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>finish</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the item to end the selection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extend</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to also select child items.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="116" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1abeaac6128e12908bd7ec9e170a37d161" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::IsItemSelected</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>IsItemSelected</name>
        <qualifiedname>BListView::IsItemSelected</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the item at <emphasis>index</emphasis> is selected. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the item was selected, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="118" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a6958f442fcd00dd19643e29ac29a46f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BListView::CurrentSelection</definition>
        <argsstring>(int32 index=0) const</argsstring>
        <name>CurrentSelection</name>
        <qualifiedname>BListView::CurrentSelection</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the index of a currently selected item relative to the passed in <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>If the index of the selected item is lower than <emphasis>index</emphasis> the value returned is negative, if the index of the selected item is greater than <emphasis>index</emphasis> the value returned is positive. If the index of the selected item is equal to <emphasis>index</emphasis> then 0 is returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of the item to get relative to the selected item&apos;s index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="119" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Deselection</header>
      <memberdef kind="function" id="classBListView_1aeb2925448e33f555b15c151c87be4197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::DeselectAll</definition>
        <argsstring>()</argsstring>
        <name>DeselectAll</name>
        <qualifiedname>BListView::DeselectAll</qualifiedname>
        <briefdescription>
<para>Deselect all items. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="122" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a61fd9e835431a93334e243585ec4faaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::DeselectExcept</definition>
        <argsstring>(int32 exceptFrom, int32 exceptTo)</argsstring>
        <name>DeselectExcept</name>
        <qualifiedname>BListView::DeselectExcept</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>exceptFrom</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>exceptTo</declname>
        </param>
        <briefdescription>
<para>Deselect all items except the items with index in the range of <emphasis>exceptFrom</emphasis> to <emphasis>exceptTo</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>exceptFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the start of the exception list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exceptTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the end of the exception list.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="123" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aae58b02f2bda70f7173e8234955397aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::Deselect</definition>
        <argsstring>(int32 index)</argsstring>
        <name>Deselect</name>
        <qualifiedname>BListView::Deselect</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Deselect the item at <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of the item to deselect.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="125" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-type">
      <memberdef kind="enum" id="classBListView_1ab178c65eb019bf449b1102238df8e6d3" prot="protected" static="no" strong="no">
        <type></type>
        <name>MiscCode</name>
        <qualifiedname>BListView::MiscCode</qualifiedname>
        <enumvalue id="classBListView_1ab178c65eb019bf449b1102238df8e6d3a4e811e975ef53c9a0b500748f9e193d3" prot="protected">
          <name>B_NO_OP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBListView_1ab178c65eb019bf449b1102238df8e6d3a5e971f17d1d62c0c01d9447c5dac2cb6" prot="protected">
          <name>B_REPLACE_OP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBListView_1ab178c65eb019bf449b1102238df8e6d3ad43adaf33c812e195da6873d02338680" prot="protected">
          <name>B_MOVE_OP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBListView_1ab178c65eb019bf449b1102238df8e6d3af2a91f9df647572e724ebc3b56a9db4a" prot="protected">
          <name>B_SWAP_OP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="157" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="157" bodyend="157"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBListView_1a5d0239c69a1742e471de662140696e5f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BOutlineListView</definition>
        <argsstring></argsstring>
        <name>BOutlineListView</name>
        <qualifiedname>BListView::BOutlineListView</qualifiedname>
        <param>
          <type><ref refid="classBOutlineListView" kindref="compound">BOutlineListView</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="168" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBListView_1a8f1124daf25baa9eb57bf9010ff05e03" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BListView::_reserved[4]</definition>
        <argsstring>[4]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BListView::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="202" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBListView_1aecacbcbe0a1faf8ea39e5ce128303db2" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BListView::fAnchorIndex</definition>
        <argsstring></argsstring>
        <name>fAnchorIndex</name>
        <qualifiedname>BListView::fAnchorIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="197" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBListView_1ad2a1ca14aac1704420b1af9cfcf45656" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BListView::fFirstSelected</definition>
        <argsstring></argsstring>
        <name>fFirstSelected</name>
        <qualifiedname>BListView::fFirstSelected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="195" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBListView_1a322469836fb7a22e885d4c8916ab4ae2" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BListView::fLastSelected</definition>
        <argsstring></argsstring>
        <name>fLastSelected</name>
        <qualifiedname>BListView::fLastSelected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="196" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBListView_1ae2cc79b7dd9a5d1c5e49df6b0033719a" prot="private" static="no" mutable="no">
        <type><ref refid="classBList" kindref="compound">BList</ref></type>
        <definition>BList BListView::fList</definition>
        <argsstring></argsstring>
        <name>fList</name>
        <qualifiedname>BListView::fList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="193" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBListView_1af347c2b7b809a1213cd83490d93679af" prot="private" static="no" mutable="no">
        <type>list_view_type</type>
        <definition>list_view_type BListView::fListType</definition>
        <argsstring></argsstring>
        <name>fListType</name>
        <qualifiedname>BListView::fListType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="194" column="15" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBListView_1ad47120a68158f71815cd3a3978a2d1dd" prot="private" static="no" mutable="no">
        <type><ref refid="classBScrollView" kindref="compound">BScrollView</ref> *</type>
        <definition>BScrollView* BListView::fScrollView</definition>
        <argsstring></argsstring>
        <name>fScrollView</name>
        <qualifiedname>BListView::fScrollView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="199" column="12" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBListView_1ad9e1b19b0faf2a1537aa899547493535" prot="private" static="no" mutable="no">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>BMessage* BListView::fSelectMessage</definition>
        <argsstring></argsstring>
        <name>fSelectMessage</name>
        <qualifiedname>BListView::fSelectMessage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="198" column="9" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBListView_1a991ef6c47bf8d30ba6fe1a436bb90bfd" prot="private" static="no" mutable="no">
        <type>track_data *</type>
        <definition>track_data* BListView::fTrack</definition>
        <argsstring></argsstring>
        <name>fTrack</name>
        <qualifiedname>BListView::fTrack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="200" column="11" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBListView_1a7964733899af60778e474bfa98537c59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BListView::BListView</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>BListView</name>
        <qualifiedname>BListView::BListView</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
          <defname>archive</defname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classBListView" kindref="compound">BListView</ref> object from the <emphasis>archive</emphasis> message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>archive</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to create the object from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a031bdcf6c1cb2bada476fe687b0bff5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BListView::BListView</definition>
        <argsstring>(BRect frame, const char *name, list_view_type type=B_SINGLE_SELECTION_LIST, uint32 resizeMask=B_FOLLOW_LEFT_TOP, uint32 flags=B_WILL_DRAW|B_FRAME_EVENTS|B_NAVIGABLE)</argsstring>
        <name>BListView</name>
        <qualifiedname>BListView::BListView</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>list_view_type</type>
          <declname>type</declname>
          <defval>B_SINGLE_SELECTION_LIST</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>resizeMask</declname>
          <defname>resizingMode</defname>
          <defval><ref refid="View_8h_1a8a6df90f52ddaede7f1aaf43339638e5" kindref="member">B_FOLLOW_LEFT_TOP</ref></defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval><ref refid="View_8h_1a59354fa34a5663d714649927705fd4bf" kindref="member">B_WILL_DRAW</ref>|<ref refid="View_8h_1a0f5ad6b15e8c8e4a0b8b4c79d1f0f370" kindref="member">B_FRAME_EVENTS</ref>|<ref refid="View_8h_1aa81b14ef09870d992f97f6f1163dc0a9" kindref="member">B_NAVIGABLE</ref></defval>
        </param>
        <briefdescription>
<para>Creates a new list view. This is the non-layout constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>The frame rectangle of the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the list view supports a single selection or multiple selections. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resizingMode</parametername>
</parameternamelist>
<parameterdescription>
<para>The resizing mode flags. See <ref refid="classBView" kindref="compound">BView</ref> for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The view flags. See <ref refid="classBView" kindref="compound">BView</ref> for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a4ee70b28a29582516f70b2bf6ca0662c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BListView::BListView</definition>
        <argsstring>(const char *name, list_view_type type=B_SINGLE_SELECTION_LIST, uint32 flags=B_WILL_DRAW|B_FRAME_EVENTS|B_NAVIGABLE)</argsstring>
        <name>BListView</name>
        <qualifiedname>BListView::BListView</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>list_view_type</type>
          <declname>type</declname>
          <defval>B_SINGLE_SELECTION_LIST</defval>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval><ref refid="View_8h_1a59354fa34a5663d714649927705fd4bf" kindref="member">B_WILL_DRAW</ref>|<ref refid="View_8h_1a0f5ad6b15e8c8e4a0b8b4c79d1f0f370" kindref="member">B_FRAME_EVENTS</ref>|<ref refid="View_8h_1aa81b14ef09870d992f97f6f1163dc0a9" kindref="member">B_NAVIGABLE</ref></defval>
        </param>
        <briefdescription>
<para>Creates a new list view suitable as part of a layout with the specified <emphasis>name</emphasis>, <emphasis>type</emphasis>, and <emphasis>flags</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the list view supports a single selection or multiple selections. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The view flags. See <ref refid="classBView" kindref="compound">BView</ref> for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a8e583dfd6d0cf8bcada0a431197e099d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BListView::BListView</definition>
        <argsstring>(list_view_type type=B_SINGLE_SELECTION_LIST)</argsstring>
        <name>BListView</name>
        <qualifiedname>BListView::BListView</qualifiedname>
        <param>
          <type>list_view_type</type>
          <declname>type</declname>
          <defval>B_SINGLE_SELECTION_LIST</defval>
        </param>
        <briefdescription>
<para>Creates a new list view suitable as part of a layout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the list view supports a single selection or multiple selections.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a09090d56eae5eee0aca5073e2894efcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BListView::~BListView</definition>
        <argsstring>()</argsstring>
        <name>~BListView</name>
        <qualifiedname>BListView::~BListView</qualifiedname>
        <briefdescription>
<para>Delete the <ref refid="classBListView" kindref="compound">BListView</ref> object and free the memory used by it. </para>
        </briefdescription>
        <detaileddescription>
<para>This method does not free the attached list items.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="41" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a599a184e570c82d545fc9ae2ba58a411" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BListView::AddItem</definition>
        <argsstring>(BListItem *item)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BListView::AddItem</qualifiedname>
        <reimplementedby refid="classBOutlineListView_1abc985b1be1870818dd6d1b243204b999">AddItem</reimplementedby>
        <param>
          <type><ref refid="classBListItem" kindref="compound">BListItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="80" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1acc1fa37e73b342b27d16e13aa3d3024a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BListView::GetSupportedSuites</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>GetSupportedSuites</name>
        <qualifiedname>BListView::GetSupportedSuites</qualifiedname>
        <reimplements refid="classBView_1a772462d751d457f63ee0fc56d8ba02d1">GetSupportedSuites</reimplements>
        <reimplementedby refid="classBOutlineListView_1a293dd0ed9a59c56ddd2738981c6c48b6">GetSupportedSuites</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Reports the suites of messages and specifiers that derived classes understand. </para>
        </briefdescription>
        <detaileddescription>
<para>Reports the suites of messages and specifiers that derived classes understand.  </para>
<para><simplesect kind="since"><para>BeOS R3     </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="145" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a2a9ee597042919a945526410d7547b3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::InvalidateItem</definition>
        <argsstring>(int32 index)</argsstring>
        <name>InvalidateItem</name>
        <qualifiedname>BListView::InvalidateItem</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Draws the list item at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of the list item to draw.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="112" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a88701bff61aeb58857ca33a5a8920e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BListView::Invoke</definition>
        <argsstring>(BMessage *message=NULL)</argsstring>
        <name>Invoke</name>
        <qualifiedname>BListView::Invoke</qualifiedname>
        <reimplements refid="classBInvoker_1ad4eb9ad4b3b8286f2a155ad7f087511c">Invoke</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Invoke the list view, either with the current invocation message or <emphasis>message</emphasis> if it is specified. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to send or <computeroutput>NULL</computeroutput> to send the current invocation message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBControl_1afa04e938d3c42b1de43baa48edb8fd3e" kindref="member">BControl::Invoke()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="120" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1abfc3d7aeaa14051912e1a1a14b994980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BListView::ItemFrame</definition>
        <argsstring>(int32 index)</argsstring>
        <name>ItemFrame</name>
        <qualifiedname>BListView::ItemFrame</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Return the frame of the item at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of the item to get the frame of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The frame of the item at <emphasis>index</emphasis>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="140" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a35117bf3eb7d1f64b777d5371558c626" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::MakeFocus</definition>
        <argsstring>(bool state=true)</argsstring>
        <name>MakeFocus</name>
        <qualifiedname>BListView::MakeFocus</qualifiedname>
        <reimplements refid="classBView_1a266a368d81c6e1668b2b9b22b5016853">MakeFocus</reimplements>
        <reimplementedby refid="classBOutlineListView_1acf402ab948510cbe880b2e24c72f39f9">MakeFocus</reimplementedby>
        <param>
          <type>bool</type>
          <declname>state</declname>
          <defname>focused</defname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Highlight or unhighlight the selection when the list view acquires or loses its focus state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>focused</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to receive focus or <computeroutput>false</computeroutput> to lose it.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBView_1a266a368d81c6e1668b2b9b22b5016853" kindref="member">BView::MakeFocus()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="73" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aa09faf9fa92d9cece2879e95d0f61bda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::MoveItem</definition>
        <argsstring>(int32 from, int32 to)</argsstring>
        <name>MoveItem</name>
        <qualifiedname>BListView::MoveItem</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Move the item at index <emphasis>from</emphasis> to the position in the list at index <emphasis>to</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the item to move. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to move the item to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the item was moved, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="137" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aa0afeb194104738a01c7e60195fe50d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BListView::Perform</definition>
        <argsstring>(perform_code code, void *arg)</argsstring>
        <name>Perform</name>
        <qualifiedname>BListView::Perform</qualifiedname>
        <reimplements refid="classBView_1a512a6c8dca1a62b14cdcb1c22070129b">Perform</reimplements>
        <reimplementedby refid="classBOutlineListView_1acb2775731d5da2cf52995e4d0b75c1d6">Perform</reimplementedby>
        <param>
          <type><ref refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" kindref="member">perform_code</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
          <defname>_data</defname>
        </param>
        <briefdescription>
<para>Performs an action give a perform_code and data. (Internal Method) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="147" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ab3529031a7c4c01fa945e34d3f0c8169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::ReplaceItem</definition>
        <argsstring>(int32 index, BListItem *item)</argsstring>
        <name>ReplaceItem</name>
        <qualifiedname>BListView::ReplaceItem</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBListItem" kindref="compound">BListItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Replace the item at index <emphasis>index</emphasis> with <emphasis>item</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of the item to replace. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>item</emphasis> to replace the item at <emphasis>index</emphasis> with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the item was replaced, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="138" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a2c6144558d144fd5b134021de4c01183" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
        <definition>BHandler * BListView::ResolveSpecifier</definition>
        <argsstring>(BMessage *message, int32 index, BMessage *specifier, int32 what, const char *property)</argsstring>
        <name>ResolveSpecifier</name>
        <qualifiedname>BListView::ResolveSpecifier</qualifiedname>
        <reimplements refid="classBView_1a4c0c6d3b21ae92056e5e40fe4d3ec175">ResolveSpecifier</reimplements>
        <reimplementedby refid="classBOutlineListView_1a835a18d28691bdc9daad7cf0598e8a5f">ResolveSpecifier</reimplementedby>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>what</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Determines the proper handler for the passed in scripting <emphasis>message</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Determine the proper handler for a scripting message.  </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The scripting message to determine the handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the specifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The message which contains the specifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>what</parametername>
</parameternamelist>
<parameterdescription>
<para>The &apos;what&apos; field of the specifier message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the target property.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the proper <ref refid="classBHandler" kindref="compound">BHandler</ref> for the given scripting message.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3     </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="142" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a13605eb8e35d09d2795281e541aa5784" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::ScrollTo</definition>
        <argsstring>(BPoint where)</argsstring>
        <name>ScrollTo</name>
        <qualifiedname>BListView::ScrollTo</qualifiedname>
        <reimplements refid="classBView_1a2b76ddc60289ce92e1fb706332edbafc">ScrollTo</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>where</declname>
          <defname>point</defname>
        </param>
        <briefdescription>
<para>Scroll the view to the specified <emphasis>point</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The location to scroll the list view to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBView_1a33ed2a9eeff474a756b548996a82b964" kindref="member">BView::ScrollTo()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="77" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a2d6359f4c49aefd6ed71285b7f84ed06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::ScrollTo</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>ScrollTo</name>
        <qualifiedname>BListView::ScrollTo</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="78" column="11" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a7b0bd589bd4b1fb410b6e007fe107c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BListView::SetFont</definition>
        <argsstring>(const BFont *font, uint32 mask=B_FONT_ALL)</argsstring>
        <name>SetFont</name>
        <qualifiedname>BListView::SetFont</qualifiedname>
        <reimplements refid="classBView_1a9247127c151153542a3e6bc1f3904433">SetFont</reimplements>
        <param>
          <type>const <ref refid="classBFont" kindref="compound">BFont</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>mask</declname>
          <defval><ref refid="View_8h_1af715e26dfffd1f8de1c18449e2770cffa2cc16d47078da54b17b7ed4fe2d64798" kindref="member">B_FONT_ALL</ref></defval>
        </param>
        <briefdescription>
<para>Sets the font of the list view to <emphasis>font</emphasis> with the font parameters set by <emphasis>mask</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>font</emphasis> to set the list view to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A <emphasis>mask</emphasis> indicating which properties of <emphasis>font</emphasis> to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBView_1a9247127c151153542a3e6bc1f3904433" kindref="member">BView::SetFont()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="75" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ade1ff7c4334923ca43c6e768399a99e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::SortItems</definition>
        <argsstring>(int(*cmp)(const void *, const void *))</argsstring>
        <name>SortItems</name>
        <qualifiedname>BListView::SortItems</qualifiedname>
        <param>
          <type>int(*)(const void *, const void *)</type>
          <declname>cmp</declname>
        </param>
        <briefdescription>
<para>Sort the items according the the passed in <emphasis>cmp</emphasis> function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmp</parametername>
</parameternamelist>
<parameterdescription>
<para>The compare function to use to sort the items.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="132" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a5c7798d8a0846377de740ca7e53fd343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::SwapItems</definition>
        <argsstring>(int32 a, int32 b)</argsstring>
        <name>SwapItems</name>
        <qualifiedname>BListView::SwapItems</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Swap item <emphasis>a</emphasis> with item <emphasis>b</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the first item to swap. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the second item to swap.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the items were swapped, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="136" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBListView_1a701706e8f0f820e2af07441039460eb5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BListView::_CalcFirstSelected</definition>
        <argsstring>(int32 after)</argsstring>
        <name>_CalcFirstSelected</name>
        <qualifiedname>BListView::_CalcFirstSelected</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="180" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a68c1a37f682c8dc300a7956e6e6bf667" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BListView::_CalcLastSelected</definition>
        <argsstring>(int32 before)</argsstring>
        <name>_CalcLastSelected</name>
        <qualifiedname>BListView::_CalcLastSelected</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>before</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="181" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1adbced0fdfaf537826877fa95faa3d638" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::_Deselect</definition>
        <argsstring>(int32 index)</argsstring>
        <name>_Deselect</name>
        <qualifiedname>BListView::_Deselect</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="178" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a3c9ef5288c504c63757631deed4743ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::_DeselectAll</definition>
        <argsstring>(int32 exceptFrom, int32 exceptTo)</argsstring>
        <name>_DeselectAll</name>
        <qualifiedname>BListView::_DeselectAll</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>exceptFrom</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>exceptTo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="179" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aa4fd0fdabd9d5e413eb5c917fbfa7fa3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::_FixupScrollBar</definition>
        <argsstring>()</argsstring>
        <name>_FixupScrollBar</name>
        <qualifiedname>BListView::_FixupScrollBar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="171" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ac88a949fab81d8de376328bde6b0fdb6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::_InitObject</definition>
        <argsstring>(list_view_type type)</argsstring>
        <name>_InitObject</name>
        <qualifiedname>BListView::_InitObject</qualifiedname>
        <param>
          <type>list_view_type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="170" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1aa92bb7b8d8469f25a1f300e354674bbd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::_InvalidateFrom</definition>
        <argsstring>(int32 index)</argsstring>
        <name>_InvalidateFrom</name>
        <qualifiedname>BListView::_InvalidateFrom</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="172" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ac04cf35a942aef84e1dfd7471a646731" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::_MoveItem</definition>
        <argsstring>(int32 from, int32 to)</argsstring>
        <name>_MoveItem</name>
        <qualifiedname>BListView::_MoveItem</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="188" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a37c13dcbf99a5d4e64c2cf807ad33fef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BListView::_PostMessage</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>_PostMessage</name>
        <qualifiedname>BListView::_PostMessage</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="173" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a9e2f18779f1ab659b3ed56c013b52407" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BListView::_RangeCheck</definition>
        <argsstring>(int32 index)</argsstring>
        <name>_RangeCheck</name>
        <qualifiedname>BListView::_RangeCheck</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="175" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a46b5a95974fa2c395fa38eba3a7cd81c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::_RecalcItemTops</definition>
        <argsstring>(int32 start, int32 end=-1)</argsstring>
        <name>_RecalcItemTops</name>
        <qualifiedname>BListView::_RecalcItemTops</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>end</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="182" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a6d3b0deede21b6227637177c708d653e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::_ReplaceItem</definition>
        <argsstring>(int32 index, BListItem *item)</argsstring>
        <name>_ReplaceItem</name>
        <qualifiedname>BListView::_ReplaceItem</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBListItem" kindref="compound">BListItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="189" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ace2fa49915872eafbe492e9c9be45221" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::_RescanSelection</definition>
        <argsstring>(int32 from, int32 to)</argsstring>
        <name>_RescanSelection</name>
        <qualifiedname>BListView::_RescanSelection</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="190" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ac1362f8399fec2ecd663b16acc980f9d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BListView::_ReservedListView2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedListView2</name>
        <qualifiedname>BListView::_ReservedListView2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="150" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a759a856bdf19b53686681bb9b251d1ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BListView::_ReservedListView3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedListView3</name>
        <qualifiedname>BListView::_ReservedListView3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="151" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a76517e81cf049da11154f83cab1da91e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BListView::_ReservedListView4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedListView4</name>
        <qualifiedname>BListView::_ReservedListView4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="152" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ab167edcae52369338779a0269b33275d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::_Select</definition>
        <argsstring>(int32 from, int32 to, bool extend)</argsstring>
        <name>_Select</name>
        <qualifiedname>BListView::_Select</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="177" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ac1a7951f03b3ad1f58360da07fc84f51" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::_Select</definition>
        <argsstring>(int32 index, bool extend)</argsstring>
        <name>_Select</name>
        <qualifiedname>BListView::_Select</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="176" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ad3ff939676849a44525de6ec7e9da13c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BListView::_SwapItems</definition>
        <argsstring>(int32 a, int32 b)</argsstring>
        <name>_SwapItems</name>
        <qualifiedname>BListView::_SwapItems</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="187" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1ab86d26dc7c640eae06d8120442938b53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BListView::_UpdateItems</definition>
        <argsstring>()</argsstring>
        <name>_UpdateItems</name>
        <qualifiedname>BListView::_UpdateItems</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="174" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a3bcfb2f09ee5eefd4eaf594f1ec053ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BListView::DrawItem</definition>
        <argsstring>(BListItem *item, BRect itemRect, bool complete=false)</argsstring>
        <name>DrawItem</name>
        <qualifiedname>BListView::DrawItem</qualifiedname>
        <reimplementedby refid="classBOutlineListView_1a38c157cdaf49d65a856e4205f8980d83">DrawItem</reimplementedby>
        <param>
          <type><ref refid="classBListItem" kindref="compound">BListItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>itemRect</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>complete</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="184" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBListView_1a71f8be2b9567a836d9e271b63772dde9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBListView" kindref="compound">BListView</ref> &amp;</type>
        <definition>BListView &amp; BListView::operator=</definition>
        <argsstring>(const BListView &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BListView::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBListView" kindref="compound">BListView</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="154" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBListView_1afa476fbe7cb2db7dc3ebfff29c456408" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BListView::DoMiscellaneous</definition>
        <argsstring>(MiscCode code, MiscData *data)</argsstring>
        <name>DoMiscellaneous</name>
        <qualifiedname>BListView::DoMiscellaneous</qualifiedname>
        <reimplementedby refid="classBOutlineListView_1ace0aa3336427b9eb2930925bed1f8d80">DoMiscellaneous</reimplementedby>
        <param>
          <type>MiscCode</type>
          <declname>code</declname>
        </param>
        <param>
          <type>MiscData *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Do a miscellaneous action. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The action <emphasis>code</emphasis> to use.<itemizedlist>
<listitem><para><computeroutput>B_NO_OP:</computeroutput> Do nothing</para>
</listitem><listitem><para><computeroutput>B_REPLACE_OP:</computeroutput> Replace the item in <emphasis>data</emphasis> </para>
</listitem><listitem><para><computeroutput>B_MOVE_OP:</computeroutput> Move the item in <emphasis>data</emphasis>.</para>
</listitem><listitem><para><computeroutput>B_SWAP_OP:</computeroutput> Swap the items in <emphasis>data</emphasis>. </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>data</emphasis> to act on.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="165" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Displays a list of items that the user can select and invoke. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classBListView" kindref="compound">BListView</ref>&apos;s can be one of two types set by the type parameter of the constructor:<itemizedlist>
<listitem><para><computeroutput>B_SINGLE_SELECTION_LIST</computeroutput> Can select only one item in the list at a time. This is the default.</para>
</listitem><listitem><para><computeroutput>B_MULTIPLE_SELECTION_LIST</computeroutput> Can select any number of items by holding down Option for a discontinuous selection, or Shift for a contiguous selection.</para>
</listitem></itemizedlist>
</para>
<para>An example of a <ref refid="classBListView" kindref="compound">BListView</ref> looks like this: <image type="html" name="BListView_example.png"></image>
</para>
<para>Click on an item to select it and double-click an item to invoke it. The <ref refid="classBListView" kindref="compound">BListView</ref> doesn&apos;t define what it means to &quot;invoke&quot; an item. See <ref refid="classBListView_1a5a89c2ca0da9111bf1e701d30235d597" kindref="member">BListView::SetSelectionMessage()</ref> and <ref refid="classBListView_1abe78c4cf6c7fc1327f9eee1822080b45" kindref="member">BListView::SetInvocationMessage()</ref> to set a message to be set when these actions occur. You can also select and invoke items with keyboard keys such as the up and down arrow keys, Page Up and Page Down and the Enter key or Space key to invoke the item.</para>
<para>This class is based on the <ref refid="classBList" kindref="compound">BList</ref> class from the Support Kit and many of the methods it uses behave similarly.</para>
<para>Although a <ref refid="classBListView" kindref="compound">BListView</ref> is scrollable, it doesn&apos;t provide scroll bars by itself. You should add the <ref refid="classBListView" kindref="compound">BListView</ref> as a child of a <ref refid="classBScrollView" kindref="compound">BScrollView</ref> to make it scrollable.</para>
<para>The code to add a <ref refid="classBListView" kindref="compound">BListView</ref> to a <ref refid="classBScrollView" kindref="compound">BScrollView</ref> looks something like this:</para>
<para><programlisting><codeline><highlight class="normal"><ref refid="classBListView" kindref="compound">BListView</ref>*<sp/>list<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBListView" kindref="compound">BListView</ref>(frame,<sp/></highlight><highlight class="stringliteral">&quot;List&quot;</highlight><highlight class="normal">,<sp/>B_SINGLE_SELECTION_LIST);</highlight></codeline>
<codeline><highlight class="normal">list-&gt;AddItem(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBStringItem" kindref="compound">BStringItem</ref>(</highlight><highlight class="stringliteral">&quot;Item<sp/>1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">list-&gt;AddItem(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBStringItem" kindref="compound">BStringItem</ref>(</highlight><highlight class="stringliteral">&quot;Item<sp/>2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">view-&gt;AddChild(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBScrollView" kindref="compound">BScrollView</ref>(</highlight><highlight class="stringliteral">&quot;scroll_view&quot;</highlight><highlight class="normal">,<sp/>list,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="View_8h_1a2a620bcb9417f94c61ff90104669cdb9" kindref="member">B_FOLLOW_LEFT</ref><sp/>|<sp/><ref refid="View_8h_1aa411b002ccc9912b6ee9cbebef5472d1" kindref="member">B_FOLLOW_TOP</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><ref refid="classBScrollView" kindref="compound">BScrollView</ref> for more information on scrolling views. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBList" kindref="compound">BList</ref> in the Support Kit. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBOutlineListView" kindref="compound">BOutlineListView</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBListItem" kindref="compound">BListItem</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="3">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BInvoker</label>
        <link refid="classBInvoker"/>
      </node>
      <node id="1">
        <label>BListView</label>
        <link refid="classBListView"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BOutlineListView</label>
        <link refid="classBOutlineListView"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="3">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BInvoker</label>
        <link refid="classBInvoker"/>
      </node>
      <node id="1">
        <label>BListView</label>
        <link refid="classBListView"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BView</label>
        <link refid="classBView"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/interface/ListView.h" line="24" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/ListView.h" bodystart="24" bodyend="203"/>
    <listofallmembers>
      <member refid="classBListView_1a701706e8f0f820e2af07441039460eb5" prot="private" virt="non-virtual"><scope>BListView</scope><name>_CalcFirstSelected</name></member>
      <member refid="classBListView_1a68c1a37f682c8dc300a7956e6e6bf667" prot="private" virt="non-virtual"><scope>BListView</scope><name>_CalcLastSelected</name></member>
      <member refid="classBListView_1adbced0fdfaf537826877fa95faa3d638" prot="private" virt="non-virtual"><scope>BListView</scope><name>_Deselect</name></member>
      <member refid="classBListView_1a3c9ef5288c504c63757631deed4743ed" prot="private" virt="non-virtual"><scope>BListView</scope><name>_DeselectAll</name></member>
      <member refid="classBListView_1aa4fd0fdabd9d5e413eb5c917fbfa7fa3" prot="private" virt="non-virtual"><scope>BListView</scope><name>_FixupScrollBar</name></member>
      <member refid="classBListView_1ac88a949fab81d8de376328bde6b0fdb6" prot="private" virt="non-virtual"><scope>BListView</scope><name>_InitObject</name></member>
      <member refid="classBListView_1aa92bb7b8d8469f25a1f300e354674bbd" prot="private" virt="non-virtual"><scope>BListView</scope><name>_InvalidateFrom</name></member>
      <member refid="classBListView_1ac04cf35a942aef84e1dfd7471a646731" prot="private" virt="non-virtual"><scope>BListView</scope><name>_MoveItem</name></member>
      <member refid="classBListView_1a37c13dcbf99a5d4e64c2cf807ad33fef" prot="private" virt="non-virtual"><scope>BListView</scope><name>_PostMessage</name></member>
      <member refid="classBListView_1a9e2f18779f1ab659b3ed56c013b52407" prot="private" virt="non-virtual"><scope>BListView</scope><name>_RangeCheck</name></member>
      <member refid="classBListView_1a46b5a95974fa2c395fa38eba3a7cd81c" prot="private" virt="non-virtual"><scope>BListView</scope><name>_RecalcItemTops</name></member>
      <member refid="classBListView_1a6d3b0deede21b6227637177c708d653e" prot="private" virt="non-virtual"><scope>BListView</scope><name>_ReplaceItem</name></member>
      <member refid="classBListView_1ace2fa49915872eafbe492e9c9be45221" prot="private" virt="non-virtual"><scope>BListView</scope><name>_RescanSelection</name></member>
      <member refid="classBListView_1a8f1124daf25baa9eb57bf9010ff05e03" prot="private" virt="non-virtual"><scope>BListView</scope><name>_reserved</name></member>
      <member refid="classBListView_1ac1362f8399fec2ecd663b16acc980f9d" prot="private" virt="virtual"><scope>BListView</scope><name>_ReservedListView2</name></member>
      <member refid="classBListView_1a759a856bdf19b53686681bb9b251d1ac" prot="private" virt="virtual"><scope>BListView</scope><name>_ReservedListView3</name></member>
      <member refid="classBListView_1a76517e81cf049da11154f83cab1da91e" prot="private" virt="virtual"><scope>BListView</scope><name>_ReservedListView4</name></member>
      <member refid="classBListView_1ac1a7951f03b3ad1f58360da07fc84f51" prot="private" virt="non-virtual"><scope>BListView</scope><name>_Select</name></member>
      <member refid="classBListView_1ab167edcae52369338779a0269b33275d" prot="private" virt="non-virtual"><scope>BListView</scope><name>_Select</name></member>
      <member refid="classBListView_1ad3ff939676849a44525de6ec7e9da13c" prot="private" virt="non-virtual"><scope>BListView</scope><name>_SwapItems</name></member>
      <member refid="classBListView_1ab86d26dc7c640eae06d8120442938b53" prot="private" virt="non-virtual"><scope>BListView</scope><name>_UpdateItems</name></member>
      <member refid="classBView_1ab6382c582e5e1be527d3199459d05e8f" prot="public" virt="non-virtual"><scope>BListView</scope><name>AddChild</name></member>
      <member refid="classBView_1a5d30ae4fa0119bf5286f52f83c2f351c" prot="public" virt="non-virtual"><scope>BListView</scope><name>AddChild</name></member>
      <member refid="classBHandler_1a862bea548363faac6f883b348cbed838" prot="public" virt="virtual"><scope>BListView</scope><name>AddFilter</name></member>
      <member refid="classBListView_1a599a184e570c82d545fc9ae2ba58a411" prot="public" virt="virtual"><scope>BListView</scope><name>AddItem</name></member>
      <member refid="classBListView_1a9c9daecdbf5b692e9d11660dc030af32" prot="public" virt="virtual"><scope>BListView</scope><name>AddItem</name></member>
      <member refid="classBView_1a88440336a66ee9b1a4b1661e9ba9e59c" prot="public" virt="non-virtual"><scope>BListView</scope><name>AddLine</name></member>
      <member refid="classBListView_1ad5a44bb1cc57a998d20e86d7bbc69f16" prot="public" virt="virtual"><scope>BListView</scope><name>AddList</name></member>
      <member refid="classBListView_1a60e412803bdc9e8fc3f887519429064d" prot="public" virt="virtual"><scope>BListView</scope><name>AddList</name></member>
      <member refid="classBView_1ac780f029d415ee0a915792b4e756fa77" prot="public" virt="non-virtual"><scope>BListView</scope><name>AdoptParentColors</name></member>
      <member refid="classBView_1a0e429a82fe06e9ab390b06d993ee31be" prot="public" virt="non-virtual"><scope>BListView</scope><name>AdoptSystemColors</name></member>
      <member refid="classBView_1ab68ad7103708884f9e6fd84e8a579746" prot="public" virt="non-virtual"><scope>BListView</scope><name>AdoptViewColors</name></member>
      <member refid="classBView_1a561e82ed41cbb93d3bacf371787497bf" prot="public" virt="virtual"><scope>BListView</scope><name>AllArchived</name></member>
      <member refid="classBListView_1ae916566577d7d1b310d00861b26ef651" prot="public" virt="virtual"><scope>BListView</scope><name>AllAttached</name></member>
      <member refid="classBListView_1a5f97a604910fbf576aa1acde9e4b8f36" prot="public" virt="virtual"><scope>BListView</scope><name>AllDetached</name></member>
      <member refid="classBView_1ab7bd04272afed8b28bf57d1de33cbe05" prot="public" virt="virtual"><scope>BListView</scope><name>AllUnarchived</name></member>
      <member refid="classBView_1a2d73d2f2b0b35390929cf54fbfa5ecff" prot="public" virt="non-virtual"><scope>BListView</scope><name>AppendToPicture</name></member>
      <member refid="classBListView_1a89277e72296cc9ec516777e000f100e3" prot="public" virt="virtual"><scope>BListView</scope><name>Archive</name></member>
      <member refid="classBListView_1a172497b23a2c4ab6da666363ad51d90e" prot="public" virt="virtual"><scope>BListView</scope><name>AttachedToWindow</name></member>
      <member refid="classBListView_1ab178c65eb019bf449b1102238df8e6d3ad43adaf33c812e195da6873d02338680" prot="protected" virt="non-virtual"><scope>BListView</scope><name>B_MOVE_OP</name></member>
      <member refid="classBListView_1ab178c65eb019bf449b1102238df8e6d3a4e811e975ef53c9a0b500748f9e193d3" prot="protected" virt="non-virtual"><scope>BListView</scope><name>B_NO_OP</name></member>
      <member refid="classBListView_1ab178c65eb019bf449b1102238df8e6d3a5e971f17d1d62c0c01d9447c5dac2cb6" prot="protected" virt="non-virtual"><scope>BListView</scope><name>B_REPLACE_OP</name></member>
      <member refid="classBListView_1ab178c65eb019bf449b1102238df8e6d3af2a91f9df647572e724ebc3b56a9db4a" prot="protected" virt="non-virtual"><scope>BListView</scope><name>B_SWAP_OP</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BListView</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BListView</scope><name>BArchivable</name></member>
      <member refid="classBInvoker_1ada272cb8671448d7f7efd607791f31a7" prot="protected" virt="non-virtual"><scope>BListView</scope><name>BeginInvokeNotify</name></member>
      <member refid="classBView_1abe65757b7c83c8db390bf0c87457a343" prot="public" virt="non-virtual"><scope>BListView</scope><name>BeginLayer</name></member>
      <member refid="classBView_1ab3f2e9f54d2b93952b27e182ac552983" prot="public" virt="non-virtual"><scope>BListView</scope><name>BeginLineArray</name></member>
      <member refid="classBView_1a14155192773aad22ebe47a9975afac5f" prot="public" virt="non-virtual"><scope>BListView</scope><name>BeginPicture</name></member>
      <member refid="classBView_1ac1eb1eeee67ec97205a4acc6955185bd" prot="public" virt="non-virtual"><scope>BListView</scope><name>BeginRectTracking</name></member>
      <member refid="classBHandler_1a2142e21fe781b24f914ec2086e5f05b7" prot="public" virt="non-virtual"><scope>BListView</scope><name>BHandler</name></member>
      <member refid="classBHandler_1add8fa081a7bb8633581e78777b215d0b" prot="public" virt="non-virtual"><scope>BListView</scope><name>BHandler</name></member>
      <member refid="classBInvoker_1ad03149db91cd6460f12adb72780a7080" prot="public" virt="non-virtual"><scope>BListView</scope><name>BInvoker</name></member>
      <member refid="classBInvoker_1a6405334f1589c7a9fc3604ff8a4c8c83" prot="public" virt="non-virtual"><scope>BListView</scope><name>BInvoker</name></member>
      <member refid="classBInvoker_1adaf9b3df1b4a318e10df04a5eb9f59ee" prot="public" virt="non-virtual"><scope>BListView</scope><name>BInvoker</name></member>
      <member refid="classBListView_1a031bdcf6c1cb2bada476fe687b0bff5e" prot="public" virt="non-virtual"><scope>BListView</scope><name>BListView</name></member>
      <member refid="classBListView_1a4ee70b28a29582516f70b2bf6ca0662c" prot="public" virt="non-virtual"><scope>BListView</scope><name>BListView</name></member>
      <member refid="classBListView_1a8e583dfd6d0cf8bcada0a431197e099d" prot="public" virt="non-virtual"><scope>BListView</scope><name>BListView</name></member>
      <member refid="classBListView_1a7964733899af60778e474bfa98537c59" prot="public" virt="non-virtual"><scope>BListView</scope><name>BListView</name></member>
      <member refid="classBView_1acbb8ea442346e91428689163db9d633e" prot="public" virt="non-virtual"><scope>BListView</scope><name>Bounds</name></member>
      <member refid="classBView_1ab148f59c41c9a22ced87bf7a0221ed62" prot="public" virt="non-virtual"><scope>BListView</scope><name>BView</name></member>
      <member refid="classBView_1ae3a1b2a66dc19690e766623be65c37e2" prot="public" virt="non-virtual"><scope>BListView</scope><name>BView</name></member>
      <member refid="classBView_1ae982fac35c278cc64990c506efe3965e" prot="public" virt="non-virtual"><scope>BListView</scope><name>BView</name></member>
      <member refid="classBView_1aaf91592f50f2f44d16f23e7504f494cb" prot="public" virt="non-virtual"><scope>BListView</scope><name>ChildAt</name></member>
      <member refid="classBView_1ae7582b9a2b0b446a1de16c681f23baf9" prot="public" virt="non-virtual"><scope>BListView</scope><name>ClearViewBitmap</name></member>
      <member refid="classBView_1a0ae48f37c3f56b422841638971488cc0" prot="public" virt="non-virtual"><scope>BListView</scope><name>ClearViewOverlay</name></member>
      <member refid="classBView_1a18d61bcae2a7ca8a1a0977ac23d15171" prot="public" virt="non-virtual"><scope>BListView</scope><name>ClipToInversePicture</name></member>
      <member refid="classBView_1ad1762d160500ec3ce90c7bd73944d8a7" prot="public" virt="non-virtual"><scope>BListView</scope><name>ClipToInverseRect</name></member>
      <member refid="classBView_1a17dcb4f2e92994cde9a9ece9caa619c2" prot="public" virt="non-virtual"><scope>BListView</scope><name>ClipToInverseShape</name></member>
      <member refid="classBView_1a9c92c9e8e306d00dbfef81f2b0282339" prot="public" virt="non-virtual"><scope>BListView</scope><name>ClipToPicture</name></member>
      <member refid="classBView_1a22ff147a2f0a0bd65de494c9a039acee" prot="public" virt="non-virtual"><scope>BListView</scope><name>ClipToRect</name></member>
      <member refid="classBView_1ac0884c62949361a7eb6a4834f46b902c" prot="public" virt="non-virtual"><scope>BListView</scope><name>ClipToShape</name></member>
      <member refid="classBInvoker_1a6eb323ab957a5ee99e8db2b2fb0e9800" prot="public" virt="non-virtual"><scope>BListView</scope><name>Command</name></member>
      <member refid="classBView_1a656b8d82a6a7c7c6ab33c3dd08aad6ec" prot="public" virt="virtual"><scope>BListView</scope><name>ConstrainClippingRegion</name></member>
      <member refid="classBView_1a43c16140dd4491a6a6f7bad11bbea1f9" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1aa3201bdf5c489fbab7d67afe3453466d" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1ab2aeeb14409a18f950173e7cb22e147c" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1a45b405f10c29442aea8b70161410565f" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertFromParent</name></member>
      <member refid="classBView_1a4b794ccd899dc6a0cafd886169122df5" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a75f1d68cf77bccc03930eb8e273f2967" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a3fbc496f437925cb02ccf9e817406e4e" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1a44c3b5174e4ccfa4c123e0d5d54e9408" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertFromScreen</name></member>
      <member refid="classBView_1ab20700567eabd5f8135be179b4232e2c" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1a91e6a7edab78547be47cb8dc84cfdecf" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1ac7bd2e0e7aac40d1be9a47999b5701a9" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1ae3b385e4d1b9f70bc848bf2fd0b7753c" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertToParent</name></member>
      <member refid="classBView_1aefefb1242613b869feb6b8e0cc119518" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1af90cdeb62cc60adf64eb9a669c37c153" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1ad99f5af006f28c485f02484752a2ac5d" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1ae60c56c306d0cf3f504d710fac8b9bed" prot="public" virt="non-virtual"><scope>BListView</scope><name>ConvertToScreen</name></member>
      <member refid="classBView_1a8ace5c5cc811c4ad16acf281ffd1a48d" prot="public" virt="non-virtual"><scope>BListView</scope><name>CopyBits</name></member>
      <member refid="classBView_1ae30d094a1cb1f3357c4aa7caa4b0e29d" prot="public" virt="non-virtual"><scope>BListView</scope><name>CountChildren</name></member>
      <member refid="classBListView_1ad75347c236ecc4ddd46083e587f5f459" prot="public" virt="non-virtual"><scope>BListView</scope><name>CountItems</name></member>
      <member refid="classBListView_1a6958f442fcd00dd19643e29ac29a46f3" prot="public" virt="non-virtual"><scope>BListView</scope><name>CurrentSelection</name></member>
      <member refid="classBView_1ae2a9da1ca04489dd60ef8aefa86331ed" prot="public" virt="non-virtual"><scope>BListView</scope><name>DelayedInvalidate</name></member>
      <member refid="classBView_1a6389a46cf1842eb0d412b44958955e61" prot="public" virt="non-virtual"><scope>BListView</scope><name>DelayedInvalidate</name></member>
      <member refid="classBListView_1aae58b02f2bda70f7173e8234955397aa" prot="public" virt="non-virtual"><scope>BListView</scope><name>Deselect</name></member>
      <member refid="classBListView_1aeb2925448e33f555b15c151c87be4197" prot="public" virt="non-virtual"><scope>BListView</scope><name>DeselectAll</name></member>
      <member refid="classBListView_1a61fd9e835431a93334e243585ec4faaa" prot="public" virt="non-virtual"><scope>BListView</scope><name>DeselectExcept</name></member>
      <member refid="classBListView_1a06439547091d244eec75cdb9b078d5ac" prot="public" virt="virtual"><scope>BListView</scope><name>DetachedFromWindow</name></member>
      <member refid="classBView_1aa165cbaac7d6915feaae6048c4378c85" prot="public" virt="non-virtual"><scope>BListView</scope><name>DisableLayoutInvalidation</name></member>
      <member refid="classBListView_1a9a0978cc612ab6c7ce9efdabd3e37283" prot="public" virt="non-virtual"><scope>BListView</scope><name>DoForEach</name></member>
      <member refid="classBListView_1a3f520bde0f5691d3c5714c7edefc25b3" prot="public" virt="non-virtual"><scope>BListView</scope><name>DoForEach</name></member>
      <member refid="classBView_1a9d766a06d0885200c6ababba4c87808b" prot="protected" virt="virtual"><scope>BListView</scope><name>DoLayout</name></member>
      <member refid="classBListView_1afa476fbe7cb2db7dc3ebfff29c456408" prot="protected" virt="virtual"><scope>BListView</scope><name>DoMiscellaneous</name></member>
      <member refid="classBView_1a1f4f0c3c5946df1d14e6031e5e12f40b" prot="public" virt="non-virtual"><scope>BListView</scope><name>DragMessage</name></member>
      <member refid="classBView_1a466287a3d939759cc09e4a6d1c9982cd" prot="public" virt="non-virtual"><scope>BListView</scope><name>DragMessage</name></member>
      <member refid="classBView_1ae1caa1d0bef9452db00c2adc8e3280b4" prot="public" virt="non-virtual"><scope>BListView</scope><name>DragMessage</name></member>
      <member refid="classBListView_1a7c284b74a68c3f15e7266ac7bca65d24" prot="public" virt="virtual"><scope>BListView</scope><name>Draw</name></member>
      <member refid="classBView_1abb50623b4236926b068fc5a2264f6a48" prot="public" virt="virtual"><scope>BListView</scope><name>DrawAfterChildren</name></member>
      <member refid="classBView_1a6171150993fbf7c73966c7c302a95573" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a63db7245fd9b9fefd461d7596c15f9cc" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1abce81666128d183d59b5cf2ed75c7f07" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a1c8b6e3e9218388a68ae43dd408a187c" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1a769c3e3dee7d86ed50308f7a3f46ef91" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawBitmap</name></member>
      <member refid="classBView_1ae66727344d35f05c56b6163ad70e360c" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a0ef432afa41aefcb3fdd537e2d290001" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1aa3275b791787a66f3638611cd6a5ae09" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a6931c5fe803eb5fa9e66438d347c4b6d" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1ab50fba0500357abebb9f3ef3832f2e68" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawBitmapAsync</name></member>
      <member refid="classBView_1a02ba5c68f21d4345ec3ee683496ce851" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawChar</name></member>
      <member refid="classBView_1a2ed7c3628692426116fc0bb450c0f0c7" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawChar</name></member>
      <member refid="classBView_1ae7953a2e451fb6e5a439df9e9dc8451a" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawingMode</name></member>
      <member refid="classBListView_1a3bcfb2f09ee5eefd4eaf594f1ec053ad" prot="private" virt="virtual"><scope>BListView</scope><name>DrawItem</name></member>
      <member refid="classBView_1ae4b252943befd9f0b62e30517b3ecec2" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a2fdf36421cccce9136cdd9966a971955" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a9f5781a2b37113c55950c93b621984a7" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawPicture</name></member>
      <member refid="classBView_1a65498927c21d6681a0e77c4e3d29efba" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a05881f8b07989e1e9db0bd41f8181341" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a7f2fde4e7719bded5af33805b8242b06" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawPictureAsync</name></member>
      <member refid="classBView_1a5c261dbbb4e8157799e85d6ad1530920" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawString</name></member>
      <member refid="classBView_1a83d77965bd9cda6212189d92b97d8198" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawString</name></member>
      <member refid="classBView_1ad3830d09ed0300a1144d47ac78cd2dde" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawString</name></member>
      <member refid="classBView_1a4e1f1c59352a1373ccace7255a0ccf23" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawString</name></member>
      <member refid="classBView_1a5dacf5d193a0c492f296bc1e402e6370" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawString</name></member>
      <member refid="classBView_1a135868eb5cd1b35ee1c2d03517b9a33f" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawString</name></member>
      <member refid="classBView_1a8848d931fd0354860a0e71934e66cb03" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawTiledBitmap</name></member>
      <member refid="classBView_1ad281a4e40f212e3cb56c23fa6e574a84" prot="public" virt="non-virtual"><scope>BListView</scope><name>DrawTiledBitmapAsync</name></member>
      <member refid="classBView_1ad43cc5c22f83d95632d3d81eff73f425" prot="public" virt="non-virtual"><scope>BListView</scope><name>EnableLayoutInvalidation</name></member>
      <member refid="classBInvoker_1a2169cfbba1c3da1921baa9a550581b54" prot="protected" virt="non-virtual"><scope>BListView</scope><name>EndInvokeNotify</name></member>
      <member refid="classBView_1a9f54d4478a12823f116168a45af30898" prot="public" virt="non-virtual"><scope>BListView</scope><name>EndLayer</name></member>
      <member refid="classBView_1a24ba922f9698936bc27f48b3c51349a1" prot="public" virt="non-virtual"><scope>BListView</scope><name>EndLineArray</name></member>
      <member refid="classBView_1ae01506892a9b2d39f6df13726be9d0af" prot="public" virt="non-virtual"><scope>BListView</scope><name>EndPicture</name></member>
      <member refid="classBView_1a7bcc3532c03eeeb929278de8fcc1fd25" prot="public" virt="non-virtual"><scope>BListView</scope><name>EndRectTracking</name></member>
      <member refid="classBView_1a8851d500773c732ddbb1a4b31f0ad664" prot="public" virt="non-virtual"><scope>BListView</scope><name>EventMask</name></member>
      <member refid="classBView_1a1f078f5c987061c5cf3059f7091bcb1a" prot="public" virt="non-virtual"><scope>BListView</scope><name>ExplicitAlignment</name></member>
      <member refid="classBView_1a4e63cc8ca1f604ccb20f5891adade70f" prot="public" virt="non-virtual"><scope>BListView</scope><name>ExplicitMaxSize</name></member>
      <member refid="classBView_1a1b24db754473008766cdd0fd9c4ee3b7" prot="public" virt="non-virtual"><scope>BListView</scope><name>ExplicitMinSize</name></member>
      <member refid="classBView_1a218cd0d238104a6ff31c1d72ae2d9e6e" prot="public" virt="non-virtual"><scope>BListView</scope><name>ExplicitPreferredSize</name></member>
      <member refid="classBListView_1aecacbcbe0a1faf8ea39e5ce128303db2" prot="private" virt="non-virtual"><scope>BListView</scope><name>fAnchorIndex</name></member>
      <member refid="classBListView_1ad2a1ca14aac1704420b1af9cfcf45656" prot="private" virt="non-virtual"><scope>BListView</scope><name>fFirstSelected</name></member>
      <member refid="classBView_1af0e5d362474d39199116045aa9621aa5" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillArc</name></member>
      <member refid="classBView_1ac216c652253a21f0f28a7caef07deb77" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillArc</name></member>
      <member refid="classBView_1a49017edefe45ca5c74954e1227e673bb" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillArc</name></member>
      <member refid="classBView_1a4304fe45708f72d0ba20b579870c24ce" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillArc</name></member>
      <member refid="classBView_1a531ad43e129d810ee64208123b550193" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillBezier</name></member>
      <member refid="classBView_1a7cf8a5eaa5451b2c7df0d6fa392012bd" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillBezier</name></member>
      <member refid="classBView_1a06942f0dd4c13175bcfff6a88eae7cc0" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a98a73cbccb42edfc61b93f9aa6f4a13b" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a2738cf2f3d39f560d0cff90543f45afa" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillEllipse</name></member>
      <member refid="classBView_1a86de91f260577187eaf22ba0fdf32fba" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillEllipse</name></member>
      <member refid="classBView_1ae72733cae8a1fc2da8feb47c0c2149fa" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1adc7d96f2d60a819f03685eb11b6945e2" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a1bdc02a311b2a051ad7fbdbf1789e958" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a96cdb60a8c87e4958380a3077a2197a5" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a22a5ce1f024e622b6eade6a9176ff1f7" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a57b0870cd6a0109c347d80c34ca2f34a" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillPolygon</name></member>
      <member refid="classBView_1a4d074663998c7ba922a9d981d0cfe086" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillRect</name></member>
      <member refid="classBView_1aae6a3ff6683bb15ac8c647c946475e8f" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillRect</name></member>
      <member refid="classBView_1a4810086c415d90bffa25ab2963716936" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillRegion</name></member>
      <member refid="classBView_1a56828d13947717462b661e1645305509" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillRegion</name></member>
      <member refid="classBView_1a38d7e7b15a13591c20020599886402b5" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillRoundRect</name></member>
      <member refid="classBView_1a73956d28b356b2eee83ebc19bd6e398b" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillRoundRect</name></member>
      <member refid="classBView_1a3a2fd2d7313a9bb7dff359a4f4362a5f" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillRule</name></member>
      <member refid="classBView_1a91b9ce4b8b8ee13ff5f1071e1fb0d829" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillShape</name></member>
      <member refid="classBView_1a9a82da733397e97b985875be941f77a6" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillShape</name></member>
      <member refid="classBView_1a46ec16609a402d03baa322a04d8c50e2" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillTriangle</name></member>
      <member refid="classBView_1af512b76752705cba87f89c8dac313005" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillTriangle</name></member>
      <member refid="classBView_1a5dd1c64839c11a79e80581e37656cc26" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillTriangle</name></member>
      <member refid="classBView_1a0878dea14a61d58c951bd8e11c0a2ef6" prot="public" virt="non-virtual"><scope>BListView</scope><name>FillTriangle</name></member>
      <member refid="classBHandler_1a909662a049856f6863a934cf18161554" prot="public" virt="non-virtual"><scope>BListView</scope><name>FilterList</name></member>
      <member refid="classBView_1ab83ef89f1876913174c825ff7cd02c4a" prot="public" virt="non-virtual"><scope>BListView</scope><name>FindView</name></member>
      <member refid="classBListView_1a406ad1af19a84fcd6411f0b774e64ca4" prot="public" virt="non-virtual"><scope>BListView</scope><name>FirstItem</name></member>
      <member refid="classBView_1a561b10abf94dd65a26b02253af667508" prot="public" virt="non-virtual"><scope>BListView</scope><name>Flags</name></member>
      <member refid="classBListView_1a322469836fb7a22e885d4c8916ab4ae2" prot="private" virt="non-virtual"><scope>BListView</scope><name>fLastSelected</name></member>
      <member refid="classBListView_1ae2cc79b7dd9a5d1c5e49df6b0033719a" prot="private" virt="non-virtual"><scope>BListView</scope><name>fList</name></member>
      <member refid="classBListView_1af347c2b7b809a1213cd83490d93679af" prot="private" virt="non-virtual"><scope>BListView</scope><name>fListType</name></member>
      <member refid="classBView_1a15465930f84d2d01f7818bd79bc91c3e" prot="public" virt="non-virtual"><scope>BListView</scope><name>Flush</name></member>
      <member refid="classBView_1a424161ccf6f52a354fdd67ed1376d196" prot="public" virt="non-virtual"><scope>BListView</scope><name>ForceFontAliasing</name></member>
      <member refid="classBView_1a487b04a3aaffdd1a1afb730dca36a7e2" prot="public" virt="non-virtual"><scope>BListView</scope><name>Frame</name></member>
      <member refid="classBListView_1aeed214d88c70fa121e1531a6c2cb9ba3" prot="public" virt="virtual"><scope>BListView</scope><name>FrameMoved</name></member>
      <member refid="classBListView_1af4fdd5e524c68a7aa318179c8a5acadd" prot="public" virt="virtual"><scope>BListView</scope><name>FrameResized</name></member>
      <member refid="classBListView_1ad47120a68158f71815cd3a3978a2d1dd" prot="private" virt="non-virtual"><scope>BListView</scope><name>fScrollView</name></member>
      <member refid="classBListView_1ad9e1b19b0faf2a1537aa899547493535" prot="private" virt="non-virtual"><scope>BListView</scope><name>fSelectMessage</name></member>
      <member refid="classBListView_1a991ef6c47bf8d30ba6fe1a436bb90bfd" prot="private" virt="non-virtual"><scope>BListView</scope><name>fTrack</name></member>
      <member refid="classBView_1ad50d5ba2249fdf3dd8640b3573c2a2e8" prot="public" virt="non-virtual"><scope>BListView</scope><name>GetBlendingMode</name></member>
      <member refid="classBView_1acf50a063c9621f35a84b1d0245b12d69" prot="public" virt="non-virtual"><scope>BListView</scope><name>GetClippingRegion</name></member>
      <member refid="classBView_1af244d01f85e6d9ae7f5fcca4637dc78c" prot="public" virt="non-virtual"><scope>BListView</scope><name>GetFont</name></member>
      <member refid="classBView_1a5bf95d66754634c647b2ddf7d39b4dfb" prot="public" virt="non-virtual"><scope>BListView</scope><name>GetFontHeight</name></member>
      <member refid="classBView_1ad34bee968b1ec98a0bf89343340b6b07" prot="public" virt="virtual"><scope>BListView</scope><name>GetHeightForWidth</name></member>
      <member refid="classBView_1aec2975b51966c397aa52b9e3eebd2c85" prot="public" virt="non-virtual"><scope>BListView</scope><name>GetLayout</name></member>
      <member refid="classBView_1a830ce9cf2ac2ffb5f73f526ee5d6e53d" prot="public" virt="non-virtual"><scope>BListView</scope><name>GetMouse</name></member>
      <member refid="classBListView_1af763f7195c72abd00143441bef002b25" prot="public" virt="virtual"><scope>BListView</scope><name>GetPreferredSize</name></member>
      <member refid="classBView_1aaae0dc93bc61d7f221465fbe0aecd30a" prot="public" virt="non-virtual"><scope>BListView</scope><name>GetStringWidths</name></member>
      <member refid="classBListView_1acc1fa37e73b342b27d16e13aa3d3024a" prot="public" virt="virtual"><scope>BListView</scope><name>GetSupportedSuites</name></member>
      <member refid="classBView_1afb826fe9b8964e4d843cae190170badf" prot="protected" virt="virtual"><scope>BListView</scope><name>GetToolTipAt</name></member>
      <member refid="classBInvoker_1a710e78abc03eb29e9e25d11d34c874cc" prot="public" virt="non-virtual"><scope>BListView</scope><name>HandlerForReply</name></member>
      <member refid="classBView_1a606e0e7e03516dccb53bf073827460a8" prot="public" virt="non-virtual"><scope>BListView</scope><name>HasDefaultColors</name></member>
      <member refid="classBView_1abd411461b7e23ad17e7294f8f5e1cbeb" prot="public" virt="virtual"><scope>BListView</scope><name>HasHeightForWidth</name></member>
      <member refid="classBListView_1af05bfde78ba0e06666861ad8c931f512" prot="public" virt="non-virtual"><scope>BListView</scope><name>HasItem</name></member>
      <member refid="classBView_1aa9aacc95606b650e6a8d776b51cb902b" prot="public" virt="non-virtual"><scope>BListView</scope><name>HasSystemColors</name></member>
      <member refid="classBView_1a7688dc04178a2955950154ee3670d029" prot="public" virt="virtual"><scope>BListView</scope><name>Hide</name></member>
      <member refid="classBView_1af75bbc1131ad6a90e299c6cbcf623fa7" prot="public" virt="non-virtual"><scope>BListView</scope><name>HideToolTip</name></member>
      <member refid="classBView_1abda3583967fba9f6ed9524058d00a6e9" prot="public" virt="non-virtual"><scope>BListView</scope><name>HighColor</name></member>
      <member refid="classBView_1aa86f548fba2e82d022066198be6d5af6" prot="public" virt="non-virtual"><scope>BListView</scope><name>HighUIColor</name></member>
      <member refid="classBListView_1ab355cbfae34bdf8b97f4ce0c17fc93f7" prot="public" virt="non-virtual"><scope>BListView</scope><name>IndexOf</name></member>
      <member refid="classBListView_1a8bf217aa8eb31b198b4131902a661bbc" prot="public" virt="non-virtual"><scope>BListView</scope><name>IndexOf</name></member>
      <member refid="classBListView_1aa59a023c30bb60920167495c9c9edfbf" prot="public" virt="virtual"><scope>BListView</scope><name>InitiateDrag</name></member>
      <member refid="classBListView_1aab88c58cf141c90e6e7fa020f9e07a0b" prot="public" virt="non-virtual"><scope>BListView</scope><name>Instantiate</name></member>
      <member refid="classBView_1a8c767d948dc9435c006cabdcab1cd08e" prot="public" virt="non-virtual"><scope>BListView</scope><name>Invalidate</name></member>
      <member refid="classBView_1ac70b682819c0f9b008c428e02015b19b" prot="public" virt="non-virtual"><scope>BListView</scope><name>Invalidate</name></member>
      <member refid="classBView_1adfced0dcb244e199f872fdbd48349a05" prot="public" virt="non-virtual"><scope>BListView</scope><name>Invalidate</name></member>
      <member refid="classBListView_1a2a9ee597042919a945526410d7547b3e" prot="public" virt="non-virtual"><scope>BListView</scope><name>InvalidateItem</name></member>
      <member refid="classBView_1a4a711316094e43076a3f5478d937accf" prot="public" virt="non-virtual"><scope>BListView</scope><name>InvalidateLayout</name></member>
      <member refid="classBView_1af7e5ebc41cd5a471dcdcfa1f3db801a5" prot="public" virt="non-virtual"><scope>BListView</scope><name>InvertRect</name></member>
      <member refid="classBListView_1a15bf860ae1edbcf092e29ecd1a42f412" prot="public" virt="non-virtual"><scope>BListView</scope><name>InvocationCommand</name></member>
      <member refid="classBListView_1a7eb35fca0ac1421ba172ea7436ec5f91" prot="public" virt="non-virtual"><scope>BListView</scope><name>InvocationMessage</name></member>
      <member refid="classBListView_1a88701bff61aeb58857ca33a5a8920e40" prot="public" virt="virtual"><scope>BListView</scope><name>Invoke</name></member>
      <member refid="classBInvoker_1a6e33e81c7ee307621295e8da6181d3f8" prot="protected" virt="non-virtual"><scope>BListView</scope><name>InvokeKind</name></member>
      <member refid="classBInvoker_1ab009fe9c6a1f64798c614612e8c3db20" prot="public" virt="non-virtual"><scope>BListView</scope><name>InvokeNotify</name></member>
      <member refid="classBListView_1aac64c30b47d51da3185f1fafa1955784" prot="public" virt="non-virtual"><scope>BListView</scope><name>IsEmpty</name></member>
      <member refid="classBView_1a165719de682845f80735042a499692ff" prot="public" virt="non-virtual"><scope>BListView</scope><name>IsFocus</name></member>
      <member refid="classBView_1a33a65050c2315b19b4c5af16c48e3cdb" prot="public" virt="non-virtual"><scope>BListView</scope><name>IsHidden</name></member>
      <member refid="classBView_1a95cfa8ee585230ea8fb224e88eddc503" prot="public" virt="non-virtual"><scope>BListView</scope><name>IsHidden</name></member>
      <member refid="classBListView_1abeaac6128e12908bd7ec9e170a37d161" prot="public" virt="non-virtual"><scope>BListView</scope><name>IsItemSelected</name></member>
      <member refid="classBView_1a4e86b719129a12afbda7c10371eeca47" prot="public" virt="non-virtual"><scope>BListView</scope><name>IsLayoutInvalidationDisabled</name></member>
      <member refid="classBView_1a00a5d5d6edee7d488d77df03945b3e94" prot="public" virt="non-virtual"><scope>BListView</scope><name>IsLayoutValid</name></member>
      <member refid="classBView_1a8e3f1722e40fdf01c5131e49199ec3ff" prot="public" virt="non-virtual"><scope>BListView</scope><name>IsPrinting</name></member>
      <member refid="classBInvoker_1a17470932a103267815f01d0df9e891e9" prot="public" virt="non-virtual"><scope>BListView</scope><name>IsTargetLocal</name></member>
      <member refid="classBHandler_1a581b84f0f067afa88768ce6a0c07f59f" prot="public" virt="non-virtual"><scope>BListView</scope><name>IsWatched</name></member>
      <member refid="classBListView_1abe632df2c2af3f94ff2eb13e5523b0ba" prot="public" virt="non-virtual"><scope>BListView</scope><name>ItemAt</name></member>
      <member refid="classBListView_1abfc3d7aeaa14051912e1a1a14b994980" prot="public" virt="non-virtual"><scope>BListView</scope><name>ItemFrame</name></member>
      <member refid="classBListView_1a6f9d113b935a8f5e998900be26758274" prot="public" virt="non-virtual"><scope>BListView</scope><name>Items</name></member>
      <member refid="classBListView_1aed97ff09a629d740b91c8f72dcf5893a" prot="public" virt="virtual"><scope>BListView</scope><name>KeyDown</name></member>
      <member refid="classBView_1acbc528bb70be49993bd99aa136dbb089" prot="public" virt="virtual"><scope>BListView</scope><name>KeyUp</name></member>
      <member refid="classBListView_1ae5d3f9a69caba47be72d746fda76136d" prot="public" virt="non-virtual"><scope>BListView</scope><name>LastItem</name></member>
      <member refid="classBView_1a854b6ca54eeca610db9eab8b58d68a8b" prot="public" virt="non-virtual"><scope>BListView</scope><name>Layout</name></member>
      <member refid="classBView_1a2f74b3e7c602045d8c927f923f45eefa" prot="public" virt="virtual"><scope>BListView</scope><name>LayoutAlignment</name></member>
      <member refid="classBView_1ada521f848e4c800cd02eb4fe529e7ea0" prot="protected" virt="virtual"><scope>BListView</scope><name>LayoutChanged</name></member>
      <member refid="classBView_1ae066513c0a788a9544744d409f28cada" prot="public" virt="non-virtual"><scope>BListView</scope><name>LayoutContext</name></member>
      <member refid="classBView_1a0a552cc0d8678939c619f98dcc80d254" prot="protected" virt="virtual"><scope>BListView</scope><name>LayoutInvalidated</name></member>
      <member refid="classBView_1a5d252dfe28eee049be2192d1a01ed6e3" prot="public" virt="non-virtual"><scope>BListView</scope><name>LeftTop</name></member>
      <member refid="classBView_1a551f5961188e4f26ef310eb5eea7c926" prot="public" virt="non-virtual"><scope>BListView</scope><name>LineCapMode</name></member>
      <member refid="classBView_1a0aa47adb29d91b4cc6c4924b7f436012" prot="public" virt="non-virtual"><scope>BListView</scope><name>LineJoinMode</name></member>
      <member refid="classBView_1ab1cd7cf77a4fa01755d186a05163cfbe" prot="public" virt="non-virtual"><scope>BListView</scope><name>LineMiterLimit</name></member>
      <member refid="classBListView_1acfc235c5ec1d0a8662547e31042438f2" prot="public" virt="non-virtual"><scope>BListView</scope><name>ListType</name></member>
      <member refid="classBHandler_1a9d64bf66b4914918e24390d117e83477" prot="public" virt="non-virtual"><scope>BListView</scope><name>LockLooper</name></member>
      <member refid="classBHandler_1afa0099ff6defcb6d64e3ee1c2fb47afe" prot="public" virt="non-virtual"><scope>BListView</scope><name>LockLooperWithTimeout</name></member>
      <member refid="classBHandler_1ac8e949959b12e602e3b0c4f023c60e6c" prot="public" virt="non-virtual"><scope>BListView</scope><name>Looper</name></member>
      <member refid="classBView_1a423c54f22ab95745b28b583af999e554" prot="public" virt="non-virtual"><scope>BListView</scope><name>LowColor</name></member>
      <member refid="classBView_1ae32ca6d8f106d44b5b51df82a7eb64c5" prot="public" virt="non-virtual"><scope>BListView</scope><name>LowUIColor</name></member>
      <member refid="classBListView_1a1b799b3004e142a491102a24a13b87b6" prot="public" virt="virtual"><scope>BListView</scope><name>MakeEmpty</name></member>
      <member refid="classBListView_1a35117bf3eb7d1f64b777d5371558c626" prot="public" virt="virtual"><scope>BListView</scope><name>MakeFocus</name></member>
      <member refid="classBListView_1a54878f820deb4ccc692f49bd6e8ce5c0" prot="public" virt="virtual"><scope>BListView</scope><name>MaxSize</name></member>
      <member refid="classBInvoker_1ab0b73729de282c93b4da51e6b9dbc170" prot="public" virt="non-virtual"><scope>BListView</scope><name>Message</name></member>
      <member refid="classBListView_1ac00efce3ca37ce6e89c3f3fb5717311c" prot="public" virt="virtual"><scope>BListView</scope><name>MessageReceived</name></member>
      <member refid="classBInvoker_1aac0992846032f0caaed3d968cd9a1fca" prot="public" virt="non-virtual"><scope>BListView</scope><name>Messenger</name></member>
      <member refid="classBListView_1acd2a6419c6ccad9f8ea52e1c728b1b9b" prot="public" virt="virtual"><scope>BListView</scope><name>MinSize</name></member>
      <member refid="classBListView_1ab178c65eb019bf449b1102238df8e6d3" prot="protected" virt="non-virtual"><scope>BListView</scope><name>MiscCode</name></member>
      <member refid="classBListView_1aad39bfe4a5db5d70a8adbf1c41b8edf3" prot="public" virt="virtual"><scope>BListView</scope><name>MouseDown</name></member>
      <member refid="classBListView_1aa83292db971a1bf0801d9669052c2b78" prot="public" virt="virtual"><scope>BListView</scope><name>MouseMoved</name></member>
      <member refid="classBListView_1a008356d002e19a7b3f2633e4298b4053" prot="public" virt="virtual"><scope>BListView</scope><name>MouseUp</name></member>
      <member refid="classBView_1a6e122baca4494f6ce739a507054fa81f" prot="public" virt="non-virtual"><scope>BListView</scope><name>MoveBy</name></member>
      <member refid="classBListView_1aa09faf9fa92d9cece2879e95d0f61bda" prot="public" virt="non-virtual"><scope>BListView</scope><name>MoveItem</name></member>
      <member refid="classBView_1a979f8f0090284919b6e7c6c04d91cbde" prot="public" virt="non-virtual"><scope>BListView</scope><name>MovePenBy</name></member>
      <member refid="classBView_1acb61254a2121f569f6223a95cd835abd" prot="public" virt="non-virtual"><scope>BListView</scope><name>MovePenTo</name></member>
      <member refid="classBView_1ae32d7951a4ce9cff6b81899f5208a25f" prot="public" virt="non-virtual"><scope>BListView</scope><name>MovePenTo</name></member>
      <member refid="classBView_1acce9c93118a3db24078f16bdabc6fbec" prot="public" virt="non-virtual"><scope>BListView</scope><name>MoveTo</name></member>
      <member refid="classBView_1a1c9b2df47ba1b9f3a1ce3286995fb8bd" prot="public" virt="non-virtual"><scope>BListView</scope><name>MoveTo</name></member>
      <member refid="classBHandler_1a40b246ac272e09b2f641d1290be21200" prot="public" virt="non-virtual"><scope>BListView</scope><name>Name</name></member>
      <member refid="classBHandler_1a92855d8f88f6072e7225bde292feaa38" prot="public" virt="non-virtual"><scope>BListView</scope><name>NextHandler</name></member>
      <member refid="classBView_1a76e7d862fe78e4d2766573bf073b9d30" prot="public" virt="non-virtual"><scope>BListView</scope><name>NextSibling</name></member>
      <member refid="classBListView_1a71f8be2b9567a836d9e271b63772dde9" prot="private" virt="non-virtual"><scope>BListView</scope><name>operator=</name></member>
      <member refid="classBView_1aefbf71a7a403900e960ffa3943dc9901" prot="public" virt="non-virtual"><scope>BListView</scope><name>Origin</name></member>
      <member refid="classBView_1a332f34d9862000dbc859fd4e308839dd" prot="public" virt="non-virtual"><scope>BListView</scope><name>Parent</name></member>
      <member refid="classBView_1a2774e13c2b12c6a5fee333e95b76b07d" prot="public" virt="non-virtual"><scope>BListView</scope><name>PenLocation</name></member>
      <member refid="classBView_1a69d8657d26b49773fa2de914f263b204" prot="public" virt="non-virtual"><scope>BListView</scope><name>PenSize</name></member>
      <member refid="classBListView_1aa0afeb194104738a01c7e60195fe50d0" prot="public" virt="virtual"><scope>BListView</scope><name>Perform</name></member>
      <member refid="classBView_1abc0d202fe13366b80703afbdb3832951" prot="public" virt="non-virtual"><scope>BListView</scope><name>PopState</name></member>
      <member refid="classBListView_1aa353bb8e9a5d229141134df2fa3eddaf" prot="public" virt="virtual"><scope>BListView</scope><name>PreferredSize</name></member>
      <member refid="classBView_1a2a46f78756eacca3f3d4c90d31c758b1" prot="public" virt="non-virtual"><scope>BListView</scope><name>PreviousSibling</name></member>
      <member refid="classBView_1a0ae8ec3e94ee3d41cb329e3df6966566" prot="public" virt="virtual"><scope>BListView</scope><name>Pulse</name></member>
      <member refid="classBView_1a1dcb914cd0c6ef8d1291aa8492968d40" prot="public" virt="non-virtual"><scope>BListView</scope><name>PushState</name></member>
      <member refid="classBView_1a2cf4e698a4322ecfb946e440e0f7ac62" prot="public" virt="non-virtual"><scope>BListView</scope><name>Relayout</name></member>
      <member refid="classBView_1a5f93a23d06267da83c128bce222ceb17" prot="public" virt="non-virtual"><scope>BListView</scope><name>RemoveChild</name></member>
      <member refid="classBHandler_1a2b608135b27f283802648e7c6f8cdc83" prot="public" virt="virtual"><scope>BListView</scope><name>RemoveFilter</name></member>
      <member refid="classBListView_1a7d78918da16893b4bec59a49cc24c3be" prot="public" virt="virtual"><scope>BListView</scope><name>RemoveItem</name></member>
      <member refid="classBListView_1a992402e7c2395376739b2129669aca57" prot="public" virt="virtual"><scope>BListView</scope><name>RemoveItem</name></member>
      <member refid="classBListView_1af9ca954568e6397f02ebe13cd0eaafaf" prot="public" virt="virtual"><scope>BListView</scope><name>RemoveItems</name></member>
      <member refid="classBView_1a87e0848b1760a9f28aad4516467a03ed" prot="public" virt="non-virtual"><scope>BListView</scope><name>RemoveSelf</name></member>
      <member refid="classBListView_1ab3529031a7c4c01fa945e34d3f0c8169" prot="public" virt="non-virtual"><scope>BListView</scope><name>ReplaceItem</name></member>
      <member refid="classBView_1a127933a3820f0bfe0497b5e7ddfa191f" prot="public" virt="non-virtual"><scope>BListView</scope><name>ResetLayoutInvalidation</name></member>
      <member refid="classBView_1ace23acc948bbc9b9272da8dc7f01d3ce" prot="public" virt="non-virtual"><scope>BListView</scope><name>ResizeBy</name></member>
      <member refid="classBView_1a742bccd6034ef9ade65b0e596fba55f2" prot="public" virt="non-virtual"><scope>BListView</scope><name>ResizeTo</name></member>
      <member refid="classBView_1a6134097569f75679616257a361086d7a" prot="public" virt="non-virtual"><scope>BListView</scope><name>ResizeTo</name></member>
      <member refid="classBListView_1aec8ab9ba29dffb6b14bfbc9530c88fbf" prot="public" virt="virtual"><scope>BListView</scope><name>ResizeToPreferred</name></member>
      <member refid="classBView_1a1e93df523fc9edc807274ac6cfd2dc8d" prot="public" virt="non-virtual"><scope>BListView</scope><name>ResizingMode</name></member>
      <member refid="classBListView_1a2c6144558d144fd5b134021de4c01183" prot="public" virt="virtual"><scope>BListView</scope><name>ResolveSpecifier</name></member>
      <member refid="classBView_1a02ab6b6196b140b20ae516a55680e30b" prot="public" virt="non-virtual"><scope>BListView</scope><name>RotateBy</name></member>
      <member refid="classBView_1a50e12d6b8080b3bc6bc617d31d1ab200" prot="public" virt="non-virtual"><scope>BListView</scope><name>Scale</name></member>
      <member refid="classBView_1ac83f9fdfb882f849e3ac79bfb06a0fd6" prot="public" virt="non-virtual"><scope>BListView</scope><name>ScaleBy</name></member>
      <member refid="classBView_1a0878bc7981ba814190b822349599a120" prot="public" virt="non-virtual"><scope>BListView</scope><name>ScrollBar</name></member>
      <member refid="classBView_1ae20e2a3c46fc30a2a292c832eead7387" prot="public" virt="non-virtual"><scope>BListView</scope><name>ScrollBy</name></member>
      <member refid="classBListView_1a13605eb8e35d09d2795281e541aa5784" prot="public" virt="virtual"><scope>BListView</scope><name>ScrollTo</name></member>
      <member refid="classBListView_1a2d6359f4c49aefd6ed71285b7f84ed06" prot="public" virt="non-virtual"><scope>BListView</scope><name>ScrollTo</name></member>
      <member refid="classBListView_1a5a9efdb7c020e1a8048672812053e039" prot="public" virt="non-virtual"><scope>BListView</scope><name>ScrollToSelection</name></member>
      <member refid="classBView_1a54991372110199183fed775598ae1912" prot="protected" virt="non-virtual"><scope>BListView</scope><name>ScrollWithMouseWheelDelta</name></member>
      <member refid="classBListView_1aeeaff97dee9421ff4b7b01b89fec93c2" prot="public" virt="non-virtual"><scope>BListView</scope><name>Select</name></member>
      <member refid="classBListView_1a459712f3015aed95a20008b847e7d225" prot="public" virt="non-virtual"><scope>BListView</scope><name>Select</name></member>
      <member refid="classBListView_1aef207f651fbaeed044a389e3a1ece909" prot="public" virt="virtual"><scope>BListView</scope><name>SelectionChanged</name></member>
      <member refid="classBListView_1af9230fcb15b3dc47dbf5757146df90c9" prot="public" virt="non-virtual"><scope>BListView</scope><name>SelectionCommand</name></member>
      <member refid="classBListView_1acfea321631c35ff7d6608f5038213b58" prot="public" virt="non-virtual"><scope>BListView</scope><name>SelectionMessage</name></member>
      <member refid="classBHandler_1a71bf72dc17a64bcd42656722271a9e0c" prot="public" virt="virtual"><scope>BListView</scope><name>SendNotices</name></member>
      <member refid="classBView_1ad01fc0fd68e4683af9b9386bf33abf63" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetBlendingMode</name></member>
      <member refid="classBView_1a8ba0fe3a3dbeec1b7fd8c9655070ef64" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetDiskMode</name></member>
      <member refid="classBView_1a0c392ed0e36213e1007322a9cbca71c0" prot="public" virt="virtual"><scope>BListView</scope><name>SetDrawingMode</name></member>
      <member refid="classBView_1a5d8d6b469a8a11a577d1d138cfc31162" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetEventMask</name></member>
      <member refid="classBView_1a6906e47d4fdd6923dd51edb60a83ccea" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetExplicitAlignment</name></member>
      <member refid="classBView_1acd759dd7505050f9cbd8213c71991b8b" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetExplicitMaxSize</name></member>
      <member refid="classBView_1abfcb5c761f9b06da3b4a6788aad5d0ee" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetExplicitMinSize</name></member>
      <member refid="classBView_1a98b7d450210099ed59b7cd34f2575e20" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetExplicitPreferredSize</name></member>
      <member refid="classBView_1aeef8a27a5577db87251412ce44421494" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetExplicitSize</name></member>
      <member refid="classBView_1a2019def93337069c0b7d416e103522e9" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetFillRule</name></member>
      <member refid="classBHandler_1a503344dc801858e1f5f419be3919e9cf" prot="public" virt="virtual"><scope>BListView</scope><name>SetFilterList</name></member>
      <member refid="classBView_1a4740f9a1e1163073b042102a421a2e33" prot="public" virt="virtual"><scope>BListView</scope><name>SetFlags</name></member>
      <member refid="classBListView_1a7b0bd589bd4b1fb410b6e007fe107c62" prot="public" virt="virtual"><scope>BListView</scope><name>SetFont</name></member>
      <member refid="classBView_1a443e4d9ff182f85a6b1c8478ef22ffe8" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetFontSize</name></member>
      <member refid="classBInvoker_1a9983897bef828eea70f574f9571b8e85" prot="public" virt="virtual"><scope>BListView</scope><name>SetHandlerForReply</name></member>
      <member refid="classBView_1ab5482f91a642d545bc3fcefe199f95e9" prot="public" virt="virtual"><scope>BListView</scope><name>SetHighColor</name></member>
      <member refid="classBView_1aff9e1ab5e88f33027e72b39874868e9b" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetHighColor</name></member>
      <member refid="classBView_1a54eefc28bf7a4bc30612cf83aff2963b" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetHighUIColor</name></member>
      <member refid="classBListView_1abe78c4cf6c7fc1327f9eee1822080b45" prot="public" virt="virtual"><scope>BListView</scope><name>SetInvocationMessage</name></member>
      <member refid="classBView_1acac1ebbba8c76e543e1b06e84dffab02" prot="public" virt="virtual"><scope>BListView</scope><name>SetLayout</name></member>
      <member refid="classBView_1ae97bfe6c0c93fce98bc7bbd93761dbfb" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetLineMode</name></member>
      <member refid="classBListView_1a001b324eb67c6646cd6058ecab0b8bfa" prot="public" virt="virtual"><scope>BListView</scope><name>SetListType</name></member>
      <member refid="classBView_1af0426243110fb150ad7ef0705209a12c" prot="public" virt="virtual"><scope>BListView</scope><name>SetLowColor</name></member>
      <member refid="classBView_1a929fb1ca47a00220c355ae55a0ea6077" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetLowColor</name></member>
      <member refid="classBView_1a879ab88d4e64345069f1041d3a7b652f" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetLowUIColor</name></member>
      <member refid="classBInvoker_1a42fae8f984af3765c1a6af404dc36816" prot="public" virt="virtual"><scope>BListView</scope><name>SetMessage</name></member>
      <member refid="classBView_1ae7705783d064a8613dcc6f36a2866ab2" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetMouseEventMask</name></member>
      <member refid="classBHandler_1abf861126df4b6e71b9261a99da4ad0eb" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetName</name></member>
      <member refid="classBHandler_1a02f78779c8141987d6030e73c22e734a" prot="public" virt="virtual"><scope>BListView</scope><name>SetNextHandler</name></member>
      <member refid="classBView_1a769e5fa6486adf12e7a3511ed372a06c" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetOrigin</name></member>
      <member refid="classBView_1a7cf4e3ac5b0759b9c38d7b36517f2337" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetOrigin</name></member>
      <member refid="classBView_1a80ea4cb97d2e6e2c3088e610a9e157e6" prot="public" virt="virtual"><scope>BListView</scope><name>SetPenSize</name></member>
      <member refid="classBView_1a38d29ea581880c3978d7e50dcc851696" prot="public" virt="virtual"><scope>BListView</scope><name>SetResizingMode</name></member>
      <member refid="classBView_1a077136ea06f0a6b39aa0b8b24311cce8" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetScale</name></member>
      <member refid="classBListView_1a5a89c2ca0da9111bf1e701d30235d597" prot="public" virt="virtual"><scope>BListView</scope><name>SetSelectionMessage</name></member>
      <member refid="classBInvoker_1ac857ceb882d95a5826447dc12dd06c74" prot="public" virt="virtual"><scope>BListView</scope><name>SetTarget</name></member>
      <member refid="classBInvoker_1a17e8040bfd829b6b084c2f6234776e11" prot="public" virt="virtual"><scope>BListView</scope><name>SetTarget</name></member>
      <member refid="classBInvoker_1ab3c4f55b01f3775832871944b5c943de" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetTimeout</name></member>
      <member refid="classBView_1a75fb825a3ef69c1c6fbf3535ee2260ab" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetToolTip</name></member>
      <member refid="classBView_1aa377bad64048a2d3cd1c2b272ae3079b" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetToolTip</name></member>
      <member refid="classBView_1afbd9b8f35226ba89980c450f7626fc85" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetTransform</name></member>
      <member refid="classBView_1ac247ddc58f1cb719d60e354a77c51c1e" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetViewBitmap</name></member>
      <member refid="classBView_1a046a9c1656823db5401e530cf8121734" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetViewBitmap</name></member>
      <member refid="classBView_1ae8dde0e0330b394db016f3e609e7fb6a" prot="public" virt="virtual"><scope>BListView</scope><name>SetViewColor</name></member>
      <member refid="classBView_1a7dace2963c85b5ce55b7d8e96946625c" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetViewColor</name></member>
      <member refid="classBView_1a39b4878773b4436e3c76aee51c4fbc09" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetViewCursor</name></member>
      <member refid="classBView_1a576100502a8c6dfb46ff36b08cbe9405" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetViewOverlay</name></member>
      <member refid="classBView_1a9770c1bb97d7ffd797f7c40ca1339f98" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetViewOverlay</name></member>
      <member refid="classBView_1a34f020c4bb1008cef972cf1eec7dba0f" prot="public" virt="non-virtual"><scope>BListView</scope><name>SetViewUIColor</name></member>
      <member refid="classBView_1a06e0584057d6c7a7c7e048b6272b7016" prot="public" virt="virtual"><scope>BListView</scope><name>Show</name></member>
      <member refid="classBView_1a61d28f55d6fdc55b59c38c44b9788205" prot="public" virt="non-virtual"><scope>BListView</scope><name>ShowToolTip</name></member>
      <member refid="classBListView_1ade1ff7c4334923ca43c6e768399a99e8" prot="public" virt="non-virtual"><scope>BListView</scope><name>SortItems</name></member>
      <member refid="classBHandler_1af7d600e33a0586af7444d9abc8500504" prot="public" virt="non-virtual"><scope>BListView</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a20713ff6ee9df49a014f391374eaf689" prot="public" virt="non-virtual"><scope>BListView</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a58d7c8d30e47fbb7590f10dea1f21166" prot="public" virt="non-virtual"><scope>BListView</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a31927c51d89e0e3b3bf609a786ee6c3b" prot="public" virt="non-virtual"><scope>BListView</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a9d1f0d55b3dc7337058aba769b4e4f93" prot="public" virt="non-virtual"><scope>BListView</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1ad3544be491270f856a0af8d36ce02d78" prot="public" virt="non-virtual"><scope>BListView</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1a199c167e0dcee95aa65d09435804b3d9" prot="public" virt="non-virtual"><scope>BListView</scope><name>StopWatchingAll</name></member>
      <member refid="classBHandler_1a8b9a424ce63f5932666094b6eadf10cf" prot="public" virt="non-virtual"><scope>BListView</scope><name>StopWatchingAll</name></member>
      <member refid="classBView_1adef480de8a8bcd2fff3129660501616e" prot="public" virt="non-virtual"><scope>BListView</scope><name>StringWidth</name></member>
      <member refid="classBView_1aef3638cf597407e6a9f31bc75cd42097" prot="public" virt="non-virtual"><scope>BListView</scope><name>StringWidth</name></member>
      <member refid="classBView_1a57222cd40096dfe23e1df86a01277041" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokeArc</name></member>
      <member refid="classBView_1a9c958b9399925a8a0ea333afd337ebfd" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokeArc</name></member>
      <member refid="classBView_1a64ea2ad06018b0b3b156113d201c7ad7" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokeBezier</name></member>
      <member refid="classBView_1a042703445263f1d9a9213757fcf27414" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokeEllipse</name></member>
      <member refid="classBView_1ae7727ca808873634363e5306fdbcc09a" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokeEllipse</name></member>
      <member refid="classBView_1a909ee03901fac4ae5504f7faf5e41a7c" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokeLine</name></member>
      <member refid="classBView_1ab713fc42e330d0a091a9774edfb9626f" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokeLine</name></member>
      <member refid="classBView_1ae871d03592c1bba5d6be3d5d982ea747" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1a1638c58553467f3ebe5ee2b3683d4905" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1a1482fddababe3dd1377f86a038f7119b" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokePolygon</name></member>
      <member refid="classBView_1ad3893af66d3891855f9db7072bfb4de7" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokeRect</name></member>
      <member refid="classBView_1acf743b2ba22b82c8bc38eb514513df55" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokeRoundRect</name></member>
      <member refid="classBView_1a507e9b732e880ac8e6379e19e74d5757" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokeShape</name></member>
      <member refid="classBView_1a8221cce8942e590c2fea954f57933e78" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokeTriangle</name></member>
      <member refid="classBView_1ae59fc9e9cfaba5e2d6e79a90723a3330" prot="public" virt="non-virtual"><scope>BListView</scope><name>StrokeTriangle</name></member>
      <member refid="classBListView_1a5c7798d8a0846377de740ca7e53fd343" prot="public" virt="non-virtual"><scope>BListView</scope><name>SwapItems</name></member>
      <member refid="classBView_1a27e217abb3fefa45b6e4ceb7a54cb362" prot="public" virt="non-virtual"><scope>BListView</scope><name>Sync</name></member>
      <member refid="classBInvoker_1aba5a469f2e0c94c08553ebe59c238cc8" prot="public" virt="non-virtual"><scope>BListView</scope><name>Target</name></member>
      <member refid="classBListView_1a453b373c9bd616f11a1bb195fb05bfbb" prot="public" virt="virtual"><scope>BListView</scope><name>TargetedByScrollView</name></member>
      <member refid="classBInvoker_1af2632aee4882b11ed1bc34ce55ef4bbe" prot="public" virt="non-virtual"><scope>BListView</scope><name>Timeout</name></member>
      <member refid="classBView_1a127ceec2101b12c0fbe1e0e66a7b9dc1" prot="public" virt="non-virtual"><scope>BListView</scope><name>ToolTip</name></member>
      <member refid="classBView_1ab16cc72cf8ae3b40abcf1f714e7e9b74" prot="public" virt="non-virtual"><scope>BListView</scope><name>Transform</name></member>
      <member refid="classBView_1a98597d70ae48b2576683f25078135534" prot="public" virt="non-virtual"><scope>BListView</scope><name>TransformTo</name></member>
      <member refid="classBView_1a8ae6d4e1cdfeeee33b753d56bee6ae7f" prot="public" virt="non-virtual"><scope>BListView</scope><name>TranslateBy</name></member>
      <member refid="classBView_1ac2e293fbdd999e4857b44b6e4d4c3820" prot="public" virt="non-virtual"><scope>BListView</scope><name>TruncateString</name></member>
      <member refid="classBHandler_1ab131af7eb7aa2b9eea3a11ac1bfd4c03" prot="public" virt="non-virtual"><scope>BListView</scope><name>UnlockLooper</name></member>
      <member refid="classBView_1a8b2b1d9e08ce0c1763dd6a077ed02fdd" prot="public" virt="non-virtual"><scope>BListView</scope><name>ViewColor</name></member>
      <member refid="classBView_1aec6c89446eb4f5ded151adced9126df8" prot="public" virt="non-virtual"><scope>BListView</scope><name>ViewUIColor</name></member>
      <member refid="classBView_1a32733d357b76bc3504cae326d174f4a2" prot="public" virt="non-virtual"><scope>BListView</scope><name>Window</name></member>
      <member refid="classBListView_1a85153f43edc12ca463f981b92e187a11" prot="public" virt="virtual"><scope>BListView</scope><name>WindowActivated</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BListView</scope><name>~BArchivable</name></member>
      <member refid="classBHandler_1a928254034959d19ef588b7898a6f8194" prot="public" virt="virtual"><scope>BListView</scope><name>~BHandler</name></member>
      <member refid="classBInvoker_1a68714c3b78a2cf2931daf54f5dc94dca" prot="public" virt="virtual"><scope>BListView</scope><name>~BInvoker</name></member>
      <member refid="classBListView_1a09090d56eae5eee0aca5073e2894efcf" prot="public" virt="virtual"><scope>BListView</scope><name>~BListView</name></member>
      <member refid="classBView_1a7df0d7eaeb97a3c8a800f9e321f23f67" prot="public" virt="virtual"><scope>BListView</scope><name>~BView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
