<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__app" kind="group">
    <compoundname>app</compoundname>
    <title>Application Kit</title>
    <innerfile refid="Application_8h">Application.h</innerfile>
    <innerfile refid="Clipboard_8h">Clipboard.h</innerfile>
    <innerfile refid="Cursor_8h">Cursor.h</innerfile>
    <innerfile refid="Handler_8h">Handler.h</innerfile>
    <innerfile refid="Invoker_8h">Invoker.h</innerfile>
    <innerfile refid="Key_8h">Key.h</innerfile>
    <innerfile refid="KeyStore_8h">KeyStore.h</innerfile>
    <innerfile refid="Looper_8h">Looper.h</innerfile>
    <innerfile refid="Message_8h">Message.h</innerfile>
    <innerfile refid="MessageFilter_8h">MessageFilter.h</innerfile>
    <innerfile refid="MessageQueue_8h">MessageQueue.h</innerfile>
    <innerfile refid="MessageRunner_8h">MessageRunner.h</innerfile>
    <innerfile refid="Messenger_8h">Messenger.h</innerfile>
    <innerfile refid="Notification_8h">Notification.h</innerfile>
    <innerfile refid="PropertyInfo_8h">PropertyInfo.h</innerfile>
    <innerfile refid="Roster_8h">Roster.h</innerfile>
    <innerclass refid="structapp__info" prot="public">app_info</innerclass>
    <innerclass refid="classBApplication" prot="public">BApplication</innerclass>
    <innerclass refid="classBClipboard" prot="public">BClipboard</innerclass>
    <innerclass refid="classBCursor" prot="public">BCursor</innerclass>
    <innerclass refid="classBHandler" prot="public">BHandler</innerclass>
    <innerclass refid="classBInvoker" prot="public">BInvoker</innerclass>
    <innerclass refid="classBKey" prot="public">BKey</innerclass>
    <innerclass refid="classBKeyStore" prot="public">BKeyStore</innerclass>
    <innerclass refid="classBLooper" prot="public">BLooper</innerclass>
    <innerclass refid="classBMessage" prot="public">BMessage</innerclass>
    <innerclass refid="classBMessageFilter" prot="public">BMessageFilter</innerclass>
    <innerclass refid="classBMessageQueue" prot="public">BMessageQueue</innerclass>
    <innerclass refid="classBMessageRunner" prot="public">BMessageRunner</innerclass>
    <innerclass refid="classBMessenger" prot="public">BMessenger</innerclass>
    <innerclass refid="classBNotification" prot="public">BNotification</innerclass>
    <innerclass refid="classBPasswordKey" prot="public">BPasswordKey</innerclass>
    <innerclass refid="classBPropertyInfo" prot="public">BPropertyInfo</innerclass>
    <innerclass refid="classBRoster" prot="public">BRoster</innerclass>
    <innerclass refid="structproperty__info" prot="public">property_info</innerclass>
    <briefdescription>
<para>The Application Kit is the starting point for writing native Haiku GUI applications. </para>
    </briefdescription>
    <detaileddescription>
<para>The application kit is exactly what its name suggests <mdash/> it is the basis of Haiku applications. You should first read through this document and the references here before moving on to the other parts of the API.</para>
<para>The Application Kit classes can be divided into two groups: the messaging classes and the system interaction classes. The larger of the two groups is the messaging classes. Since the Haiku API relies on pervasive multithreading messaging is an essential topic for any application. Have a look at the <ref refid="app_messaging" kindref="compound">Introduction to Messaging </ref> for more information.</para>
<para>The following messaging classes which allow you to easily and securely communicate between threads.<itemizedlist>
<listitem><para><ref refid="classBHandler" kindref="compound">BHandler</ref></para>
</listitem><listitem><para><ref refid="classBInvoker" kindref="compound">BInvoker</ref></para>
</listitem><listitem><para><ref refid="classBLooper" kindref="compound">BLooper</ref></para>
</listitem><listitem><para><ref refid="classBMessage" kindref="compound">BMessage</ref></para>
</listitem><listitem><para><ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref></para>
</listitem><listitem><para><ref refid="classBMessageQueue" kindref="compound">BMessageQueue</ref></para>
</listitem><listitem><para><ref refid="classBMessageRunner" kindref="compound">BMessageRunner</ref></para>
</listitem><listitem><para><ref refid="classBMessenger" kindref="compound">BMessenger</ref></para>
</listitem></itemizedlist>
</para>
<para>The second group is the system interaction classes. These classes provide hooks for your application to interact with the rest of the system. The most important class in this group is <ref refid="classBApplication" kindref="compound">BApplication</ref>. Below is a list of all system interaction classes:<itemizedlist>
<listitem><para><ref refid="classBApplication" kindref="compound">BApplication</ref></para>
</listitem><listitem><para><ref refid="classBClipboard" kindref="compound">BClipboard</ref></para>
</listitem><listitem><para><ref refid="classBCursor" kindref="compound">BCursor</ref></para>
</listitem><listitem><para>BLaunchRoster</para>
</listitem><listitem><para><ref refid="classBNotification" kindref="compound">BNotification</ref></para>
</listitem><listitem><para><ref refid="classBPropertyInfo" kindref="compound">BPropertyInfo</ref></para>
</listitem><listitem><para><ref refid="classBRoster" kindref="compound">BRoster</ref></para>
</listitem></itemizedlist>
</para>
<para>A third special category is the <ref refid="app_keystore" kindref="compound">Password and Key storage API:</ref><itemizedlist>
<listitem><para><ref refid="classBKey" kindref="compound">BKey</ref></para>
</listitem><listitem><para><ref refid="classBKeyStore" kindref="compound">BKeyStore</ref> </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
