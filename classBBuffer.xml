<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBBuffer" kind="class" language="C++" prot="public">
    <compoundname>BBuffer</compoundname>
    <derivedcompoundref refid="classBSmallBuffer" prot="public" virt="non-virtual">BSmallBuffer</derivedcompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classBBuffer_1aaeaf4b971f7ea3a57566f0bd85ce4847" prot="public" static="no" strong="no">
        <type></type>
        <name>@55</name>
        <qualifiedname>BBuffer::@55</qualifiedname>
        <enumvalue id="classBBuffer_1aaeaf4b971f7ea3a57566f0bd85ce4847ab575e04c4aaaa0decbda1716a19a44fc" prot="public">
          <name>B_F1_BUFFER</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBBuffer_1aaeaf4b971f7ea3a57566f0bd85ce4847a2ff3a79a71fbc30ca3f8748fbf13a964" prot="public">
          <name>B_F2_BUFFER</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBBuffer_1aaeaf4b971f7ea3a57566f0bd85ce4847aac965f5ba71b7c398b5b2002b588d93c" prot="public">
          <name>B_SMALL_BUFFER</name>
          <initializer>= 0x80000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="36" column="1" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="36" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBBuffer_1a580a31795963af46a87223be2847ca84" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BBufferConsumer</definition>
        <argsstring></argsstring>
        <name>BBufferConsumer</name>
        <qualifiedname>BBuffer::BBufferConsumer</qualifiedname>
        <param>
          <type>BBufferConsumer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="64" column="14" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBBuffer_1ae1bacf01741e6ef5f04af5a30da49033" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BBufferGroup</definition>
        <argsstring></argsstring>
        <name>BBufferGroup</name>
        <qualifiedname>BBuffer::BBufferGroup</qualifiedname>
        <param>
          <type>BBufferGroup</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="65" column="14" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBBuffer_1afd38307715759cfa00d61f1892bf6a63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BBufferProducer</definition>
        <argsstring></argsstring>
        <name>BBufferProducer</name>
        <qualifiedname>BBuffer::BBufferProducer</qualifiedname>
        <param>
          <type>BBufferProducer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="63" column="14" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBBuffer_1af8c6566ee8c14daf127e4397bd8b5541" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BMediaRoster</definition>
        <argsstring></argsstring>
        <name>BMediaRoster</name>
        <qualifiedname>BBuffer::BMediaRoster</qualifiedname>
        <param>
          <type>BMediaRoster</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="62" column="14" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBBuffer_1a66ae4e28df87faa37896a597a41b0f54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BPrivate::BufferCache</definition>
        <argsstring></argsstring>
        <name>BPrivate::BufferCache</name>
        <qualifiedname>BBuffer::BufferCache</qualifiedname>
        <param>
          <type>BPrivate::BufferCache</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="60" column="14" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBBuffer_1a08e334806d650e5f5b5c72bcb0cd23c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BPrivate::SharedBufferList</definition>
        <argsstring></argsstring>
        <name>BPrivate::SharedBufferList</name>
        <qualifiedname>BBuffer::SharedBufferList</qualifiedname>
        <param>
          <type>BPrivate::SharedBufferList</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="61" column="14" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBBuffer_1a0cab053aa47b552b83d5b0338d4de5c8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BSmallBuffer</definition>
        <argsstring></argsstring>
        <name>BSmallBuffer</name>
        <qualifiedname>BBuffer::BSmallBuffer</qualifiedname>
        <param>
          <type>BSmallBuffer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="66" column="14" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBBuffer_1a9e4e8fd7e5a7d5bd7e35f164dc19968e" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BBuffer::_reserved[12]</definition>
        <argsstring>[12]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BBuffer::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="86" column="7" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBBuffer_1a8ad17234e97205f7e1ef75decb8b5964" prot="private" static="no" mutable="no">
        <type>area_id</type>
        <definition>area_id BBuffer::fArea</definition>
        <argsstring></argsstring>
        <name>fArea</name>
        <qualifiedname>BBuffer::fArea</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="80" column="8" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBBuffer_1a5f976011302afe8e2bb4845aca42e8c8" prot="private" static="no" mutable="no">
        <type>BPrivate::SharedBufferList *</type>
        <definition>BPrivate::SharedBufferList* BBuffer::fBufferList</definition>
        <argsstring></argsstring>
        <name>fBufferList</name>
        <qualifiedname>BBuffer::fBufferList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="79" column="28" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBBuffer_1a53ea914e9d09620ccb3d21a71b7eea4a" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* BBuffer::fData</definition>
        <argsstring></argsstring>
        <name>fData</name>
        <qualifiedname>BBuffer::fData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="81" column="5" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBBuffer_1a3b970f16bdd14aa4e6caf55809e037d8" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BBuffer::fFlags</definition>
        <argsstring></argsstring>
        <name>fFlags</name>
        <qualifiedname>BBuffer::fFlags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="84" column="6" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBBuffer_1a5f87b4e10931dc7e478ec59663acb6fe" prot="private" static="no" mutable="no">
        <type>media_header</type>
        <definition>media_header BBuffer::fMediaHeader</definition>
        <argsstring></argsstring>
        <name>fMediaHeader</name>
        <qualifiedname>BBuffer::fMediaHeader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="78" column="13" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBBuffer_1af4287703a6592aa8d1df6dab104d688b" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t BBuffer::fOffset</definition>
        <argsstring></argsstring>
        <name>fOffset</name>
        <qualifiedname>BBuffer::fOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="82" column="7" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBBuffer_1ab9075f74f216c0d2b456221dc9f73b4b" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t BBuffer::fSize</definition>
        <argsstring></argsstring>
        <name>fSize</name>
        <qualifiedname>BBuffer::fSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="83" column="7" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBBuffer_1acd2a32e5f8230de5b7c2ee7fedb8c593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>media_audio_header *</type>
        <definition>media_audio_header * BBuffer::AudioHeader</definition>
        <argsstring>()</argsstring>
        <name>AudioHeader</name>
        <qualifiedname>BBuffer::AudioHeader</qualifiedname>
        <briefdescription>
<para>Gets a pointer to the header of the audio buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the header of the audio buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="54" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1a0cba66df5a17f4621c32546e679980ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structbuffer__clone__info" kindref="compound">buffer_clone_info</ref></type>
        <definition>buffer_clone_info BBuffer::CloneInfo</definition>
        <argsstring>() const</argsstring>
        <name>CloneInfo</name>
        <qualifiedname>BBuffer::CloneInfo</qualifiedname>
        <briefdescription>
<para>Gets the <computeroutput><ref refid="structbuffer__clone__info" kindref="compound">buffer_clone_info</ref></computeroutput> struct that describes the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The a clone of the <computeroutput><ref refid="structbuffer__clone__info" kindref="compound">buffer_clone_info</ref></computeroutput> struct. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="49" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1a0f46ae6790a79ec6a20b8ef3934c14a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * BBuffer::Data</definition>
        <argsstring>()</argsstring>
        <name>Data</name>
        <qualifiedname>BBuffer::Data</qualifiedname>
        <briefdescription>
<para>Gets a pointer to the data of the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A void* pointer to the data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="42" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1a0431f6e78452ff5009d10cda57dd4f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BBuffer::Flags</definition>
        <argsstring>()</argsstring>
        <name>Flags</name>
        <qualifiedname>BBuffer::Flags</qualifiedname>
        <briefdescription>
<para>Gets the flags of the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The buffer flags. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="46" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1a27e31a7322ff1ccc65742952467bd317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>media_header *</type>
        <definition>media_header * BBuffer::Header</definition>
        <argsstring>()</argsstring>
        <name>Header</name>
        <qualifiedname>BBuffer::Header</qualifiedname>
        <briefdescription>
<para>Gets a pointer to the header of the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the header of the buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="53" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1aafc2c2aa5d008a06efbcfc33a3fe9c12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>media_buffer_id</type>
        <definition>media_buffer_id BBuffer::ID</definition>
        <argsstring>()</argsstring>
        <name>ID</name>
        <qualifiedname>BBuffer::ID</qualifiedname>
        <briefdescription>
<para>Gets the ID of the buffer according to the App Server. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The App Server&apos;s ID of the buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="51" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1ab314d47d4f39fcb8109f1823d72fadef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BBuffer::Recycle</definition>
        <argsstring>()</argsstring>
        <name>Recycle</name>
        <qualifiedname>BBuffer::Recycle</qualifiedname>
        <briefdescription>
<para>Recycles the buffer so that it can be reused. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="48" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1aea0ea88878c68f7e79cb262f72dcacc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BBuffer::SetSizeUsed</definition>
        <argsstring>(size_t used)</argsstring>
        <name>SetSizeUsed</name>
        <qualifiedname>BBuffer::SetSizeUsed</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>used</declname>
          <defname>size_used</defname>
        </param>
        <briefdescription>
<para>Sets the size of the buffer that is used in bytes. </para>
        </briefdescription>
        <detaileddescription>
<para>This method should be called after writing data to the buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="45" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1aad70a9423ff721c57cf4209e8b8a28cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t BBuffer::Size</definition>
        <argsstring>()</argsstring>
        <name>Size</name>
        <qualifiedname>BBuffer::Size</qualifiedname>
        <briefdescription>
<para>Gets the size of the buffer in bytes. </para>
        </briefdescription>
        <detaileddescription>
<para>Alias for <ref refid="classBBuffer_1a2559ff70225558ef1bc75d166e238e6d" kindref="member">SizeAvailable()</ref>.</para>
<para><simplesect kind="return"><para>The size of the buffer in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="57" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1a2559ff70225558ef1bc75d166e238e6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t BBuffer::SizeAvailable</definition>
        <argsstring>()</argsstring>
        <name>SizeAvailable</name>
        <qualifiedname>BBuffer::SizeAvailable</qualifiedname>
        <briefdescription>
<para>Gets the size of the buffer in bytes. Alias for <ref refid="classBBuffer_1aad70a9423ff721c57cf4209e8b8a28cd" kindref="member">Size()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The buffer size in bytes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="43" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1af284b6bf16f97588588d4c9e6b5beaff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t BBuffer::SizeUsed</definition>
        <argsstring>()</argsstring>
        <name>SizeUsed</name>
        <qualifiedname>BBuffer::SizeUsed</qualifiedname>
        <briefdescription>
<para>Gets the size of the portion of the buffer that is currently in use in bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The currently used portion of the buffer size in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="44" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1a409a98b5c569d14519cc6aea462214d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>media_type</type>
        <definition>media_type BBuffer::Type</definition>
        <argsstring>()</argsstring>
        <name>Type</name>
        <qualifiedname>BBuffer::Type</qualifiedname>
        <briefdescription>
<para>Gets the media type of the data in the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The media type of the data in the buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="52" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1a17ad998b75258cc7a8de859ad22a03ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>media_video_header *</type>
        <definition>media_video_header * BBuffer::VideoHeader</definition>
        <argsstring>()</argsstring>
        <name>VideoHeader</name>
        <qualifiedname>BBuffer::VideoHeader</qualifiedname>
        <briefdescription>
<para>Gets a pointer to a header of the video buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to a header of the video buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="55" column="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBBuffer_1a5d74daa91914f77edb6c97bf2a19472c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BBuffer::BBuffer</definition>
        <argsstring>()</argsstring>
        <name>BBuffer</name>
        <qualifiedname>BBuffer::BBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1a501ece25a3814e4507de4384422473a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BBuffer::BBuffer</definition>
        <argsstring>(const BBuffer &amp;other)</argsstring>
        <name>BBuffer</name>
        <qualifiedname>BBuffer::BBuffer</qualifiedname>
        <param>
          <type>const <ref refid="classBBuffer" kindref="compound">BBuffer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1a6c855b6b8513870eac2442df994d5a06" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>BBuffer::BBuffer</definition>
        <argsstring>(const buffer_clone_info &amp;info)</argsstring>
        <name>BBuffer</name>
        <qualifiedname>BBuffer::BBuffer</qualifiedname>
        <param>
          <type>const <ref refid="structbuffer__clone__info" kindref="compound">buffer_clone_info</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="68" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1a2bfc00e356e300dbe269d21e462d3f0f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BBuffer::~BBuffer</definition>
        <argsstring>()</argsstring>
        <name>~BBuffer</name>
        <qualifiedname>BBuffer::~BBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1a4ec1ed472d1c837f05b999e9f5fa4dd1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBBuffer" kindref="compound">BBuffer</ref> &amp;</type>
        <definition>BBuffer &amp; BBuffer::operator=</definition>
        <argsstring>(const BBuffer &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BBuffer::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBBuffer" kindref="compound">BBuffer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="73" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBBuffer_1a93edd870ba56a0de21c2143bf1f689ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BBuffer::SetHeader</definition>
        <argsstring>(const media_header *header)</argsstring>
        <name>SetHeader</name>
        <qualifiedname>BBuffer::SetHeader</qualifiedname>
        <param>
          <type>const media_header *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="76" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A reference to a chunk of memory useful for sharing media data between applications and nodes. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/media/Buffer.h" line="33" column="1" bodyfile="/boot/home/src/haiku/headers/os/media/Buffer.h" bodystart="33" bodyend="87"/>
    <listofallmembers>
      <member refid="classBBuffer_1a9e4e8fd7e5a7d5bd7e35f164dc19968e" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>_reserved</name></member>
      <member refid="classBBuffer_1acd2a32e5f8230de5b7c2ee7fedb8c593" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>AudioHeader</name></member>
      <member refid="classBBuffer_1aaeaf4b971f7ea3a57566f0bd85ce4847ab575e04c4aaaa0decbda1716a19a44fc" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>B_F1_BUFFER</name></member>
      <member refid="classBBuffer_1aaeaf4b971f7ea3a57566f0bd85ce4847a2ff3a79a71fbc30ca3f8748fbf13a964" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>B_F2_BUFFER</name></member>
      <member refid="classBBuffer_1aaeaf4b971f7ea3a57566f0bd85ce4847aac965f5ba71b7c398b5b2002b588d93c" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>B_SMALL_BUFFER</name></member>
      <member refid="classBBuffer_1a6c855b6b8513870eac2442df994d5a06" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>BBuffer</name></member>
      <member refid="classBBuffer_1a5d74daa91914f77edb6c97bf2a19472c" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>BBuffer</name></member>
      <member refid="classBBuffer_1a501ece25a3814e4507de4384422473a6" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>BBuffer</name></member>
      <member refid="classBBuffer_1a0cba66df5a17f4621c32546e679980ce" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>CloneInfo</name></member>
      <member refid="classBBuffer_1a0f46ae6790a79ec6a20b8ef3934c14a4" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>Data</name></member>
      <member refid="classBBuffer_1a8ad17234e97205f7e1ef75decb8b5964" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>fArea</name></member>
      <member refid="classBBuffer_1a5f976011302afe8e2bb4845aca42e8c8" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>fBufferList</name></member>
      <member refid="classBBuffer_1a53ea914e9d09620ccb3d21a71b7eea4a" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>fData</name></member>
      <member refid="classBBuffer_1a3b970f16bdd14aa4e6caf55809e037d8" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>fFlags</name></member>
      <member refid="classBBuffer_1a0431f6e78452ff5009d10cda57dd4f98" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>Flags</name></member>
      <member refid="classBBuffer_1a5f87b4e10931dc7e478ec59663acb6fe" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>fMediaHeader</name></member>
      <member refid="classBBuffer_1af4287703a6592aa8d1df6dab104d688b" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>fOffset</name></member>
      <member refid="classBBuffer_1ab9075f74f216c0d2b456221dc9f73b4b" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>fSize</name></member>
      <member refid="classBBuffer_1a27e31a7322ff1ccc65742952467bd317" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>Header</name></member>
      <member refid="classBBuffer_1aafc2c2aa5d008a06efbcfc33a3fe9c12" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>ID</name></member>
      <member refid="classBBuffer_1a4ec1ed472d1c837f05b999e9f5fa4dd1" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>operator=</name></member>
      <member refid="classBBuffer_1ab314d47d4f39fcb8109f1823d72fadef" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>Recycle</name></member>
      <member refid="classBBuffer_1a93edd870ba56a0de21c2143bf1f689ab" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>SetHeader</name></member>
      <member refid="classBBuffer_1aea0ea88878c68f7e79cb262f72dcacc4" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>SetSizeUsed</name></member>
      <member refid="classBBuffer_1aad70a9423ff721c57cf4209e8b8a28cd" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>Size</name></member>
      <member refid="classBBuffer_1a2559ff70225558ef1bc75d166e238e6d" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>SizeAvailable</name></member>
      <member refid="classBBuffer_1af284b6bf16f97588588d4c9e6b5beaff" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>SizeUsed</name></member>
      <member refid="classBBuffer_1a409a98b5c569d14519cc6aea462214d0" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>Type</name></member>
      <member refid="classBBuffer_1a17ad998b75258cc7a8de859ad22a03ce" prot="public" virt="non-virtual"><scope>BBuffer</scope><name>VideoHeader</name></member>
      <member refid="classBBuffer_1a2bfc00e356e300dbe269d21e462d3f0f" prot="private" virt="non-virtual"><scope>BBuffer</scope><name>~BBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
