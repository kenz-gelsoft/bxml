<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="ByteOrder_8h" kind="file" language="C++">
    <compoundname>ByteOrder.h</compoundname>
    <includes local="no">BeBuild.h</includes>
    <includes local="no">endian.h</includes>
    <includes refid="SupportDefs_8h" local="no">SupportDefs.h</includes>
    <includes refid="TypeConstants_8h" local="no">TypeConstants.h</includes>
    <includedby refid="BitmapStream_8h" local="no">BitmapStream.h</includedby>
    <includedby refid="MediaDefs_8h" local="no">MediaDefs.h</includedby>
    <includedby refid="Messenger_8h" local="no">Messenger.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>ByteOrder.h</label>
        <link refid="ByteOrder_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SupportDefs.h</label>
        <link refid="SupportDefs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>TypeConstants.h</label>
        <link refid="TypeConstants_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>BeBuild.h</label>
      </node>
      <node id="3">
        <label>endian.h</label>
      </node>
      <node id="5">
        <label>inttypes.h</label>
      </node>
      <node id="6">
        <label>sys/types.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>Application.h</label>
        <link refid="Application_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Clipboard.h</label>
        <link refid="Clipboard_8h"/>
      </node>
      <node id="10">
        <label>Invoker.h</label>
        <link refid="Invoker_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>MessageRunner.h</label>
        <link refid="MessageRunner_8h"/>
      </node>
      <node id="3">
        <label>Messenger.h</label>
        <link refid="Messenger_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>Roster.h</label>
        <link refid="Roster_8h"/>
      </node>
      <node id="12">
        <label>Button.h</label>
        <link refid="Button_8h"/>
      </node>
      <node id="13">
        <label>ChannelControl.h</label>
        <link refid="ChannelControl_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ChannelSlider.h</label>
        <link refid="ChannelSlider_8h"/>
      </node>
      <node id="15">
        <label>CheckBox.h</label>
        <link refid="CheckBox_8h"/>
      </node>
      <node id="16">
        <label>ColorControl.h</label>
        <link refid="ColorControl_8h"/>
      </node>
      <node id="11">
        <label>Control.h</label>
        <link refid="Control_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>IconUtils.h</label>
        <link refid="IconUtils_8h"/>
      </node>
      <node id="9">
        <label>Input.h</label>
        <link refid="Input_8h"/>
      </node>
      <node id="22">
        <label>LayoutBuilder.h</label>
        <link refid="LayoutBuilder_8h"/>
      </node>
      <node id="23">
        <label>ListView.h</label>
        <link refid="ListView_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>MenuItem.h</label>
        <link refid="MenuItem_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>OptionControl.h</label>
        <link refid="OptionControl_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>OptionPopUp.h</label>
        <link refid="OptionPopUp_8h"/>
      </node>
      <node id="24">
        <label>OutlineListView.h</label>
        <link refid="OutlineListView_8h"/>
      </node>
      <node id="19">
        <label>PictureButton.h</label>
        <link refid="PictureButton_8h"/>
      </node>
      <node id="20">
        <label>RadioButton.h</label>
        <link refid="RadioButton_8h"/>
      </node>
      <node id="26">
        <label>SeparatorItem.h</label>
        <link refid="SeparatorItem_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>TextControl.h</label>
        <link refid="TextControl_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>MidiRoster.h</label>
        <link refid="MidiRoster_8h"/>
      </node>
      <node id="32">
        <label>AppFileInfo.h</label>
        <link refid="AppFileInfo_8h"/>
      </node>
      <node id="29">
        <label>Mime.h</label>
        <link refid="Mime_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>MimeType.h</label>
        <link refid="MimeType_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>NodeInfo.h</label>
        <link refid="NodeInfo_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>NodeMonitor.h</label>
        <link refid="NodeMonitor_8h"/>
      </node>
      <node id="35">
        <label>Query.h</label>
        <link refid="Query_8h"/>
      </node>
      <node id="33">
        <label>Volume.h</label>
        <link refid="Volume_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>VolumeRoster.h</label>
        <link refid="VolumeRoster_8h"/>
      </node>
      <node id="1">
        <label>ByteOrder.h</label>
        <link refid="ByteOrder_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>BitmapStream.h</label>
        <link refid="BitmapStream_8h"/>
      </node>
      <node id="8">
        <label>HttpSession.h</label>
        <link refid="HttpSession_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ByteOrder_8h_1a51d3c9659cdac33fa8c01202dafa32ba" prot="public" static="no">
        <name>B_BENDIAN_TO_HOST_DOUBLE</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_double(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="61" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a01ef05a86f85d2ce484808344d6d6afd" prot="public" static="no">
        <name>B_BENDIAN_TO_HOST_FLOAT</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_float(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="62" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1afeaf4215c5e82263aa1d14cf2a7986e3" prot="public" static="no">
        <name>B_BENDIAN_TO_HOST_INT16</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_int16(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="65" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1ac2ea278e202ed1c795d11a8a43cb7d0e" prot="public" static="no">
        <name>B_BENDIAN_TO_HOST_INT32</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_int32(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="64" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a8ff0783066305201b371fb9e153411dd" prot="public" static="no">
        <name>B_BENDIAN_TO_HOST_INT64</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_int64(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="63" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a18f8c7a413dda203df116e8d326c19ec" prot="public" static="no">
        <name>B_HOST_IS_BENDIAN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="37" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a0879562d0a939398ef6a6388c033a9b0" prot="public" static="no">
        <name>B_HOST_IS_LENDIAN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="36" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a79c74b44688dec8b54ddaecc0f3f4316" prot="public" static="no">
        <name>B_HOST_TO_BENDIAN_DOUBLE</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_double(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="54" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a2a9620865c5dd18f8109310162a23474" prot="public" static="no">
        <name>B_HOST_TO_BENDIAN_FLOAT</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_float(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="55" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a0b22dcd88ce9e2380526580b637604a8" prot="public" static="no">
        <name>B_HOST_TO_BENDIAN_INT16</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_int16(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="58" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a6cb93a6775e98ef017e717f205daf26b" prot="public" static="no">
        <name>B_HOST_TO_BENDIAN_INT32</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_int32(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="57" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a55c4c6ae3b3edbf9d19fa33af9c7a3b6" prot="public" static="no">
        <name>B_HOST_TO_BENDIAN_INT64</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_int64(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="56" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1ae834fe79c2754e1976b129bd36c57c7c" prot="public" static="no">
        <name>B_HOST_TO_LENDIAN_DOUBLE</name>
        <param><defname>arg</defname></param>
        <initializer>(double)(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="40" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1aa44fe096e4eb797cc24876cb944dc840" prot="public" static="no">
        <name>B_HOST_TO_LENDIAN_FLOAT</name>
        <param><defname>arg</defname></param>
        <initializer>(float)(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="41" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a80a47a3910b6f191ff5caa8fed1d4072" prot="public" static="no">
        <name>B_HOST_TO_LENDIAN_INT16</name>
        <param><defname>arg</defname></param>
        <initializer>(<ref refid="SupportDefs_8h_1ac267cdaa9a4909f02aa2fc83cc7da477" kindref="member">uint16</ref>)(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="44" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a7afaa0193a1d247f4a0dcc852b8046e5" prot="public" static="no">
        <name>B_HOST_TO_LENDIAN_INT32</name>
        <param><defname>arg</defname></param>
        <initializer>(<ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref>)(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="43" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a8145deb9adc5a278ede30d5751cef913" prot="public" static="no">
        <name>B_HOST_TO_LENDIAN_INT64</name>
        <param><defname>arg</defname></param>
        <initializer>(<ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref>)(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="42" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a86b10f054495195e1457a7191a6208b4" prot="public" static="no">
        <name>B_LENDIAN_TO_HOST_DOUBLE</name>
        <param><defname>arg</defname></param>
        <initializer>(double)(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="47" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a99e0cfcc17cf71686bde6bc79874a5b0" prot="public" static="no">
        <name>B_LENDIAN_TO_HOST_FLOAT</name>
        <param><defname>arg</defname></param>
        <initializer>(float)(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="48" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1ae7541003059a946e37cbf90a63113ba5" prot="public" static="no">
        <name>B_LENDIAN_TO_HOST_INT16</name>
        <param><defname>arg</defname></param>
        <initializer>(<ref refid="SupportDefs_8h_1ac267cdaa9a4909f02aa2fc83cc7da477" kindref="member">uint16</ref>)(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="51" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a034bcaf90b80f3009563f49d83e103d0" prot="public" static="no">
        <name>B_LENDIAN_TO_HOST_INT32</name>
        <param><defname>arg</defname></param>
        <initializer>(<ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref>)(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="50" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1abd27705dc3c714dbd8925f4e593522d2" prot="public" static="no">
        <name>B_LENDIAN_TO_HOST_INT64</name>
        <param><defname>arg</defname></param>
        <initializer>(<ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref>)(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="49" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a97a677668e251ec0b5657ddeffba7a2d" prot="public" static="no">
        <name>B_SWAP_DOUBLE</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_double(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="27" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a639df76431cd689d7ac620fe322434f9" prot="public" static="no">
        <name>B_SWAP_FLOAT</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_float(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="28" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1ad665a3f84df585b9b12d5cac0e5a558c" prot="public" static="no">
        <name>B_SWAP_INT16</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_int16(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="31" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1ac244510c76ae2d5d1bce6bd76481323b" prot="public" static="no">
        <name>B_SWAP_INT32</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_int32(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="30" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ByteOrder_8h_1a56878b2cbc0ee0843c9ba65faee16f74" prot="public" static="no">
        <name>B_SWAP_INT64</name>
        <param><defname>arg</defname></param>
        <initializer>__swap_int64(arg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="29" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ByteOrder_8h_1a82b0d33e9b14e04812cac93419f169d8" prot="public" static="no" strong="no">
        <type></type>
        <name>swap_action</name>
        <enumvalue id="ByteOrder_8h_1a82b0d33e9b14e04812cac93419f169d8a0091113608d5b6f5fb45a3399031373c" prot="public">
          <name>B_SWAP_HOST_TO_LENDIAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ByteOrder_8h_1a82b0d33e9b14e04812cac93419f169d8a18cecf8aff1418ffcbe96fd17ca0e024" prot="public">
          <name>B_SWAP_HOST_TO_BENDIAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ByteOrder_8h_1a82b0d33e9b14e04812cac93419f169d8a7a44c5da9e02f106cf6e45fa7ad34670" prot="public">
          <name>B_SWAP_LENDIAN_TO_HOST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ByteOrder_8h_1a82b0d33e9b14e04812cac93419f169d8a1c61ec7938797793e778979ab3c26d18" prot="public">
          <name>B_SWAP_BENDIAN_TO_HOST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ByteOrder_8h_1a82b0d33e9b14e04812cac93419f169d8a49bea9be846b3a801f7f2602ef6a4006" prot="public">
          <name>B_SWAP_ALWAYS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="17" column="1" bodyfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" bodystart="17" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ByteOrder_8h_1a7f932cd08b3f69ac9c7ddb4caa941fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double __swap_double</definition>
        <argsstring>(double arg)</argsstring>
        <name>__swap_double</name>
        <param>
          <type>double</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="113" column="15" declfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" declline="113" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="ByteOrder_8h_1a224ea9414abef302f977ca505fa0a49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float __swap_float</definition>
        <argsstring>(float arg)</argsstring>
        <name>__swap_float</name>
        <param>
          <type>float</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="114" column="15" declfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" declline="114" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="ByteOrder_8h_1a293d4ce5f274fc32b1c928c671fec61f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ac267cdaa9a4909f02aa2fc83cc7da477" kindref="member">uint16</ref></type>
        <definition>uint16 __swap_int16</definition>
        <argsstring>(uint16 arg)</argsstring>
        <name>__swap_int16</name>
        <param>
          <type><ref refid="SupportDefs_8h_1ac267cdaa9a4909f02aa2fc83cc7da477" kindref="member">uint16</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="122" column="15" declfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" declline="122" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="ByteOrder_8h_1a13c4d9bd950a8a91a76d58f05ff390ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 __swap_int32</definition>
        <argsstring>(uint32 arg)</argsstring>
        <name>__swap_int32</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="121" column="15" declfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" declline="121" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="ByteOrder_8h_1a3c3936877363ccf65db97faccb044f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref></type>
        <definition>uint64 __swap_int64</definition>
        <argsstring>(uint64 arg)</argsstring>
        <name>__swap_int64</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="120" column="15" declfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" declline="120" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="ByteOrder_8h_1a6a89b34a7a755febf47610dd035c5a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_type_swapped</definition>
        <argsstring>(type_code type)</argsstring>
        <name>is_type_swapped</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a3b69a2260ff2e376327f0f05542b9536" kindref="member">type_code</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="110" column="13" declfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" declline="110" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ByteOrder_8h_1a985590351b1a55f516468587cf3d59c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t swap_data</definition>
        <argsstring>(type_code type, void *data, size_t length, swap_action action)</argsstring>
        <name>swap_data</name>
        <param>
          <type><ref refid="SupportDefs_8h_1a3b69a2260ff2e376327f0f05542b9536" kindref="member">type_code</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>swap_action</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h" line="108" column="17" declfile="/boot/home/src/haiku/headers/os/support/ByteOrder.h" declline="108" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2007,<sp/>Haiku,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>MIT<sp/>License.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_BYTE_ORDER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_BYTE_ORDER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;BeBuild.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;endian.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="SupportDefs_8h" kindref="compound">SupportDefs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="TypeConstants_8h" kindref="compound">TypeConstants.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>convenience<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>swap<sp/>directions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>B_SWAP_HOST_TO_LENDIAN,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>B_SWAP_HOST_TO_BENDIAN,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>B_SWAP_LENDIAN_TO_HOST,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>B_SWAP_BENDIAN_TO_HOST,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>B_SWAP_ALWAYS</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<sp/>swap_action;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>always<sp/>swap<sp/>macros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SWAP_DOUBLE(arg)<sp/><sp/><sp/>__swap_double(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SWAP_FLOAT(arg)<sp/><sp/><sp/><sp/>__swap_float(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SWAP_INT64(arg)<sp/><sp/><sp/><sp/>__swap_int64(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SWAP_INT32(arg)<sp/><sp/><sp/><sp/>__swap_int32(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_SWAP_INT16(arg)<sp/><sp/><sp/><sp/>__swap_int16(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BYTE_ORDER<sp/>==<sp/>__LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Host<sp/>is<sp/>little<sp/>endian<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_IS_LENDIAN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_IS_BENDIAN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Host<sp/>native<sp/>to<sp/>little<sp/>endian<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_LENDIAN_DOUBLE(arg)<sp/><sp/><sp/>(double)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_LENDIAN_FLOAT(arg)<sp/><sp/><sp/><sp/>(float)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_LENDIAN_INT64(arg)<sp/><sp/><sp/><sp/>(uint64)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_LENDIAN_INT32(arg)<sp/><sp/><sp/><sp/>(uint32)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_LENDIAN_INT16(arg)<sp/><sp/><sp/><sp/>(uint16)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Little<sp/>endian<sp/>to<sp/>host<sp/>native<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_LENDIAN_TO_HOST_DOUBLE(arg)<sp/><sp/><sp/>(double)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_LENDIAN_TO_HOST_FLOAT(arg)<sp/><sp/><sp/><sp/>(float)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_LENDIAN_TO_HOST_INT64(arg)<sp/><sp/><sp/><sp/>(uint64)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_LENDIAN_TO_HOST_INT32(arg)<sp/><sp/><sp/><sp/>(uint32)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_LENDIAN_TO_HOST_INT16(arg)<sp/><sp/><sp/><sp/>(uint16)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Host<sp/>native<sp/>to<sp/>big<sp/>endian<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_BENDIAN_DOUBLE(arg)<sp/><sp/><sp/>__swap_double(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_BENDIAN_FLOAT(arg)<sp/><sp/><sp/><sp/>__swap_float(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_BENDIAN_INT64(arg)<sp/><sp/><sp/><sp/>__swap_int64(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_BENDIAN_INT32(arg)<sp/><sp/><sp/><sp/>__swap_int32(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_BENDIAN_INT16(arg)<sp/><sp/><sp/><sp/>__swap_int16(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Big<sp/>endian<sp/>to<sp/>host<sp/>native<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_BENDIAN_TO_HOST_DOUBLE(arg)<sp/><sp/><sp/>__swap_double(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_BENDIAN_TO_HOST_FLOAT(arg)<sp/><sp/><sp/><sp/>__swap_float(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_BENDIAN_TO_HOST_INT64(arg)<sp/><sp/><sp/><sp/>__swap_int64(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_BENDIAN_TO_HOST_INT32(arg)<sp/><sp/><sp/><sp/>__swap_int32(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_BENDIAN_TO_HOST_INT16(arg)<sp/><sp/><sp/><sp/>__swap_int16(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>BYTE_ORDER<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Host<sp/>is<sp/>big<sp/>endian<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_IS_LENDIAN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_IS_BENDIAN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Host<sp/>native<sp/>to<sp/>little<sp/>endian<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_LENDIAN_DOUBLE(arg)<sp/><sp/><sp/>__swap_double(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_LENDIAN_FLOAT(arg)<sp/><sp/><sp/><sp/>__swap_float(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_LENDIAN_INT64(arg)<sp/><sp/><sp/><sp/>__swap_int64(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_LENDIAN_INT32(arg)<sp/><sp/><sp/><sp/>__swap_int32(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_LENDIAN_INT16(arg)<sp/><sp/><sp/><sp/>__swap_int16(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Little<sp/>endian<sp/>to<sp/>host<sp/>native<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_LENDIAN_TO_HOST_DOUBLE(arg)<sp/><sp/><sp/>__swap_double(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_LENDIAN_TO_HOST_FLOAT(arg)<sp/><sp/><sp/><sp/>__swap_float(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_LENDIAN_TO_HOST_INT64(arg)<sp/><sp/><sp/><sp/>__swap_int64(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_LENDIAN_TO_HOST_INT32(arg)<sp/><sp/><sp/><sp/>__swap_int32(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_LENDIAN_TO_HOST_INT16(arg)<sp/><sp/><sp/><sp/>__swap_int16(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Host<sp/>native<sp/>to<sp/>big<sp/>endian<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_BENDIAN_DOUBLE(arg)<sp/><sp/><sp/>(double)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_BENDIAN_FLOAT(arg)<sp/><sp/><sp/><sp/>(float)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_BENDIAN_INT64(arg)<sp/><sp/><sp/><sp/>(uint64)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_BENDIAN_INT32(arg)<sp/><sp/><sp/><sp/>(uint32)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_HOST_TO_BENDIAN_INT16(arg)<sp/><sp/><sp/><sp/>(uint16)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Big<sp/>endian<sp/>to<sp/>host<sp/>native<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_BENDIAN_TO_HOST_DOUBLE(arg)<sp/><sp/><sp/>(double)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_BENDIAN_TO_HOST_FLOAT(arg)<sp/><sp/><sp/><sp/>(float)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_BENDIAN_TO_HOST_INT64(arg)<sp/><sp/><sp/><sp/>(uint64)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_BENDIAN_TO_HOST_INT32(arg)<sp/><sp/><sp/><sp/>(uint32)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B_BENDIAN_TO_HOST_INT16(arg)<sp/><sp/><sp/><sp/>(uint16)(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>BYTE_ORDER<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref><sp/>swap_data(<ref refid="SupportDefs_8h_1a3b69a2260ff2e376327f0f05542b9536" kindref="member">type_code</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>swap_action<sp/>action);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_type_swapped(<ref refid="SupportDefs_8h_1a3b69a2260ff2e376327f0f05542b9536" kindref="member">type_code</ref><sp/>type);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>implementations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>__swap_double(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arg);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>__swap_float(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;=<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__swap_int64(arg)<sp/><sp/><sp/>(uint64)__builtin_bswap64(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__swap_int32(arg)<sp/><sp/><sp/>(uint32)__builtin_bswap32(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__swap_int16(arg)<sp/><sp/><sp/>(uint16)__builtin_bswap16(arg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref><sp/>__swap_int64(<ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref><sp/>arg);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>__swap_int32(<ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref><sp/>arg);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="SupportDefs_8h_1ac267cdaa9a4909f02aa2fc83cc7da477" kindref="member">uint16</ref><sp/>__swap_int16(<ref refid="SupportDefs_8h_1ac267cdaa9a4909f02aa2fc83cc7da477" kindref="member">uint16</ref><sp/>arg);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>_BYTE_ORDER_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/boot/home/src/haiku/headers/os/support/ByteOrder.h"/>
  </compounddef>
</doxygen>
