<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBSpaceLayoutItem" kind="class" language="C++" prot="public">
    <compoundname>BSpaceLayoutItem</compoundname>
    <basecompoundref refid="classBLayoutItem" prot="public" virt="non-virtual">BLayoutItem</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBSpaceLayoutItem_1a4b23ffd842f313ef6d26e3997a7c44a1" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BSpaceLayoutItem::_reserved[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BSpaceLayoutItem::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="65" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBSpaceLayoutItem_1a1fd494390a385b5a87d474878be44d45" prot="private" static="no" mutable="no">
        <type><ref refid="classBAlignment" kindref="compound">BAlignment</ref></type>
        <definition>BAlignment BSpaceLayoutItem::fAlignment</definition>
        <argsstring></argsstring>
        <name>fAlignment</name>
        <qualifiedname>BSpaceLayoutItem::fAlignment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="62" column="11" bodyfile="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBSpaceLayoutItem_1a4a7379c832b2003d9abae8615e7fd53f" prot="private" static="no" mutable="no">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BSpaceLayoutItem::fFrame</definition>
        <argsstring></argsstring>
        <name>fFrame</name>
        <qualifiedname>BSpaceLayoutItem::fFrame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="58" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBSpaceLayoutItem_1addb3da365581595c51f5320ec8d3ea91" prot="private" static="no" mutable="no">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>BSize BSpaceLayoutItem::fMaxSize</definition>
        <argsstring></argsstring>
        <name>fMaxSize</name>
        <qualifiedname>BSpaceLayoutItem::fMaxSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="60" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBSpaceLayoutItem_1ad111fa00fc529a319e32ac75c5dd52c6" prot="private" static="no" mutable="no">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>BSize BSpaceLayoutItem::fMinSize</definition>
        <argsstring></argsstring>
        <name>fMinSize</name>
        <qualifiedname>BSpaceLayoutItem::fMinSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="59" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBSpaceLayoutItem_1ac4e120bce1009d23a7ec77dcc00d00be" prot="private" static="no" mutable="no">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>BSize BSpaceLayoutItem::fPreferredSize</definition>
        <argsstring></argsstring>
        <name>fPreferredSize</name>
        <qualifiedname>BSpaceLayoutItem::fPreferredSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="61" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBSpaceLayoutItem_1ac6af1482647adfb363f09c0e9322bdc2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BSpaceLayoutItem::fVisible</definition>
        <argsstring></argsstring>
        <name>fVisible</name>
        <qualifiedname>BSpaceLayoutItem::fVisible</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="63" column="5" bodyfile="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBSpaceLayoutItem_1a58c0d79a3d3b42b235707923adb25ad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSpaceLayoutItem::BSpaceLayoutItem</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>BSpaceLayoutItem</name>
        <qualifiedname>BSpaceLayoutItem::BSpaceLayoutItem</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classBSpaceLayoutItem" kindref="compound">BSpaceLayoutItem</ref> from an <emphasis>archive</emphasis> message. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is usually not called directly, if you want to build a space layout item from an archived message you should call <ref refid="classBSpaceLayoutItem_1a360b9ece6fcc1a572b7711a84f4aa6ea" kindref="member">Instantiate()</ref> instead because it can handle errors properly.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>archive</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBMessage" kindref="compound">BMessage</ref> that contains the space layout item.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a99cce7918c8cb75ecde2a367f2be9cbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSpaceLayoutItem::BSpaceLayoutItem</definition>
        <argsstring>(BSize minSize, BSize maxSize, BSize preferredSize, BAlignment alignment)</argsstring>
        <name>BSpaceLayoutItem</name>
        <qualifiedname>BSpaceLayoutItem::BSpaceLayoutItem</qualifiedname>
        <param>
          <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
          <declname>minSize</declname>
        </param>
        <param>
          <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
          <declname>maxSize</declname>
        </param>
        <param>
          <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
          <declname>preferredSize</declname>
        </param>
        <param>
          <type><ref refid="classBAlignment" kindref="compound">BAlignment</ref></type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
<para>Create a space layout item with specific properties. </para>
        </briefdescription>
        <detaileddescription>
<para>See the <ref refid="classBSpaceLayoutItem_1a5cd67102ea4b31b1ed4e933ce27e7478" kindref="member">CreateGlue()</ref>, <ref refid="classBSpaceLayoutItem_1aab0e2d1a0e2554ee830b6bc038993b79" kindref="member">CreateVerticalStrut()</ref> and CreateHorizontalStruct static methods to create common space items.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum size for this item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum size for this item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>preferredSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The preferred size for this item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alignment</parametername>
</parameternamelist>
<parameterdescription>
<para>The alignment of this item.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a21beb034797958deb903707f3a5a9076" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BSpaceLayoutItem::~BSpaceLayoutItem</definition>
        <argsstring>()</argsstring>
        <name>~BSpaceLayoutItem</name>
        <qualifiedname>BSpaceLayoutItem::~BSpaceLayoutItem</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="16" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1ad97ec22e92e72a0b37a197d1a6f762b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBAlignment" kindref="compound">BAlignment</ref></type>
        <definition>BAlignment BSpaceLayoutItem::Alignment</definition>
        <argsstring>()</argsstring>
        <name>Alignment</name>
        <qualifiedname>BSpaceLayoutItem::Alignment</qualifiedname>
        <reimplements refid="classBLayoutItem_1a3f34ad935970e7d941dafe7ca5290d26">Alignment</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the requested alignment for this item.  </para>
<para>The value returned from this method is used in <ref refid="classBLayoutItem_1a3b5b23daa375b3333fc58c9c22ce62fa" kindref="member">BLayoutItem::AlignInFrame()</ref>, which BLayouts use to position and resize items. In a vertical <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>, for example, although each item recieves the same horizontal area, each item can use that area differently, aligning to the left, right or center for example.</para>
<para><simplesect kind="since"><para>Haiku R1   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="25" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a27a757bd5903c14dce5a54af00177d4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BSpaceLayoutItem::Archive</definition>
        <argsstring>(BMessage *into, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BSpaceLayoutItem::Archive</qualifiedname>
        <reimplements refid="classBLayoutItem_1af2c2593e6179ee367ef26eff7ab7409f">Archive</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>into</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Archive the object into a <ref refid="classBMessage" kindref="compound">BMessage</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>You should call this method from your derived implementation as it adds the data needed to instantiate your object to the message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>into</parametername>
</parameternamelist>
<parameterdescription>
<para>The message you store your object in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deep</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>true</computeroutput>, all children of this object should be archived as well.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The archive operation was successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>NULL</computeroutput> <emphasis>archive</emphasis> message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>The archive operation failed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="38" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a019b39fdc8e3d14056a74a46333f57d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BSpaceLayoutItem::Frame</definition>
        <argsstring>()</argsstring>
        <name>Frame</name>
        <qualifiedname>BSpaceLayoutItem::Frame</qualifiedname>
        <reimplements refid="classBLayoutItem_1a6bc751e914fc3b31dfaa072674972124">Frame</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the bounding frame of this item.  </para>
<para>The returned <ref refid="classBRect" kindref="compound">BRect</ref> is in the coordinate system of the target view of the <ref refid="classBLayout" kindref="compound">BLayout</ref> this item belongs to.</para>
<para><simplesect kind="since"><para>Haiku R1   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="35" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a4a260f90fe800e6feb36e5ec4bfa83ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BSpaceLayoutItem::IsVisible</definition>
        <argsstring>()</argsstring>
        <name>IsVisible</name>
        <qualifiedname>BSpaceLayoutItem::IsVisible</qualifiedname>
        <reimplements refid="classBLayoutItem_1ad83886b5bef773a870e6668dd008a88a">IsVisible</reimplements>
        <briefdescription>
<para>Return the current local visibility of this item. </para>
        </briefdescription>
        <detaileddescription>
<para>The visibility is set explicitly through <ref refid="classBSpaceLayoutItem_1a31bfa01d4b25c761ee565436c5d29a9a" kindref="member">SetVisible()</ref>. By default, the layout item is visible.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="32" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1ab6bd78081d23d6b3d0f7c337fd0a2930" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>BSize BSpaceLayoutItem::MaxSize</definition>
        <argsstring>()</argsstring>
        <name>MaxSize</name>
        <qualifiedname>BSpaceLayoutItem::MaxSize</qualifiedname>
        <reimplements refid="classBLayoutItem_1ac8279364e37b84f2b152fd052200f158">MaxSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the maximum desirable size for this item.  </para>
<para><simplesect kind="since"><para>Haiku R1   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="23" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a999c87d6aeea8d8cf17787bcd71d4c3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>BSize BSpaceLayoutItem::MinSize</definition>
        <argsstring>()</argsstring>
        <name>MinSize</name>
        <qualifiedname>BSpaceLayoutItem::MinSize</qualifiedname>
        <reimplements refid="classBLayoutItem_1aa6b24064b472cf72f98dbfd11198f067">MinSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the minimum desirable size for this item.  </para>
<para><simplesect kind="since"><para>Haiku R1   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="22" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a03fdd0cc28dd13c93cd20e85f93b2945" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
        <definition>BSize BSpaceLayoutItem::PreferredSize</definition>
        <argsstring>()</argsstring>
        <name>PreferredSize</name>
        <qualifiedname>BSpaceLayoutItem::PreferredSize</qualifiedname>
        <reimplements refid="classBLayoutItem_1a7311fd45380396ae3840179f9b63fae3">PreferredSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the preferred size for this item.  </para>
<para><simplesect kind="since"><para>Haiku R1   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="24" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1adfe30d9d69c35f667e7c9caae9956e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSpaceLayoutItem::SetExplicitAlignment</definition>
        <argsstring>(BAlignment alignment)</argsstring>
        <name>SetExplicitAlignment</name>
        <qualifiedname>BSpaceLayoutItem::SetExplicitAlignment</qualifiedname>
        <reimplements refid="classBLayoutItem_1a78604c5055ac0aca561f196d879d762d">SetExplicitAlignment</reimplements>
        <param>
          <type><ref refid="classBAlignment" kindref="compound">BAlignment</ref></type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set this item&apos;s explicit alignment, to be used in <ref refid="classBSpaceLayoutItem_1ad97ec22e92e72a0b37a197d1a6f762b7" kindref="member">Alignment()</ref>.  </para>
<para><simplesect kind="since"><para>Haiku R1   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="30" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1aaeccb3f364ee28497f509f44ae097fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSpaceLayoutItem::SetExplicitMaxSize</definition>
        <argsstring>(BSize size)</argsstring>
        <name>SetExplicitMaxSize</name>
        <qualifiedname>BSpaceLayoutItem::SetExplicitMaxSize</qualifiedname>
        <reimplements refid="classBLayoutItem_1ad91aa5d8c83270f33ec4503dbc8e438e">SetExplicitMaxSize</reimplements>
        <param>
          <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set this item&apos;s explicit max size, to be used in <ref refid="classBSpaceLayoutItem_1ab6bd78081d23d6b3d0f7c337fd0a2930" kindref="member">MaxSize()</ref>.  </para>
<para><simplesect kind="since"><para>Haiku R1   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="28" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a8085527e5311e748e83948116c23ab35" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSpaceLayoutItem::SetExplicitMinSize</definition>
        <argsstring>(BSize size)</argsstring>
        <name>SetExplicitMinSize</name>
        <qualifiedname>BSpaceLayoutItem::SetExplicitMinSize</qualifiedname>
        <reimplements refid="classBLayoutItem_1ab5bfb3d6541b1e3097c77577be279346">SetExplicitMinSize</reimplements>
        <param>
          <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set this item&apos;s explicit min size, to be used in <ref refid="classBSpaceLayoutItem_1a999c87d6aeea8d8cf17787bcd71d4c3f" kindref="member">MinSize()</ref>.  </para>
<para>This forces the minimal size for the item and overrides any constraints that would normally be used to compute it. Most importantly, the minimal size of children is ignored, so setting this can lead to the children not fitting the view.</para>
<para><simplesect kind="since"><para>Haiku R1   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="27" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1abc5a03d24165cb317858aefc998ca3b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSpaceLayoutItem::SetExplicitPreferredSize</definition>
        <argsstring>(BSize size)</argsstring>
        <name>SetExplicitPreferredSize</name>
        <qualifiedname>BSpaceLayoutItem::SetExplicitPreferredSize</qualifiedname>
        <reimplements refid="classBLayoutItem_1afa1c729ac363fc0296c9aca68eca4ddc">SetExplicitPreferredSize</reimplements>
        <param>
          <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set this item&apos;s explicit preferred size, to be used in <ref refid="classBSpaceLayoutItem_1a03fdd0cc28dd13c93cd20e85f93b2945" kindref="member">PreferredSize()</ref>.  </para>
<para><simplesect kind="since"><para>Haiku R1   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="29" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a8fe4a4566215f74842e7dc6e4b89269e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSpaceLayoutItem::SetFrame</definition>
        <argsstring>(BRect frame)</argsstring>
        <name>SetFrame</name>
        <qualifiedname>BSpaceLayoutItem::SetFrame</qualifiedname>
        <reimplements refid="classBLayoutItem_1ad6e6d52145cb3007e54b5eafe454caed">SetFrame</reimplements>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the bounding frame of this item.  </para>
<para><emphasis>frame</emphasis> is in the coordinate system of the target view of the <ref refid="classBLayout" kindref="compound">BLayout</ref> that this item belongs to.</para>
<para><simplesect kind="since"><para>Haiku R1   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="36" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a31bfa01d4b25c761ee565436c5d29a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BSpaceLayoutItem::SetVisible</definition>
        <argsstring>(bool visible)</argsstring>
        <name>SetVisible</name>
        <qualifiedname>BSpaceLayoutItem::SetVisible</qualifiedname>
        <reimplements refid="classBLayoutItem_1a51d14ca920b9f302662a619fa8b79957">SetVisible</reimplements>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
<para>Set the visibility of this space layout item. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visible</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired visibility of the layout item.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="33" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBSpaceLayoutItem_1a5cd67102ea4b31b1ed4e933ce27e7478" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBSpaceLayoutItem" kindref="compound">BSpaceLayoutItem</ref> *</type>
        <definition>static BSpaceLayoutItem * BSpaceLayoutItem::CreateGlue</definition>
        <argsstring>()</argsstring>
        <name>CreateGlue</name>
        <qualifiedname>BSpaceLayoutItem::CreateGlue</qualifiedname>
        <briefdescription>
<para>Create a layout item that acts like glue. </para>
        </briefdescription>
        <detaileddescription>
<para>This type of space layout item has no minimum size, and expands to the maximum available space in all directions.</para>
<para><simplesect kind="return"><para>Creates a new <ref refid="classBSpaceLayoutItem" kindref="compound">BSpaceLayoutItem</ref> and returns ownership to the caller.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="18" column="23"/>
        <referencedby refid="classBLayoutBuilder_1_1Group_1a8b2fd40062e63bc8a19defe69b470e5d" compoundref="LayoutBuilder_8h" startline="690" endline="694">BLayoutBuilder::Group&lt; ParentBuilder &gt;::AddGlue</referencedby>
        <referencedby refid="classBLayoutBuilder_1_1Grid_1ab69d957f036863eabc6586091991cc73" compoundref="LayoutBuilder_8h" startline="1040" endline="1046">BLayoutBuilder::Grid&lt; ParentBuilder &gt;::AddGlue</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a69efef791aebbc01b74e47f00b45e805" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBSpaceLayoutItem" kindref="compound">BSpaceLayoutItem</ref> *</type>
        <definition>static BSpaceLayoutItem * BSpaceLayoutItem::CreateHorizontalStrut</definition>
        <argsstring>(float width)</argsstring>
        <name>CreateHorizontalStrut</name>
        <qualifiedname>BSpaceLayoutItem::CreateHorizontalStrut</qualifiedname>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Create a layout item that horizontally expands to a maximum <emphasis>width</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The item has no minimum size, meaning that if the total available width is smaller than the maximum <emphasis>width</emphasis>, the strut will use the available space.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum width.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Creates a new <ref refid="classBSpaceLayoutItem" kindref="compound">BSpaceLayoutItem</ref> and returns ownership to the caller.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="19" column="23"/>
        <referencedby refid="classBLayoutBuilder_1_1Group_1a8a38360a5a66c6442c56f590a5eb7b94" compoundref="LayoutBuilder_8h" startline="699" endline="707">BLayoutBuilder::Group&lt; ParentBuilder &gt;::AddStrut</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1aab0e2d1a0e2554ee830b6bc038993b79" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBSpaceLayoutItem" kindref="compound">BSpaceLayoutItem</ref> *</type>
        <definition>static static BSpaceLayoutItem * BSpaceLayoutItem::CreateVerticalStrut</definition>
        <argsstring>(float height)</argsstring>
        <name>CreateVerticalStrut</name>
        <qualifiedname>BSpaceLayoutItem::CreateVerticalStrut</qualifiedname>
        <param>
          <type>float</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Create a layout item that vertically expands to a maximum <emphasis>height</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The item has no minimum size, meaning that if the total available height is smaller than the maximum <emphasis>width</emphasis>, the strut will use the available space.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum height.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Creates a new <ref refid="classBSpaceLayoutItem" kindref="compound">BSpaceLayoutItem</ref> and returns ownership to the caller.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="20" column="23"/>
        <referencedby refid="classBLayoutBuilder_1_1Group_1a8a38360a5a66c6442c56f590a5eb7b94" compoundref="LayoutBuilder_8h" startline="699" endline="707">BLayoutBuilder::Group&lt; ParentBuilder &gt;::AddStrut</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a360b9ece6fcc1a572b7711a84f4aa6ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>static BArchivable * BSpaceLayoutItem::Instantiate</definition>
        <argsstring>(BMessage *from)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BSpaceLayoutItem::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Instantiate the item from the message <emphasis>from</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="39" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBSpaceLayoutItem_1ade43cc794e569060d15fbee40a97bfbe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BSpaceLayoutItem::BSpaceLayoutItem</definition>
        <argsstring>(const BSpaceLayoutItem &amp;)</argsstring>
        <name>BSpaceLayoutItem</name>
        <qualifiedname>BSpaceLayoutItem::BSpaceLayoutItem</qualifiedname>
        <param>
          <type>const <ref refid="classBSpaceLayoutItem" kindref="compound">BSpaceLayoutItem</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a4c0ac0b1f65a0c6d450036e0836f507c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSpaceLayoutItem::_ReservedSpaceLayoutItem1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSpaceLayoutItem1</name>
        <qualifiedname>BSpaceLayoutItem::_ReservedSpaceLayoutItem1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="43" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a1ffd812a3725b52525499db0e1852922" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSpaceLayoutItem::_ReservedSpaceLayoutItem10</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSpaceLayoutItem10</name>
        <qualifiedname>BSpaceLayoutItem::_ReservedSpaceLayoutItem10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="52" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1afb4bfff05edd244ef16be40d4b9ba89b" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSpaceLayoutItem::_ReservedSpaceLayoutItem2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSpaceLayoutItem2</name>
        <qualifiedname>BSpaceLayoutItem::_ReservedSpaceLayoutItem2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="44" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a8b47b11717baa0f21af7e44ad19b2f66" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSpaceLayoutItem::_ReservedSpaceLayoutItem3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSpaceLayoutItem3</name>
        <qualifiedname>BSpaceLayoutItem::_ReservedSpaceLayoutItem3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="45" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a87a3c0afcfa4aeb8e78a1fb09d3522ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSpaceLayoutItem::_ReservedSpaceLayoutItem4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSpaceLayoutItem4</name>
        <qualifiedname>BSpaceLayoutItem::_ReservedSpaceLayoutItem4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="46" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a5a175c73138d9817ab45db1a2a06306e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSpaceLayoutItem::_ReservedSpaceLayoutItem5</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSpaceLayoutItem5</name>
        <qualifiedname>BSpaceLayoutItem::_ReservedSpaceLayoutItem5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="47" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a5e955dba27f51db425de5f02b68fe350" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSpaceLayoutItem::_ReservedSpaceLayoutItem6</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSpaceLayoutItem6</name>
        <qualifiedname>BSpaceLayoutItem::_ReservedSpaceLayoutItem6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="48" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a169517b2d502c507fc6506c4186b826e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSpaceLayoutItem::_ReservedSpaceLayoutItem7</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSpaceLayoutItem7</name>
        <qualifiedname>BSpaceLayoutItem::_ReservedSpaceLayoutItem7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="49" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a08bddfc1cf2529e46330f83436145cae" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSpaceLayoutItem::_ReservedSpaceLayoutItem8</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSpaceLayoutItem8</name>
        <qualifiedname>BSpaceLayoutItem::_ReservedSpaceLayoutItem8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="50" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a236d169ae6fa0ed6afe9de9d95fcc3b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BSpaceLayoutItem::_ReservedSpaceLayoutItem9</definition>
        <argsstring>()</argsstring>
        <name>_ReservedSpaceLayoutItem9</name>
        <qualifiedname>BSpaceLayoutItem::_ReservedSpaceLayoutItem9</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="51" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBSpaceLayoutItem_1a2923b155295e4382108c09aae11ee4bd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSpaceLayoutItem::operator=</definition>
        <argsstring>(const BSpaceLayoutItem &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>BSpaceLayoutItem::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBSpaceLayoutItem" kindref="compound">BSpaceLayoutItem</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="56" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An empty layout item that expands into empty space based on its size configuration. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is a specialized layout item, that is used to distribute space within one of the layouts. The layout item can be manually configured, but there are also two default varieties.</para>
<para>The first variety is the <bold>glue</bold> variety. Glue is an element that expands to the maximum space that is available. Let&apos;s say, you have a horizontal <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>. You want a button on the left, and a button on the right, with empty space in the middle. The middle element can be a glue element. The glue will push the right button all the way to the end of the available space. If the host view gets larger, the glue will expand. You can use the static method <ref refid="classBSpaceLayoutItem_1a5cd67102ea4b31b1ed4e933ce27e7478" kindref="member">BSpaceLayoutItem::CreateGlue()</ref> to easily create a glue element.</para>
<para>Another variety is the <bold>strut</bold>. A is a layout item with no minimum size, and a maximum size. This means that the item might be smaller than the maximum size, but it will never be larger than the maximum size. You can use the static methods <ref refid="classBSpaceLayoutItem_1aab0e2d1a0e2554ee830b6bc038993b79" kindref="member">BSpaceLayoutItem::CreateVerticalStrut()</ref> and <ref refid="classBSpaceLayoutItem_1a69efef791aebbc01b74e47f00b45e805" kindref="member">BSpaceLayoutItem::CreateHorizontalStrut()</ref> to create a strut item.</para>
<para>The default constructor allows you to create a layout item with custom minimum sizes, maximum sizes, preferred sizes and alignments.</para>
<para><simplesect kind="see"><para>Where applicable, the <ref refid="group__layout" kindref="compound">Layout API</ref> builder classes have convenience methods to add glue or struts. See <ref refid="classBLayoutBuilder_1_1Group_1a8b2fd40062e63bc8a19defe69b470e5d" kindref="member">BLayoutBuilder::Group&lt;ParentBuilder&gt;::AddGlue()</ref> or <ref refid="classBLayoutBuilder_1_1Group_1a8a38360a5a66c6442c56f590a5eb7b94" kindref="member">BLayoutBuilder::Group&lt;ParentBuilder&gt;::AddStrut()</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="2">
        <label>BLayoutItem</label>
        <link refid="classBLayoutItem"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BSpaceLayoutItem</label>
        <link refid="classBSpaceLayoutItem"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="2">
        <label>BLayoutItem</label>
        <link refid="classBLayoutItem"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BSpaceLayoutItem</label>
        <link refid="classBSpaceLayoutItem"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" line="11" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/SpaceLayoutItem.h" bodystart="11" bodyend="66"/>
    <listofallmembers>
      <member refid="classBSpaceLayoutItem_1a4b23ffd842f313ef6d26e3997a7c44a1" prot="private" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>_reserved</name></member>
      <member refid="classBSpaceLayoutItem_1a4c0ac0b1f65a0c6d450036e0836f507c" prot="private" virt="virtual"><scope>BSpaceLayoutItem</scope><name>_ReservedSpaceLayoutItem1</name></member>
      <member refid="classBSpaceLayoutItem_1a1ffd812a3725b52525499db0e1852922" prot="private" virt="virtual"><scope>BSpaceLayoutItem</scope><name>_ReservedSpaceLayoutItem10</name></member>
      <member refid="classBSpaceLayoutItem_1afb4bfff05edd244ef16be40d4b9ba89b" prot="private" virt="virtual"><scope>BSpaceLayoutItem</scope><name>_ReservedSpaceLayoutItem2</name></member>
      <member refid="classBSpaceLayoutItem_1a8b47b11717baa0f21af7e44ad19b2f66" prot="private" virt="virtual"><scope>BSpaceLayoutItem</scope><name>_ReservedSpaceLayoutItem3</name></member>
      <member refid="classBSpaceLayoutItem_1a87a3c0afcfa4aeb8e78a1fb09d3522ef" prot="private" virt="virtual"><scope>BSpaceLayoutItem</scope><name>_ReservedSpaceLayoutItem4</name></member>
      <member refid="classBSpaceLayoutItem_1a5a175c73138d9817ab45db1a2a06306e" prot="private" virt="virtual"><scope>BSpaceLayoutItem</scope><name>_ReservedSpaceLayoutItem5</name></member>
      <member refid="classBSpaceLayoutItem_1a5e955dba27f51db425de5f02b68fe350" prot="private" virt="virtual"><scope>BSpaceLayoutItem</scope><name>_ReservedSpaceLayoutItem6</name></member>
      <member refid="classBSpaceLayoutItem_1a169517b2d502c507fc6506c4186b826e" prot="private" virt="virtual"><scope>BSpaceLayoutItem</scope><name>_ReservedSpaceLayoutItem7</name></member>
      <member refid="classBSpaceLayoutItem_1a08bddfc1cf2529e46330f83436145cae" prot="private" virt="virtual"><scope>BSpaceLayoutItem</scope><name>_ReservedSpaceLayoutItem8</name></member>
      <member refid="classBSpaceLayoutItem_1a236d169ae6fa0ed6afe9de9d95fcc3b4" prot="private" virt="virtual"><scope>BSpaceLayoutItem</scope><name>_ReservedSpaceLayoutItem9</name></member>
      <member refid="classBLayoutItem_1a3b5b23daa375b3333fc58c9c22ce62fa" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>AlignInFrame</name></member>
      <member refid="classBSpaceLayoutItem_1ad97ec22e92e72a0b37a197d1a6f762b7" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>Alignment</name></member>
      <member refid="classBLayoutItem_1a13ec3faa075b23b3073f97531365102c" prot="protected" virt="virtual"><scope>BSpaceLayoutItem</scope><name>AllArchived</name></member>
      <member refid="classBLayoutItem_1af78b72941cf1532299c2396cfeb7f9ed" prot="protected" virt="virtual"><scope>BSpaceLayoutItem</scope><name>AllUnarchived</name></member>
      <member refid="classBLayoutItem_1a46e148b6608b3b21b1442fbc3aa9f404" prot="protected" virt="virtual"><scope>BSpaceLayoutItem</scope><name>AncestorVisibilityChanged</name></member>
      <member refid="classBSpaceLayoutItem_1a27a757bd5903c14dce5a54af00177d4a" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>Archive</name></member>
      <member refid="classBLayoutItem_1a4798b0eb99c785b1d61dc2c169fb7df0" prot="protected" virt="virtual"><scope>BSpaceLayoutItem</scope><name>AttachedToLayout</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>BArchivable</name></member>
      <member refid="classBLayoutItem_1ae147b703a6d2583545407d5f48809bac" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>BLayoutItem</name></member>
      <member refid="classBLayoutItem_1ac639d9cfa9b8124106ef2d8bc5badb2e" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>BLayoutItem</name></member>
      <member refid="classBSpaceLayoutItem_1a99cce7918c8cb75ecde2a367f2be9cbb" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>BSpaceLayoutItem</name></member>
      <member refid="classBSpaceLayoutItem_1a58c0d79a3d3b42b235707923adb25ad4" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>BSpaceLayoutItem</name></member>
      <member refid="classBSpaceLayoutItem_1ade43cc794e569060d15fbee40a97bfbe" prot="private" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>BSpaceLayoutItem</name></member>
      <member refid="classBSpaceLayoutItem_1a5cd67102ea4b31b1ed4e933ce27e7478" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>CreateGlue</name></member>
      <member refid="classBSpaceLayoutItem_1a69efef791aebbc01b74e47f00b45e805" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>CreateHorizontalStrut</name></member>
      <member refid="classBSpaceLayoutItem_1aab0e2d1a0e2554ee830b6bc038993b79" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>CreateVerticalStrut</name></member>
      <member refid="classBLayoutItem_1ad829ab9d9a38acffb39f0183e77acee8" prot="protected" virt="virtual"><scope>BSpaceLayoutItem</scope><name>DetachedFromLayout</name></member>
      <member refid="classBSpaceLayoutItem_1a1fd494390a385b5a87d474878be44d45" prot="private" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>fAlignment</name></member>
      <member refid="classBSpaceLayoutItem_1a4a7379c832b2003d9abae8615e7fd53f" prot="private" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>fFrame</name></member>
      <member refid="classBSpaceLayoutItem_1addb3da365581595c51f5320ec8d3ea91" prot="private" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>fMaxSize</name></member>
      <member refid="classBSpaceLayoutItem_1ad111fa00fc529a319e32ac75c5dd52c6" prot="private" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>fMinSize</name></member>
      <member refid="classBSpaceLayoutItem_1ac4e120bce1009d23a7ec77dcc00d00be" prot="private" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>fPreferredSize</name></member>
      <member refid="classBSpaceLayoutItem_1a019b39fdc8e3d14056a74a46333f57d6" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>Frame</name></member>
      <member refid="classBSpaceLayoutItem_1ac6af1482647adfb363f09c0e9322bdc2" prot="private" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>fVisible</name></member>
      <member refid="classBLayoutItem_1addd90adf76c9caad200f6f465c06e0bf" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>GetHeightForWidth</name></member>
      <member refid="classBLayoutItem_1a3186c8eec495915c5b074fe7d10dc94c" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>HasHeightForWidth</name></member>
      <member refid="classBSpaceLayoutItem_1a360b9ece6fcc1a572b7711a84f4aa6ea" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>Instantiate</name></member>
      <member refid="classBLayoutItem_1a9afedf1de602c6b277e8eb6eb3ff928d" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>InvalidateLayout</name></member>
      <member refid="classBSpaceLayoutItem_1a4a260f90fe800e6feb36e5ec4bfa83ff" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>IsVisible</name></member>
      <member refid="classBLayoutItem_1ab760ea9f0eb6bb25063b5bac7a52ec3d" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>Layout</name></member>
      <member refid="classBLayoutItem_1a82ba24d424129d989855b74eb3a86627" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>LayoutData</name></member>
      <member refid="classBLayoutItem_1a69da4cf2822d9add9dbd6760e30eabfb" prot="protected" virt="virtual"><scope>BSpaceLayoutItem</scope><name>LayoutInvalidated</name></member>
      <member refid="classBSpaceLayoutItem_1ab6bd78081d23d6b3d0f7c337fd0a2930" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>MaxSize</name></member>
      <member refid="classBSpaceLayoutItem_1a999c87d6aeea8d8cf17787bcd71d4c3f" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>MinSize</name></member>
      <member refid="classBSpaceLayoutItem_1a2923b155295e4382108c09aae11ee4bd" prot="private" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>operator=</name></member>
      <member refid="classBLayoutItem_1a38b237fb8bbd1d0054e3a2b4cbc1fd15" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>Perform</name></member>
      <member refid="classBSpaceLayoutItem_1a03fdd0cc28dd13c93cd20e85f93b2945" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>PreferredSize</name></member>
      <member refid="classBLayoutItem_1afddc9eb49deca3121887f0b923da6a0b" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>Relayout</name></member>
      <member refid="classBLayoutItem_1af4059e73a30336f0ae6bbbc04c70dd6a" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>RemoveSelf</name></member>
      <member refid="classBSpaceLayoutItem_1adfe30d9d69c35f667e7c9caae9956e67" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>SetExplicitAlignment</name></member>
      <member refid="classBSpaceLayoutItem_1aaeccb3f364ee28497f509f44ae097fdb" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>SetExplicitMaxSize</name></member>
      <member refid="classBSpaceLayoutItem_1a8085527e5311e748e83948116c23ab35" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>SetExplicitMinSize</name></member>
      <member refid="classBSpaceLayoutItem_1abc5a03d24165cb317858aefc998ca3b8" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>SetExplicitPreferredSize</name></member>
      <member refid="classBLayoutItem_1ac630c7ab0e98d5da0225792e31f596f1" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>SetExplicitSize</name></member>
      <member refid="classBSpaceLayoutItem_1a8fe4a4566215f74842e7dc6e4b89269e" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>SetFrame</name></member>
      <member refid="classBLayoutItem_1abffd9c09f9951f25b4a752a06e4040c3" prot="public" virt="non-virtual"><scope>BSpaceLayoutItem</scope><name>SetLayoutData</name></member>
      <member refid="classBSpaceLayoutItem_1a31bfa01d4b25c761ee565436c5d29a9a" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>SetVisible</name></member>
      <member refid="classBLayoutItem_1a4a053fcf62bc431028355efbd59873fc" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>View</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>~BArchivable</name></member>
      <member refid="classBLayoutItem_1ab2ab08ac19615c24d09f3461926acce2" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>~BLayoutItem</name></member>
      <member refid="classBSpaceLayoutItem_1a21beb034797958deb903707f3a5a9076" prot="public" virt="virtual"><scope>BSpaceLayoutItem</scope><name>~BSpaceLayoutItem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
