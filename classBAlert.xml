<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBAlert" kind="class" language="C++" prot="public">
    <compoundname>BAlert</compoundname>
    <basecompoundref refid="classBWindow" prot="public" virt="non-virtual">BWindow</basecompoundref>
      <sectiondef kind="user-defined">
      <header>Archiving</header>
      <memberdef kind="function" id="classBAlert_1aba312ca5f7e668bf4d96efc7f41625a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BAlert::Archive</definition>
        <argsstring>(BMessage *data, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BAlert::Archive</qualifiedname>
        <reimplements refid="classBWindow_1a69163d40d8f1eda77c9134ad4ab745a2">Archive</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Archives the <ref refid="classBAlert" kindref="compound">BAlert</ref> into <emphasis>archive</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The target archive which the <ref refid="classBAlert" kindref="compound">BAlert</ref> <emphasis>data</emphasis> will go into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deep</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to recursively archive the <ref refid="classBAlert" kindref="compound">BAlert</ref>&apos;s children.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>The archive operation was successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para>The archive operation failed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="56" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1ad74d6975c67e14f290e7fcbfb3857143" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>BArchivable * BAlert::Instantiate</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BAlert::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Instantiates a <ref refid="classBAlert" kindref="compound">BAlert</ref> from a <ref refid="classBMessage" kindref="compound">BMessage</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to instantiate the <ref refid="classBAlert" kindref="compound">BAlert</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classBArchivable" kindref="compound">BArchivable</ref> object of the <ref refid="classBAlert" kindref="compound">BAlert</ref>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="55" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBAlert_1a29745f232a8e9d061b09f6abe388dc1c" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BAlert::_reserved[1]</definition>
        <argsstring>[1]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BAlert::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="120" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBAlert_1af79a406f4d4beb252f03b4a931a023ec" prot="private" static="no" mutable="no">
        <type>sem_id</type>
        <definition>sem_id BAlert::fAlertSem</definition>
        <argsstring></argsstring>
        <name>fAlertSem</name>
        <qualifiedname>BAlert::fAlertSem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="109" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBAlert_1ae4dd8f8a08828f10233bdcddc8861abf" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BAlert::fAlertValue</definition>
        <argsstring></argsstring>
        <name>fAlertValue</name>
        <qualifiedname>BAlert::fAlertValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="110" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBAlert_1a83449b5051c83457bfc655ed90598420" prot="private" static="no" mutable="no">
        <type><ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref> *</type>
        <definition>BGroupLayout* BAlert::fButtonLayout</definition>
        <argsstring></argsstring>
        <name>fButtonLayout</name>
        <qualifiedname>BAlert::fButtonLayout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="113" column="13" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBAlert_1a441b585f3c37d9a7b4a5649cf944c14d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classBButton" kindref="compound">BButton</ref> * &gt;</type>
        <definition>std::vector&lt;BButton*&gt; BAlert::fButtons</definition>
        <argsstring></argsstring>
        <name>fButtons</name>
        <qualifiedname>BAlert::fButtons</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="114" column="13" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBAlert_1ae2062b79592104e6e9d4fe9faee13372" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ac56eeb3040e225fafe52dc1872233eeb" kindref="member">uint8</ref></type>
        <definition>uint8 BAlert::fButtonSpacing</definition>
        <argsstring></argsstring>
        <name>fButtonSpacing</name>
        <qualifiedname>BAlert::fButtonSpacing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="117" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBAlert_1a7a75e9f99bdfbae68355b67bebe377f7" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ac56eeb3040e225fafe52dc1872233eeb" kindref="member">uint8</ref></type>
        <definition>uint8 BAlert::fButtonWidth</definition>
        <argsstring></argsstring>
        <name>fButtonWidth</name>
        <qualifiedname>BAlert::fButtonWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="118" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBAlert_1ae4c017f7aa5ccdf0b676f038b44d8528" prot="private" static="no" mutable="no">
        <type>TAlertView *</type>
        <definition>TAlertView* BAlert::fIconView</definition>
        <argsstring></argsstring>
        <name>fIconView</name>
        <qualifiedname>BAlert::fIconView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="111" column="11" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBAlert_1a72e1764465bea2bc873054eacda0efd0" prot="private" static="no" mutable="no">
        <type><ref refid="classBInvoker" kindref="compound">BInvoker</ref> *</type>
        <definition>BInvoker* BAlert::fInvoker</definition>
        <argsstring></argsstring>
        <name>fInvoker</name>
        <qualifiedname>BAlert::fInvoker</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="119" column="9" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBAlert_1a247b813ac8c16bcc7d212c725a2dcf54" prot="private" static="no" mutable="no">
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt;char&gt; BAlert::fKeys</definition>
        <argsstring></argsstring>
        <name>fKeys</name>
        <qualifiedname>BAlert::fKeys</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="115" column="12" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBAlert_1aab132d275bbd87abd6427dce4b6cdacf" prot="private" static="no" mutable="no">
        <type><ref refid="classBTextView" kindref="compound">BTextView</ref> *</type>
        <definition>BTextView* BAlert::fTextView</definition>
        <argsstring></argsstring>
        <name>fTextView</name>
        <qualifiedname>BAlert::fTextView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="112" column="10" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBAlert_1a8761e61fd94dee953a86bfefd3a7eef0" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ac56eeb3040e225fafe52dc1872233eeb" kindref="member">uint8</ref></type>
        <definition>uint8 BAlert::fType</definition>
        <argsstring></argsstring>
        <name>fType</name>
        <qualifiedname>BAlert::fType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="116" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBAlert_1abc52a59c5d81d53ccb014bc1e0de6ad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BAlert::BAlert</definition>
        <argsstring>()</argsstring>
        <name>BAlert</name>
        <qualifiedname>BAlert::BAlert</qualifiedname>
        <briefdescription>
<para>Create an unconfigured <ref refid="classBAlert" kindref="compound">BAlert</ref> dialog. </para>
        </briefdescription>
        <detaileddescription>
<para>This method creates an unconfigured <ref refid="classBAlert" kindref="compound">BAlert</ref>. You can configure it with methods like <ref refid="classBAlert_1af0c80f0842d0b78e4b44971b6c31ed68" kindref="member">SetText()</ref>, <ref refid="classBAlert_1a70c5c724cddc47f3bf5999a2170f960d" kindref="member">SetType()</ref> and SetButtonSpacing.</para>
<para>It is advised to use one of the other constructors that help set up all the configuration in one go, instead of doing it piece by piece with this method.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1ac33ce28b410a3ad4b6d3dae4c027a800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BAlert::BAlert</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>BAlert</name>
        <qualifiedname>BAlert::BAlert</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Unarchives an alert from a <ref refid="classBMessage" kindref="compound">BMessage</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The archive.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1ad01b88d57fb5ed3bb7fef11a0f05b030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BAlert::BAlert</definition>
        <argsstring>(const char *title, const char *text, const char *button1, const char *button2, const char *button3, button_width width, button_spacing spacing, alert_type type=B_INFO_ALERT)</argsstring>
        <name>BAlert</name>
        <qualifiedname>BAlert::BAlert</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>button1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>button2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>button3</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1a670732462ef1d0b9433a503a70c31ce6" kindref="member">button_width</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="Alert_8h_1a47f2f4d6ffc88ea539803d1d793f9777" kindref="member">button_spacing</ref></type>
          <declname>spacing</declname>
        </param>
        <param>
          <type><ref refid="Alert_8h_1a4dcc7e3a1abbcb466174c1c955b6c628" kindref="member">alert_type</ref></type>
          <declname>type</declname>
          <defval><ref refid="Alert_8h_1a4dcc7e3a1abbcb466174c1c955b6c628ad6bf1bfd8d5dd1aa8eedc2ad4fea3fb9" kindref="member">B_INFO_ALERT</ref></defval>
        </param>
        <briefdescription>
<para>Creates and initializes a <ref refid="classBAlert" kindref="compound">BAlert</ref> dialog. </para>
        </briefdescription>
        <detaileddescription>
<para>You can also set the <emphasis>spacing</emphasis> with this constructor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The title of the window. Since the alert window doesn&apos;t have a title tab, the title is not actually displayed anywhere but is useful for debugging purposes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text that is displayed at the top of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button1</parametername>
</parameternamelist>
<parameterdescription>
<para>Button 1 label </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button2</parametername>
</parameternamelist>
<parameterdescription>
<para>Button 2 label </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button3</parametername>
</parameternamelist>
<parameterdescription>
<para>Button 3 label </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant that describes how the button should be sized. Options are <itemizedlist>
<listitem><para><computeroutput>B_WIDTH_AS_USUAL</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_WIDTH_FROM_WIDEST</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_WIDTH_FROM_LABEL</computeroutput> </para>
</listitem>
</itemizedlist>
See button_width for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spacing</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines how the buttons are spaced. Options are <itemizedlist>
<listitem><para><computeroutput>B_EVEN_SPACING</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_OFFSET_SPACING</computeroutput> </para>
</listitem>
</itemizedlist>
See button_spacing for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant that determines which alert icon is displayed. Options are <itemizedlist>
<listitem><para><computeroutput>B_EMPTY_ALERT</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_INFO_ALERT</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_IDEA_ALERT</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_WARNING_ALERT</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_STOP_ALERT</computeroutput> </para>
</listitem>
</itemizedlist>
See alert_type for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R4 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1ad9fa1afb315edb648f4be09d6b7e6e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BAlert::BAlert</definition>
        <argsstring>(const char *title, const char *text, const char *button1, const char *button2=NULL, const char *button3=NULL, button_width width=B_WIDTH_AS_USUAL, alert_type type=B_INFO_ALERT)</argsstring>
        <name>BAlert</name>
        <qualifiedname>BAlert::BAlert</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>button1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>button2</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>button3</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1a670732462ef1d0b9433a503a70c31ce6" kindref="member">button_width</ref></type>
          <declname>width</declname>
          <defval><ref refid="InterfaceDefs_8h_1a670732462ef1d0b9433a503a70c31ce6a00ad379450fec3c751ff02a26d9ab62e" kindref="member">B_WIDTH_AS_USUAL</ref></defval>
        </param>
        <param>
          <type><ref refid="Alert_8h_1a4dcc7e3a1abbcb466174c1c955b6c628" kindref="member">alert_type</ref></type>
          <declname>type</declname>
          <defval><ref refid="Alert_8h_1a4dcc7e3a1abbcb466174c1c955b6c628ad6bf1bfd8d5dd1aa8eedc2ad4fea3fb9" kindref="member">B_INFO_ALERT</ref></defval>
        </param>
        <briefdescription>
<para>Creates and initializes a <ref refid="classBAlert" kindref="compound">BAlert</ref> dialog. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The title of the window. Since the alert window doesn&apos;t have a title tab, the title is not actually displayed anywhere but is useful for debugging purposes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text that is displayed at the top of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button1</parametername>
</parameternamelist>
<parameterdescription>
<para>Button 1 label </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button2</parametername>
</parameternamelist>
<parameterdescription>
<para>Button 2 label </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>button3</parametername>
</parameternamelist>
<parameterdescription>
<para>Button 3 label </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant that describes how the button should be sized. Options are <itemizedlist>
<listitem><para><computeroutput>B_WIDTH_AS_USUAL</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_WIDTH_FROM_WIDEST</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_WIDTH_FROM_LABEL</computeroutput> </para>
</listitem>
</itemizedlist>
See button_width for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant that determines which alert icon is displayed. Options are <itemizedlist>
<listitem><para><computeroutput>B_EMPTY_ALERT</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_INFO_ALERT</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_IDEA_ALERT</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_WARNING_ALERT</computeroutput> </para>
</listitem>
<listitem><para><computeroutput>B_STOP_ALERT</computeroutput> </para>
</listitem>
</itemizedlist>
See alert_type for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1aa185011f234afddaff64f15bd3a7d25e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BAlert::~BAlert</definition>
        <argsstring>()</argsstring>
        <name>~BAlert</name>
        <qualifiedname>BAlert::~BAlert</qualifiedname>
        <briefdescription>
<para>Destructor method. </para>
        </briefdescription>
        <detaileddescription>
<para>Standard Destructor method to delete a <ref refid="classBAlert" kindref="compound">BAlert</ref>.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="52" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a307d3434c813c48155167253f51d9695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BAlert::AddButton</definition>
        <argsstring>(const char *label, char key=0)</argsstring>
        <name>AddButton</name>
        <qualifiedname>BAlert::AddButton</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>char</type>
          <declname>key</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Adds a button to the alert. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>The label of the button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key a user can press to quickly select this button.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="75" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a2d03c23dac6725ed189ef413a1816a6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBButton" kindref="compound">BButton</ref> *</type>
        <definition>BButton * BAlert::ButtonAt</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>ButtonAt</name>
        <qualifiedname>BAlert::ButtonAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns a pointer to the <ref refid="classBButton" kindref="compound">BButton</ref> at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The <emphasis>index</emphasis> of the buttons begins at <computeroutput>0</computeroutput> and counts from left to right. If a <ref refid="classBButton" kindref="compound">BButton</ref> does not exist for the specified <emphasis>index</emphasis> then <computeroutput>NULL</computeroutput> is returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of the desired button.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the <ref refid="classBButton" kindref="compound">BButton</ref> at the specified <emphasis>index</emphasis>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="77" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a7752044914df5253fcc640b418b871d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BAlert::CountButtons</definition>
        <argsstring>() const</argsstring>
        <name>CountButtons</name>
        <qualifiedname>BAlert::CountButtons</qualifiedname>
        <briefdescription>
<para>Counts the number of buttons in the alert. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of buttons in this alert window.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBAlert_1a307d3434c813c48155167253f51d9695" kindref="member">AddButton()</ref> and <ref refid="classBAlert_1a2d03c23dac6725ed189ef413a1816a6a" kindref="member">ButtonAt()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="76" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a29b871841d182889a147b58b16a7c111" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BAlert::DispatchMessage</definition>
        <argsstring>(BMessage *message, BHandler *handler)</argsstring>
        <name>DispatchMessage</name>
        <qualifiedname>BAlert::DispatchMessage</qualifiedname>
        <reimplements refid="classBWindow_1a2089af8a214389c3f673c06420457b16">DispatchMessage</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
          <defname>msg</defname>
        </param>
        <param>
          <type><ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Sends out a message. </para>
        </briefdescription>
        <detaileddescription>
<para>This method called automatically as messages arrive in the queue, you should never call <ref refid="classBAlert_1a29b871841d182889a147b58b16a7c111" kindref="member">DispatchMessage()</ref> yourself.</para>
<para><simplesect kind="warning"><para>Don&apos;t override this method in your <ref refid="classBWindow" kindref="compound">BWindow</ref> subclass. Override <ref refid="classBAlert_1a1300fdf51e73dd4f8a24b908d6fc2e1e" kindref="member">MessageReceived()</ref> instead to alter the window&apos;s message dispatching mechanism.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBLooper_1add21ca8765c67b0dbf95b8f0361afa73" kindref="member">BLooper::DispatchMessage()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="86" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a8409d243d503b948dc7da5d95e6ed66b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BAlert::FrameResized</definition>
        <argsstring>(float newWidth, float newHeight)</argsstring>
        <name>FrameResized</name>
        <qualifiedname>BAlert::FrameResized</qualifiedname>
        <reimplements refid="classBWindow_1a280fab2b2900abc61dd4bcb7a2a4793f">FrameResized</reimplements>
        <param>
          <type>float</type>
          <declname>newWidth</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newHeight</declname>
        </param>
        <briefdescription>
<para>Resizes the alert dialog. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>The new <emphasis>width</emphasis> of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>The new <emphasis>height</emphasis> of the window.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="73" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a9e658b2f7dc50b2c5da3191d77a22594" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BAlert::GetSupportedSuites</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>GetSupportedSuites</name>
        <qualifiedname>BAlert::GetSupportedSuites</qualifiedname>
        <reimplements refid="classBWindow_1a8c2f3013601609b54778af99fa6a25ca">GetSupportedSuites</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reports the suites of messages and specifiers understood by the window.  </para>
<para><simplesect kind="since"><para>BeOS R3       </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="84" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a9d68ec9e1418bc9d60f0836adb20a05f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BAlert::Go</definition>
        <argsstring>()</argsstring>
        <name>Go</name>
        <qualifiedname>BAlert::Go</qualifiedname>
        <briefdescription>
<para>Displays the alert window. </para>
        </briefdescription>
        <detaileddescription>
<para>This version of <ref refid="classBAlert_1a9d68ec9e1418bc9d60f0836adb20a05f" kindref="member">Go()</ref> that does not include an invoker is synchronous. <ref refid="classBAlert_1a9d68ec9e1418bc9d60f0836adb20a05f" kindref="member">Go()</ref> returns once the user has clicked a button and the panel has been removed from the screen. The <ref refid="classBAlert" kindref="compound">BAlert</ref> object is deleted before the method returns.</para>
<para>If the <ref refid="classBAlert" kindref="compound">BAlert</ref> is sent a <computeroutput>B_QUIT_REQUESTED</computeroutput> message while the alert window is still on screen then <ref refid="classBAlert_1a9d68ec9e1418bc9d60f0836adb20a05f" kindref="member">Go()</ref> returns -1.</para>
<para><simplesect kind="return"><para>The index of the button clicked.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="69" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a17c4c936675ec048ce0f61c853f9af89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BAlert::Go</definition>
        <argsstring>(BInvoker *invoker)</argsstring>
        <name>Go</name>
        <qualifiedname>BAlert::Go</qualifiedname>
        <param>
          <type><ref refid="classBInvoker" kindref="compound">BInvoker</ref> *</type>
          <declname>invoker</declname>
        </param>
        <briefdescription>
<para>Displays the alert window from a specified <emphasis>invoker</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This version of <ref refid="classBAlert_1a9d68ec9e1418bc9d60f0836adb20a05f" kindref="member">Go()</ref> with an <emphasis>invoker</emphasis> is asynchronous. It returns immediately with <computeroutput>B_OK</computeroutput> and the button <emphasis>index</emphasis> is set to the field of the <ref refid="classBMessage" kindref="compound">BMessage</ref> that is sent to the target of the <emphasis>invoker</emphasis>.</para>
<para><ref refid="classBAlert_1a9d68ec9e1418bc9d60f0836adb20a05f" kindref="member">Go()</ref> deletes the <ref refid="classBAlert" kindref="compound">BAlert</ref> object after the message is sent.</para>
<para>If you call <ref refid="classBAlert_1a9d68ec9e1418bc9d60f0836adb20a05f" kindref="member">Go()</ref> with a <computeroutput>NULL</computeroutput> invoker argument than the <ref refid="classBMessage" kindref="compound">BMessage</ref> is not sent.</para>
<para>If the <ref refid="classBAlert" kindref="compound">BAlert</ref> is sent a <computeroutput>B_QUIT_REQUESTED</computeroutput> method while the alert window is still on screen then the message is not sent.</para>
<para><simplesect kind="return"><para>A status code.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="70" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a1300fdf51e73dd4f8a24b908d6fc2e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BAlert::MessageReceived</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>MessageReceived</name>
        <qualifiedname>BAlert::MessageReceived</qualifiedname>
        <reimplements refid="classBWindow_1a1ce544ea7d9adcc6941759817a42affe">MessageReceived</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Initiates an action from a received message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>message</emphasis> received by the looper.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBHandler_1aeecda5017e0081db617f23bbff71fb53" kindref="member">BHandler::MessageReceived()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="72" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a3d2769c5bf9b9822f21770e38e561fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BAlert::Perform</definition>
        <argsstring>(perform_code d, void *arg)</argsstring>
        <name>Perform</name>
        <qualifiedname>BAlert::Perform</qualifiedname>
        <reimplements refid="classBWindow_1afde7d74e5526f740dedb82a1d10faa7a">Perform</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" kindref="member">perform_code</ref></type>
          <declname>d</declname>
          <defname>code</defname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
          <defname>_data</defname>
        </param>
        <briefdescription>
<para>Perform some action. (Internal Method) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The perform code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to store some data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBLooper_1adfc642544ce22888d412e6a4be25fa72" kindref="member">BLooper::Perform()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="91" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a691fe42dc7dc5acea09771e9c080dd0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BAlert::Quit</definition>
        <argsstring>()</argsstring>
        <name>Quit</name>
        <qualifiedname>BAlert::Quit</qualifiedname>
        <reimplements refid="classBWindow_1a054c0206836014dcc20c59e50bceab44">Quit</reimplements>
        <briefdescription>
<para>Quits the window closing it. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this method to destroy a window rather than using the delete operator.</para>
<para>This method works much like the <ref refid="classBLooper_1a10d5a4873f14fd247890a6dfc9b8b949" kindref="member">BLooper::Quit()</ref>, it doesn&apos;t return when called from the <ref refid="classBWindow" kindref="compound">BWindow</ref>&apos;s thread and it returns after all messages have been processed when called from another thread and the <ref refid="classBWindow" kindref="compound">BWindow</ref> and its thread has been destroyed.</para>
<para><simplesect kind="warning"><para>The window must first be locked before calling <ref refid="classBAlert_1a691fe42dc7dc5acea09771e9c080dd0e" kindref="member">Quit()</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBLooper_1a10d5a4873f14fd247890a6dfc9b8b949" kindref="member">BLooper::Quit()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="88" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1ae91bb7bb3b99006f0b2616d47cf85985" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BAlert::QuitRequested</definition>
        <argsstring>()</argsstring>
        <name>QuitRequested</name>
        <qualifiedname>BAlert::QuitRequested</qualifiedname>
        <reimplements refid="classBWindow_1a8fccbfd10fceb2c6103c6036ca9e961a">QuitRequested</reimplements>
        <briefdescription>
<para>Hook method that gets called with the window is closed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBAlert_1a691fe42dc7dc5acea09771e9c080dd0e" kindref="member">Quit()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBLooper_1aff7aaf066538383f0e0ea28d18eb8863" kindref="member">BLooper::QuitRequested()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="89" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a22285daeb96ea0936faab97b077115e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
        <definition>BHandler * BAlert::ResolveSpecifier</definition>
        <argsstring>(BMessage *message, int32 index, BMessage *specifier, int32 form, const char *property)</argsstring>
        <name>ResolveSpecifier</name>
        <qualifiedname>BAlert::ResolveSpecifier</qualifiedname>
        <reimplements refid="classBWindow_1aaf328e28799cf868ec31df2847a4ed37">ResolveSpecifier</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>form</declname>
          <defname>what</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine the proper handler for a scripting message.  </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The scripting message to determine the handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the specifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The message which contains the specifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>what</parametername>
</parameternamelist>
<parameterdescription>
<para>The &apos;what&apos; field of the specifier message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the target property.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the proper <ref refid="classBHandler" kindref="compound">BHandler</ref> for the given scripting message.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="81" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1ab60c14ca88c918c2342c9d36aa9140be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BAlert::SetButtonSpacing</definition>
        <argsstring>(button_spacing spacing)</argsstring>
        <name>SetButtonSpacing</name>
        <qualifiedname>BAlert::SetButtonSpacing</qualifiedname>
        <param>
          <type><ref refid="Alert_8h_1a47f2f4d6ffc88ea539803d1d793f9777" kindref="member">button_spacing</ref></type>
          <declname>spacing</declname>
        </param>
        <briefdescription>
<para>Set the button spacing for the alert. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spacing</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass one of the button_spacing values to configure the spacing.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="63" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a199223f27db65b5a3e34f9288f9957d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BAlert::SetButtonWidth</definition>
        <argsstring>(button_width width)</argsstring>
        <name>SetButtonWidth</name>
        <qualifiedname>BAlert::SetButtonWidth</qualifiedname>
        <param>
          <type><ref refid="InterfaceDefs_8h_1a670732462ef1d0b9433a503a70c31ce6" kindref="member">button_width</ref></type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Set the button width for the buttons of the alert. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass one of the button_width values to configure the width.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="64" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a11927f603083674e1cd2e51f91258320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BAlert::SetIcon</definition>
        <argsstring>(BBitmap *bitmap)</argsstring>
        <name>SetIcon</name>
        <qualifiedname>BAlert::SetIcon</qualifiedname>
        <param>
          <type><ref refid="classBBitmap" kindref="compound">BBitmap</ref> *</type>
          <declname>bitmap</declname>
        </param>
        <briefdescription>
<para>Set a custom icon for the alert. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitmap</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid <ref refid="classBBitmap" kindref="compound">BBitmap</ref>. The <ref refid="classBAlert" kindref="compound">BAlert</ref> assumes ownership of the bitmap.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="61" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a1e7ca339e7ee4e76f8b9aaf39fc4adec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BAlert::SetShortcut</definition>
        <argsstring>(int32 buttonIndex, char key)</argsstring>
        <name>SetShortcut</name>
        <qualifiedname>BAlert::SetShortcut</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>buttonIndex</declname>
          <defname>index</defname>
        </param>
        <param>
          <type>char</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Sets the shortcut character which is mapped to a button at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>A button can only have one shortcut except for the rightmost button which, in addition to the shortcut you set, is always mapped to <computeroutput>B_ENTER</computeroutput>.</para>
<para>If you create a &quot;Cancel&quot; button then you should set its shortcut to <computeroutput>B_ESCAPE</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of the button to set the shortcut to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The shortcut character to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="66" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1af0c80f0842d0b78e4b44971b6c31ed68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BAlert::SetText</definition>
        <argsstring>(const char *text)</argsstring>
        <name>SetText</name>
        <qualifiedname>BAlert::SetText</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Set the text for the alert. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text you want the alert to display.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="62" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a70c5c724cddc47f3bf5999a2170f960d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BAlert::SetType</definition>
        <argsstring>(alert_type type)</argsstring>
        <name>SetType</name>
        <qualifiedname>BAlert::SetType</qualifiedname>
        <param>
          <type><ref refid="Alert_8h_1a4dcc7e3a1abbcb466174c1c955b6c628" kindref="member">alert_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Set the type of the alert. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass one of the alert_type enum values to set the type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="60" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a306e3bbb3ea57cd3871cb67bf78ac549" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char BAlert::Shortcut</definition>
        <argsstring>(int32 buttonIndex) const</argsstring>
        <name>Shortcut</name>
        <qualifiedname>BAlert::Shortcut</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>buttonIndex</declname>
          <defname>index</defname>
        </param>
        <briefdescription>
<para>Gets the shortcut character which is mapped to a button at the specified <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>index</emphasis> of the button to get the shortcut of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The shortcut character mapped to the button at the specified <emphasis>index</emphasis>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="67" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a2f694fe620286bc15276d9ecb9a63561" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBTextView" kindref="compound">BTextView</ref> *</type>
        <definition>BTextView * BAlert::TextView</definition>
        <argsstring>() const</argsstring>
        <name>TextView</name>
        <qualifiedname>BAlert::TextView</qualifiedname>
        <briefdescription>
<para>Returns the Alert&apos;s TextView. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a431c183c6c71fdfaac3a9d762bdb51c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Alert_8h_1a4dcc7e3a1abbcb466174c1c955b6c628" kindref="member">alert_type</ref></type>
        <definition>alert_type BAlert::Type</definition>
        <argsstring>() const</argsstring>
        <name>Type</name>
        <qualifiedname>BAlert::Type</qualifiedname>
        <briefdescription>
<para>Get the alert_type of this alert. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns one of the values from the alert_type enum.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="59" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBAlert_1a53a50224f3429fd731f68a6efe5f2f33" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
        <definition>BPoint BAlert::AlertPosition</definition>
        <argsstring>(float width, float height)</argsstring>
        <name>AlertPosition</name>
        <qualifiedname>BAlert::AlertPosition</qualifiedname>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Resizes the Alert window to the width and height specified and return the Point of the top-left corner of the alert window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired <emphasis>width</emphasis> of the alert window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired <emphasis>height</emphasis> of the alert window.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classBPoint" kindref="compound">BPoint</ref> of the top-left corner of the Alert window.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="93" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBAlert_1ab1d650549d5bbe63bf7bb2a04bc66ce7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBButton" kindref="compound">BButton</ref> *</type>
        <definition>BButton * BAlert::_CreateButton</definition>
        <argsstring>(int32 which, const char *label)</argsstring>
        <name>_CreateButton</name>
        <qualifiedname>BAlert::_CreateButton</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>which</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="105" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1aaeb3ba84aa29b76b07efe83aff1f880b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBBitmap" kindref="compound">BBitmap</ref> *</type>
        <definition>BBitmap * BAlert::_CreateTypeIcon</definition>
        <argsstring>()</argsstring>
        <name>_CreateTypeIcon</name>
        <qualifiedname>BAlert::_CreateTypeIcon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="104" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a84251a607dc840be2f34da90751d194f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BAlert::_Init</definition>
        <argsstring>(const char *text, const char *button1, const char *button2, const char *button3, button_width width, button_spacing spacing, alert_type type)</argsstring>
        <name>_Init</name>
        <qualifiedname>BAlert::_Init</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>button1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>button2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>button3</declname>
        </param>
        <param>
          <type><ref refid="InterfaceDefs_8h_1a670732462ef1d0b9433a503a70c31ce6" kindref="member">button_width</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="Alert_8h_1a47f2f4d6ffc88ea539803d1d793f9777" kindref="member">button_spacing</ref></type>
          <declname>spacing</declname>
        </param>
        <param>
          <type><ref refid="Alert_8h_1a4dcc7e3a1abbcb466174c1c955b6c628" kindref="member">alert_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="100" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1ac68bbe23756f5d6e966896a7d07dd580" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BAlert::_Prepare</definition>
        <argsstring>()</argsstring>
        <name>_Prepare</name>
        <qualifiedname>BAlert::_Prepare</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="106" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1aa6aec7485da723c90c872abce56ce5b0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BAlert::_ReservedAlert1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedAlert1</name>
        <qualifiedname>BAlert::_ReservedAlert1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="96" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1a135204e3cca5af72d910d7c63d87c9cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BAlert::_ReservedAlert2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedAlert2</name>
        <qualifiedname>BAlert::_ReservedAlert2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="97" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBAlert_1abe17ad8008f02f536ebbc0a3f8afb921" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BAlert::_ReservedAlert3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedAlert3</name>
        <qualifiedname>BAlert::_ReservedAlert3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="98" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classBAlert" kindref="compound">BAlert</ref> class defines a modal alert dialog which displays a short message and provides a set of labeled buttons that allow the user to respond. </para>
    </briefdescription>
    <detaileddescription>
<para>The alert can be configured with a set of one to three buttons. These buttons are assigned indexes 0, 1, and 2 from right-to-left respectively and are automatically positioned by the system. The user can either click on one of the buttons or use a shortcut key to select a button.</para>
<para>The layout of the buttons can be configured by setting the <ref refid="InterfaceDefs_8h_1a670732462ef1d0b9433a503a70c31ce6" kindref="member">button_width</ref> and <ref refid="Alert_8h_1a47f2f4d6ffc88ea539803d1d793f9777" kindref="member">button_spacing</ref> properties in the <ref refid="classBAlert" kindref="compound">BAlert</ref> constructor. The icon displayed in the alert can also be configured by setting the <ref refid="Alert_8h_1a4dcc7e3a1abbcb466174c1c955b6c628" kindref="member">alert_type</ref> property. The right-most button (index 0) is the default button which can be activated by pushing the Enter key.</para>
<para>Below is an example of an unsaved changes alert dialog:</para>
<para><image type="html" name="BAlert_example.png"></image>
</para>
<para>When the user responds by selecting one of the buttons the alert window is removed from the screen. The index of the selected button is returned to the calling application and the <ref refid="classBAlert" kindref="compound">BAlert</ref> object is deleted.</para>
<para>The code used to create and display an alert dialog like the one shown above is shown below:</para>
<para><programlisting><codeline><highlight class="normal"><ref refid="classBAlert" kindref="compound">BAlert</ref>*<sp/>alert<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBAlert_1abc52a59c5d81d53ccb014bc1e0de6ad3" kindref="member">BAlert</ref>(</highlight><highlight class="stringliteral">&quot;Close<sp/>and<sp/>save<sp/>dialog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>changes<sp/>to...&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cancel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>save&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save&quot;</highlight><highlight class="normal">,<sp/><ref refid="InterfaceDefs_8h_1a670732462ef1d0b9433a503a70c31ce6a00ad379450fec3c751ff02a26d9ab62e" kindref="member">B_WIDTH_AS_USUAL</ref>,<sp/><ref refid="Alert_8h_1a47f2f4d6ffc88ea539803d1d793f9777a48907be76ef814078b692bcbf8f6d066" kindref="member">B_OFFSET_SPACING</ref>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Alert_8h_1a4dcc7e3a1abbcb466174c1c955b6c628a317e2350840da95263431325773eaaa0" kindref="member">B_WARNING_ALERT</ref>);</highlight></codeline>
<codeline><highlight class="normal">alert-&gt;<ref refid="classBAlert_1a1e7ca339e7ee4e76f8b9aaf39fc4adec" kindref="member">SetShortcut</ref>(0,<sp/>B_ESCAPE);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref><sp/>button_index<sp/>=<sp/>alert-&gt;<ref refid="classBAlert_1a9d68ec9e1418bc9d60f0836adb20a05f" kindref="member">Go</ref>();</highlight></codeline>
</programlisting></para>
<para>The messaged displayed in the dialog window along with the button labels are set by the strings in the contructor. The Cancel button is offset to the left relative to the other buttons by setting the <computeroutput>B_OFFSET_SPACING</computeroutput> flag. The <computeroutput>B_WARNING_ALERT</computeroutput> flag displays the exclamation mark icon in the dialog.</para>
<para>Any alert with a Cancel button should map the Escape key as shown in the example above. You can setup additional shortcut keys for the buttons with the <ref refid="classBAlert_1a1e7ca339e7ee4e76f8b9aaf39fc4adec" kindref="member">SetShortcut()</ref> method.</para>
<para>The <ref refid="classBAlert_1a9d68ec9e1418bc9d60f0836adb20a05f" kindref="member">Go()</ref> method does the work of loading up and removing the alert window and returns the index of the button that the user selected.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BAlert</label>
        <link refid="classBAlert"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="4">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BLooper</label>
        <link refid="classBLooper"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BWindow</label>
        <link refid="classBWindow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BAlert</label>
        <link refid="classBAlert"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="4">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BLooper</label>
        <link refid="classBLooper"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BWindow</label>
        <link refid="classBWindow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/interface/Alert.h" line="37" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/Alert.h" bodystart="37" bodyend="121"/>
    <listofallmembers>
      <member refid="classBAlert_1ab1d650549d5bbe63bf7bb2a04bc66ce7" prot="private" virt="non-virtual"><scope>BAlert</scope><name>_CreateButton</name></member>
      <member refid="classBAlert_1aaeb3ba84aa29b76b07efe83aff1f880b" prot="private" virt="non-virtual"><scope>BAlert</scope><name>_CreateTypeIcon</name></member>
      <member refid="classBAlert_1a84251a607dc840be2f34da90751d194f" prot="private" virt="non-virtual"><scope>BAlert</scope><name>_Init</name></member>
      <member refid="classBAlert_1ac68bbe23756f5d6e966896a7d07dd580" prot="private" virt="non-virtual"><scope>BAlert</scope><name>_Prepare</name></member>
      <member refid="classBAlert_1a29745f232a8e9d061b09f6abe388dc1c" prot="private" virt="non-virtual"><scope>BAlert</scope><name>_reserved</name></member>
      <member refid="classBAlert_1aa6aec7485da723c90c872abce56ce5b0" prot="private" virt="virtual"><scope>BAlert</scope><name>_ReservedAlert1</name></member>
      <member refid="classBAlert_1a135204e3cca5af72d910d7c63d87c9cf" prot="private" virt="virtual"><scope>BAlert</scope><name>_ReservedAlert2</name></member>
      <member refid="classBAlert_1abe17ad8008f02f536ebbc0a3f8afb921" prot="private" virt="virtual"><scope>BAlert</scope><name>_ReservedAlert3</name></member>
      <member refid="classBWindow_1a24ef781656049451c5c6ed06eeb98c06" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Activate</name></member>
      <member refid="classBAlert_1a307d3434c813c48155167253f51d9695" prot="public" virt="non-virtual"><scope>BAlert</scope><name>AddButton</name></member>
      <member refid="classBWindow_1ac3b09ede3b0256df9cbcc7b2a3d6eda4" prot="public" virt="non-virtual"><scope>BAlert</scope><name>AddChild</name></member>
      <member refid="classBWindow_1a798386ef9d12eb4f0dafff375e3b85d6" prot="public" virt="non-virtual"><scope>BAlert</scope><name>AddChild</name></member>
      <member refid="classBLooper_1a25adc41bdfd741e9c82d2b469a5086b0" prot="public" virt="virtual"><scope>BAlert</scope><name>AddCommonFilter</name></member>
      <member refid="classBHandler_1a862bea548363faac6f883b348cbed838" prot="public" virt="virtual"><scope>BAlert</scope><name>AddFilter</name></member>
      <member refid="classBLooper_1a484be74814014e3c48c1a16f44e34074" prot="public" virt="non-virtual"><scope>BAlert</scope><name>AddHandler</name></member>
      <member refid="classBWindow_1a5b05894e227eb22cba63ddaff289a95b" prot="public" virt="non-virtual"><scope>BAlert</scope><name>AddShortcut</name></member>
      <member refid="classBWindow_1a169c891ff22f6a76f10c15bd16cde3c5" prot="public" virt="non-virtual"><scope>BAlert</scope><name>AddShortcut</name></member>
      <member refid="classBWindow_1ac2abecfda66af23ee5e944530ce69c97" prot="public" virt="non-virtual"><scope>BAlert</scope><name>AddToSubset</name></member>
      <member refid="classBAlert_1a53a50224f3429fd731f68a6efe5f2f33" prot="public" virt="non-virtual"><scope>BAlert</scope><name>AlertPosition</name></member>
      <member refid="classBArchivable_1a4075315c407443a3b0dbb3d7551b53c9" prot="public" virt="virtual"><scope>BAlert</scope><name>AllArchived</name></member>
      <member refid="classBArchivable_1a2b1d74c147ea18e4b4bfacd42f11e0d2" prot="public" virt="virtual"><scope>BAlert</scope><name>AllUnarchived</name></member>
      <member refid="classBAlert_1aba312ca5f7e668bf4d96efc7f41625a3" prot="public" virt="virtual"><scope>BAlert</scope><name>Archive</name></member>
      <member refid="classBAlert_1abc52a59c5d81d53ccb014bc1e0de6ad3" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BAlert</name></member>
      <member refid="classBAlert_1ad9fa1afb315edb648f4be09d6b7e6e63" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BAlert</name></member>
      <member refid="classBAlert_1ad01b88d57fb5ed3bb7fef11a0f05b030" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BAlert</name></member>
      <member refid="classBAlert_1ac33ce28b410a3ad4b6d3dae4c027a800" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BAlert</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BArchivable</name></member>
      <member refid="classBWindow_1a160e5f8757a65eaf3fec463fd6f2ba33" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BeginViewTransaction</name></member>
      <member refid="classBHandler_1a2142e21fe781b24f914ec2086e5f05b7" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BHandler</name></member>
      <member refid="classBHandler_1add8fa081a7bb8633581e78777b215d0b" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BHandler</name></member>
      <member refid="classBLooper_1a33fa84a6ed383e5a897d11380d72ce38" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BLooper</name></member>
      <member refid="classBLooper_1aad314758fd652fb48d61bcccab8b6ae3" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BLooper</name></member>
      <member refid="classBWindow_1ab1084c04b99938ec93d2865962ec6bc2" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Bounds</name></member>
      <member refid="classBAlert_1a2d03c23dac6725ed189ef413a1816a6a" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ButtonAt</name></member>
      <member refid="classBWindow_1afe03898c4cefc6b853f304c57afee533" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BWindow</name></member>
      <member refid="classBWindow_1a92dfad4d2089ea9a4e8ca8154776e82d" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BWindow</name></member>
      <member refid="classBWindow_1a967856a612c3e7ad4d5d1f4970f744e3" prot="public" virt="non-virtual"><scope>BAlert</scope><name>BWindow</name></member>
      <member refid="classBWindow_1a4ea700aa901a1ac76b23605d82c79de8" prot="public" virt="non-virtual"><scope>BAlert</scope><name>CenterIn</name></member>
      <member refid="classBWindow_1a1fbaa783dffbd7bb5f0b135cde5e0237" prot="public" virt="non-virtual"><scope>BAlert</scope><name>CenterOnScreen</name></member>
      <member refid="classBWindow_1aa9890ed5cb76c2c2a8fb82d7cd664586" prot="public" virt="non-virtual"><scope>BAlert</scope><name>CenterOnScreen</name></member>
      <member refid="classBWindow_1aeaeec9bcb12b7b03132e61dba501b19b" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ChildAt</name></member>
      <member refid="classBWindow_1a3be508837c0b14b176b916e45c9c1f31" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Close</name></member>
      <member refid="classBLooper_1ad64f1a98c1cce8087e7d492860461a62" prot="public" virt="non-virtual"><scope>BAlert</scope><name>CommonFilterList</name></member>
      <member refid="classBWindow_1aaa76e90a0578a4081eb4765467d594ea" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ConvertFromScreen</name></member>
      <member refid="classBWindow_1ac0f4cc714ef1cc817100ae028f75d496" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ConvertFromScreen</name></member>
      <member refid="classBWindow_1a7b3b4a579b4e14cd6acf1a95aee75687" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ConvertFromScreen</name></member>
      <member refid="classBWindow_1ae748ea5865c1905c56c30e110c2f4947" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ConvertFromScreen</name></member>
      <member refid="classBWindow_1a218bb4c66ca3f58fbc203a36996fd119" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ConvertToScreen</name></member>
      <member refid="classBWindow_1ac139848b8a9075d0ede0e28d87d95872" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ConvertToScreen</name></member>
      <member refid="classBWindow_1a83c3d8f1fb020740f7b4c3658e5222b5" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ConvertToScreen</name></member>
      <member refid="classBWindow_1a6997351ff94fca3d18459b41a790ce73" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ConvertToScreen</name></member>
      <member refid="classBAlert_1a7752044914df5253fcc640b418b871d7" prot="public" virt="non-virtual"><scope>BAlert</scope><name>CountButtons</name></member>
      <member refid="classBWindow_1a742200112899822a889c2e69bf86db5d" prot="public" virt="non-virtual"><scope>BAlert</scope><name>CountChildren</name></member>
      <member refid="classBLooper_1a6179629238d0be92d7a89503be24d4e3" prot="public" virt="non-virtual"><scope>BAlert</scope><name>CountHandlers</name></member>
      <member refid="classBLooper_1a64e7b89294df1f7b614d1267f870ecd9" prot="public" virt="non-virtual"><scope>BAlert</scope><name>CountLockRequests</name></member>
      <member refid="classBLooper_1a4eec703acd9bd7fe9a455af0f81e08f9" prot="public" virt="non-virtual"><scope>BAlert</scope><name>CountLocks</name></member>
      <member refid="classBWindow_1a31d98b696b4e2a98ae83c841e342fe1b" prot="public" virt="non-virtual"><scope>BAlert</scope><name>CurrentFocus</name></member>
      <member refid="classBLooper_1a6d244af065c4a12ea795bbbc7bb20e07" prot="public" virt="non-virtual"><scope>BAlert</scope><name>CurrentMessage</name></member>
      <member refid="classBWindow_1a8a990fd437ac8f94f7be26f35145048d" prot="public" virt="non-virtual"><scope>BAlert</scope><name>DecoratorFrame</name></member>
      <member refid="classBWindow_1a6995f1dcc605c006e4118cc4b687e766" prot="public" virt="non-virtual"><scope>BAlert</scope><name>DefaultButton</name></member>
      <member refid="classBLooper_1a7c8f05bcc354bc1d53026417417120e3" prot="public" virt="non-virtual"><scope>BAlert</scope><name>DetachCurrentMessage</name></member>
      <member refid="classBWindow_1a83111af72c672b2b7029e712e9b702f3" prot="public" virt="non-virtual"><scope>BAlert</scope><name>DisableUpdates</name></member>
      <member refid="classBLooper_1a3a2d3773466de19a6c117f3a04861b11" prot="public" virt="non-virtual"><scope>BAlert</scope><name>DispatchExternalMessage</name></member>
      <member refid="classBAlert_1a29b871841d182889a147b58b16a7c111" prot="public" virt="virtual"><scope>BAlert</scope><name>DispatchMessage</name></member>
      <member refid="classBWindow_1ab71c5c4ddd8f1cc677115157ec1c0c96" prot="public" virt="non-virtual"><scope>BAlert</scope><name>EnableUpdates</name></member>
      <member refid="classBWindow_1a54d387b099fb88e5aa565bdc40f338eb" prot="public" virt="non-virtual"><scope>BAlert</scope><name>EndViewTransaction</name></member>
      <member refid="classBAlert_1af79a406f4d4beb252f03b4a931a023ec" prot="private" virt="non-virtual"><scope>BAlert</scope><name>fAlertSem</name></member>
      <member refid="classBAlert_1ae4dd8f8a08828f10233bdcddc8861abf" prot="private" virt="non-virtual"><scope>BAlert</scope><name>fAlertValue</name></member>
      <member refid="classBAlert_1a83449b5051c83457bfc655ed90598420" prot="private" virt="non-virtual"><scope>BAlert</scope><name>fButtonLayout</name></member>
      <member refid="classBAlert_1a441b585f3c37d9a7b4a5649cf944c14d" prot="private" virt="non-virtual"><scope>BAlert</scope><name>fButtons</name></member>
      <member refid="classBAlert_1ae2062b79592104e6e9d4fe9faee13372" prot="private" virt="non-virtual"><scope>BAlert</scope><name>fButtonSpacing</name></member>
      <member refid="classBAlert_1a7a75e9f99bdfbae68355b67bebe377f7" prot="private" virt="non-virtual"><scope>BAlert</scope><name>fButtonWidth</name></member>
      <member refid="classBWindow_1ab3cf63c90d209ec6cb1aaeadb7f61fb1" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Feel</name></member>
      <member refid="classBAlert_1ae4c017f7aa5ccdf0b676f038b44d8528" prot="private" virt="non-virtual"><scope>BAlert</scope><name>fIconView</name></member>
      <member refid="classBHandler_1a909662a049856f6863a934cf18161554" prot="public" virt="non-virtual"><scope>BAlert</scope><name>FilterList</name></member>
      <member refid="classBWindow_1ac295d2dff72e4c5254cf597d4b31f9c6" prot="public" virt="non-virtual"><scope>BAlert</scope><name>FindView</name></member>
      <member refid="classBWindow_1a4c252d9c733a703ca25dcc4d3eae6209" prot="public" virt="non-virtual"><scope>BAlert</scope><name>FindView</name></member>
      <member refid="classBAlert_1a72e1764465bea2bc873054eacda0efd0" prot="private" virt="non-virtual"><scope>BAlert</scope><name>fInvoker</name></member>
      <member refid="classBAlert_1a247b813ac8c16bcc7d212c725a2dcf54" prot="private" virt="non-virtual"><scope>BAlert</scope><name>fKeys</name></member>
      <member refid="classBWindow_1ab99cdac9e2a0270c8afc07cfae7a02a8" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Flags</name></member>
      <member refid="classBWindow_1a2e74fd82a8095399d73a28920cc7c9b9" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Flush</name></member>
      <member refid="classBWindow_1ab6c744272c04751fa0b44e605b063a5d" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Frame</name></member>
      <member refid="classBWindow_1a95f6fb2941250e7ed54fce6671f782c6" prot="public" virt="virtual"><scope>BAlert</scope><name>FrameMoved</name></member>
      <member refid="classBAlert_1a8409d243d503b948dc7da5d95e6ed66b" prot="public" virt="virtual"><scope>BAlert</scope><name>FrameResized</name></member>
      <member refid="classBAlert_1aab132d275bbd87abd6427dce4b6cdacf" prot="private" virt="non-virtual"><scope>BAlert</scope><name>fTextView</name></member>
      <member refid="classBAlert_1a8761e61fd94dee953a86bfefd3a7eef0" prot="private" virt="non-virtual"><scope>BAlert</scope><name>fType</name></member>
      <member refid="classBWindow_1a58fba1b0ad6c2035cf1dac6304d21912" prot="public" virt="non-virtual"><scope>BAlert</scope><name>GetDecoratorSettings</name></member>
      <member refid="classBWindow_1adb07dc64e991f7a42dfad000b2a1b0c7" prot="public" virt="non-virtual"><scope>BAlert</scope><name>GetLayout</name></member>
      <member refid="classBWindow_1aebce716c628bac67367875d1129db8c5" prot="public" virt="non-virtual"><scope>BAlert</scope><name>GetSizeLimits</name></member>
      <member refid="classBAlert_1a9e658b2f7dc50b2c5da3191d77a22594" prot="public" virt="virtual"><scope>BAlert</scope><name>GetSupportedSuites</name></member>
      <member refid="classBWindow_1a62a354bee61a0b5cd5ac499b5f728b7f" prot="public" virt="non-virtual"><scope>BAlert</scope><name>GetWindowAlignment</name></member>
      <member refid="classBAlert_1a9d68ec9e1418bc9d60f0836adb20a05f" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Go</name></member>
      <member refid="classBAlert_1a17c4c936675ec048ce0f61c853f9af89" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Go</name></member>
      <member refid="classBLooper_1a6976132123edacf4b3a2831eadf5f4bf" prot="public" virt="non-virtual"><scope>BAlert</scope><name>HandlerAt</name></member>
      <member refid="classBWindow_1a08765e38e5cd5f37e19981d217b985d3" prot="public" virt="non-virtual"><scope>BAlert</scope><name>HasShortcut</name></member>
      <member refid="classBWindow_1a53b85e4d43d34e5259b3b16ff6c52b32" prot="public" virt="virtual"><scope>BAlert</scope><name>Hide</name></member>
      <member refid="classBLooper_1a3061534f6d2f3186efca4cddd19f378f" prot="public" virt="non-virtual"><scope>BAlert</scope><name>IndexOf</name></member>
      <member refid="classBAlert_1ad74d6975c67e14f290e7fcbfb3857143" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Instantiate</name></member>
      <member refid="classBWindow_1a6abf2efb0ab304b75d72df3b6a2b9df3" prot="public" virt="non-virtual"><scope>BAlert</scope><name>InvalidateLayout</name></member>
      <member refid="classBWindow_1ae5d1ae4e9598ed736c557031b92753ce" prot="public" virt="non-virtual"><scope>BAlert</scope><name>InViewTransaction</name></member>
      <member refid="classBWindow_1abbaa2f20d86a5c4d12591fefef0c49fa" prot="public" virt="non-virtual"><scope>BAlert</scope><name>IsActive</name></member>
      <member refid="classBWindow_1a54158d02e55dbeb212ccf9af5b5a2f23" prot="public" virt="non-virtual"><scope>BAlert</scope><name>IsFloating</name></member>
      <member refid="classBWindow_1a61ab745cf98f47cac71ed3b750d4d21f" prot="public" virt="non-virtual"><scope>BAlert</scope><name>IsFront</name></member>
      <member refid="classBWindow_1ae92c2b3b1340af7740b7c4e3e14dcd30" prot="public" virt="non-virtual"><scope>BAlert</scope><name>IsHidden</name></member>
      <member refid="classBLooper_1a525d6677c2fc76a84c2d48853dad142a" prot="public" virt="non-virtual"><scope>BAlert</scope><name>IsLocked</name></member>
      <member refid="classBLooper_1a27fd22b9eeaeadbeff1e973ed5242a64" prot="public" virt="non-virtual"><scope>BAlert</scope><name>IsMessageWaiting</name></member>
      <member refid="classBWindow_1a6c209b1d5ab1b82f43993074b1373678" prot="public" virt="non-virtual"><scope>BAlert</scope><name>IsMinimized</name></member>
      <member refid="classBWindow_1aa10b6592ab7e291ce7152a72605c68fa" prot="public" virt="non-virtual"><scope>BAlert</scope><name>IsModal</name></member>
      <member refid="classBWindow_1a61d9b0d1e0de31231b835cc5293f8ed2" prot="public" virt="non-virtual"><scope>BAlert</scope><name>IsOffscreenWindow</name></member>
      <member refid="classBHandler_1a581b84f0f067afa88768ce6a0c07f59f" prot="public" virt="non-virtual"><scope>BAlert</scope><name>IsWatched</name></member>
      <member refid="classBWindow_1a3f4cf14e9f6453e63b58acfd7098941c" prot="public" virt="non-virtual"><scope>BAlert</scope><name>KeyMenuBar</name></member>
      <member refid="classBWindow_1a59ef137725976cea5008e5efd683357e" prot="public" virt="non-virtual"><scope>BAlert</scope><name>LastMouseMovedView</name></member>
      <member refid="classBWindow_1ae3f008c018e413d75ddea1a60b0c9df7" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Layout</name></member>
      <member refid="classBLooper_1a757a3e406ea3b7bb9a1ad16d04689b1d" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Lock</name></member>
      <member refid="classBLooper_1a1d5d9dbc9d890ed1329b69fbfe9254b3" prot="public" virt="non-virtual"><scope>BAlert</scope><name>LockingThread</name></member>
      <member refid="classBHandler_1a9d64bf66b4914918e24390d117e83477" prot="public" virt="non-virtual"><scope>BAlert</scope><name>LockLooper</name></member>
      <member refid="classBHandler_1afa0099ff6defcb6d64e3ee1c2fb47afe" prot="public" virt="non-virtual"><scope>BAlert</scope><name>LockLooperWithTimeout</name></member>
      <member refid="classBLooper_1a734cdb06bfe92efdea24528c9b43bfc1" prot="public" virt="non-virtual"><scope>BAlert</scope><name>LockWithTimeout</name></member>
      <member refid="classBWindow_1a056fe3233f883b1c4518619e59d825cd" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Look</name></member>
      <member refid="classBLooper_1a5cb1d2eb7640fdcbc1085ad19583691d" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Loop</name></member>
      <member refid="classBHandler_1ac8e949959b12e602e3b0c4f023c60e6c" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Looper</name></member>
      <member refid="classBLooper_1acf16bb9628e7dbbace3920ebeff6dc34" prot="public" virt="non-virtual"><scope>BAlert</scope><name>LooperForThread</name></member>
      <member refid="classBWindow_1a981d5c2993f4514fbcd1bdaf297a2a2d" prot="public" virt="virtual"><scope>BAlert</scope><name>MenusBeginning</name></member>
      <member refid="classBWindow_1a7bb882de172223e68ee6249596b80564" prot="public" virt="virtual"><scope>BAlert</scope><name>MenusEnded</name></member>
      <member refid="classBLooper_1a1be73aad8e8fed41659b98633525e5b3" prot="protected" virt="non-virtual"><scope>BAlert</scope><name>MessageFromPort</name></member>
      <member refid="classBLooper_1ad0643973ceda5cca540c4684a9f670ac" prot="public" virt="non-virtual"><scope>BAlert</scope><name>MessageQueue</name></member>
      <member refid="classBAlert_1a1300fdf51e73dd4f8a24b908d6fc2e1e" prot="public" virt="virtual"><scope>BAlert</scope><name>MessageReceived</name></member>
      <member refid="classBWindow_1aabe75f91b52b94de6989b4cf49bd89b5" prot="public" virt="virtual"><scope>BAlert</scope><name>Minimize</name></member>
      <member refid="classBWindow_1a146584fa5815bd413f71671f33a9de89" prot="public" virt="non-virtual"><scope>BAlert</scope><name>MoveBy</name></member>
      <member refid="classBWindow_1ae426291c30652864d0a464518f9cda12" prot="public" virt="non-virtual"><scope>BAlert</scope><name>MoveOnScreen</name></member>
      <member refid="classBWindow_1ae81b509d6ee2eb29b9a703c75ef07ee5" prot="public" virt="non-virtual"><scope>BAlert</scope><name>MoveTo</name></member>
      <member refid="classBWindow_1af419313a1b9b73a2c1cdb2365ff16189" prot="public" virt="non-virtual"><scope>BAlert</scope><name>MoveTo</name></member>
      <member refid="classBHandler_1a40b246ac272e09b2f641d1290be21200" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Name</name></member>
      <member refid="classBWindow_1a9c03d9a6a454edec5eb38657e5c66490" prot="public" virt="non-virtual"><scope>BAlert</scope><name>NeedsUpdate</name></member>
      <member refid="classBHandler_1a92855d8f88f6072e7225bde292feaa38" prot="public" virt="non-virtual"><scope>BAlert</scope><name>NextHandler</name></member>
      <member refid="classBAlert_1a3d2769c5bf9b9822f21770e38e561fd6" prot="public" virt="virtual"><scope>BAlert</scope><name>Perform</name></member>
      <member refid="classBLooper_1a0de6737bfbf8a8b4913adc8c74bb544e" prot="public" virt="non-virtual"><scope>BAlert</scope><name>PostMessage</name></member>
      <member refid="classBLooper_1ae79a7818ce950d8edcd238f7948df020" prot="public" virt="non-virtual"><scope>BAlert</scope><name>PostMessage</name></member>
      <member refid="classBLooper_1a2dc16ecf211eb7e32eaa4b08863e856d" prot="public" virt="non-virtual"><scope>BAlert</scope><name>PostMessage</name></member>
      <member refid="classBLooper_1ac75eed80e72b236650f19b4015de6e99" prot="public" virt="non-virtual"><scope>BAlert</scope><name>PostMessage</name></member>
      <member refid="classBLooper_1af1a4af6872abc40a887bfcabd55aff98" prot="public" virt="non-virtual"><scope>BAlert</scope><name>PreferredHandler</name></member>
      <member refid="classBWindow_1a8ea37743fc8c09aab2a511a7c14fa9c4" prot="public" virt="non-virtual"><scope>BAlert</scope><name>PulseRate</name></member>
      <member refid="classBAlert_1a691fe42dc7dc5acea09771e9c080dd0e" prot="public" virt="virtual"><scope>BAlert</scope><name>Quit</name></member>
      <member refid="classBAlert_1ae91bb7bb3b99006f0b2616d47cf85985" prot="public" virt="virtual"><scope>BAlert</scope><name>QuitRequested</name></member>
      <member refid="classBWindow_1ac271fe9be15e5d6e0a5d59b7b2ed3e8d" prot="public" virt="non-virtual"><scope>BAlert</scope><name>RemoveChild</name></member>
      <member refid="classBLooper_1ad2233fa143e9deff912bff39eebac4a2" prot="public" virt="virtual"><scope>BAlert</scope><name>RemoveCommonFilter</name></member>
      <member refid="classBHandler_1a2b608135b27f283802648e7c6f8cdc83" prot="public" virt="virtual"><scope>BAlert</scope><name>RemoveFilter</name></member>
      <member refid="classBWindow_1af9ef1e4afee9bfde7c7d9d8e2796c2de" prot="public" virt="non-virtual"><scope>BAlert</scope><name>RemoveFromSubset</name></member>
      <member refid="classBLooper_1a5af57140bf018388a2e64343f46ac330" prot="public" virt="non-virtual"><scope>BAlert</scope><name>RemoveHandler</name></member>
      <member refid="classBWindow_1a81d5e6ed3a8a7b7f5013055bf69593ba" prot="public" virt="non-virtual"><scope>BAlert</scope><name>RemoveShortcut</name></member>
      <member refid="classBWindow_1a6aba4ddafc654f362799b6a96e6c76cd" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ResizeBy</name></member>
      <member refid="classBWindow_1a31e2ea325258646128cfe8618cb79edc" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ResizeTo</name></member>
      <member refid="classBWindow_1a68db6173b92973252fc1876c5376bcd4" prot="public" virt="non-virtual"><scope>BAlert</scope><name>ResizeToPreferred</name></member>
      <member refid="classBAlert_1a22285daeb96ea0936faab97b077115e6" prot="public" virt="virtual"><scope>BAlert</scope><name>ResolveSpecifier</name></member>
      <member refid="classBWindow_1ae49c02ad870d55514c800631b37b97cf" prot="public" virt="virtual"><scope>BAlert</scope><name>Run</name></member>
      <member refid="classBWindow_1ab53cad2a56a967f0a52d5603d806561b" prot="public" virt="virtual"><scope>BAlert</scope><name>ScreenChanged</name></member>
      <member refid="classBLooper_1aa96df67561b0ce1428ae45148c21e01f" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Sem</name></member>
      <member refid="classBWindow_1a88c3aa6ee3ea29d7868bafec749f891e" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SendBehind</name></member>
      <member refid="classBHandler_1a71bf72dc17a64bcd42656722271a9e0c" prot="public" virt="virtual"><scope>BAlert</scope><name>SendNotices</name></member>
      <member refid="classBAlert_1ab60c14ca88c918c2342c9d36aa9140be" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetButtonSpacing</name></member>
      <member refid="classBAlert_1a199223f27db65b5a3e34f9288f9957d3" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetButtonWidth</name></member>
      <member refid="classBLooper_1a9b39e686873763cc6491c91f77b177b7" prot="public" virt="virtual"><scope>BAlert</scope><name>SetCommonFilterList</name></member>
      <member refid="classBWindow_1aecfdd5136ed18c193357a8e3130ba578" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetDecoratorSettings</name></member>
      <member refid="classBWindow_1ab6c969b403bd24dc8b1e9d846a4ae414" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetDefaultButton</name></member>
      <member refid="classBWindow_1a2317402cb859f5a438bc69e186ee2f04" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetFeel</name></member>
      <member refid="classBHandler_1a503344dc801858e1f5f419be3919e9cf" prot="public" virt="virtual"><scope>BAlert</scope><name>SetFilterList</name></member>
      <member refid="classBWindow_1a8f0caf4693a1952ac9bbe9a52bfdd778" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetFlags</name></member>
      <member refid="classBAlert_1a11927f603083674e1cd2e51f91258320" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetIcon</name></member>
      <member refid="classBWindow_1aa1e9322c76ffdad1886253171f8a5972" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetKeyMenuBar</name></member>
      <member refid="classBWindow_1ad0e630f2691a0f7919b809b7ea265095" prot="public" virt="virtual"><scope>BAlert</scope><name>SetLayout</name></member>
      <member refid="classBWindow_1ac9ca5f4b8a78f95403dbc35ad9728e0c" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetLook</name></member>
      <member refid="classBHandler_1abf861126df4b6e71b9261a99da4ad0eb" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetName</name></member>
      <member refid="classBHandler_1a02f78779c8141987d6030e73c22e734a" prot="public" virt="virtual"><scope>BAlert</scope><name>SetNextHandler</name></member>
      <member refid="classBLooper_1a07c6e5c65354b48465fde2b0b44e22c6" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetPreferredHandler</name></member>
      <member refid="classBWindow_1ad69001922aad8daf7b65f82eb4b439f0" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetPulseRate</name></member>
      <member refid="classBAlert_1a1e7ca339e7ee4e76f8b9aaf39fc4adec" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetShortcut</name></member>
      <member refid="classBWindow_1a8668ecf18ad145391f66704c3339eb3d" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetSizeLimits</name></member>
      <member refid="classBAlert_1af0c80f0842d0b78e4b44971b6c31ed68" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetText</name></member>
      <member refid="classBWindow_1a7cd4bf7dc0079e9a52b0ac1e7e2f897b" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetTitle</name></member>
      <member refid="classBAlert_1a70c5c724cddc47f3bf5999a2170f960d" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetType</name></member>
      <member refid="classBWindow_1a0f8f96c37d83e8df9e97c25a69c68295" prot="public" virt="non-virtual" ambiguityscope="BWindow::"><scope>BAlert</scope><name>SetType</name></member>
      <member refid="classBWindow_1a91d42de7f54efe1399c3838d35162d20" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetWindowAlignment</name></member>
      <member refid="classBWindow_1a3549fdb63a64637fa8e2054e8c21272d" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetWorkspaces</name></member>
      <member refid="classBWindow_1ad3c2e560e41b377456faf9bd5dabcdc0" prot="public" virt="non-virtual"><scope>BAlert</scope><name>SetZoomLimits</name></member>
      <member refid="classBAlert_1a306e3bbb3ea57cd3871cb67bf78ac549" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Shortcut</name></member>
      <member refid="classBWindow_1af7009117df50add72cf0e799ff7d0fa5" prot="public" virt="virtual"><scope>BAlert</scope><name>Show</name></member>
      <member refid="classBWindow_1afc61a0c6129f233e56fa373107bd8790" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Size</name></member>
      <member refid="classBHandler_1af7d600e33a0586af7444d9abc8500504" prot="public" virt="non-virtual"><scope>BAlert</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a20713ff6ee9df49a014f391374eaf689" prot="public" virt="non-virtual"><scope>BAlert</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a58d7c8d30e47fbb7590f10dea1f21166" prot="public" virt="non-virtual"><scope>BAlert</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a31927c51d89e0e3b3bf609a786ee6c3b" prot="public" virt="non-virtual"><scope>BAlert</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a9d1f0d55b3dc7337058aba769b4e4f93" prot="public" virt="non-virtual"><scope>BAlert</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1ad3544be491270f856a0af8d36ce02d78" prot="public" virt="non-virtual"><scope>BAlert</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1a199c167e0dcee95aa65d09435804b3d9" prot="public" virt="non-virtual"><scope>BAlert</scope><name>StopWatchingAll</name></member>
      <member refid="classBHandler_1a8b9a424ce63f5932666094b6eadf10cf" prot="public" virt="non-virtual"><scope>BAlert</scope><name>StopWatchingAll</name></member>
      <member refid="classBWindow_1a332bea9ef16fedc16134bf587b52fa09" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Sync</name></member>
      <member refid="classBLooper_1afeb7a4900f26e7746d6c8bdb5cf684f3" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Team</name></member>
      <member refid="classBAlert_1a2f694fe620286bc15276d9ecb9a63561" prot="public" virt="non-virtual"><scope>BAlert</scope><name>TextView</name></member>
      <member refid="classBLooper_1a257d396d04d128edf7a0c9669ead36c0" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Thread</name></member>
      <member refid="classBWindow_1a73c7a05ef33d579de61b83b5daaf3c6b" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Title</name></member>
      <member refid="classBAlert_1a431c183c6c71fdfaac3a9d762bdb51c9" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Type</name></member>
      <member refid="classBLooper_1ac84ea15405640082b9fda58f6672467c" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Unlock</name></member>
      <member refid="classBHandler_1ab131af7eb7aa2b9eea3a11ac1bfd4c03" prot="public" virt="non-virtual"><scope>BAlert</scope><name>UnlockLooper</name></member>
      <member refid="classBWindow_1a49b0c49eeef751b17bdc08d2e4d58cb9" prot="public" virt="non-virtual"><scope>BAlert</scope><name>UpdateIfNeeded</name></member>
      <member refid="classBWindow_1a99df6b9964c69b1c69c47fab6262abee" prot="public" virt="non-virtual"><scope>BAlert</scope><name>UpdateSizeLimits</name></member>
      <member refid="classBWindow_1a0a17d973a17bb8d3aef09d45d58a9aca" prot="public" virt="virtual"><scope>BAlert</scope><name>WindowActivated</name></member>
      <member refid="classBWindow_1ac3c293ef3d60df9b3125fb15d0c67cf7" prot="public" virt="virtual"><scope>BAlert</scope><name>WorkspaceActivated</name></member>
      <member refid="classBWindow_1aba3b83e88043338b66c2b2f501fbbbee" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Workspaces</name></member>
      <member refid="classBWindow_1af8dc496d4239a2c343a364a4ad9aabc4" prot="public" virt="virtual"><scope>BAlert</scope><name>WorkspacesChanged</name></member>
      <member refid="classBWindow_1ae7bea03df00c760d7f489acd3e312290" prot="public" virt="virtual"><scope>BAlert</scope><name>Zoom</name></member>
      <member refid="classBWindow_1a722772f2902e82bf65010ac2c13570bc" prot="public" virt="non-virtual"><scope>BAlert</scope><name>Zoom</name></member>
      <member refid="classBAlert_1aa185011f234afddaff64f15bd3a7d25e" prot="public" virt="virtual"><scope>BAlert</scope><name>~BAlert</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BAlert</scope><name>~BArchivable</name></member>
      <member refid="classBHandler_1a928254034959d19ef588b7898a6f8194" prot="public" virt="virtual"><scope>BAlert</scope><name>~BHandler</name></member>
      <member refid="classBLooper_1ab2fa21c0315644144f55523adbdc0457" prot="public" virt="virtual"><scope>BAlert</scope><name>~BLooper</name></member>
      <member refid="classBWindow_1a896913784046fcfde7d1f8891e54af08" prot="public" virt="virtual"><scope>BAlert</scope><name>~BWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
