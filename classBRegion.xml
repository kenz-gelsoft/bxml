<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBRegion" kind="class" language="C++" prot="public">
    <compoundname>BRegion</compoundname>
      <sectiondef kind="user-defined">
      <header>Operators</header>
      <memberdef kind="function" id="classBRegion_1add50fc8573429395207c289fbc44e6c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBRegion" kindref="compound">BRegion</ref> &amp;</type>
        <definition>BRegion &amp; BRegion::operator=</definition>
        <argsstring>(const BRegion &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BRegion::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBRegion" kindref="compound">BRegion</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Modifies the <ref refid="classBRegion" kindref="compound">BRegion</ref> to be a copy of <emphasis>other</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classBRegion" kindref="compound">BRegion</ref> to copy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This method always returns <computeroutput>*this</computeroutput>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="34" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a12e4ebc4f6f2d52a81b525242541ed39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BRegion::operator==</definition>
        <argsstring>(const BRegion &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>BRegion::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classBRegion" kindref="compound">BRegion</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares this region to <emphasis>other</emphasis> by value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classBRegion" kindref="compound">BRegion</ref> to compare to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the regions are the same, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="35" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBRegion_1a001371fc88b73bbcaaef451a2f3a3780" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BDirectWindow</definition>
        <argsstring></argsstring>
        <name>BDirectWindow</name>
        <qualifiedname>BRegion::BDirectWindow</qualifiedname>
        <param>
          <type><ref refid="classBDirectWindow" kindref="compound">BDirectWindow</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="80" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Region.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBRegion_1af4d6656293666d7d906fda87f0b4a8d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BPrivate::LinkReceiver</definition>
        <argsstring></argsstring>
        <name>BPrivate::LinkReceiver</name>
        <qualifiedname>BRegion::LinkReceiver</qualifiedname>
        <param>
          <type>BPrivate::LinkReceiver</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="82" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Region.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBRegion_1af2e93092ef4a500040964808a885fb19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BPrivate::ServerLink</definition>
        <argsstring></argsstring>
        <name>BPrivate::ServerLink</name>
        <qualifiedname>BRegion::ServerLink</qualifiedname>
        <param>
          <type>BPrivate::ServerLink</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="81" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Region.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBRegion_1a4303ef65e3d088cbff0512dfbf3734ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Support</definition>
        <argsstring></argsstring>
        <name>Support</name>
        <qualifiedname>BRegion::Support</qualifiedname>
        <param>
          <type>Support</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="85" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Region.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBRegion_1a38f71ab9460f623e9d1cf753ee6ba8cf" prot="private" static="no" mutable="no">
        <type>clipping_rect</type>
        <definition>clipping_rect BRegion::fBounds</definition>
        <argsstring></argsstring>
        <name>fBounds</name>
        <qualifiedname>BRegion::fBounds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="101" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Region.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBRegion_1a2aac9a16badadcd583a87a1634856d00" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BRegion::fCount</definition>
        <argsstring></argsstring>
        <name>fCount</name>
        <qualifiedname>BRegion::fCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="99" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Region.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBRegion_1a07af048568964e5c46e16518d1e0465b" prot="private" static="no" mutable="no">
        <type>clipping_rect *</type>
        <definition>clipping_rect* BRegion::fData</definition>
        <argsstring></argsstring>
        <name>fData</name>
        <qualifiedname>BRegion::fData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="102" column="14" bodyfile="/boot/home/src/haiku/headers/os/interface/Region.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBRegion_1a9463875b1d06490bdd699aed7e0723cc" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BRegion::fDataSize</definition>
        <argsstring></argsstring>
        <name>fDataSize</name>
        <qualifiedname>BRegion::fDataSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="100" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/Region.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBRegion_1a7e2dbbec42e8891a69d4ba663aaa80e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BRegion::BRegion</definition>
        <argsstring>()</argsstring>
        <name>BRegion</name>
        <qualifiedname>BRegion::BRegion</qualifiedname>
        <briefdescription>
<para>Initializes an empty region. The region contains no rectangles, and its bounds are invalid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a2a66bf43339ff0dcf20d51e494b5fd2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BRegion::BRegion</definition>
        <argsstring>(const BRect rect)</argsstring>
        <name>BRegion</name>
        <qualifiedname>BRegion::BRegion</qualifiedname>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Initializes a region to contain a <emphasis>rect</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBRect" kindref="compound">BRect</ref> to add to the region.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R5 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1af595eadeb97cc1fb7a027a6a34b5010e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BRegion::BRegion</definition>
        <argsstring>(const BRegion &amp;other)</argsstring>
        <name>BRegion</name>
        <qualifiedname>BRegion::BRegion</qualifiedname>
        <param>
          <type>const <ref refid="classBRegion" kindref="compound">BRegion</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Initializes a region as a copy of <emphasis>other</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The region to copy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a63437394f71585ab815bcc409db0a748" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BRegion::~BRegion</definition>
        <argsstring>()</argsstring>
        <name>~BRegion</name>
        <qualifiedname>BRegion::~BRegion</qualifiedname>
        <briefdescription>
<para>Destroys the <ref refid="classBRegion" kindref="compound">BRegion</ref> freeing any memory allocated by it. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="32" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1ac5ec6b249865caa8da950fe6752585f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BRegion::Contains</definition>
        <argsstring>(BPoint point) const</argsstring>
        <name>Contains</name>
        <qualifiedname>BRegion::Contains</qualifiedname>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Returns whether or not if the region contains the given <emphasis>point</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>point</emphasis> to check.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the region contains the <emphasis>point</emphasis>, <computeroutput>false</computeroutput> if not.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="54" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a5250e6954c464d7715bbdb55cd813347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BRegion::Contains</definition>
        <argsstring>(int32 x, int32 y)</argsstring>
        <name>Contains</name>
        <qualifiedname>BRegion::Contains</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the region contains the given coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>x</computeroutput> coordinate of the point to check. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>y</computeroutput> coordinate of the point to check.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the region contains the point, <computeroutput>false</computeroutput> if not.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="55" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1af03b71a7cc5140f88221abb5145ce2dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BRegion::Contains</definition>
        <argsstring>(int32 x, int32 y) const</argsstring>
        <name>Contains</name>
        <qualifiedname>BRegion::Contains</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Return whether or not the region contains the given coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>x</computeroutput> coordinate of the point to check. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>y</computeroutput> coordinate of the point to check.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the region contains the point, <computeroutput>false</computeroutput> if not.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="56" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1ae1bf831e6482828a2ec47118806dff96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BRegion::CountRects</definition>
        <argsstring>()</argsstring>
        <name>CountRects</name>
        <qualifiedname>BRegion::CountRects</qualifiedname>
        <briefdescription>
<para>Returns the number of rectangles contained in the region. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of rectangles in the region as an int32.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="48" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a54a4a57f4d638e50b8cc83a854d7edab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BRegion::CountRects</definition>
        <argsstring>() const</argsstring>
        <name>CountRects</name>
        <qualifiedname>BRegion::CountRects</qualifiedname>
        <briefdescription>
<para>Returns the number of rectangles contained in the region. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of rectangles in the region as an int32.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="49" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a9bd228331fe056ac7c6e320e561c5d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::Exclude</definition>
        <argsstring>(BRect rect)</argsstring>
        <name>Exclude</name>
        <qualifiedname>BRegion::Exclude</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Modifies the region excluding the area of the given <emphasis>rect</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBRect" kindref="compound">BRect</ref> to be excluded.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="71" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a94ac7e39ced930992a055f49a1d9d8ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::Exclude</definition>
        <argsstring>(clipping_rect clipping)</argsstring>
        <name>Exclude</name>
        <qualifiedname>BRegion::Exclude</qualifiedname>
        <param>
          <type>clipping_rect</type>
          <declname>clipping</declname>
        </param>
        <briefdescription>
<para>Modifies the region excluding the area of the given <emphasis>clipping</emphasis> rectangle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clipping</parametername>
</parameternamelist>
<parameterdescription>
<para>The clipping_rect to be excluded.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="72" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a82519f0df83c965841589567e2c89af0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::Exclude</definition>
        <argsstring>(const BRegion *region)</argsstring>
        <name>Exclude</name>
        <qualifiedname>BRegion::Exclude</qualifiedname>
        <param>
          <type>const <ref refid="classBRegion" kindref="compound">BRegion</ref> *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
<para>Modifies the region excluding the area contained by the given <emphasis>region</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>region</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBRegion" kindref="compound">BRegion</ref> to be excluded.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="73" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1ae581bbadfb610cdaf9c019505976565b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::ExclusiveInclude</definition>
        <argsstring>(const BRegion *region)</argsstring>
        <name>ExclusiveInclude</name>
        <qualifiedname>BRegion::ExclusiveInclude</qualifiedname>
        <param>
          <type>const <ref refid="classBRegion" kindref="compound">BRegion</ref> *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
<para>Modifies the region so that it contains only the area which the <ref refid="classBRegion" kindref="compound">BRegion</ref> and <emphasis>region</emphasis> do NOT have in common. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>region</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classBRegion" kindref="compound">BRegion</ref> to exclusively include.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="77" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1ad7f1cba70c1fce88291b70b4ff1fb455" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BRegion::Frame</definition>
        <argsstring>() const</argsstring>
        <name>Frame</name>
        <qualifiedname>BRegion::Frame</qualifiedname>
        <briefdescription>
<para>Returns a rectangle that encloses the <ref refid="classBRegion" kindref="compound">BRegion</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="classBRect" kindref="compound">BRect</ref> that encloses the <ref refid="classBRegion" kindref="compound">BRegion</ref>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="40" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a159da8dc4f9756d60e18a6d0be467c2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>clipping_rect</type>
        <definition>clipping_rect BRegion::FrameInt</definition>
        <argsstring>() const</argsstring>
        <name>FrameInt</name>
        <qualifiedname>BRegion::FrameInt</qualifiedname>
        <briefdescription>
<para>Returns the bounds of the region as a clipping_rect (which has integer coordinates). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The clipping_rect which represents the region&apos;s bounds.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="41" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a9dff47818a7d5aa679316ce15395a4df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::Include</definition>
        <argsstring>(BRect rect)</argsstring>
        <name>Include</name>
        <qualifiedname>BRegion::Include</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Modifies the region so that it includes the given <emphasis>rect</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBRect" kindref="compound">BRect</ref> to include in the region.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="67" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1ad28b6747c731733f8e4849aed4b80f05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::Include</definition>
        <argsstring>(clipping_rect clipping)</argsstring>
        <name>Include</name>
        <qualifiedname>BRegion::Include</qualifiedname>
        <param>
          <type>clipping_rect</type>
          <declname>clipping</declname>
        </param>
        <briefdescription>
<para>Modifies the region so that it includes the given <emphasis>clipping</emphasis> rectangle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clipping</parametername>
</parameternamelist>
<parameterdescription>
<para>The clipping_rect to include in the region.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="68" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1accebfca3556d27adf1bea45c5726104d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::Include</definition>
        <argsstring>(const BRegion *region)</argsstring>
        <name>Include</name>
        <qualifiedname>BRegion::Include</qualifiedname>
        <param>
          <type>const <ref refid="classBRegion" kindref="compound">BRegion</ref> *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
<para>Modifies the region to include the area of the given <emphasis>region</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>region</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>region</emphasis> to be included.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="69" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a72d7028553a319a07cad042500b1fedc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BRegion::Intersects</definition>
        <argsstring>(BRect rect) const</argsstring>
        <name>Intersects</name>
        <qualifiedname>BRegion::Intersects</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the region has any area in common with <emphasis>rect</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBRect" kindref="compound">BRect</ref> to check the region against.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the region has any area in common with the <ref refid="classBRect" kindref="compound">BRect</ref>, <computeroutput>false</computeroutput> if not.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="51" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a3968004110456b591b5d57088667b16a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BRegion::Intersects</definition>
        <argsstring>(clipping_rect clipping) const</argsstring>
        <name>Intersects</name>
        <qualifiedname>BRegion::Intersects</qualifiedname>
        <param>
          <type>clipping_rect</type>
          <declname>clipping</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the region has any area in common with <emphasis>clipping</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clipping</parametername>
</parameternamelist>
<parameterdescription>
<para>The clipping_rect to check the region against.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the region has any area in common with the clipping_rect, <computeroutput>false</computeroutput> if not.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="52" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1acb9334810e022225f2dde3387113ba1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::IntersectWith</definition>
        <argsstring>(const BRegion *region)</argsstring>
        <name>IntersectWith</name>
        <qualifiedname>BRegion::IntersectWith</qualifiedname>
        <param>
          <type>const <ref refid="classBRegion" kindref="compound">BRegion</ref> *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
<para>Modifies the region, so that it will contain only the area in common with <emphasis>region</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>region</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classBRegion" kindref="compound">BRegion</ref> to intersect with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="75" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a80c4adc8af0be406eb93ac3be6b9c974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::MakeEmpty</definition>
        <argsstring>()</argsstring>
        <name>MakeEmpty</name>
        <qualifiedname>BRegion::MakeEmpty</qualifiedname>
        <briefdescription>
<para>Empties the region so that it doesn&apos;t containt any rects, and invalidates its bounds. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="65" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1ac67b9f13dd014b8d878777f84e6707be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::OffsetBy</definition>
        <argsstring>(const BPoint &amp;point)</argsstring>
        <name>OffsetBy</name>
        <qualifiedname>BRegion::OffsetBy</qualifiedname>
        <param>
          <type>const <ref refid="classBPoint" kindref="compound">BPoint</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Applies the given offsets given by the x and y coordinates of <emphasis>point</emphasis> to each rectangle contained in the region and recalculates the region&apos;s bounds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point to get the coordinates to offset by.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="60" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a9834ddaf5c57a59336f73be8a59359ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::OffsetBy</definition>
        <argsstring>(int32 x, int32 y)</argsstring>
        <name>OffsetBy</name>
        <qualifiedname>BRegion::OffsetBy</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Applies the given <emphasis>x</emphasis> and <emphasis>y</emphasis> offsets to each rectangle contained in the region and recalculates the region&apos;s bounds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The horizontal offset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The vertical offset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="61" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a7a03684ac6222a879520756f1f055e86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::PrintToStream</definition>
        <argsstring>() const</argsstring>
        <name>PrintToStream</name>
        <qualifiedname>BRegion::PrintToStream</qualifiedname>
        <briefdescription>
<para>Prints each rect in the the <ref refid="classBRegion" kindref="compound">BRegion</ref> to standard output. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="58" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1ab6dac50d37813cc2040647aa31c6c272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BRegion::RectAt</definition>
        <argsstring>(int32 index)</argsstring>
        <name>RectAt</name>
        <qualifiedname>BRegion::RectAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the rectangle contained in the region at the given <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the <ref refid="classBRect" kindref="compound">BRect</ref> to retreive.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the given index is valid, it returns the <ref refid="classBRect" kindref="compound">BRect</ref> at that index, otherwise, it returns an invalid <ref refid="classBRect" kindref="compound">BRect</ref>.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="43" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a286dadbfd8551f17f0f5daebce1e5e38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
        <definition>BRect BRegion::RectAt</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>RectAt</name>
        <qualifiedname>BRegion::RectAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the rectangle contained in the region at the given <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the <ref refid="classBRect" kindref="compound">BRect</ref> to retreive. (zero based)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the given index is valid, it returns the <ref refid="classBRect" kindref="compound">BRect</ref> at that index, otherwise, it returns an invalid <ref refid="classBRect" kindref="compound">BRect</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="44" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1aa7a2c1714034f92aab812245b68ed3e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>clipping_rect</type>
        <definition>clipping_rect BRegion::RectAtInt</definition>
        <argsstring>(int32 index)</argsstring>
        <name>RectAtInt</name>
        <qualifiedname>BRegion::RectAtInt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the clipping_rect contained in the region at the given <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the clipping_rect to retrieve. (zero based)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the given index is valid, it returns the clipping_rect at that index, otherwise, it returns an invalid clipping_rect.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="45" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a0af40dc7dc7b76172ba5b75056b935b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>clipping_rect</type>
        <definition>clipping_rect BRegion::RectAtInt</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>RectAtInt</name>
        <qualifiedname>BRegion::RectAtInt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the clipping_rect contained in the region at the given <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the clipping_rect to retrieve. (zero based)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the given index is valid, it returns the clipping_rect at that index, otherwise, it returns an invalid clipping_rect.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="46" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1ada9797eac56d69d41d46570701cf3f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::ScaleBy</definition>
        <argsstring>(BSize scale)</argsstring>
        <name>ScaleBy</name>
        <qualifiedname>BRegion::ScaleBy</qualifiedname>
        <param>
          <type><ref refid="classBSize" kindref="compound">BSize</ref></type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Resize each of the contained rectangles by the given factor and recalculates the region&apos;s bounds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale factor</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="62" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a4a49d3cc8249eb64d953353955f44f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::ScaleBy</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>ScaleBy</name>
        <qualifiedname>BRegion::ScaleBy</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Resize each of the contained rectangles by the given factors and recalculates the region&apos;s bounds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The horizontal scale. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The vertical scale.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="63" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a43e6180761175f1398885d8828385182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::Set</definition>
        <argsstring>(BRect rect)</argsstring>
        <name>Set</name>
        <qualifiedname>BRegion::Set</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Set the region to bounds of <emphasis>newBounds</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBRect" kindref="compound">BRect</ref> to set the bounds to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1af645a90814cfeb2b13345fa59f049f95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::Set</definition>
        <argsstring>(clipping_rect clipping)</argsstring>
        <name>Set</name>
        <qualifiedname>BRegion::Set</qualifiedname>
        <param>
          <type>clipping_rect</type>
          <declname>clipping</declname>
        </param>
        <briefdescription>
<para>Set the region to the bounds of <emphasis>clipping_rect</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clipping</parametername>
</parameternamelist>
<parameterdescription>
<para>The clipping_rect to set the bounds to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="38" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBRegion_1a4158ecb6ac6c51585bb32bb79343dac0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BRegion::BRegion</definition>
        <argsstring>(const clipping_rect &amp;clipping)</argsstring>
        <name>BRegion</name>
        <qualifiedname>BRegion::BRegion</qualifiedname>
        <param>
          <type>const clipping_rect &amp;</type>
          <declname>clipping</declname>
        </param>
        <briefdescription>
<para>Initializes a region to contain a clipping_rect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clipping</parametername>
</parameternamelist>
<parameterdescription>
<para>The clipping_rect to set the region to, already in internal rect format.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a80ea5e958e0cc883fa0fb016ee4bbd8e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BRegion::_AdoptRegionData</definition>
        <argsstring>(BRegion &amp;region)</argsstring>
        <name>_AdoptRegionData</name>
        <qualifiedname>BRegion::_AdoptRegionData</qualifiedname>
        <param>
          <type><ref refid="classBRegion" kindref="compound">BRegion</ref> &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="90" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a1cc1f5be8d0f1da10867a6ed256f8ab6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>clipping_rect</type>
        <definition>clipping_rect BRegion::_Convert</definition>
        <argsstring>(const BRect &amp;rect) const</argsstring>
        <name>_Convert</name>
        <qualifiedname>BRegion::_Convert</qualifiedname>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="93" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1acb9444be2e92175ee95c90972bca31aa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>clipping_rect</type>
        <definition>clipping_rect BRegion::_ConvertToInternal</definition>
        <argsstring>(const BRect &amp;rect) const</argsstring>
        <name>_ConvertToInternal</name>
        <qualifiedname>BRegion::_ConvertToInternal</qualifiedname>
        <param>
          <type>const <ref refid="classBRect" kindref="compound">BRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="94" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a8e5b6f5507e5b7cef71d3438a456fbf0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>clipping_rect</type>
        <definition>clipping_rect BRegion::_ConvertToInternal</definition>
        <argsstring>(const clipping_rect &amp;rect) const</argsstring>
        <name>_ConvertToInternal</name>
        <qualifiedname>BRegion::_ConvertToInternal</qualifiedname>
        <param>
          <type>const clipping_rect &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="95" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBRegion_1a07c5c1b0a834bcbf6ff56c6f2046bd8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BRegion::_SetSize</definition>
        <argsstring>(int32 newSize)</argsstring>
        <name>_SetSize</name>
        <qualifiedname>BRegion::_SetSize</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>newSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="91" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An area composed of rectangles. </para>
    </briefdescription>
    <detaileddescription>
<para>The rectangles do not need to overlap. This class is useful for creating clipping masks.</para>
<para><simplesect kind="warning"><para><ref refid="classBRegion" kindref="compound">BRegion</ref> is designed to be used with integral coordinates only.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/interface/Region.h" line="27" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/Region.h" bodystart="27" bodyend="103"/>
    <listofallmembers>
      <member refid="classBRegion_1a80ea5e958e0cc883fa0fb016ee4bbd8e" prot="private" virt="non-virtual"><scope>BRegion</scope><name>_AdoptRegionData</name></member>
      <member refid="classBRegion_1a1cc1f5be8d0f1da10867a6ed256f8ab6" prot="private" virt="non-virtual"><scope>BRegion</scope><name>_Convert</name></member>
      <member refid="classBRegion_1acb9444be2e92175ee95c90972bca31aa" prot="private" virt="non-virtual"><scope>BRegion</scope><name>_ConvertToInternal</name></member>
      <member refid="classBRegion_1a8e5b6f5507e5b7cef71d3438a456fbf0" prot="private" virt="non-virtual"><scope>BRegion</scope><name>_ConvertToInternal</name></member>
      <member refid="classBRegion_1a07c5c1b0a834bcbf6ff56c6f2046bd8f" prot="private" virt="non-virtual"><scope>BRegion</scope><name>_SetSize</name></member>
      <member refid="classBRegion_1a7e2dbbec42e8891a69d4ba663aaa80e9" prot="public" virt="non-virtual"><scope>BRegion</scope><name>BRegion</name></member>
      <member refid="classBRegion_1af595eadeb97cc1fb7a027a6a34b5010e" prot="public" virt="non-virtual"><scope>BRegion</scope><name>BRegion</name></member>
      <member refid="classBRegion_1a2a66bf43339ff0dcf20d51e494b5fd2c" prot="public" virt="non-virtual"><scope>BRegion</scope><name>BRegion</name></member>
      <member refid="classBRegion_1a4158ecb6ac6c51585bb32bb79343dac0" prot="private" virt="non-virtual"><scope>BRegion</scope><name>BRegion</name></member>
      <member refid="classBRegion_1ac5ec6b249865caa8da950fe6752585f2" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Contains</name></member>
      <member refid="classBRegion_1a5250e6954c464d7715bbdb55cd813347" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Contains</name></member>
      <member refid="classBRegion_1af03b71a7cc5140f88221abb5145ce2dd" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Contains</name></member>
      <member refid="classBRegion_1ae1bf831e6482828a2ec47118806dff96" prot="public" virt="non-virtual"><scope>BRegion</scope><name>CountRects</name></member>
      <member refid="classBRegion_1a54a4a57f4d638e50b8cc83a854d7edab" prot="public" virt="non-virtual"><scope>BRegion</scope><name>CountRects</name></member>
      <member refid="classBRegion_1a9bd228331fe056ac7c6e320e561c5d43" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Exclude</name></member>
      <member refid="classBRegion_1a94ac7e39ced930992a055f49a1d9d8ac" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Exclude</name></member>
      <member refid="classBRegion_1a82519f0df83c965841589567e2c89af0" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Exclude</name></member>
      <member refid="classBRegion_1ae581bbadfb610cdaf9c019505976565b" prot="public" virt="non-virtual"><scope>BRegion</scope><name>ExclusiveInclude</name></member>
      <member refid="classBRegion_1a38f71ab9460f623e9d1cf753ee6ba8cf" prot="private" virt="non-virtual"><scope>BRegion</scope><name>fBounds</name></member>
      <member refid="classBRegion_1a2aac9a16badadcd583a87a1634856d00" prot="private" virt="non-virtual"><scope>BRegion</scope><name>fCount</name></member>
      <member refid="classBRegion_1a07af048568964e5c46e16518d1e0465b" prot="private" virt="non-virtual"><scope>BRegion</scope><name>fData</name></member>
      <member refid="classBRegion_1a9463875b1d06490bdd699aed7e0723cc" prot="private" virt="non-virtual"><scope>BRegion</scope><name>fDataSize</name></member>
      <member refid="classBRegion_1ad7f1cba70c1fce88291b70b4ff1fb455" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Frame</name></member>
      <member refid="classBRegion_1a159da8dc4f9756d60e18a6d0be467c2a" prot="public" virt="non-virtual"><scope>BRegion</scope><name>FrameInt</name></member>
      <member refid="classBRegion_1a9dff47818a7d5aa679316ce15395a4df" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Include</name></member>
      <member refid="classBRegion_1ad28b6747c731733f8e4849aed4b80f05" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Include</name></member>
      <member refid="classBRegion_1accebfca3556d27adf1bea45c5726104d" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Include</name></member>
      <member refid="classBRegion_1a72d7028553a319a07cad042500b1fedc" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Intersects</name></member>
      <member refid="classBRegion_1a3968004110456b591b5d57088667b16a" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Intersects</name></member>
      <member refid="classBRegion_1acb9334810e022225f2dde3387113ba1d" prot="public" virt="non-virtual"><scope>BRegion</scope><name>IntersectWith</name></member>
      <member refid="classBRegion_1a80c4adc8af0be406eb93ac3be6b9c974" prot="public" virt="non-virtual"><scope>BRegion</scope><name>MakeEmpty</name></member>
      <member refid="classBRegion_1ac67b9f13dd014b8d878777f84e6707be" prot="public" virt="non-virtual"><scope>BRegion</scope><name>OffsetBy</name></member>
      <member refid="classBRegion_1a9834ddaf5c57a59336f73be8a59359ff" prot="public" virt="non-virtual"><scope>BRegion</scope><name>OffsetBy</name></member>
      <member refid="classBRegion_1add50fc8573429395207c289fbc44e6c3" prot="public" virt="non-virtual"><scope>BRegion</scope><name>operator=</name></member>
      <member refid="classBRegion_1a12e4ebc4f6f2d52a81b525242541ed39" prot="public" virt="non-virtual"><scope>BRegion</scope><name>operator==</name></member>
      <member refid="classBRegion_1a7a03684ac6222a879520756f1f055e86" prot="public" virt="non-virtual"><scope>BRegion</scope><name>PrintToStream</name></member>
      <member refid="classBRegion_1ab6dac50d37813cc2040647aa31c6c272" prot="public" virt="non-virtual"><scope>BRegion</scope><name>RectAt</name></member>
      <member refid="classBRegion_1a286dadbfd8551f17f0f5daebce1e5e38" prot="public" virt="non-virtual"><scope>BRegion</scope><name>RectAt</name></member>
      <member refid="classBRegion_1aa7a2c1714034f92aab812245b68ed3e7" prot="public" virt="non-virtual"><scope>BRegion</scope><name>RectAtInt</name></member>
      <member refid="classBRegion_1a0af40dc7dc7b76172ba5b75056b935b6" prot="public" virt="non-virtual"><scope>BRegion</scope><name>RectAtInt</name></member>
      <member refid="classBRegion_1ada9797eac56d69d41d46570701cf3f6a" prot="public" virt="non-virtual"><scope>BRegion</scope><name>ScaleBy</name></member>
      <member refid="classBRegion_1a4a49d3cc8249eb64d953353955f44f50" prot="public" virt="non-virtual"><scope>BRegion</scope><name>ScaleBy</name></member>
      <member refid="classBRegion_1a43e6180761175f1398885d8828385182" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Set</name></member>
      <member refid="classBRegion_1af645a90814cfeb2b13345fa59f049f95" prot="public" virt="non-virtual"><scope>BRegion</scope><name>Set</name></member>
      <member refid="classBRegion_1a63437394f71585ab815bcc409db0a748" prot="public" virt="virtual"><scope>BRegion</scope><name>~BRegion</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
