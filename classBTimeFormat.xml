<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBTimeFormat" kind="class" language="C++" prot="public">
    <compoundname>BTimeFormat</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BFormat</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBTimeFormat_1a2b50630d755536ac5d9b635cb6f824ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BTimeFormat::BTimeFormat</definition>
        <argsstring>()</argsstring>
        <name>BTimeFormat</name>
        <qualifiedname>BTimeFormat::BTimeFormat</qualifiedname>
        <briefdescription>
<para>Default Constructor. The current system locale is used. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeFormat_1aae2dfce6b3269db342864211651efd65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BTimeFormat::BTimeFormat</definition>
        <argsstring>(const BLanguage &amp;language, const BFormattingConventions &amp;conventions)</argsstring>
        <name>BTimeFormat</name>
        <qualifiedname>BTimeFormat::BTimeFormat</qualifiedname>
        <param>
          <type>const BLanguage &amp;</type>
          <declname>language</declname>
        </param>
        <param>
          <type>const BFormattingConventions &amp;</type>
          <declname>conventions</declname>
          <defname>format</defname>
        </param>
        <briefdescription>
<para>Language and formatting convention constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>language</emphasis> to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The formatting convention to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeFormat_1a3c2ceba93c851ea52a78d0db84ce618a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BTimeFormat::BTimeFormat</definition>
        <argsstring>(const BTimeFormat &amp;other)</argsstring>
        <name>BTimeFormat</name>
        <qualifiedname>BTimeFormat::BTimeFormat</qualifiedname>
        <param>
          <type>const <ref refid="classBTimeFormat" kindref="compound">BTimeFormat</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBTimeFormat" kindref="compound">BTimeFormat</ref> object to copy from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeFormat_1a68c679ef13de01dcbb3366770b33c4d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BTimeFormat::~BTimeFormat</definition>
        <argsstring>()</argsstring>
        <name>~BTimeFormat</name>
        <qualifiedname>BTimeFormat::~BTimeFormat</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" line="25" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeFormat_1a207ec36e9853557aa616b18c2d3abbd9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BTimeFormat::Format</definition>
        <argsstring>(BString &amp;string, const time_t time, const BTimeFormatStyle style, const BTimeZone *timeZone=NULL) const</argsstring>
        <name>Format</name>
        <qualifiedname>BTimeFormat::Format</qualifiedname>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const time_t</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const BTimeFormatStyle</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const <ref refid="classBTimeZone" kindref="compound">BTimeZone</ref> *</type>
          <declname>timeZone</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Fills in <emphasis>string</emphasis> with a formatted time for the given <emphasis>time</emphasis>, <emphasis>style</emphasis>, and <emphasis>timeZone</emphasis> for the locale. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string buffer to fill with the formatted time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time (in seconds since epoch) to format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies whether to use the long format or short format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeZone</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the time zone to use, if <computeroutput>NULL</computeroutput>, use the system default time zone (usually UTC).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went fine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while creating the object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para>There was not enough space to store the result.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" line="34" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeFormat_1a094e6458a42f53167a440f57d8072572" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BTimeFormat::Format</definition>
        <argsstring>(BString &amp;string, int *&amp;fieldPositions, int &amp;fieldCount, time_t time, BTimeFormatStyle style) const</argsstring>
        <name>Format</name>
        <qualifiedname>BTimeFormat::Format</qualifiedname>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int *&amp;</type>
          <declname>fieldPositions</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>fieldCount</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>time</declname>
        </param>
        <param>
          <type>BTimeFormatStyle</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Fills in <emphasis>string</emphasis> with a custom formatted date according to the given parameters for the locale and fills out an array of <emphasis>fieldPositions</emphasis> which must be freed by the caller and a <emphasis>fieldCount</emphasis> which contains the number of positions. </para>
        </briefdescription>
        <detaileddescription>
<para>The positions are offsets in the string at which each element of the time (hour, minute, second, etc) and the separator starting positions. These can be used, for example, to split the string in parts to use in a locale-aware set of BMenuFields to edit the time in the local format.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string buffer to fill with the formatted time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldPositions</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of time field positions to be filled out. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of <emphasis>fields</emphasis> in <emphasis>fieldPositions</emphasis> to be filled out. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time (in seconds since epoch) to format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the long format (with day name, full month name) or the short format, 08/12/2010 or similar.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went fine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while creating the object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para>There was not enough space to store the result.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" line="37" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeFormat_1aa3b37bfb1fdce83c5740263628649719" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t BTimeFormat::Format</definition>
        <argsstring>(char *string, size_t maxSize, time_t time, BTimeFormatStyle style) const</argsstring>
        <name>Format</name>
        <qualifiedname>BTimeFormat::Format</qualifiedname>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxSize</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>time</declname>
        </param>
        <param>
          <type>BTimeFormatStyle</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Fills in <emphasis>string</emphasis> with a formatted time up to <emphasis>maxSize</emphasis> bytes for the given <emphasis>time</emphasis> and <emphasis>style</emphasis> for the locale. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string buffer to fill with the formatted time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time (in seconds since midnight) to format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the long format or the short format.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes written during the time formatting. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while creating the object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para>There was not enough space to store the result.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" line="32" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeFormat_1a47658ac0d566e56db7edd798cc51ffd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BTimeFormat::GetTimeFields</definition>
        <argsstring>(BDateElement *&amp;fields, int &amp;fieldCount, BTimeFormatStyle style) const</argsstring>
        <name>GetTimeFields</name>
        <qualifiedname>BTimeFormat::GetTimeFields</qualifiedname>
        <param>
          <type>BDateElement *&amp;</type>
          <declname>fields</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>fieldCount</declname>
        </param>
        <param>
          <type>BTimeFormatStyle</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Get the type of each field in the time format of the locale. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is used most often in combination with FormatTime(). FormatTime() gives you the offset of each field in a formatted string, and <ref refid="classBTimeFormat_1a47658ac0d566e56db7edd798cc51ffd6" kindref="member">GetTimeFields()</ref> gives you the type of the field at a given offset. With this information you can handle the formatted time string as a list of fields that you can split and alter at will.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fields</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the fields object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of fields. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the long format or the short format.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went fine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Ran out of memory while creating the object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para>Bad or invalid <emphasis>fields</emphasis> data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" line="41" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeFormat_1af4bad17a65d8f3482ab48380147432c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BTimeFormat::Parse</definition>
        <argsstring>(BString source, BTimeFormatStyle style, BPrivate::BTime &amp;output)</argsstring>
        <name>Parse</name>
        <qualifiedname>BTimeFormat::Parse</qualifiedname>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type>BTimeFormatStyle</type>
          <declname>style</declname>
        </param>
        <param>
          <type>BPrivate::BTime &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" line="47" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBTimeFormat_1a6b9aafa432dff385e89de85338078dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BTimeFormat::SetTimeFormat</definition>
        <argsstring>(BTimeFormatStyle style, const BString &amp;format)</argsstring>
        <name>SetTimeFormat</name>
        <qualifiedname>BTimeFormat::SetTimeFormat</qualifiedname>
        <param>
          <type>BTimeFormatStyle</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const <ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" line="27" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBTimeFormat_1a943823062a8c1fec79a58247943103d6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>U_ICU_NAMESPACE::DateFormat *</type>
        <definition>U_ICU_NAMESPACE::DateFormat * BTimeFormat::_CreateTimeFormatter</definition>
        <argsstring>(const BTimeFormatStyle style) const</argsstring>
        <name>_CreateTimeFormatter</name>
        <qualifiedname>BTimeFormat::_CreateTimeFormatter</qualifiedname>
        <param>
          <type>const BTimeFormatStyle</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" line="51" column="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Formatter for times. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" line="19" column="1" bodyfile="/boot/home/src/haiku/headers/os/locale/TimeFormat.h" bodystart="19" bodyend="53"/>
    <listofallmembers>
      <member refid="classBTimeFormat_1a943823062a8c1fec79a58247943103d6" prot="private" virt="non-virtual"><scope>BTimeFormat</scope><name>_CreateTimeFormatter</name></member>
      <member refid="classBFormat_1a1ff84e6b18584d40445fea46931bafd0" prot="protected" virt="non-virtual"><scope>BTimeFormat</scope><name>BFormat</name></member>
      <member refid="classBFormat_1acd966f960c76ac04a64eb65399d73c85" prot="protected" virt="non-virtual"><scope>BTimeFormat</scope><name>BFormat</name></member>
      <member refid="classBFormat_1ab5d495c8408849155a7ff7fc16161e75" prot="protected" virt="non-virtual"><scope>BTimeFormat</scope><name>BFormat</name></member>
      <member refid="classBTimeFormat_1a2b50630d755536ac5d9b635cb6f824ac" prot="public" virt="non-virtual"><scope>BTimeFormat</scope><name>BTimeFormat</name></member>
      <member refid="classBTimeFormat_1aae2dfce6b3269db342864211651efd65" prot="public" virt="non-virtual"><scope>BTimeFormat</scope><name>BTimeFormat</name></member>
      <member refid="classBTimeFormat_1a3c2ceba93c851ea52a78d0db84ce618a" prot="public" virt="non-virtual"><scope>BTimeFormat</scope><name>BTimeFormat</name></member>
      <member refid="classBFormat_1acb27d863a711eb8b2aeb62ca56024e36" prot="protected" virt="non-virtual"><scope>BTimeFormat</scope><name>fConventions</name></member>
      <member refid="classBFormat_1a50d5bddcf4f91d741d4fbba1ac090de5" prot="protected" virt="non-virtual"><scope>BTimeFormat</scope><name>fInitStatus</name></member>
      <member refid="classBFormat_1a9ccf84a90e0dbc89623f03e7bb325e7e" prot="protected" virt="non-virtual"><scope>BTimeFormat</scope><name>fLanguage</name></member>
      <member refid="classBTimeFormat_1aa3b37bfb1fdce83c5740263628649719" prot="public" virt="non-virtual"><scope>BTimeFormat</scope><name>Format</name></member>
      <member refid="classBTimeFormat_1a207ec36e9853557aa616b18c2d3abbd9" prot="public" virt="non-virtual"><scope>BTimeFormat</scope><name>Format</name></member>
      <member refid="classBTimeFormat_1a094e6458a42f53167a440f57d8072572" prot="public" virt="non-virtual"><scope>BTimeFormat</scope><name>Format</name></member>
      <member refid="classBTimeFormat_1a47658ac0d566e56db7edd798cc51ffd6" prot="public" virt="non-virtual"><scope>BTimeFormat</scope><name>GetTimeFields</name></member>
      <member refid="classBFormat_1a1c2b885fb22f2c3da84e098bc5e3e95f" prot="public" virt="non-virtual"><scope>BTimeFormat</scope><name>InitCheck</name></member>
      <member refid="classBTimeFormat_1af4bad17a65d8f3482ab48380147432c3" prot="public" virt="non-virtual"><scope>BTimeFormat</scope><name>Parse</name></member>
      <member refid="classBTimeFormat_1a6b9aafa432dff385e89de85338078dfd" prot="public" virt="non-virtual"><scope>BTimeFormat</scope><name>SetTimeFormat</name></member>
      <member refid="classBFormat_1a2824e15e80fac46c80cfd0d19e9f45fc" prot="protected" virt="virtual"><scope>BTimeFormat</scope><name>~BFormat</name></member>
      <member refid="classBTimeFormat_1a68c679ef13de01dcbb3366770b33c4d2" prot="public" virt="virtual"><scope>BTimeFormat</scope><name>~BTimeFormat</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
