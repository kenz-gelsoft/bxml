<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBLocale" kind="class" language="C++" prot="public">
    <compoundname>BLocale</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBLocale_1accc4cc10b536094ce42ba899e5a81342" prot="private" static="no" mutable="no">
        <type><ref refid="classBCollator" kindref="compound">BCollator</ref></type>
        <definition>BCollator BLocale::fCollator</definition>
        <argsstring></argsstring>
        <name>fCollator</name>
        <qualifiedname>BLocale::fCollator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="55" column="10" bodyfile="/boot/home/src/haiku/headers/os/locale/Locale.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBLocale_1ad33fb09afe7def76675d3b200a267686" prot="private" static="no" mutable="no">
        <type>BFormattingConventions</type>
        <definition>BFormattingConventions BLocale::fConventions</definition>
        <argsstring></argsstring>
        <name>fConventions</name>
        <qualifiedname>BLocale::fConventions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="56" column="23" bodyfile="/boot/home/src/haiku/headers/os/locale/Locale.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBLocale_1a9a5fed96c352ad898e5f28f029f8f65b" prot="private" static="no" mutable="no">
        <type>BLanguage</type>
        <definition>BLanguage BLocale::fLanguage</definition>
        <argsstring></argsstring>
        <name>fLanguage</name>
        <qualifiedname>BLocale::fLanguage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="57" column="10" bodyfile="/boot/home/src/haiku/headers/os/locale/Locale.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBLocale_1a4f4e91d7f97fb7fdfd27218660f0f20d" prot="private" static="no" mutable="yes">
        <type><ref refid="classBLocker" kindref="compound">BLocker</ref></type>
        <definition>BLocker BLocale::fLock</definition>
        <argsstring></argsstring>
        <name>fLock</name>
        <qualifiedname>BLocale::fLock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="54" column="15" bodyfile="/boot/home/src/haiku/headers/os/locale/Locale.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBLocale_1ab8f1c9cb3c16b8eef0e16dcd94f4163b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BLocale::BLocale</definition>
        <argsstring>(const BLanguage *language=NULL, const BFormattingConventions *conventions=NULL)</argsstring>
        <name>BLocale</name>
        <qualifiedname>BLocale::BLocale</qualifiedname>
        <param>
          <type>const BLanguage *</type>
          <declname>language</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>const BFormattingConventions *</type>
          <declname>conventions</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Initializes a <ref refid="classBLocale" kindref="compound">BLocale</ref> object corresponding to the passed in <emphasis>language</emphasis> and <emphasis>conventions</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1ad38c7098a382708b4e65c27df9f1183c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BLocale::BLocale</definition>
        <argsstring>(const BLocale &amp;other)</argsstring>
        <name>BLocale</name>
        <qualifiedname>BLocale::BLocale</qualifiedname>
        <param>
          <type>const <ref refid="classBLocale" kindref="compound">BLocale</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Initializes a <ref refid="classBLocale" kindref="compound">BLocale</ref> object as a copy of <emphasis>other</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBLocale" kindref="compound">BLocale</ref> object to initialize from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1a9c9d3df81a9381e7fa5f1aff70878122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BLocale::~BLocale</definition>
        <argsstring>()</argsstring>
        <name>~BLocale</name>
        <qualifiedname>BLocale::~BLocale</qualifiedname>
        <briefdescription>
<para>Destructor method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1add9b62e1276138a8a2853b634aa92adc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BLocale::GetCollator</definition>
        <argsstring>(BCollator *collator) const</argsstring>
        <name>GetCollator</name>
        <qualifiedname>BLocale::GetCollator</qualifiedname>
        <param>
          <type><ref refid="classBCollator" kindref="compound">BCollator</ref> *</type>
          <declname>collator</declname>
        </param>
        <briefdescription>
<para>Sets <emphasis>collator</emphasis> object to the default collator for the <ref refid="classBLocale" kindref="compound">BLocale</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>collator</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="classBCollator" kindref="compound">BCollator</ref> object to fill out.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went well. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>NULL</computeroutput> <emphasis>collator</emphasis> object passed in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="31" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1a8cc776da97fbe6d1b01b7ee5bfb64760" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BLocale::GetFormattingConventions</definition>
        <argsstring>(BFormattingConventions *conventions) const</argsstring>
        <name>GetFormattingConventions</name>
        <qualifiedname>BLocale::GetFormattingConventions</qualifiedname>
        <param>
          <type>BFormattingConventions *</type>
          <declname>conventions</declname>
        </param>
        <briefdescription>
<para>Fills out <emphasis>conventions</emphasis> with the default formatting conventions for the <ref refid="classBLocale" kindref="compound">BLocale</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conventions</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a BFormattingConventions object to fill out.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went well. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>NULL</computeroutput> <emphasis>conventions</emphasis> object passed in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="33" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1a5ecf38b372ec866475c116639f7e0242" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BLocale::GetLanguage</definition>
        <argsstring>(BLanguage *language) const</argsstring>
        <name>GetLanguage</name>
        <qualifiedname>BLocale::GetLanguage</qualifiedname>
        <param>
          <type>BLanguage *</type>
          <declname>language</declname>
        </param>
        <briefdescription>
<para>Sets <emphasis>language</emphasis> object to the default language for the <ref refid="classBLocale" kindref="compound">BLocale</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a BLanguage object to fill out.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went well. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>NULL</computeroutput> <emphasis>language</emphasis> object passed in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="32" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1af9aedc313176670d1898a5288a5cdade" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLocale::GetSortKey</definition>
        <argsstring>(const char *string, BString *sortKey) const</argsstring>
        <name>GetSortKey</name>
        <qualifiedname>BLocale::GetSortKey</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref> *</type>
          <declname>sortKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="50" column="5" bodyfile="/boot/home/src/haiku/headers/os/locale/Locale.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1a40a6f3f39d711ed0e2efa41d4d859e6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BLocale::GetString</definition>
        <argsstring>(uint32 id) const</argsstring>
        <name>GetString</name>
        <qualifiedname>BLocale::GetString</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets the language string for the locale. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The locale <emphasis>id</emphasis> to get the language of. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="42" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1ae1aaeedea30ad7f8df586e9bc9eef7d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBLocale" kindref="compound">BLocale</ref> &amp;</type>
        <definition>BLocale &amp; BLocale::operator=</definition>
        <argsstring>(const BLocale &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BLocale::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBLocale" kindref="compound">BLocale</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Gets the collator associated to this locale. </para>
        </briefdescription>
        <detaileddescription>
<para>status_t <ref refid="classBLocale_1add9b62e1276138a8a2853b634aa92adc" kindref="member">BLocale::GetCollator(BCollator* collator) const</ref> </para>
<para>Returns the collator in use for this locale, allowing you to use it to sort a set of strings.</para>
<para><simplesect kind="since"><para>Haiku R1</para>
</simplesect>
Initializes a <ref refid="classBLocale" kindref="compound">BLocale</ref> object as a copy of <emphasis>other</emphasis> by overloading the = operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBLocale" kindref="compound">BLocale</ref> object to initialize from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="29" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1af3cb42bdb2b55c864971fe4aad9af6bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLocale::SetCollator</definition>
        <argsstring>(const BCollator &amp;newCollator)</argsstring>
        <name>SetCollator</name>
        <qualifiedname>BLocale::SetCollator</qualifiedname>
        <param>
          <type>const <ref refid="classBCollator" kindref="compound">BCollator</ref> &amp;</type>
          <declname>newCollator</declname>
        </param>
        <briefdescription>
<para>Set the collator for this locale. </para>
        </briefdescription>
        <detaileddescription>
<para>If unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref> <emphasis>newCollator</emphasis> is left untouched.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newCollator</parametername>
</parameternamelist>
<parameterdescription>
<para>The collator to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="38" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1a0acf391e1c2c7669c83cb398ce11cdef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLocale::SetFormattingConventions</definition>
        <argsstring>(const BFormattingConventions &amp;conventions)</argsstring>
        <name>SetFormattingConventions</name>
        <qualifiedname>BLocale::SetFormattingConventions</qualifiedname>
        <param>
          <type>const BFormattingConventions &amp;</type>
          <declname>conventions</declname>
        </param>
        <briefdescription>
<para>Sets the formatting convention for this locale. </para>
        </briefdescription>
        <detaileddescription>
<para>If unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref> <emphasis>conventions</emphasis> is left untouched.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conventions</parametername>
</parameternamelist>
<parameterdescription>
<para>The formatting convention to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="36" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1a87ba312e6bf9fb5c70724cc30377073d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLocale::SetLanguage</definition>
        <argsstring>(const BLanguage &amp;newLanguage)</argsstring>
        <name>SetLanguage</name>
        <qualifiedname>BLocale::SetLanguage</qualifiedname>
        <param>
          <type>const BLanguage &amp;</type>
          <declname>newLanguage</declname>
        </param>
        <briefdescription>
<para>Set the language for this locale. </para>
        </briefdescription>
        <detaileddescription>
<para>If unable to lock the <ref refid="classBLocale" kindref="compound">BLocale</ref> <emphasis>newLanguage</emphasis> is left untouched.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newLanguage</parametername>
</parameternamelist>
<parameterdescription>
<para>The code of the language to set to locale to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="39" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1a6894f8796bef2f75cb2a6161f312a45b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BLocale::StringCompare</definition>
        <argsstring>(const BString *s1, const BString *s2) const</argsstring>
        <name>StringCompare</name>
        <qualifiedname>BLocale::StringCompare</qualifiedname>
        <param>
          <type>const <ref refid="classBString" kindref="compound">BString</ref> *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classBString" kindref="compound">BString</ref> *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="47" column="4" bodyfile="/boot/home/src/haiku/headers/os/locale/Locale.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classBLocale_1a462f55548617584f5c5706d59c9a335e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BLocale::StringCompare</definition>
        <argsstring>(const char *s1, const char *s2) const</argsstring>
        <name>StringCompare</name>
        <qualifiedname>BLocale::StringCompare</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="45" column="4" bodyfile="/boot/home/src/haiku/headers/os/locale/Locale.h" bodystart="65" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBLocale_1a1a2be0afac9c3840adf26132c0124db1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classBLocale" kindref="compound">BLocale</ref> *</type>
        <definition>static const BLocale * BLocale::Default</definition>
        <argsstring>()</argsstring>
        <name>Default</name>
        <qualifiedname>BLocale::Default</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="27" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for representing a locale and its settings. </para>
    </briefdescription>
    <detaileddescription>
<para>A locale is defined by the combination of a country and a language. Using these two informations, it is possible to determine the format to use for date, time, and number formatting. The <ref refid="classBLocale" kindref="compound">BLocale</ref> class also provide collators, which allows you to sort a list of strings properly depending on a set of rules about accented chars and other special cases that vary over the different locales.</para>
<para><ref refid="classBLocale" kindref="compound">BLocale</ref> is also the class to use when you want to perform formatting or parsing of dates, times, and numbers, in the natural language of the user.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/locale/Locale.h" line="19" column="1" bodyfile="/boot/home/src/haiku/headers/os/locale/Locale.h" bodystart="19" bodyend="58"/>
    <listofallmembers>
      <member refid="classBLocale_1ab8f1c9cb3c16b8eef0e16dcd94f4163b" prot="public" virt="non-virtual"><scope>BLocale</scope><name>BLocale</name></member>
      <member refid="classBLocale_1ad38c7098a382708b4e65c27df9f1183c" prot="public" virt="non-virtual"><scope>BLocale</scope><name>BLocale</name></member>
      <member refid="classBLocale_1a1a2be0afac9c3840adf26132c0124db1" prot="public" virt="non-virtual"><scope>BLocale</scope><name>Default</name></member>
      <member refid="classBLocale_1accc4cc10b536094ce42ba899e5a81342" prot="private" virt="non-virtual"><scope>BLocale</scope><name>fCollator</name></member>
      <member refid="classBLocale_1ad33fb09afe7def76675d3b200a267686" prot="private" virt="non-virtual"><scope>BLocale</scope><name>fConventions</name></member>
      <member refid="classBLocale_1a9a5fed96c352ad898e5f28f029f8f65b" prot="private" virt="non-virtual"><scope>BLocale</scope><name>fLanguage</name></member>
      <member refid="classBLocale_1a4f4e91d7f97fb7fdfd27218660f0f20d" prot="private" virt="non-virtual"><scope>BLocale</scope><name>fLock</name></member>
      <member refid="classBLocale_1add9b62e1276138a8a2853b634aa92adc" prot="public" virt="non-virtual"><scope>BLocale</scope><name>GetCollator</name></member>
      <member refid="classBLocale_1a8cc776da97fbe6d1b01b7ee5bfb64760" prot="public" virt="non-virtual"><scope>BLocale</scope><name>GetFormattingConventions</name></member>
      <member refid="classBLocale_1a5ecf38b372ec866475c116639f7e0242" prot="public" virt="non-virtual"><scope>BLocale</scope><name>GetLanguage</name></member>
      <member refid="classBLocale_1af9aedc313176670d1898a5288a5cdade" prot="public" virt="non-virtual"><scope>BLocale</scope><name>GetSortKey</name></member>
      <member refid="classBLocale_1a40a6f3f39d711ed0e2efa41d4d859e6c" prot="public" virt="non-virtual"><scope>BLocale</scope><name>GetString</name></member>
      <member refid="classBLocale_1ae1aaeedea30ad7f8df586e9bc9eef7d7" prot="public" virt="non-virtual"><scope>BLocale</scope><name>operator=</name></member>
      <member refid="classBLocale_1af3cb42bdb2b55c864971fe4aad9af6bd" prot="public" virt="non-virtual"><scope>BLocale</scope><name>SetCollator</name></member>
      <member refid="classBLocale_1a0acf391e1c2c7669c83cb398ce11cdef" prot="public" virt="non-virtual"><scope>BLocale</scope><name>SetFormattingConventions</name></member>
      <member refid="classBLocale_1a87ba312e6bf9fb5c70724cc30377073d" prot="public" virt="non-virtual"><scope>BLocale</scope><name>SetLanguage</name></member>
      <member refid="classBLocale_1a462f55548617584f5c5706d59c9a335e" prot="public" virt="non-virtual"><scope>BLocale</scope><name>StringCompare</name></member>
      <member refid="classBLocale_1a6894f8796bef2f75cb2a6161f312a45b" prot="public" virt="non-virtual"><scope>BLocale</scope><name>StringCompare</name></member>
      <member refid="classBLocale_1a9c9d3df81a9381e7fa5f1aff70878122" prot="public" virt="non-virtual"><scope>BLocale</scope><name>~BLocale</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
