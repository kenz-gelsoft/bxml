<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBArchiver" kind="class" language="C++" prot="public">
    <compoundname>BArchiver</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBArchiver_1a16a3ffbcce3947fffa303073b50ebde2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BArchivable</definition>
        <argsstring></argsstring>
        <name>BArchivable</name>
        <qualifiedname>BArchiver::BArchivable</qualifiedname>
        <param>
          <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="70" column="14" bodyfile="/boot/home/src/haiku/headers/os/support/Archivable.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBArchiver_1a894850137ea6a3bab8945347c8b567f5" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BArchiver::_reserved[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BArchiver::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="81" column="7" bodyfile="/boot/home/src/haiku/headers/os/support/Archivable.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBArchiver_1a4d63d205b60e4f2cb2541338d8f652a2" prot="private" static="no" mutable="no">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>BMessage* BArchiver::fArchive</definition>
        <argsstring></argsstring>
        <name>fArchive</name>
        <qualifiedname>BArchiver::fArchive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="79" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/Archivable.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBArchiver_1aeb4281ae053dab8295f3a75118632d66" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BArchiver::fFinished</definition>
        <argsstring></argsstring>
        <name>fFinished</name>
        <qualifiedname>BArchiver::fFinished</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="80" column="5" bodyfile="/boot/home/src/haiku/headers/os/support/Archivable.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBArchiver_1a889516e04e30ad1f4e8f00787ae876e5" prot="private" static="no" mutable="no">
        <type>BArchiveManager *</type>
        <definition>BArchiveManager* BArchiver::fManager</definition>
        <argsstring></argsstring>
        <name>fManager</name>
        <qualifiedname>BArchiver::fManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="78" column="16" bodyfile="/boot/home/src/haiku/headers/os/support/Archivable.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBArchiver_1a77816a77b0589a0e136d8b44b440715b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BArchiver::BArchiver</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>BArchiver</name>
        <qualifiedname>BArchiver::BArchiver</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classBArchiver" kindref="compound">BArchiver</ref> object that manages <computeroutput>archive</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBArchiver_1a9eb0e393cc86926246d0662bf74db79b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BArchiver::~BArchiver</definition>
        <argsstring>()</argsstring>
        <name>~BArchiver</name>
        <qualifiedname>BArchiver::~BArchiver</qualifiedname>
        <briefdescription>
<para>Destroys a <ref refid="classBArchiver" kindref="compound">BArchiver</ref> object. If the <ref refid="classBArchiver" kindref="compound">BArchiver</ref> object has not had its <ref refid="classBArchiver_1a7c82dbc0fb42795c575ac2c6a5405297" kindref="member">Finish()</ref> method called, this will be done now. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBArchiver_1a237a50590efba0121bf12249c5b6cb7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BArchiver::AddArchivable</definition>
        <argsstring>(const char *name, BArchivable *archivable, bool deep=true)</argsstring>
        <name>AddArchivable</name>
        <qualifiedname>BArchiver::AddArchivable</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
          <declname>archivable</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Adds a reference to <computeroutput>archivable</computeroutput> to the archive used to construct this <ref refid="classBArchiver" kindref="compound">BArchiver</ref>. May call <computeroutput>archivable&apos;s</computeroutput> Archive() method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Where this reference will be stored in the archive. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>archivable</parametername>
</parameternamelist>
<parameterdescription>
<para>The BArchivable* object that to reference. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deep</parametername>
</parameternamelist>
<parameterdescription>
<para>Passed to <computeroutput>archivable-&gt;Archive()</computeroutput> if <computeroutput>archivable</computeroutput> must be archived.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Adds a reference to <computeroutput>archivable</computeroutput> to your archive. If <computeroutput>archivable</computeroutput> has not yet been archived, then its Archive() method is called. <ref refid="classBArchiver" kindref="compound">BArchiver</ref> can only track <ref refid="classBArchivable" kindref="compound">BArchivable</ref> objects that have been archived through this method or the <ref refid="classBArchiver_1a787a6a7972a6c4624829c5c8d8d16e55" kindref="member">GetTokenForArchivable()</ref> methods.</para>
<para><simplesect kind="warning"><para>If you manually archive an object, and then pass it to <ref refid="classBArchiver_1a237a50590efba0121bf12249c5b6cb7f" kindref="member">AddArchivable()</ref> or <ref refid="classBArchiver_1a787a6a7972a6c4624829c5c8d8d16e55" kindref="member">GetTokenForArchivable()</ref>, it will be archived again, and when unarchived you will end up with two different <ref refid="classBArchivable" kindref="compound">BArchivable</ref> objects.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="57" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBArchiver_1a355bbcf04d61e561a2d304c035fe4052" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>const BMessage * BArchiver::ArchiveMessage</definition>
        <argsstring>() const</argsstring>
        <name>ArchiveMessage</name>
        <qualifiedname>BArchiver::ArchiveMessage</qualifiedname>
        <briefdescription>
<para>Returns the BMessage* used to construct this <ref refid="classBArchiver" kindref="compound">BArchiver</ref>. This is the archive that <ref refid="classBArchiver_1a237a50590efba0121bf12249c5b6cb7f" kindref="member">AddArchivable()</ref> modifies. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="67" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBArchiver_1a7c82dbc0fb42795c575ac2c6a5405297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BArchiver::Finish</definition>
        <argsstring>(status_t err=B_OK)</argsstring>
        <name>Finish</name>
        <qualifiedname>BArchiver::Finish</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
          <declname>err</declname>
          <defval>B_OK</defval>
        </param>
        <briefdescription>
<para>Report any archiving errors and possibly complete the archiving session. </para>
        </briefdescription>
        <detaileddescription>
<para>This method may finish an archiving session (triggering the call of all archived objects&apos; AllArchived() methods) if the following conditions are true:<itemizedlist>
<listitem><para>No errors have been reported to this or any other <ref refid="classBArchiver" kindref="compound">BArchiver</ref> object within this session.</para>
</listitem><listitem><para>This is the last remaining <ref refid="classBArchiver" kindref="compound">BArchiver</ref> that has not had its <ref refid="classBArchiver_1a7c82dbc0fb42795c575ac2c6a5405297" kindref="member">Finish()</ref> method invoked.</para>
</listitem></itemizedlist>
</para>
<para>If you call this method with an error code not equal to B_OK, then this archiving session has failed, archived objects will not have their AllArchived() methods called, and any subsequent calls to this method on any <ref refid="classBArchiver" kindref="compound">BArchiver</ref> objects in this session will return your error code.</para>
<para><simplesect kind="return"><para>The first error reported in this archiving session, or <computeroutput>B_OK</computeroutput>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="66" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBArchiver_1aa2e8cfc3e02979ab597ec08e0b99a3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BArchiver::GetTokenForArchivable</definition>
        <argsstring>(BArchivable *archivable, bool deep, int32 &amp;_token)</argsstring>
        <name>GetTokenForArchivable</name>
        <qualifiedname>BArchiver::GetTokenForArchivable</qualifiedname>
        <param>
          <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
          <declname>archivable</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> &amp;</type>
          <declname>_token</declname>
        </param>
        <briefdescription>
<para>Get a token representing a <ref refid="classBArchivable" kindref="compound">BArchivable</ref> object for this archiving session. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>archivable</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBArchivable" kindref="compound">BArchivable</ref> object for which you wish to get a token. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deep</parametername>
</parameternamelist>
<parameterdescription>
<para>Controls how <computeroutput>archivable</computeroutput> will be archived, if it has not yet been archived in this session. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">_token</parametername>
</parameternamelist>
<parameterdescription>
<para>The token representing <computeroutput>archivable</computeroutput> is stored here.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Retrieves or creates a token to represent <computeroutput>archivable</computeroutput> in this archiving session. If <computeroutput>archivable</computeroutput> has not yet been archived, it will be now. If <computeroutput>archivable</computeroutput> gets archived, the <computeroutput>deep</computeroutput> parameter will be passed to its Archive() method.</para>
<para><simplesect kind="warning"><para>If you manually archive an object, and then pass it to <ref refid="classBArchiver_1a787a6a7972a6c4624829c5c8d8d16e55" kindref="member">GetTokenForArchivable()</ref>, it will be archived again, and when unarchived you will end up with two different <ref refid="classBArchivable" kindref="compound">BArchivable</ref> objects.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="62" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBArchiver_1a787a6a7972a6c4624829c5c8d8d16e55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BArchiver::GetTokenForArchivable</definition>
        <argsstring>(BArchivable *archivable, int32 &amp;_token)</argsstring>
        <name>GetTokenForArchivable</name>
        <qualifiedname>BArchiver::GetTokenForArchivable</qualifiedname>
        <param>
          <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
          <declname>archivable</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> &amp;</type>
          <declname>_token</declname>
        </param>
        <briefdescription>
<para>Equivalent to calling the expanded <ref refid="classBArchiver_1aa2e8cfc3e02979ab597ec08e0b99a3b1" kindref="member">GetTokenForArchivable(
       BArchivable*, bool, int32&amp;)</ref>, with the deep parameter equal to <computeroutput>true</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBArchiver_1aa2e8cfc3e02979ab597ec08e0b99a3b1" kindref="member">GetTokenForArchivable(BArchivable*, bool, int32&amp;)</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="60" column="15" bodyfile="/boot/home/src/haiku/headers/os/support/Archivable.h" bodystart="171" bodyend="174"/>
        <references refid="classBArchiver_1a787a6a7972a6c4624829c5c8d8d16e55" compoundref="Archivable_8h" startline="171" endline="174">GetTokenForArchivable</references>
        <referencedby refid="classBArchiver_1a787a6a7972a6c4624829c5c8d8d16e55" compoundref="Archivable_8h" startline="171" endline="174">GetTokenForArchivable</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBArchiver_1a77f099b123416c719be2cd78eb999d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BArchiver::IsArchived</definition>
        <argsstring>(BArchivable *archivable)</argsstring>
        <name>IsArchived</name>
        <qualifiedname>BArchiver::IsArchived</qualifiedname>
        <param>
          <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
          <declname>archivable</declname>
        </param>
        <briefdescription>
<para>Returns whether <computeroutput>archivable</computeroutput> has already been archived in this session. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether or not the object has already been archived. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>archivable</computeroutput> has been archived in this archiving session. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>archivable</computeroutput> has not been archived in this archiving session.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="65" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBArchiver_1a27691ee8838c147e5835d8831c7f8eee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BArchiver::BArchiver</definition>
        <argsstring>()</argsstring>
        <name>BArchiver</name>
        <qualifiedname>BArchiver::BArchiver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBArchiver_1a787d30f2d1d1f3271d3fc67bd47b39cb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BArchiver::BArchiver</definition>
        <argsstring>(const BArchiver &amp;)</argsstring>
        <name>BArchiver</name>
        <qualifiedname>BArchiver::BArchiver</qualifiedname>
        <param>
          <type>const <ref refid="classBArchiver" kindref="compound">BArchiver</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBArchiver_1a28c22ea7d35cacc9e4aff480aade8d5a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BArchiver::RegisterArchivable</definition>
        <argsstring>(const BArchivable *archivable)</argsstring>
        <name>RegisterArchivable</name>
        <qualifiedname>BArchiver::RegisterArchivable</qualifiedname>
        <param>
          <type>const <ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
          <declname>archivable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="75" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class that simplifies the archiving of complicated <ref refid="classBArchivable" kindref="compound">BArchivable</ref> hierarchies. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classBArchiver" kindref="compound">BArchiver</ref> class is a small class that is used for archiving of complicated <ref refid="classBArchivable" kindref="compound">BArchivable</ref> hierarchies. Such a hierarchy may include multiple <ref refid="classBArchivable" kindref="compound">BArchivable</ref> objects, each of which might be referenced by many <ref refid="classBArchivable" kindref="compound">BArchivable</ref> objects. With the <ref refid="classBArchiver" kindref="compound">BArchiver</ref> class, you can be certain that each <ref refid="classBArchivable" kindref="compound">BArchivable</ref> object is archived only once with very little work. When used in conjuction with the <ref refid="classBArchivable_1a4075315c407443a3b0dbb3d7551b53c9" kindref="member">BArchivable::AllArchived()</ref> and <ref refid="classBArchivable_1a2b1d74c147ea18e4b4bfacd42f11e0d2" kindref="member">BArchivable::AllUnarchived()</ref> methods, it is simple to rebuild your system of references upon unarchival so that they are equivalent to those that were present in your original hierarchy.</para>
<para>The objects you archive can be retrieved using a <ref refid="classBUnarchiver" kindref="compound">BUnarchiver</ref> object.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/support/Archivable.h" line="52" column="1" bodyfile="/boot/home/src/haiku/headers/os/support/Archivable.h" bodystart="52" bodyend="82"/>
    <listofallmembers>
      <member refid="classBArchiver_1a894850137ea6a3bab8945347c8b567f5" prot="private" virt="non-virtual"><scope>BArchiver</scope><name>_reserved</name></member>
      <member refid="classBArchiver_1a237a50590efba0121bf12249c5b6cb7f" prot="public" virt="non-virtual"><scope>BArchiver</scope><name>AddArchivable</name></member>
      <member refid="classBArchiver_1a355bbcf04d61e561a2d304c035fe4052" prot="public" virt="non-virtual"><scope>BArchiver</scope><name>ArchiveMessage</name></member>
      <member refid="classBArchiver_1a77816a77b0589a0e136d8b44b440715b" prot="public" virt="non-virtual"><scope>BArchiver</scope><name>BArchiver</name></member>
      <member refid="classBArchiver_1a27691ee8838c147e5835d8831c7f8eee" prot="private" virt="non-virtual"><scope>BArchiver</scope><name>BArchiver</name></member>
      <member refid="classBArchiver_1a787d30f2d1d1f3271d3fc67bd47b39cb" prot="private" virt="non-virtual"><scope>BArchiver</scope><name>BArchiver</name></member>
      <member refid="classBArchiver_1a4d63d205b60e4f2cb2541338d8f652a2" prot="private" virt="non-virtual"><scope>BArchiver</scope><name>fArchive</name></member>
      <member refid="classBArchiver_1aeb4281ae053dab8295f3a75118632d66" prot="private" virt="non-virtual"><scope>BArchiver</scope><name>fFinished</name></member>
      <member refid="classBArchiver_1a7c82dbc0fb42795c575ac2c6a5405297" prot="public" virt="non-virtual"><scope>BArchiver</scope><name>Finish</name></member>
      <member refid="classBArchiver_1a889516e04e30ad1f4e8f00787ae876e5" prot="private" virt="non-virtual"><scope>BArchiver</scope><name>fManager</name></member>
      <member refid="classBArchiver_1a787a6a7972a6c4624829c5c8d8d16e55" prot="public" virt="non-virtual"><scope>BArchiver</scope><name>GetTokenForArchivable</name></member>
      <member refid="classBArchiver_1aa2e8cfc3e02979ab597ec08e0b99a3b1" prot="public" virt="non-virtual"><scope>BArchiver</scope><name>GetTokenForArchivable</name></member>
      <member refid="classBArchiver_1a77f099b123416c719be2cd78eb999d19" prot="public" virt="non-virtual"><scope>BArchiver</scope><name>IsArchived</name></member>
      <member refid="classBArchiver_1a28c22ea7d35cacc9e4aff480aade8d5a" prot="private" virt="non-virtual"><scope>BArchiver</scope><name>RegisterArchivable</name></member>
      <member refid="classBArchiver_1a9eb0e393cc86926246d0662bf74db79b" prot="public" virt="non-virtual"><scope>BArchiver</scope><name>~BArchiver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
