<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structfile__system__module__info" kind="struct" language="C++" prot="public">
    <compoundname>file_system_module_info</compoundname>
      <sectiondef kind="user-defined">
      <header>Data members</header>
      <memberdef kind="variable" id="structfile__system__module__info_1ac9cc7056d3d12a19acec8edc99514c63" prot="public" static="no" mutable="no">
        <type>struct module_info</type>
        <definition>module_info file_system_module_info::info</definition>
        <argsstring></argsstring>
        <name>info</name>
        <qualifiedname>file_system_module_info::info</qualifiedname>
        <briefdescription>
<para>Your module_info object which is required for all modules. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="257" column="18" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a71eb451ac050067188ea7b95a1a2229f" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * file_system_module_info::pretty_name</definition>
        <argsstring></argsstring>
        <name>pretty_name</name>
        <qualifiedname>file_system_module_info::pretty_name</qualifiedname>
        <briefdescription>
<para>A NULL-terminated string with a &apos;pretty&apos; name for you file system. </para>
        </briefdescription>
        <detaileddescription>
<para>Note, if a system wide disk device type constant exists for your file system, it should equal this identifier. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="259" column="11" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Scanning</header>
      <memberdef kind="variable" id="structfile__system__module__info_1a0105524aa307d9819a91f70df8ee81a5" prot="public" static="no" mutable="no">
        <type>float(*</type>
        <definition>float(* file_system_module_info::identify_partition)(int fd, partition_data *partition, void **cookie)</definition>
        <argsstring>)(int fd, partition_data *partition, void **_cookie)</argsstring>
        <name>identify_partition</name>
        <qualifiedname>file_system_module_info::identify_partition</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="263" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a218dc77af1d56c1249bc92687c07e7b4" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref>(*</type>
        <definition>status_t(* file_system_module_info::scan_partition)(int fd, partition_data *partition, void *cookie)</definition>
        <argsstring>)(int fd, partition_data *partition, void *cookie)</argsstring>
        <name>scan_partition</name>
        <qualifiedname>file_system_module_info::scan_partition</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="265" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1aec91e0dcedaa5389c521b7b06601bc09" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* file_system_module_info::free_identify_partition_cookie)(partition_data *partition, void *cookie)</definition>
        <argsstring>)(partition_data *partition, void *cookie)</argsstring>
        <name>free_identify_partition_cookie</name>
        <qualifiedname>file_system_module_info::free_identify_partition_cookie</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="267" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a8e2bdc5a825dad6a9fd555bab3371100" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* file_system_module_info::free_partition_content_cookie)(partition_data *partition)</definition>
        <argsstring>)(partition_data *partition)</argsstring>
        <name>free_partition_content_cookie</name>
        <qualifiedname>file_system_module_info::free_partition_content_cookie</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="269" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>General Operations</header>
      <memberdef kind="variable" id="structfile__system__module__info_1ad59987c29f64dde1ef161e5870fd0d9e" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref>(*</type>
        <definition>status_t(* file_system_module_info::mount)(fs_volume *volume, const char *device, uint32 flags, const char *args, ino_t *_rootVnodeID)</definition>
        <argsstring>)(fs_volume *volume, const char *device, uint32 flags, const char *args, ino_t *_rootVnodeID)</argsstring>
        <name>mount</name>
        <qualifiedname>file_system_module_info::mount</qualifiedname>
        <briefdescription>
<para>Mount a volume according to the specified parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>Invoked by the VFS when it has been requested to mount the volume. The FS is supposed to perform whatever one-time initialization is necessary for the volume. It is required to create a volume handle for the volume and pass it back in <emphasis>volume-&gt;private_volume</emphasis> and set <emphasis>volume-&gt;ops</emphasis> to the operation vector for the volume. Moreover it must invoke <ref refid="fs__interface_8h_1a72ca7437ee63b0b91ade75d2d0a24413" kindref="member">publish_vnode()</ref> for the root node of the volume and pass the ID of the volume back in <emphasis>_rootVnodeID</emphasis>.</para>
<para>A disk-based FS will need to check whether <emphasis>device</emphasis> is not <computeroutput>NULL</computeroutput>, open it, and analyze whether the device or image file actually represents a volume of that FS type.</para>
<para>If mounting the volume fails for whatever reason, the hook must return an error code other than <computeroutput>B_OK</computeroutput>. In this case all resources allocated by the hook must be freed before returning. If and only if <computeroutput>B_OK</computeroutput> is returned, the unmount() hook will be invoked at a later point when unmounting the volume.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>Object created by the VFS to represent the volume. Its <computeroutput>private_volume</computeroutput> and <computeroutput>ops</computeroutput> members must be set by the hooks. All other members are read-only for the FS. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the device (or image file) representing the volume to be mounted. Can be <computeroutput>NULL</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags:<itemizedlist>
<listitem><para><computeroutput>B_MOUNT_READ_ONLY:</computeroutput> Mount the volume read-only. </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Null-terminated string in driver settings format, containing FS specific parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_rootVnodeID</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a pre-allocated variable the ID of the volume&apos;s root directory shall be written to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>B_OK</computeroutput> if everything went fine, another error code otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="272" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Capability Querying</header>
      <memberdef kind="variable" id="structfile__system__module__info_1afdf3c9d08408f016aa850498d78fe788" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* file_system_module_info::validate_resize)(partition_data *partition, off_t *size)</definition>
        <argsstring>)(partition_data *partition, off_t *size)</argsstring>
        <name>validate_resize</name>
        <qualifiedname>file_system_module_info::validate_resize</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="278" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a24c7cd8f1ed99371b3feb99548f25bb3" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* file_system_module_info::validate_move)(partition_data *partition, off_t *start)</definition>
        <argsstring>)(partition_data *partition, off_t *start)</argsstring>
        <name>validate_move</name>
        <qualifiedname>file_system_module_info::validate_move</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="279" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1ae17c36765d48b357dfe74a80891e6835" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* file_system_module_info::validate_set_content_name)(partition_data *partition, char *name)</definition>
        <argsstring>)(partition_data *partition, char *name)</argsstring>
        <name>validate_set_content_name</name>
        <qualifiedname>file_system_module_info::validate_set_content_name</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="280" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a85fd4e8f6033fddd7811ab99e1ed8330" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* file_system_module_info::validate_set_content_parameters)(partition_data *partition, const char *parameters)</definition>
        <argsstring>)(partition_data *partition, const char *parameters)</argsstring>
        <name>validate_set_content_parameters</name>
        <qualifiedname>file_system_module_info::validate_set_content_parameters</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="282" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a22d065a25ca613546d3fad7719ee9fe3" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* file_system_module_info::validate_initialize)(partition_data *partition, char *name, const char *parameters)</definition>
        <argsstring>)(partition_data *partition, char *name, const char *parameters)</argsstring>
        <name>validate_initialize</name>
        <qualifiedname>file_system_module_info::validate_initialize</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="284" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Shadow Partition Modification</header>
      <memberdef kind="variable" id="structfile__system__module__info_1aeefaa1d527ac88b300db85ba050358f4" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref>(*</type>
        <definition>status_t(* file_system_module_info::shadow_changed)(partition_data *partition, uint32 operation)</definition>
        <argsstring>)(partition_data *partition, partition_data *child, uint32 operation)</argsstring>
        <name>shadow_changed</name>
        <qualifiedname>file_system_module_info::shadow_changed</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="288" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Special Operations</header>
      <memberdef kind="variable" id="structfile__system__module__info_1a8cb1355cf464ebe60d53d97050514969" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref>(*</type>
        <definition>status_t(* file_system_module_info::defragment)(int fd, partition_id partition, disk_job_id job)</definition>
        <argsstring>)(int fd, partition_id partition, disk_job_id job)</argsstring>
        <name>defragment</name>
        <qualifiedname>file_system_module_info::defragment</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="292" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a47eb48661371d59c792b9fb42aab65bf" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref>(*</type>
        <definition>status_t(* file_system_module_info::repair)(int fd, partition_id partition, bool checkOnly, disk_job_id job)</definition>
        <argsstring>)(int fd, partition_id partition, bool checkOnly, disk_job_id job)</argsstring>
        <name>repair</name>
        <qualifiedname>file_system_module_info::repair</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="294" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1ab8cd5fd9fdb880e4643d8862758ca6af" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref>(*</type>
        <definition>status_t(* file_system_module_info::resize)(int fd, partition_id partition, off_t size, disk_job_id job)</definition>
        <argsstring>)(int fd, partition_id partition, off_t size, disk_job_id job)</argsstring>
        <name>resize</name>
        <qualifiedname>file_system_module_info::resize</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="296" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a6e6b70e41145efaa690bebb0c7186043" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref>(*</type>
        <definition>status_t(* file_system_module_info::move)(int fd, partition_id partition, off_t offset, disk_job_id job)</definition>
        <argsstring>)(int fd, partition_id partition, off_t offset, disk_job_id job)</argsstring>
        <name>move</name>
        <qualifiedname>file_system_module_info::move</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="298" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a7d4d3c9d6ed3dde8755efa425d52a0d7" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref>(*</type>
        <definition>status_t(* file_system_module_info::set_content_name)(int fd, partition_id partition, const char *name, disk_job_id job)</definition>
        <argsstring>)(int fd, partition_id partition, const char *name, disk_job_id job)</argsstring>
        <name>set_content_name</name>
        <qualifiedname>file_system_module_info::set_content_name</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="300" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a3f59dc6adcc9a808c9a6917d5ea20906" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref>(*</type>
        <definition>status_t(* file_system_module_info::set_content_parameters)(int fd, partition_id partition, const char *parameters, disk_job_id job)</definition>
        <argsstring>)(int fd, partition_id partition, const char *parameters, disk_job_id job)</argsstring>
        <name>set_content_parameters</name>
        <qualifiedname>file_system_module_info::set_content_parameters</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="302" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1ace46cbad3455efd3d3d93ca6e719a24f" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref>(*</type>
        <definition>status_t(* file_system_module_info::initialize)(const char *partition, const char *name, const char *parameters, disk_job_id job)</definition>
        <argsstring>)(int fd, partition_id partition, const char *name, const char *parameters, off_t partitionSize, disk_job_id job)</argsstring>
        <name>initialize</name>
        <qualifiedname>file_system_module_info::initialize</qualifiedname>
        <briefdescription>
<para>Undocumented. TODO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="304" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfile__system__module__info_1a0d76d620cb4cba9c545d3b96c90dcc5a" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 file_system_module_info::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <qualifiedname>file_system_module_info::flags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="260" column="7" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a001790b6bcb0c7864f5315ad12054285" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref>(*</type>
        <definition>uint32(* file_system_module_info::get_supported_operations) (partition_data *partition, uint32 mask)</definition>
        <argsstring>)(partition_data *partition, uint32 mask)</argsstring>
        <name>get_supported_operations</name>
        <qualifiedname>file_system_module_info::get_supported_operations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="276" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a15313ecae18e4bea45dd75b8d8343786" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* file_system_module_info::short_name</definition>
        <argsstring></argsstring>
        <name>short_name</name>
        <qualifiedname>file_system_module_info::short_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="258" column="11" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfile__system__module__info_1a36ef65751dcf36fe11b48cb62d5b258a" prot="public" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref>(*</type>
        <definition>status_t(* file_system_module_info::uninitialize) (int fd, partition_id partition, off_t partitionSize, uint32 blockSize, disk_job_id job)</definition>
        <argsstring>)(int fd, partition_id partition, off_t partitionSize, uint32 blockSize, disk_job_id job)</argsstring>
        <name>uninitialize</name>
        <qualifiedname>file_system_module_info::uninitialize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="306" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Kernel module interface for file systems. </para>
    </briefdescription>
    <detaileddescription>
<para>See the <ref refid="fs_modules" kindref="compound">introduction to file system modules</ref> for an introduction to writing file systems. </para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" line="256" column="1" bodyfile="/boot/home/src/haiku/headers/os/drivers/fs_interface.h" bodystart="256" bodyend="308"/>
    <listofallmembers>
      <member refid="structfile__system__module__info_1a8cb1355cf464ebe60d53d97050514969" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>defragment</name></member>
      <member refid="structfile__system__module__info_1a0d76d620cb4cba9c545d3b96c90dcc5a" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>flags</name></member>
      <member refid="structfile__system__module__info_1aec91e0dcedaa5389c521b7b06601bc09" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>free_identify_partition_cookie</name></member>
      <member refid="structfile__system__module__info_1a8e2bdc5a825dad6a9fd555bab3371100" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>free_partition_content_cookie</name></member>
      <member refid="structfile__system__module__info_1a001790b6bcb0c7864f5315ad12054285" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>get_supported_operations</name></member>
      <member refid="structfile__system__module__info_1a0105524aa307d9819a91f70df8ee81a5" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>identify_partition</name></member>
      <member refid="structfile__system__module__info_1ac9cc7056d3d12a19acec8edc99514c63" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>info</name></member>
      <member refid="structfile__system__module__info_1ace46cbad3455efd3d3d93ca6e719a24f" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>initialize</name></member>
      <member refid="structfile__system__module__info_1ad59987c29f64dde1ef161e5870fd0d9e" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>mount</name></member>
      <member refid="structfile__system__module__info_1a6e6b70e41145efaa690bebb0c7186043" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>move</name></member>
      <member refid="structfile__system__module__info_1a71eb451ac050067188ea7b95a1a2229f" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>pretty_name</name></member>
      <member refid="structfile__system__module__info_1a47eb48661371d59c792b9fb42aab65bf" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>repair</name></member>
      <member refid="structfile__system__module__info_1ab8cd5fd9fdb880e4643d8862758ca6af" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>resize</name></member>
      <member refid="structfile__system__module__info_1a218dc77af1d56c1249bc92687c07e7b4" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>scan_partition</name></member>
      <member refid="structfile__system__module__info_1a7d4d3c9d6ed3dde8755efa425d52a0d7" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>set_content_name</name></member>
      <member refid="structfile__system__module__info_1a3f59dc6adcc9a808c9a6917d5ea20906" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>set_content_parameters</name></member>
      <member refid="structfile__system__module__info_1aeefaa1d527ac88b300db85ba050358f4" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>shadow_changed</name></member>
      <member refid="structfile__system__module__info_1a15313ecae18e4bea45dd75b8d8343786" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>short_name</name></member>
      <member refid="structfile__system__module__info_1a36ef65751dcf36fe11b48cb62d5b258a" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>uninitialize</name></member>
      <member refid="structfile__system__module__info_1a22d065a25ca613546d3fad7719ee9fe3" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>validate_initialize</name></member>
      <member refid="structfile__system__module__info_1a24c7cd8f1ed99371b3feb99548f25bb3" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>validate_move</name></member>
      <member refid="structfile__system__module__info_1afdf3c9d08408f016aa850498d78fe788" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>validate_resize</name></member>
      <member refid="structfile__system__module__info_1ae17c36765d48b357dfe74a80891e6835" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>validate_set_content_name</name></member>
      <member refid="structfile__system__module__info_1a85fd4e8f6033fddd7811ab99e1ed8330" prot="public" virt="non-virtual"><scope>file_system_module_info</scope><name>validate_set_content_parameters</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
