<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBGroupLayout" kind="class" language="C++" prot="public">
    <compoundname>BGroupLayout</compoundname>
    <basecompoundref refid="classBTwoDimensionalLayout" prot="public" virt="non-virtual">BTwoDimensionalLayout</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBGroupLayout_1a85c6d478acd6548f0213844d1b5654ea" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BGroupLayout::_reserved[5]</definition>
        <argsstring>[5]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BGroupLayout::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="90" column="7" bodyfile="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBGroupLayout_1a688e4cc8d601252e87742ddc1eeefe8f" prot="private" static="no" mutable="no">
        <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
        <definition>orientation BGroupLayout::fOrientation</definition>
        <argsstring></argsstring>
        <name>fOrientation</name>
        <qualifiedname>BGroupLayout::fOrientation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="87" column="12" bodyfile="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBGroupLayout_1a9ae17e73c28785446cebd53981a94fbb" prot="private" static="no" mutable="no">
        <type><ref refid="classBList" kindref="compound">BList</ref></type>
        <definition>BList BGroupLayout::fVisibleItems</definition>
        <argsstring></argsstring>
        <name>fVisibleItems</name>
        <qualifiedname>BGroupLayout::fVisibleItems</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="88" column="6" bodyfile="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBGroupLayout_1ad73dd21e67ea846cd09bdf21ff108073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BGroupLayout::BGroupLayout</definition>
        <argsstring>(BMessage *from)</argsstring>
        <name>BGroupLayout</name>
        <qualifiedname>BGroupLayout::BGroupLayout</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Archive constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to construct the <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref> from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1ab26030a2a321e12a83daf46eb636a16f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BGroupLayout::BGroupLayout</definition>
        <argsstring>(orientation orientation, float spacing=B_USE_DEFAULT_SPACING)</argsstring>
        <name>BGroupLayout</name>
        <qualifiedname>BGroupLayout::BGroupLayout</qualifiedname>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>float</type>
          <declname>spacing</declname>
          <defval>B_USE_DEFAULT_SPACING</defval>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>The orientation of this <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spacing</parametername>
</parameternamelist>
<parameterdescription>
<para>The spacing between BLayoutItems in this <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1acc37f2789a334efe90e9e34716b2c39e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BGroupLayout::~BGroupLayout</definition>
        <argsstring>()</argsstring>
        <name>~BGroupLayout</name>
        <qualifiedname>BGroupLayout::~BGroupLayout</qualifiedname>
        <briefdescription>
<para>Destructor method. </para>
        </briefdescription>
        <detaileddescription>
<para>Standard Destructor.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="15" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a7d53490ec7fe0b7fff6c2df5cc084493" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BGroupLayout::AddItem</definition>
        <argsstring>(BLayoutItem *item)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BGroupLayout::AddItem</qualifiedname>
        <reimplements refid="classBLayout_1a61bab6592bb26173d12488526b203ead">AddItem</reimplements>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Adds <emphasis>item</emphasis> to this layout as the last item. In a vertical <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>, <emphasis>item</emphasis> will be on the right, in a horizontal <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>, <emphasis>item</emphasis> will be at the bottom. </para>
        </briefdescription>
        <detaileddescription>
<para><emphasis>item</emphasis> will have a weight of <computeroutput>1.0f</computeroutput>.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="32" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a527a4a56ca8cf9982b562db76308f2bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BGroupLayout::AddItem</definition>
        <argsstring>(BLayoutItem *item, float weight)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BGroupLayout::AddItem</qualifiedname>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Adds <emphasis>item</emphasis> to the end of this layout with a weight of <emphasis>weight</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="34" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1abe585d5630ede5df6602b43421fe8ebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BGroupLayout::AddItem</definition>
        <argsstring>(int32 index, BLayoutItem *item)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BGroupLayout::AddItem</qualifiedname>
        <reimplements refid="classBLayout_1a1b9a50f6a573a777afc2b27bac65c7f6">AddItem</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Adds <emphasis>item</emphasis> to this layout at <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><emphasis>item</emphasis> will have a weight of <computeroutput>1.0f</computeroutput>.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="33" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a27d20f801ebe0781bd002db28a265483" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BGroupLayout::AddItem</definition>
        <argsstring>(int32 index, BLayoutItem *item, float weight)</argsstring>
        <name>AddItem</name>
        <qualifiedname>BGroupLayout::AddItem</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Adds <emphasis>item</emphasis> this layout at <emphasis>index</emphasis> with a weight of <emphasis>weight</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="35" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1ac732947ea67a015a1d2babe82f60fd90" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
        <definition>BLayoutItem * BGroupLayout::AddView</definition>
        <argsstring>(BView *child)</argsstring>
        <name>AddView</name>
        <qualifiedname>BGroupLayout::AddView</qualifiedname>
        <reimplements refid="classBLayout_1a83f286f504a1a735f07304c7647ba7f9">AddView</reimplements>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Adds <emphasis>child</emphasis> to this layout as the last item. In a vertical <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>, <emphasis>child</emphasis> will be on the right, in a horizontal <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>, <emphasis>child</emphasis> will be at the bottom. </para>
        </briefdescription>
        <detaileddescription>
<para><emphasis>child</emphasis> will have a weight of <computeroutput>1.0f</computeroutput>.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="26" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a53738d911bcab3b7f0273b8fd088cc8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
        <definition>BLayoutItem * BGroupLayout::AddView</definition>
        <argsstring>(BView *child, float weight)</argsstring>
        <name>AddView</name>
        <qualifiedname>BGroupLayout::AddView</qualifiedname>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Adds <emphasis>child</emphasis> to the end of this layout with a weight of <emphasis>weight</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="28" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a7fce65b286ae16105cb6b91661e24b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
        <definition>BLayoutItem * BGroupLayout::AddView</definition>
        <argsstring>(int32 index, BView *child)</argsstring>
        <name>AddView</name>
        <qualifiedname>BGroupLayout::AddView</qualifiedname>
        <reimplements refid="classBLayout_1ad7ff945dc53e94a34954da6eaf9e2268">AddView</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Adds <emphasis>child</emphasis> to this layout at <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><emphasis>child</emphasis> will have a weight of <computeroutput>1.0f</computeroutput>.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="27" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a470072b3b77f493f8594cfcf02f2bde4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
        <definition>BLayoutItem * BGroupLayout::AddView</definition>
        <argsstring>(int32 index, BView *child, float weight)</argsstring>
        <name>AddView</name>
        <qualifiedname>BGroupLayout::AddView</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBView" kindref="compound">BView</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Adds <emphasis>child</emphasis> this layout at <emphasis>index</emphasis> with a weight of <emphasis>weight</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="29" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1aae43bdb3a725755664e55f13a054b510" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BGroupLayout::Archive</definition>
        <argsstring>(BMessage *into, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BGroupLayout::Archive</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1a405b207a3fa1770d5349de6d66705390">Archive</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>into</declname>
          <defname>archive</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Archives this layout into <emphasis>archive</emphasis>. If deep is true, also archives the items in this layout, calling <ref refid="classBGroupLayout_1ab7a1143b436b800e42c76de98534dbc7" kindref="member">ItemArchived()</ref> for each one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="38" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a1aa77d74e70e221be18c148ec4e0841c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BGroupLayout::ItemWeight</definition>
        <argsstring>(int32 index) const</argsstring>
        <name>ItemWeight</name>
        <qualifiedname>BGroupLayout::ItemWeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the weight of the item at <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="23" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a610d0ec2b5a4e6169bf8cd07fcb73b87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
        <definition>orientation BGroupLayout::Orientation</definition>
        <argsstring>() const</argsstring>
        <name>Orientation</name>
        <qualifiedname>BGroupLayout::Orientation</qualifiedname>
        <briefdescription>
<para>Get the <ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref> of this <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="20" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a31d82f6cd2fdecdc0a04d60d6e3943f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BGroupLayout::Perform</definition>
        <argsstring>(perform_code d, void *arg)</argsstring>
        <name>Perform</name>
        <qualifiedname>BGroupLayout::Perform</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1aac851d9c86397296d0e7e69716c01926">Perform</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" kindref="member">perform_code</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Perform some action (Internal method defined for binary compatibility purposes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="41" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a15c7baf4580baffdec6399c2ad568871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGroupLayout::SetItemWeight</definition>
        <argsstring>(int32 index, float weight)</argsstring>
        <name>SetItemWeight</name>
        <qualifiedname>BGroupLayout::SetItemWeight</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Set the weight of the item at <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="24" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a65404e72f6f0d5caa46f89a63a712745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGroupLayout::SetOrientation</definition>
        <argsstring>(orientation orientation)</argsstring>
        <name>SetOrientation</name>
        <qualifiedname>BGroupLayout::SetOrientation</qualifiedname>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref> of this <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>The new <ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref> of this <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="21" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a2b711c92449e331e0cd8ae698b350df4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGroupLayout::SetSpacing</definition>
        <argsstring>(float spacing)</argsstring>
        <name>SetSpacing</name>
        <qualifiedname>BGroupLayout::SetSpacing</qualifiedname>
        <param>
          <type>float</type>
          <declname>spacing</declname>
        </param>
        <briefdescription>
<para>Set the amount of spacing (in pixels) between each item. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="18" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a12df17c881a1e08014e20cb3c0257b8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BGroupLayout::Spacing</definition>
        <argsstring>() const</argsstring>
        <name>Spacing</name>
        <qualifiedname>BGroupLayout::Spacing</qualifiedname>
        <briefdescription>
<para>Get the amount of spacing (in pixels) between each item. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="17" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBGroupLayout_1a7d447aca50c63d1f3d4f57e5cf676405" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>static BArchivable * BGroupLayout::Instantiate</definition>
        <argsstring>(BMessage *from)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BGroupLayout::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Instantiate the layout from the message <emphasis>from</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="39" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBGroupLayout_1a62670753e05e05601592d49f0b5f438f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BGroupLayout::AllArchived</definition>
        <argsstring>(BMessage *into) const</argsstring>
        <name>AllArchived</name>
        <qualifiedname>BGroupLayout::AllArchived</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1adb001699008fe0cb2eff51661da175e6">AllArchived</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
          <defname>into</defname>
        </param>
        <briefdescription>
<para>Method relating to the use of <computeroutput><ref refid="classBArchiver" kindref="compound">BArchiver</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This hook function is called once the first <ref refid="classBArchiver" kindref="compound">BArchiver</ref> that was created in an archiving session is either destroyed, or has its Finish() method called. Implementations of this method can be used, in conjunction with <ref refid="classBArchiver_1a77f099b123416c719be2cd78eb999d19" kindref="member">BArchiver::IsArchived()</ref>, to reference objects in your archive that you do not own, depending on whether or not those objects were archived by their owners. Implementations of this method should call the implementation of their parent class, the same as for the <ref refid="classBGroupLayout_1aae43bdb3a725755664e55f13a054b510" kindref="member">Archive()</ref> method.</para>
<para><simplesect kind="warning"><para>To guarantee that your <ref refid="classBGroupLayout_1a62670753e05e05601592d49f0b5f438f" kindref="member">AllArchived()</ref> method will be called during archival, you must create a <ref refid="classBArchiver" kindref="compound">BArchiver</ref> object in your <ref refid="classBGroupLayout_1aae43bdb3a725755664e55f13a054b510" kindref="member">Archive()</ref> implementation.</para>
</simplesect>
<simplesect kind="warning"><para>You should archive any objects you own in your <ref refid="classBGroupLayout_1aae43bdb3a725755664e55f13a054b510" kindref="member">Archive()</ref> method implementation, and <bold>NOT</bold> your <ref refid="classBGroupLayout_1a62670753e05e05601592d49f0b5f438f" kindref="member">AllArchived()</ref> method.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBArchiver" kindref="compound">BArchiver</ref> <ref refid="classBArchiver_1a7c82dbc0fb42795c575ac2c6a5405297" kindref="member">BArchiver::Finish()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="44" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a25bd4f838e672aa3eb611a616c5ec5e0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BGroupLayout::AllUnarchived</definition>
        <argsstring>(const BMessage *from)</argsstring>
        <name>AllUnarchived</name>
        <qualifiedname>BGroupLayout::AllUnarchived</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1a67ba660a95e7cf8647be8835184b6cc3">AllUnarchived</reimplements>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Unarchives the <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref>&apos;s for this layout, calling <ref refid="classBGroupLayout_1a3fee09f7df25a5d730a888fc88360f09" kindref="member">ItemUnarchived()</ref> for each one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="45" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1aee1e856cc71eb9c3168fbb1d98bb05df" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::GetColumnRowConstraints</definition>
        <argsstring>(orientation orientation, int32 index, ColumnRowConstraints *constraints)</argsstring>
        <name>GetColumnRowConstraints</name>
        <qualifiedname>BGroupLayout::GetColumnRowConstraints</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1acfbb5ddafdbd9a22f0c2a7e23d706e6f">GetColumnRowConstraints</reimplements>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="structBTwoDimensionalLayout_1_1ColumnRowConstraints" kindref="compound">ColumnRowConstraints</ref> *</type>
          <declname>constraints</declname>
        </param>
        <briefdescription>
<para>Fill in the ColumnRowConstraints for a certain column or row in the <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is used to communicate the size constraints and weight for a given row/column in the <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref>.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="58" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a4ae9dc30c3b44e806fb49013ef0efa27" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::GetItemDimensions</definition>
        <argsstring>(BLayoutItem *item, Dimensions *dimensions)</argsstring>
        <name>GetItemDimensions</name>
        <qualifiedname>BGroupLayout::GetItemDimensions</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1a537932c4a364b7e206e87788dafe40a6">GetItemDimensions</reimplements>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="structBTwoDimensionalLayout_1_1Dimensions" kindref="compound">Dimensions</ref> *</type>
          <declname>dimensions</declname>
        </param>
        <briefdescription>
<para>Tell the base class what column and row a <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> is in as well as how many columns and rows it covers. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="62" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a0eb78028a7df6d1e0f46f7213eaa5ed8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BGroupLayout::InternalCountColumns</definition>
        <argsstring>()</argsstring>
        <name>InternalCountColumns</name>
        <qualifiedname>BGroupLayout::InternalCountColumns</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1a1e5383c9bfe9813c83d611c2069b3418">InternalCountColumns</reimplements>
        <briefdescription>
<para>Get the number of columns in the <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of columns in the <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="56" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1aeff89a07380f8171d026b78737afeebe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BGroupLayout::InternalCountRows</definition>
        <argsstring>()</argsstring>
        <name>InternalCountRows</name>
        <qualifiedname>BGroupLayout::InternalCountRows</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1afac018580a44f991c9d604e226226e76">InternalCountRows</reimplements>
        <briefdescription>
<para>Get the number of rows in the <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of rows in the <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="57" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1ab7222b8afc2e96f1396d226117fbbc34" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BGroupLayout::ItemAdded</definition>
        <argsstring>(BLayoutItem *item, int32 atIndex)</argsstring>
        <name>ItemAdded</name>
        <qualifiedname>BGroupLayout::ItemAdded</qualifiedname>
        <reimplements refid="classBAbstractLayout_1a842b424b62039753db229d3deafd0d10">ItemAdded</reimplements>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>atIndex</declname>
        </param>
        <briefdescription>
<para>Hook method called when <emphasis>item</emphasis> is added to this layout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> that is being added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>atIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> on succcess, false if <emphasis>item</emphasis> will not be added.</para>
</simplesect>
<simplesect kind="note"><para>This is a good time to allocate data for a <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> and attach it to <emphasis>item</emphasis> via <ref refid="classBLayoutItem_1abffd9c09f9951f25b4a752a06e4040c3" kindref="member">BLayoutItem::SetLayoutData()</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="51" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1ab7a1143b436b800e42c76de98534dbc7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BGroupLayout::ItemArchived</definition>
        <argsstring>(BMessage *into, BLayoutItem *item, int32 index) const</argsstring>
        <name>ItemArchived</name>
        <qualifiedname>BGroupLayout::ItemArchived</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1af70e3bd455f4dafa684ac6352223fcc4">ItemArchived</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>into</declname>
        </param>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Hook for derived classes to add data specific to <emphasis>item</emphasis> to the <emphasis>into</emphasis> <ref refid="classBMessage" kindref="compound">BMessage</ref>. <emphasis>item</emphasis> resides at <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The same archive is passed to <ref refid="classBLayout_1a7b342780ed464d0074a63fe8fac67003" kindref="member">BLayout::ItemArchived()</ref> for all items, so any data added for each item will be stored in an array.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="46" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1ac347c539f60e59dee72e7038bcb83ff6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::ItemRemoved</definition>
        <argsstring>(BLayoutItem *item, int32 fromIndex)</argsstring>
        <name>ItemRemoved</name>
        <qualifiedname>BGroupLayout::ItemRemoved</qualifiedname>
        <reimplements refid="classBAbstractLayout_1a4df45f148af285d521bc5d6a491dac7b">ItemRemoved</reimplements>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>fromIndex</declname>
        </param>
        <briefdescription>
<para>Hook method called when <emphasis>item</emphasis> is removed from this layout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> being removed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fromIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index where <emphasis>item</emphasis> used to reside.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
When this hook is called, <emphasis>item</emphasis> is not yet completely removed. It can no longer be accessed with LayoutItemAt(), nor does it contribute to the value of <ref refid="classBLayout_1ab7d1b881e91213047412abdcb10eae4f" kindref="member">CountItems()</ref>, but the item has not yet had its ItemDetached() hook called.</para>
<para><simplesect kind="note"><para>This is a good time to delete the data you&apos;ve attached to <emphasis>item</emphasis> via <ref refid="classBLayoutItem_1abffd9c09f9951f25b4a752a06e4040c3" kindref="member">BLayoutItem::SetLayoutData()</ref>.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="52" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a3fee09f7df25a5d730a888fc88360f09" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BGroupLayout::ItemUnarchived</definition>
        <argsstring>(const BMessage *from, BLayoutItem *item, int32 index)</argsstring>
        <name>ItemUnarchived</name>
        <qualifiedname>BGroupLayout::ItemUnarchived</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1a7e98a6fb9b41e0856e353f6c0baaee12">ItemUnarchived</reimplements>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Hook for derived classes to retrieve data specific to <emphasis>item</emphasis> from the <emphasis>from</emphasis> <ref refid="classBMessage" kindref="compound">BMessage</ref>. <emphasis>item</emphasis> resides at <emphasis>index</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The same archive is passed to <ref refid="classBLayout_1a7b342780ed464d0074a63fe8fac67003" kindref="member">BLayout::ItemArchived()</ref> for all items, so any data added for each item will be stored in an array. You should pass <emphasis>index</emphasis> to the <ref refid="classBMessage" kindref="compound">BMessage</ref> methods you will be using in this method.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="48" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a3519b2e20a2f47421e614422ff83e3de" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::PrepareItems</definition>
        <argsstring>(orientation orientation)</argsstring>
        <name>PrepareItems</name>
        <qualifiedname>BGroupLayout::PrepareItems</qualifiedname>
        <reimplements refid="classBTwoDimensionalLayout_1a4f14f46b98fd590a562b5914e57b111a">PrepareItems</reimplements>
        <param>
          <type><ref refid="InterfaceDefs_8h_1ac5fc6e200c34376449ba20a234061eb4" kindref="member">orientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
<para>Prepare the <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> in this <ref refid="classBTwoDimensionalLayout" kindref="compound">BTwoDimensionalLayout</ref> subclass for layout within a certain <emphasis>orientation</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a good place to update cache information that will be used in other hook methods, for example.</para>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="54" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBGroupLayout_1ab7d3a17cbc543bc166bc16cf9e2fa6a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BGroupLayout::BGroupLayout</definition>
        <argsstring>(const BGroupLayout &amp;)</argsstring>
        <name>BGroupLayout</name>
        <qualifiedname>BGroupLayout::BGroupLayout</qualifiedname>
        <param>
          <type>const <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a25ac56022dab161d61e38584655536e2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ItemLayoutData *</type>
        <definition>ItemLayoutData * BGroupLayout::_LayoutDataForItem</definition>
        <argsstring>(BLayoutItem *item) const</argsstring>
        <name>_LayoutDataForItem</name>
        <qualifiedname>BGroupLayout::_LayoutDataForItem</qualifiedname>
        <param>
          <type><ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="85" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a8352e3af83b7877abb7410822bd7daa6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::_ReservedGroupLayout1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGroupLayout1</name>
        <qualifiedname>BGroupLayout::_ReservedGroupLayout1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="68" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a95b309959b6a61cc6b6d45449d38cc80" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::_ReservedGroupLayout10</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGroupLayout10</name>
        <qualifiedname>BGroupLayout::_ReservedGroupLayout10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="77" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a8792e4f0ee9754ca6b6d7c8e25ad188a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::_ReservedGroupLayout2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGroupLayout2</name>
        <qualifiedname>BGroupLayout::_ReservedGroupLayout2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="69" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a7628768fe769b01359f3b8eeb5196fd7" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::_ReservedGroupLayout3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGroupLayout3</name>
        <qualifiedname>BGroupLayout::_ReservedGroupLayout3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="70" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a8b0da8bf75dd6768b6781fae61a19eec" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::_ReservedGroupLayout4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGroupLayout4</name>
        <qualifiedname>BGroupLayout::_ReservedGroupLayout4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="71" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a9e6a9c18e58bf018d9c003a0a3ff60c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::_ReservedGroupLayout5</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGroupLayout5</name>
        <qualifiedname>BGroupLayout::_ReservedGroupLayout5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="72" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1af64efb63e633976bacbdcdd8f5d252f7" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::_ReservedGroupLayout6</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGroupLayout6</name>
        <qualifiedname>BGroupLayout::_ReservedGroupLayout6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="73" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a569cb1b068e6f398c5285c3e1c2b30e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::_ReservedGroupLayout7</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGroupLayout7</name>
        <qualifiedname>BGroupLayout::_ReservedGroupLayout7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="74" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a0f9e9f2940fd2bc70b8435c899cfcf81" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::_ReservedGroupLayout8</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGroupLayout8</name>
        <qualifiedname>BGroupLayout::_ReservedGroupLayout8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="75" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1ab9fc260d545af0dc3593b59a0f94d255" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BGroupLayout::_ReservedGroupLayout9</definition>
        <argsstring>()</argsstring>
        <name>_ReservedGroupLayout9</name>
        <qualifiedname>BGroupLayout::_ReservedGroupLayout9</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="76" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBGroupLayout_1a43bb5440c388b626a40f0d58486ac049" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BGroupLayout::operator=</definition>
        <argsstring>(const BGroupLayout &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>BGroupLayout::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="81" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref> class is a simple <ref refid="classBLayout" kindref="compound">BLayout</ref> subclass that arranges the items it holds within a vertical or horizontal box. </para>
    </briefdescription>
    <detaileddescription>
<para>In a horizontal <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>, each <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> is given the same vertical area, but different horizontal areas. In a vertical <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>, each <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> is given the same horizontal area, but different vertical areas. Despite this, because of alignment and size constraints, the items in a <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref> may not all use the same vertical or horizontal area on screen. Some BLayoutItems may have alignments that cause them to sit at the bottom of the area they are given, for example. This is not a flaw or bug, but something that you may come across when using this class.</para>
<para>In a <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref>, each <ref refid="classBLayoutItem" kindref="compound">BLayoutItem</ref> or <ref refid="classBView" kindref="compound">BView</ref> has a weight, the default weight is <computeroutput>1.0f</computeroutput>. When a <ref refid="classBGroupLayout" kindref="compound">BGroupLayout</ref> is not given enough space to satisfy the minimum sizes of all items, then space is distributed according to weight, while still attempting to satisfy minimum size constraints. Weighting is scaled over the sum weight of all the items in this layout. If a particular item has half of the sum weight of all items, it will get half of the total space, unless this exceeds that item&apos;s maximum size. If the space for an item exceeds the items maximum size, the excess will be distributed to other items.</para>
<para><simplesect kind="warning"><para>This class is not yet finalized, if you use it in your software assume that it will break some time in the future.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>BAbstractLayout</label>
        <link refid="classBAbstractLayout"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BGroupLayout</label>
        <link refid="classBGroupLayout"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BLayout</label>
        <link refid="classBLayout"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BLayoutItem</label>
        <link refid="classBLayoutItem"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BTwoDimensionalLayout</label>
        <link refid="classBTwoDimensionalLayout"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>BAbstractLayout</label>
        <link refid="classBAbstractLayout"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BGroupLayout</label>
        <link refid="classBGroupLayout"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BLayout</label>
        <link refid="classBLayout"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BLayoutItem</label>
        <link refid="classBLayoutItem"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BTwoDimensionalLayout</label>
        <link refid="classBTwoDimensionalLayout"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" line="10" column="1" bodyfile="/boot/home/src/haiku/headers/os/interface/GroupLayout.h" bodystart="10" bodyend="91"/>
    <listofallmembers>
      <member refid="classBGroupLayout_1a25ac56022dab161d61e38584655536e2" prot="private" virt="non-virtual"><scope>BGroupLayout</scope><name>_LayoutDataForItem</name></member>
      <member refid="classBGroupLayout_1a85c6d478acd6548f0213844d1b5654ea" prot="private" virt="non-virtual"><scope>BGroupLayout</scope><name>_reserved</name></member>
      <member refid="classBGroupLayout_1a8352e3af83b7877abb7410822bd7daa6" prot="private" virt="virtual"><scope>BGroupLayout</scope><name>_ReservedGroupLayout1</name></member>
      <member refid="classBGroupLayout_1a95b309959b6a61cc6b6d45449d38cc80" prot="private" virt="virtual"><scope>BGroupLayout</scope><name>_ReservedGroupLayout10</name></member>
      <member refid="classBGroupLayout_1a8792e4f0ee9754ca6b6d7c8e25ad188a" prot="private" virt="virtual"><scope>BGroupLayout</scope><name>_ReservedGroupLayout2</name></member>
      <member refid="classBGroupLayout_1a7628768fe769b01359f3b8eeb5196fd7" prot="private" virt="virtual"><scope>BGroupLayout</scope><name>_ReservedGroupLayout3</name></member>
      <member refid="classBGroupLayout_1a8b0da8bf75dd6768b6781fae61a19eec" prot="private" virt="virtual"><scope>BGroupLayout</scope><name>_ReservedGroupLayout4</name></member>
      <member refid="classBGroupLayout_1a9e6a9c18e58bf018d9c003a0a3ff60c7" prot="private" virt="virtual"><scope>BGroupLayout</scope><name>_ReservedGroupLayout5</name></member>
      <member refid="classBGroupLayout_1af64efb63e633976bacbdcdd8f5d252f7" prot="private" virt="virtual"><scope>BGroupLayout</scope><name>_ReservedGroupLayout6</name></member>
      <member refid="classBGroupLayout_1a569cb1b068e6f398c5285c3e1c2b30e2" prot="private" virt="virtual"><scope>BGroupLayout</scope><name>_ReservedGroupLayout7</name></member>
      <member refid="classBGroupLayout_1a0f9e9f2940fd2bc70b8435c899cfcf81" prot="private" virt="virtual"><scope>BGroupLayout</scope><name>_ReservedGroupLayout8</name></member>
      <member refid="classBGroupLayout_1ab9fc260d545af0dc3593b59a0f94d255" prot="private" virt="virtual"><scope>BGroupLayout</scope><name>_ReservedGroupLayout9</name></member>
      <member refid="classBTwoDimensionalLayout_1ab6d8341da8769dd0ad704e53adfa50d7" prot="protected" virt="non-virtual"><scope>BGroupLayout</scope><name>AddInsets</name></member>
      <member refid="classBTwoDimensionalLayout_1a93aa980ac6253fc952772dc2cf283dfc" prot="protected" virt="non-virtual"><scope>BGroupLayout</scope><name>AddInsets</name></member>
      <member refid="classBGroupLayout_1a7d53490ec7fe0b7fff6c2df5cc084493" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>AddItem</name></member>
      <member refid="classBGroupLayout_1abe585d5630ede5df6602b43421fe8ebc" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>AddItem</name></member>
      <member refid="classBGroupLayout_1a527a4a56ca8cf9982b562db76308f2bd" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>AddItem</name></member>
      <member refid="classBGroupLayout_1a27d20f801ebe0781bd002db28a265483" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>AddItem</name></member>
      <member refid="classBGroupLayout_1ac732947ea67a015a1d2babe82f60fd90" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>AddView</name></member>
      <member refid="classBGroupLayout_1a7fce65b286ae16105cb6b91661e24b55" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>AddView</name></member>
      <member refid="classBGroupLayout_1a53738d911bcab3b7f0273b8fd088cc8a" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>AddView</name></member>
      <member refid="classBGroupLayout_1a470072b3b77f493f8594cfcf02f2bde4" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>AddView</name></member>
      <member refid="classBLayoutItem_1a3b5b23daa375b3333fc58c9c22ce62fa" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>AlignInFrame</name></member>
      <member refid="classBTwoDimensionalLayout_1a873328fd96e352f3822c74c10b191399" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>AlignLayoutWith</name></member>
      <member refid="classBAbstractLayout_1a218c3772949ac855126f461162fc1ee9" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>Alignment</name></member>
      <member refid="classBGroupLayout_1a62670753e05e05601592d49f0b5f438f" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>AllArchived</name></member>
      <member refid="classBGroupLayout_1a25bd4f838e672aa3eb611a616c5ec5e0" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>AllUnarchived</name></member>
      <member refid="classBLayout_1a4f2ff9362ef1e84d7c886c58881d2be9" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>AncestorsVisible</name></member>
      <member refid="classBAbstractLayout_1a5e36e0a2cb89ef4f45905c20159ef371" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>AncestorVisibilityChanged</name></member>
      <member refid="classBGroupLayout_1aae43bdb3a725755664e55f13a054b510" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>Archive</name></member>
      <member refid="classBAbstractLayout_1a0eb40b1488e9b5f524cbc263106e7f3b" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>AttachedToLayout</name></member>
      <member refid="classBAbstractLayout_1ac31ae4b204f6731fec17f7af2ed25859" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>BAbstractLayout</name></member>
      <member refid="classBAbstractLayout_1ae7eea1f1b57d19981c210085953cae76" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>BAbstractLayout</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>BArchivable</name></member>
      <member refid="classBTwoDimensionalLayout_1a02f5827bf18fdfc50b2aef94733a97a0" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>BaseAlignment</name></member>
      <member refid="classBTwoDimensionalLayout_1a9cba96eda27d17e4d7c8c5b3046a1164" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>BaseMaxSize</name></member>
      <member refid="classBTwoDimensionalLayout_1ad56f8b3d3ffb022153d9a06bc5f1f8b4" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>BaseMinSize</name></member>
      <member refid="classBTwoDimensionalLayout_1a03bcab80b28f949927ce42ccc428e52f" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>BasePreferredSize</name></member>
      <member refid="classBGroupLayout_1ab26030a2a321e12a83daf46eb636a16f" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>BGroupLayout</name></member>
      <member refid="classBGroupLayout_1ad73dd21e67ea846cd09bdf21ff108073" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>BGroupLayout</name></member>
      <member refid="classBGroupLayout_1ab7d3a17cbc543bc166bc16cf9e2fa6a2" prot="private" virt="non-virtual"><scope>BGroupLayout</scope><name>BGroupLayout</name></member>
      <member refid="classBLayout_1a95bf53912a8c34a70e63f74b155b42cb" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>BLayout</name></member>
      <member refid="classBLayout_1a972a6ece042bd46710f6b945d9d87763" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>BLayout</name></member>
      <member refid="classBLayoutItem_1ae147b703a6d2583545407d5f48809bac" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>BLayoutItem</name></member>
      <member refid="classBLayoutItem_1ac639d9cfa9b8124106ef2d8bc5badb2e" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>BLayoutItem</name></member>
      <member refid="classBTwoDimensionalLayout_1a98f591898a00421664defadb6aee0d3c" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>BTwoDimensionalLayout</name></member>
      <member refid="classBTwoDimensionalLayout_1af3d37ee41a0ce6394c4d532da519f444" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>BTwoDimensionalLayout</name></member>
      <member refid="classBLayout_1ab7d1b881e91213047412abdcb10eae4f" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>CountItems</name></member>
      <member refid="classBAbstractLayout_1a4535f6de7c5193ba20038b891944864b" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>DetachedFromLayout</name></member>
      <member refid="classBLayout_1a509ff18ffa060bd9aab042c4ee6af245" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>DisableLayoutInvalidation</name></member>
      <member refid="classBTwoDimensionalLayout_1a18eeeb1d0b5fa7b4b57d8a2a9dc3824b" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>DoLayout</name></member>
      <member refid="classBLayout_1a7f369cb77173c3922dddbb38db893a6c" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>EnableLayoutInvalidation</name></member>
      <member refid="classBTwoDimensionalLayout_1a8e55843e4e569083ecd8265d4f793099" prot="protected" virt="non-virtual"><scope>BGroupLayout</scope><name>fBottomInset</name></member>
      <member refid="classBTwoDimensionalLayout_1adfad5192bbe0341d5906c5216f0dcbae" prot="protected" virt="non-virtual"><scope>BGroupLayout</scope><name>fHSpacing</name></member>
      <member refid="classBTwoDimensionalLayout_1ac0aa796c2d64b0068a357d969561de90" prot="protected" virt="non-virtual"><scope>BGroupLayout</scope><name>fLeftInset</name></member>
      <member refid="classBGroupLayout_1a688e4cc8d601252e87742ddc1eeefe8f" prot="private" virt="non-virtual"><scope>BGroupLayout</scope><name>fOrientation</name></member>
      <member refid="classBAbstractLayout_1a931bce77912316857d2e8d2a557e4241" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>Frame</name></member>
      <member refid="classBTwoDimensionalLayout_1a1dc695acf8c1f94f8653a4398feac5a5" prot="protected" virt="non-virtual"><scope>BGroupLayout</scope><name>fRightInset</name></member>
      <member refid="classBTwoDimensionalLayout_1abc4e661aa6fd2e9197e561892d40b2f3" prot="protected" virt="non-virtual"><scope>BGroupLayout</scope><name>fTopInset</name></member>
      <member refid="classBGroupLayout_1a9ae17e73c28785446cebd53981a94fbb" prot="private" virt="non-virtual"><scope>BGroupLayout</scope><name>fVisibleItems</name></member>
      <member refid="classBTwoDimensionalLayout_1a898f35c225919e096d1f154ad9ff6642" prot="protected" virt="non-virtual"><scope>BGroupLayout</scope><name>fVSpacing</name></member>
      <member refid="classBGroupLayout_1aee1e856cc71eb9c3168fbb1d98bb05df" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>GetColumnRowConstraints</name></member>
      <member refid="classBTwoDimensionalLayout_1a360c3c27eb293edea81b8cf8742d3913" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>GetHeightForWidth</name></member>
      <member refid="classBTwoDimensionalLayout_1a6b4a8eeb31c191a4aa94129d0133f32d" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>GetInsets</name></member>
      <member refid="classBGroupLayout_1a4ae9dc30c3b44e806fb49013ef0efa27" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>GetItemDimensions</name></member>
      <member refid="classBTwoDimensionalLayout_1a8b14614c8b378412107043b1e8e24ead" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>HasHeightForWidth</name></member>
      <member refid="classBTwoDimensionalLayout_1ad8e56e07b576c30be9e19dba72818486" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>HasMultiColumnItems</name></member>
      <member refid="classBTwoDimensionalLayout_1a3a50bf74279d04218188c5574d82ff0d" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>HasMultiRowItems</name></member>
      <member refid="classBLayout_1a1d3746cfb977dce44b052e7d58bd481c" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>IndexOfItem</name></member>
      <member refid="classBLayout_1ade2afbfa0bd50c01a1ce3db6654eaa0c" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>IndexOfView</name></member>
      <member refid="classBGroupLayout_1a7d447aca50c63d1f3d4f57e5cf676405" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>Instantiate</name></member>
      <member refid="classBGroupLayout_1a0eb78028a7df6d1e0f46f7213eaa5ed8" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>InternalCountColumns</name></member>
      <member refid="classBGroupLayout_1aeff89a07380f8171d026b78737afeebe" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>InternalCountRows</name></member>
      <member refid="classBLayout_1a2b775de411ef6e9ecb4f7c412a26bf31" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>InvalidateLayout</name></member>
      <member refid="classBLayout_1a9b5b6b764433dee59ed4d1f01aaada04" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>IsValid</name></member>
      <member refid="classBAbstractLayout_1aac40eebbdd9c0fa7e594e5d1d9201a87" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>IsVisible</name></member>
      <member refid="classBGroupLayout_1ab7222b8afc2e96f1396d226117fbbc34" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>ItemAdded</name></member>
      <member refid="classBGroupLayout_1ab7a1143b436b800e42c76de98534dbc7" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>ItemArchived</name></member>
      <member refid="classBLayout_1ad47d881e6008578d2f8cc0e3c6ea467a" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>ItemAt</name></member>
      <member refid="classBGroupLayout_1ac347c539f60e59dee72e7038bcb83ff6" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>ItemRemoved</name></member>
      <member refid="classBGroupLayout_1a3fee09f7df25a5d730a888fc88360f09" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>ItemUnarchived</name></member>
      <member refid="classBGroupLayout_1a1aa77d74e70e221be18c148ec4e0841c" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>ItemWeight</name></member>
      <member refid="classBLayoutItem_1ab760ea9f0eb6bb25063b5bac7a52ec3d" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>Layout</name></member>
      <member refid="classBLayout_1a25735d4b3149817ab91b2f4cff0a2fed" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>LayoutArea</name></member>
      <member refid="classBLayout_1a7d2db371223df3a53cd7a1c5f19f309a" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>LayoutContext</name></member>
      <member refid="classBLayoutItem_1a82ba24d424129d989855b74eb3a86627" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>LayoutData</name></member>
      <member refid="classBTwoDimensionalLayout_1a213da2d0c283091e48562e8fbb448c5f" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>LayoutInvalidated</name></member>
      <member refid="classBLayout_1a683aba3445c345b47c7fa38a2b6c3c1a" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>LayoutItems</name></member>
      <member refid="classBAbstractLayout_1ad1ea5d04a5c8028f8295efde7106a66c" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>MaxSize</name></member>
      <member refid="classBAbstractLayout_1a3f692cb3306ce726e3cc6d2771824cd5" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>MinSize</name></member>
      <member refid="classBGroupLayout_1a43bb5440c388b626a40f0d58486ac049" prot="private" virt="non-virtual"><scope>BGroupLayout</scope><name>operator=</name></member>
      <member refid="classBGroupLayout_1a610d0ec2b5a4e6169bf8cd07fcb73b87" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>Orientation</name></member>
      <member refid="classBLayout_1adb34c16c239813c45d8159d3f18d96d9" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>Owner</name></member>
      <member refid="classBAbstractLayout_1a3aca5334eed301df4013fb2a3fdfd5ac" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>OwnerChanged</name></member>
      <member refid="classBGroupLayout_1a31d82f6cd2fdecdc0a04d60d6e3943f7" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>Perform</name></member>
      <member refid="classBAbstractLayout_1af5f21d9900c85ca053dba3938bef3fd3" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>PreferredSize</name></member>
      <member refid="classBGroupLayout_1a3519b2e20a2f47421e614422ff83e3de" prot="protected" virt="virtual"><scope>BGroupLayout</scope><name>PrepareItems</name></member>
      <member refid="classBLayout_1a2a168d993feaf8fc58b53ded8243e7b7" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>Relayout</name></member>
      <member refid="classBLayout_1abf0b19d4203e1a41292137fd8a2038d0" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>RemoveItem</name></member>
      <member refid="classBLayout_1a34a299447961069bdd54d19ae7a5176a" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>RemoveItem</name></member>
      <member refid="classBLayoutItem_1af4059e73a30336f0ae6bbbc04c70dd6a" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>RemoveSelf</name></member>
      <member refid="classBLayout_1a3120e95dc34ab57ab276c324ec94654c" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>RemoveView</name></member>
      <member refid="classBLayout_1a1983a8770e7cd89c3f1afc4d961230d5" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>RequireLayout</name></member>
      <member refid="classBLayout_1aacf1392bbef13efc20277e15595bb329" prot="protected" virt="non-virtual"><scope>BGroupLayout</scope><name>ResetLayoutInvalidation</name></member>
      <member refid="classBAbstractLayout_1a3e7f4071b63452d77210f852cb92604d" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>SetExplicitAlignment</name></member>
      <member refid="classBAbstractLayout_1aeb41b2e1e0b6414d0de4eeb4e5fb93e4" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>SetExplicitMaxSize</name></member>
      <member refid="classBAbstractLayout_1af63e5777fabfb9be1f29286bf6931fe6" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>SetExplicitMinSize</name></member>
      <member refid="classBAbstractLayout_1a577b9839ac8e726bbecc7f3e40bb01a3" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>SetExplicitPreferredSize</name></member>
      <member refid="classBLayoutItem_1ac630c7ab0e98d5da0225792e31f596f1" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>SetExplicitSize</name></member>
      <member refid="classBTwoDimensionalLayout_1a8a4f4e152b4f6106cbc88fc0bb1f32d8" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>SetFrame</name></member>
      <member refid="classBTwoDimensionalLayout_1acaf4ec650969994cb39dd015e3bebd91" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>SetInsets</name></member>
      <member refid="classBTwoDimensionalLayout_1a03d3adcb77ff7b3073e890ce42c63f9a" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>SetInsets</name></member>
      <member refid="classBTwoDimensionalLayout_1aaae5175781d0bc8c96e1e0fcaccc81da" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>SetInsets</name></member>
      <member refid="classBGroupLayout_1a15c7baf4580baffdec6399c2ad568871" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>SetItemWeight</name></member>
      <member refid="classBLayoutItem_1abffd9c09f9951f25b4a752a06e4040c3" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>SetLayoutData</name></member>
      <member refid="classBGroupLayout_1a65404e72f6f0d5caa46f89a63a712745" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>SetOrientation</name></member>
      <member refid="classBGroupLayout_1a2b711c92449e331e0cd8ae698b350df4" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>SetSpacing</name></member>
      <member refid="classBAbstractLayout_1ae40de089e697c7ecb8466ec3e8bd87e8" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>SetVisible</name></member>
      <member refid="classBGroupLayout_1a12df17c881a1e08014e20cb3c0257b8f" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>Spacing</name></member>
      <member refid="classBTwoDimensionalLayout_1a2e2f066f679835398fd2a0bf2044115b" prot="protected" virt="non-virtual"><scope>BGroupLayout</scope><name>SubtractInsets</name></member>
      <member refid="classBLayout_1a14639db95758a7b1b9604473e8f3a7c9" prot="public" virt="non-virtual"><scope>BGroupLayout</scope><name>TargetView</name></member>
      <member refid="classBLayout_1aefd7bf5546d6b69d1561e7baebf15387" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>View</name></member>
      <member refid="classBLayout_1a7df37ec98c2d29dca5ce4f2246c5665a" prot="protected" virt="non-virtual"><scope>BGroupLayout</scope><name>VisibilityChanged</name></member>
      <member refid="classBAbstractLayout_1ad838535e6e51bb5b22b5dc7b05bbf5af" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>~BAbstractLayout</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>~BArchivable</name></member>
      <member refid="classBGroupLayout_1acc37f2789a334efe90e9e34716b2c39e" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>~BGroupLayout</name></member>
      <member refid="classBLayout_1aa3250586083f6cbd106051efaa6982d9" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>~BLayout</name></member>
      <member refid="classBLayoutItem_1ab2ab08ac19615c24d09f3461926acce2" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>~BLayoutItem</name></member>
      <member refid="classBTwoDimensionalLayout_1a286cc9889f960352719001741937f7fd" prot="public" virt="virtual"><scope>BGroupLayout</scope><name>~BTwoDimensionalLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
