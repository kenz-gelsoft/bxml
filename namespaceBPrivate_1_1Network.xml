<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceBPrivate_1_1Network" kind="namespace" language="C++">
    <compoundname>BPrivate::Network</compoundname>
    <innerclass refid="classBPrivate_1_1Network_1_1BBorrow" prot="public">BPrivate::Network::BBorrow</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BBorrowError" prot="public">BPrivate::Network::BBorrowError</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BError" prot="public">BPrivate::Network::BError</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BExclusiveBorrow" prot="public">BPrivate::Network::BExclusiveBorrow</innerclass>
    <innerclass refid="structBPrivate_1_1Network_1_1BHttpAuthentication" prot="public">BPrivate::Network::BHttpAuthentication</innerclass>
    <innerclass refid="structBPrivate_1_1Network_1_1BHttpBody" prot="public">BPrivate::Network::BHttpBody</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BHttpFields" prot="public">BPrivate::Network::BHttpFields</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BHttpMethod" prot="public">BPrivate::Network::BHttpMethod</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BHttpRequest" prot="public">BPrivate::Network::BHttpRequest</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BHttpResult" prot="public">BPrivate::Network::BHttpResult</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BHttpSession" prot="public">BPrivate::Network::BHttpSession</innerclass>
    <innerclass refid="structBPrivate_1_1Network_1_1BHttpStatus" prot="public">BPrivate::Network::BHttpStatus</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BHttpTime" prot="public">BPrivate::Network::BHttpTime</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BInvalidUrl" prot="public">BPrivate::Network::BInvalidUrl</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BNetworkRequestError" prot="public">BPrivate::Network::BNetworkRequestError</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BorrowAdmin" prot="public">BPrivate::Network::BorrowAdmin</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BorrowPointer" prot="public">BPrivate::Network::BorrowPointer</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BRuntimeError" prot="public">BPrivate::Network::BRuntimeError</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BSystemError" prot="public">BPrivate::Network::BSystemError</innerclass>
    <innerclass refid="classBPrivate_1_1Network_1_1BUnsupportedProtocol" prot="public">BPrivate::Network::BUnsupportedProtocol</innerclass>
    <innernamespace refid="namespaceBPrivate_1_1Network_1_1UrlEvent">BPrivate::Network::UrlEvent</innernamespace>
    <innernamespace refid="namespaceBPrivate_1_1Network_1_1UrlEventData">BPrivate::Network::UrlEventData</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceBPrivate_1_1Network_1a10223862da6f30a38b3fccf10054ccf9" prot="public" static="no" strong="yes">
        <type><ref refid="SupportDefs_8h_1acadaa1c2888dd031d14fed9b272333a7" kindref="member">int16</ref></type>
        <name>BHttpStatusClass</name>
        <qualifiedname>BPrivate::Network::BHttpStatusClass</qualifiedname>
        <enumvalue id="namespaceBPrivate_1_1Network_1a10223862da6f30a38b3fccf10054ccf9a4bbb8f967da6d1a610596d7257179c2b" prot="public">
          <name>Invalid</name>
          <initializer>= 000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a10223862da6f30a38b3fccf10054ccf9a5391f9a882a54c787b206138ed6d28b0" prot="public">
          <name>Informational</name>
          <initializer>= 100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a10223862da6f30a38b3fccf10054ccf9a505a83f220c02df2f85c3810cd9ceb38" prot="public">
          <name>Success</name>
          <initializer>= 200</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a10223862da6f30a38b3fccf10054ccf9a1b6498e23a3c43775699129e7ebfcfeb" prot="public">
          <name>Redirection</name>
          <initializer>= 300</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a10223862da6f30a38b3fccf10054ccf9aa4097a97f20ebb7212625084936abcee" prot="public">
          <name>ClientError</name>
          <initializer>= 400</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a10223862da6f30a38b3fccf10054ccf9a7d65c64901711bc2cd2a33ff2641fbe9" prot="public">
          <name>ServerError</name>
          <initializer>= 500</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Category of the HTTP response status code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpResult.h" line="30" column="1" bodyfile="/boot/home/src/haiku/headers/private/netservices2/HttpResult.h" bodystart="30" bodyend="37"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ce" prot="public" static="no" strong="yes">
        <type><ref refid="SupportDefs_8h_1acadaa1c2888dd031d14fed9b272333a7" kindref="member">int16</ref></type>
        <name>BHttpStatusCode</name>
        <qualifiedname>BPrivate::Network::BHttpStatusCode</qualifiedname>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea88183b946cc5f0e8c96b2e66e1c74a7e" prot="public">
          <name>Unknown</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ceaa0bfb8e59e6c13fc8d990781f77694fe" prot="public">
          <name>Continue</name>
          <initializer>= 100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea548c5a637eddf65132b21411aeafc6a1" prot="public">
          <name>SwitchingProtocols</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ceaa60852f204ed8028c1c58808b746d115" prot="public">
          <name>Ok</name>
          <initializer>= 200</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea0eceeb45861f9585dd7a97a3e36f85c6" prot="public">
          <name>Created</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea382ab522931673c11e398ead1b7b1678" prot="public">
          <name>Accepted</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea2d0ea43e788b779c0aec92366b711c2f" prot="public">
          <name>NonAuthoritativeInformation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ceacd447f1ec89f564ebac583d60087df12" prot="public">
          <name>NoContent</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea4e9202c31896211f63be5b7345a897ed" prot="public">
          <name>ResetContent</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea750de7eda10d780b3bbaefb57128c24b" prot="public">
          <name>PartialContent</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea88323facdda1b366b182245a1cff9d04" prot="public">
          <name>MultipleChoice</name>
          <initializer>= 300</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea32638c25f4c913fce6214c2c4afff9dc" prot="public">
          <name>MovedPermanently</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea5d695cc28c6a7ea955162fbdd0ae42b9" prot="public">
          <name>Found</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea7843649eb3841f496a79303fd815029e" prot="public">
          <name>SeeOther</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ceac169e6d9a1b9442001384de8dcf49ab9" prot="public">
          <name>NotModified</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea0a272f25fd5e8a06065ef8ee41a88bea" prot="public">
          <name>UseProxy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea1b73a351faf2b550d06fae9cc6e0a894" prot="public">
          <name>TemporaryRedirect</name>
          <initializer>= 307</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ceac13fb7996808b1abe56e3ae4da84fb4a" prot="public">
          <name>PermanentRedirect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea9edf8fbf00a57d95a0af4923c9a1ec6f" prot="public">
          <name>BadRequest</name>
          <initializer>= 400</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ceae06d1ba70f1331e9f9a113cc2f887d3f" prot="public">
          <name>Unauthorized</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea4c99006c75b53fe48865cdfa0ac065ba" prot="public">
          <name>PaymentRequired</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea722969577a96ca3953e84e3d949dee81" prot="public">
          <name>Forbidden</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea38c300f4fc9ce8a77aad4a30de05cad8" prot="public">
          <name>NotFound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea8ba68fee5542f5fd071aed140c39bd8e" prot="public">
          <name>MethodNotAllowed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ceaf83a928e6a3f3b502ffadd2a414ce48c" prot="public">
          <name>NotAcceptable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea59a2898a8bf9da75a5855e76110f06f2" prot="public">
          <name>ProxyAuthenticationRequired</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea3632c2e4e6225d4d9fcd2a6fd2c65048" prot="public">
          <name>RequestTimeout</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ceaf1d4ac54357cc0932f385d56814ba7e4" prot="public">
          <name>Conflict</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea0b497b33b1a05057bc1634e607170bf6" prot="public">
          <name>Gone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea8282fb93cb1cf45b135ea191668ca583" prot="public">
          <name>LengthRequired</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea3542a02d18f11f46d53990d91752a6d4" prot="public">
          <name>PreconditionFailed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea1d2dd18ee1a925e5887cbc2f9202e779" prot="public">
          <name>RequestEntityTooLarge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ceaabed33862938b69e088f44b615a539f6" prot="public">
          <name>RequestUriTooLarge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ceaa3219a6843adbb23de79b4df9c307f5d" prot="public">
          <name>UnsupportedMediaType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea7779e53fc887ac0429f4ebde5fc0b59f" prot="public">
          <name>RequestedRangeNotSatisfiable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea6af78095a2be4a230ba87f03dd131830" prot="public">
          <name>ExpectationFailed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ceaecbf01325f1c744e9d7bb586ac2eb5ed" prot="public">
          <name>InternalServerError</name>
          <initializer>= 500</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea997ca4ce119685f40f03a9a8a6c5346e" prot="public">
          <name>NotImplemented</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea0e7c9ad08be0653518bf456c9994ace5" prot="public">
          <name>BadGateway</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5cea2a4581043d849bcb0e4747970ef1489b" prot="public">
          <name>ServiceUnavailable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a7fc5fcbcd12571685bad319d48fef5ceada405cbc74723dfdda615e3f679ef2be" prot="public">
          <name>GatewayTimeout</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of standardized HTTP status codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpResult.h" line="40" column="1" bodyfile="/boot/home/src/haiku/headers/private/netservices2/HttpResult.h" bodystart="40" bodyend="92"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceBPrivate_1_1Network_1a9b49062e24f11190deacce6b0ab82a5e" prot="public" static="no" strong="yes">
        <type><ref refid="SupportDefs_8h_1ac69a93dcc865c5e4aa2072cac9002aeb" kindref="member">int8</ref></type>
        <name>BHttpTimeFormat</name>
        <qualifiedname>BPrivate::Network::BHttpTimeFormat</qualifiedname>
        <enumvalue id="namespaceBPrivate_1_1Network_1a9b49062e24f11190deacce6b0ab82a5ea94aafdf8b6852c91ba9f9b170c855cc7" prot="public">
          <name>RFC1123</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a9b49062e24f11190deacce6b0ab82a5eafc5d0902edb98e6a670cea67b77cffa2" prot="public">
          <name>RFC850</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceBPrivate_1_1Network_1a9b49062e24f11190deacce6b0ab82a5eaf6fbdfc7e31eb12afe33f1ae133e5cee" prot="public">
          <name>AscTime</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Describes the three time formats supported by the HTTP RFC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="18" column="1" bodyfile="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" bodystart="18" bodyend="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceBPrivate_1_1Network_1a1430b08cf5864edf27fa038066cf83cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BPrivate::Network::encode_to_base64</definition>
        <argsstring>(const BString &amp;string)</argsstring>
        <name>encode_to_base64</name>
        <qualifiedname>BPrivate::Network::encode_to_base64</qualifiedname>
        <param>
          <type>const <ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Utility function that encodes a <emphasis>string</emphasis> to base64 and returns the result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/NetServicesDefs.h" line="80" column="9" declfile="/boot/home/src/haiku/headers/private/netservices2/NetServicesDefs.h" declline="80" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceBPrivate_1_1Network_1adf43cae73e73f416b4ec05923e81a772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BPrivate::Network::format_http_time</definition>
        <argsstring>(BDateTime timestamp, BHttpTimeFormat outputFormat=BHttpTimeFormat::RFC1123)</argsstring>
        <name>format_http_time</name>
        <qualifiedname>BPrivate::Network::format_http_time</qualifiedname>
        <param>
          <type>BDateTime</type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type><ref refid="namespaceBPrivate_1_1Network_1a9b49062e24f11190deacce6b0ab82a5e" kindref="member">BHttpTimeFormat</ref></type>
          <declname>outputFormat</declname>
          <defval>BHttpTimeFormat::RFC1123</defval>
        </param>
        <briefdescription>
<para>Format the <emphasis>timestamp</emphasis> into a string according to the <emphasis>outputFormat</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>See the description of the module in <ref refid="HttpTime_8h" kindref="compound">HttpTime.h</ref> for more information about HTTP timestamps.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid BDateTime object for the desired timestamp. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>The requested outputformat. The default is the recommended RFC 1123 format.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A string that contains the formatted timestamp.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classBPrivate_1_1Network_1_1BHttpTime_1_1InvalidInput" kindref="compound">BHttpTime::InvalidInput</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>date</emphasis> does not contain a valid timestamp. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>In the future this method may throw this exception when the memory for the output string cannot be allocated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBPrivate_1_1Network_1_1BHttpTime" kindref="compound">BHttpTime</ref> <ref refid="namespaceBPrivate_1_1Network_1a564db27874e23e8e080df76f21d39ed8" kindref="member">parse_http_time()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="65" column="9" declfile="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" declline="65" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__netservices_1ga9d2f443c775ed1dff92d0cd6196adf93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class...</type>
            <declname>_Args</declname>
            <defname>_Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classBPrivate_1_1Network_1_1BExclusiveBorrow" kindref="compound">BExclusiveBorrow</ref>&lt; T &gt;</type>
        <definition>BExclusiveBorrow&lt; T &gt; BPrivate::Network::make_exclusive_borrow</definition>
        <argsstring>(_Args &amp;&amp;... __args)</argsstring>
        <name>make_exclusive_borrow</name>
        <qualifiedname>BPrivate::Network::make_exclusive_borrow</qualifiedname>
        <param>
          <type>_Args &amp;&amp;...</type>
          <declname>__args</declname>
        </param>
        <briefdescription>
<para>Create a new object that is managed by a <ref refid="classBPrivate_1_1Network_1_1BExclusiveBorrow" kindref="compound">BExclusiveBorrow</ref> smart pointer. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a convenience template function to the likes of <computeroutput>std::make_unique()</computeroutput>. It allows you to directly create the <ref refid="classBPrivate_1_1Network_1_1BExclusiveBorrow" kindref="compound">BExclusiveBorrow</ref> smart pointer around a newly allocated object.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the object that will be created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_Args</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments to be passed to the constructor of T.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>In case there are issues allocating the new object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Any other exception that is thrown by the constructor of the object T.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/ExclusiveBorrow.h" line="284" column="1" bodyfile="/boot/home/src/haiku/headers/private/netservices2/ExclusiveBorrow.h" bodystart="284" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="namespaceBPrivate_1_1Network_1a564db27874e23e8e080df76f21d39ed8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BDateTime</type>
        <definition>BDateTime BPrivate::Network::parse_http_time</definition>
        <argsstring>(const BString &amp;string)</argsstring>
        <name>parse_http_time</name>
        <qualifiedname>BPrivate::Network::parse_http_time</qualifiedname>
        <param>
          <type>const <ref refid="classBString" kindref="compound">BString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Parse a <emphasis>string</emphasis> that contains a timestamp and return a BDateTime object. </para>
        </briefdescription>
        <detaileddescription>
<para>See the description of the module in <ref refid="HttpTime_8h" kindref="compound">HttpTime.h</ref> for more information about HTTP timestamps.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>A string that contains a valid HTTP timestamp. The <emphasis>dateString</emphasis> must not contain any characters, other than the timestamp. It is up to the caller to sanitize any input, including trimming whitespace at the beginning and end of the string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classBPrivate_1_1Network_1_1BHttpTime_1_1InvalidInput" kindref="compound">BHttpTime::InvalidInput</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>string</emphasis> cannot be parsed as a valid timestamp.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBPrivate_1_1Network_1_1BHttpTime" kindref="compound">BHttpTime</ref> <ref refid="namespaceBPrivate_1_1Network_1adf43cae73e73f416b4ec05923e81a772" kindref="member">format_http_time()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" line="64" column="11" declfile="/boot/home/src/haiku/headers/private/netservices2/HttpTime.h" declline="64" declcolumn="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Experimental <ref refid="namespaceBPrivate_1_1Network" kindref="compound">Network</ref> Services API. </para>
    </briefdescription>
    <detaileddescription>
<para>See <ref refid="group__netservices" kindref="compound">Experimental Network Services Support</ref> for more information. </para>
    </detaileddescription>
    <location file="book.dox" line="793" column="1"/>
  </compounddef>
</doxygen>
