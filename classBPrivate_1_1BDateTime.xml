<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBPrivate_1_1BDateTime" kind="class" language="C++" prot="public">
    <compoundname>BPrivate::BDateTime</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBPrivate_1_1BDateTime_1a9a2340e0ff1bf487e237b4c9286a6064" prot="private" static="no" mutable="no">
        <type>BDate</type>
        <definition>BDate BPrivate::BDateTime::fDate</definition>
        <argsstring></argsstring>
        <name>fDate</name>
        <qualifiedname>BPrivate::BDateTime::fDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="210" column="6" bodyfile="/boot/home/src/haiku/headers/os/support/DateTime.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBPrivate_1_1BDateTime_1ad38a14448a9e925cc26eb3c435edbb46" prot="private" static="no" mutable="no">
        <type>BTime</type>
        <definition>BTime BPrivate::BDateTime::fTime</definition>
        <argsstring></argsstring>
        <name>fTime</name>
        <qualifiedname>BPrivate::BDateTime::fTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="211" column="6" bodyfile="/boot/home/src/haiku/headers/os/support/DateTime.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1abbf73f21794fb4a46be9a845f4377d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BPrivate::BDateTime::BDateTime</definition>
        <argsstring>()</argsstring>
        <name>BDateTime</name>
        <qualifiedname>BPrivate::BDateTime::BDateTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a1a2f69cf5dab3d7c5b583fc5bbc45d15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BPrivate::BDateTime::BDateTime</definition>
        <argsstring>(const BDate &amp;date, const BTime &amp;time)</argsstring>
        <name>BDateTime</name>
        <qualifiedname>BPrivate::BDateTime::BDateTime</qualifiedname>
        <param>
          <type>const BDate &amp;</type>
          <declname>date</declname>
        </param>
        <param>
          <type>const BTime &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1abc8b4b9b84d9364a96f649c15ad2195b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BPrivate::BDateTime::BDateTime</definition>
        <argsstring>(const BMessage *archive)</argsstring>
        <name>BDateTime</name>
        <qualifiedname>BPrivate::BDateTime::BDateTime</qualifiedname>
        <param>
          <type>const <ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a1253ca0d204a07a019e3100f6a9798c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BPrivate::BDateTime::~BDateTime</definition>
        <argsstring>()</argsstring>
        <name>~BDateTime</name>
        <qualifiedname>BPrivate::BDateTime::~BDateTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1ab8e902dd8cd43c33fb5653ba582da784" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BPrivate::BDateTime::Archive</definition>
        <argsstring>(BMessage *into) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BPrivate::BDateTime::Archive</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>into</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="182" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a2622f4a9f9dd15cecda0f8d9e8ec644f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BDate &amp;</type>
        <definition>BDate &amp; BPrivate::BDateTime::Date</definition>
        <argsstring>()</argsstring>
        <name>Date</name>
        <qualifiedname>BPrivate::BDateTime::Date</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="189" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a6ab33c8ebc6aff7828df64a97a906a99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const BDate &amp;</type>
        <definition>const BDate &amp; BPrivate::BDateTime::Date</definition>
        <argsstring>() const</argsstring>
        <name>Date</name>
        <qualifiedname>BPrivate::BDateTime::Date</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="190" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a35079db2323aaa157120b82c21de45f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BPrivate::BDateTime::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <qualifiedname>BPrivate::BDateTime::IsValid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="184" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1adc9ff6d90979bd7aef7551792455f991" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BPrivate::BDateTime::operator!=</definition>
        <argsstring>(const BDateTime &amp;dateTime) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>BPrivate::BDateTime::operator!=</qualifiedname>
        <param>
          <type>const BDateTime &amp;</type>
          <declname>dateTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="200" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a19dd60c1db197507cce6b588293222b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BPrivate::BDateTime::operator&lt;</definition>
        <argsstring>(const BDateTime &amp;dateTime) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>BPrivate::BDateTime::operator&lt;</qualifiedname>
        <param>
          <type>const BDateTime &amp;</type>
          <declname>dateTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1af8ec95d26f933fff457b5b2c17a61032" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BPrivate::BDateTime::operator&lt;=</definition>
        <argsstring>(const BDateTime &amp;dateTime) const</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>BPrivate::BDateTime::operator&lt;=</qualifiedname>
        <param>
          <type>const BDateTime &amp;</type>
          <declname>dateTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1acfae8b7c8197a489f61efb5ff97f6222" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BPrivate::BDateTime::operator==</definition>
        <argsstring>(const BDateTime &amp;dateTime) const</argsstring>
        <name>operator==</name>
        <qualifiedname>BPrivate::BDateTime::operator==</qualifiedname>
        <param>
          <type>const BDateTime &amp;</type>
          <declname>dateTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="201" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a3e6c795be18e2d7a814c726027c96678" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BPrivate::BDateTime::operator&gt;</definition>
        <argsstring>(const BDateTime &amp;dateTime) const</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>BPrivate::BDateTime::operator&gt;</qualifiedname>
        <param>
          <type>const BDateTime &amp;</type>
          <declname>dateTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="206" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a31b34c8249298e7ec66469bba5064855" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BPrivate::BDateTime::operator&gt;=</definition>
        <argsstring>(const BDateTime &amp;dateTime) const</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>BPrivate::BDateTime::operator&gt;=</qualifiedname>
        <param>
          <type>const BDateTime &amp;</type>
          <declname>dateTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="207" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a0734c196375923df776061d64ee90a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BPrivate::BDateTime::SetDate</definition>
        <argsstring>(const BDate &amp;date)</argsstring>
        <name>SetDate</name>
        <qualifiedname>BPrivate::BDateTime::SetDate</qualifiedname>
        <param>
          <type>const BDate &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="191" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a2aebe7cd502451f0ffc4f44bd6e4d91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BPrivate::BDateTime::SetDateTime</definition>
        <argsstring>(const BDate &amp;date, const BTime &amp;time)</argsstring>
        <name>SetDateTime</name>
        <qualifiedname>BPrivate::BDateTime::SetDateTime</qualifiedname>
        <param>
          <type>const BDate &amp;</type>
          <declname>date</declname>
        </param>
        <param>
          <type>const BTime &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="187" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a45226c9e7f2a60c3fcab80975bf9b49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BPrivate::BDateTime::SetTime</definition>
        <argsstring>(const BTime &amp;time)</argsstring>
        <name>SetTime</name>
        <qualifiedname>BPrivate::BDateTime::SetTime</qualifiedname>
        <param>
          <type>const BTime &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="195" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a11f8a88f1723c39dcf19e0933f5925cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BPrivate::BDateTime::SetTime_t</definition>
        <argsstring>(time_t seconds)</argsstring>
        <name>SetTime_t</name>
        <qualifiedname>BPrivate::BDateTime::SetTime_t</qualifiedname>
        <param>
          <type>time_t</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="198" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a17caf746952aec849810efce687e5091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BTime &amp;</type>
        <definition>BTime &amp; BPrivate::BDateTime::Time</definition>
        <argsstring>()</argsstring>
        <name>Time</name>
        <qualifiedname>BPrivate::BDateTime::Time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="193" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a1ac5fcc0887e85bd24f090db792f4d40" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const BTime &amp;</type>
        <definition>const BTime &amp; BPrivate::BDateTime::Time</definition>
        <argsstring>() const</argsstring>
        <name>Time</name>
        <qualifiedname>BPrivate::BDateTime::Time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="194" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a8639aa22479e59b2ab833ab330c208be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t BPrivate::BDateTime::Time_t</definition>
        <argsstring>() const</argsstring>
        <name>Time_t</name>
        <qualifiedname>BPrivate::BDateTime::Time_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="197" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBPrivate_1_1BDateTime_1a4a0ce0805bf6cdaedfabd0d3f76c18b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BDateTime</type>
        <definition>static BDateTime BPrivate::BDateTime::CurrentDateTime</definition>
        <argsstring>(time_type type)</argsstring>
        <name>CurrentDateTime</name>
        <qualifiedname>BPrivate::BDateTime::CurrentDateTime</qualifiedname>
        <param>
          <type>time_type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="186" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/support/DateTime.h" line="175" column="1" bodyfile="/boot/home/src/haiku/headers/os/support/DateTime.h" bodystart="175" bodyend="212"/>
    <listofallmembers>
      <member refid="classBPrivate_1_1BDateTime_1ab8e902dd8cd43c33fb5653ba582da784" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>Archive</name></member>
      <member refid="classBPrivate_1_1BDateTime_1abbf73f21794fb4a46be9a845f4377d0a" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>BDateTime</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a1a2f69cf5dab3d7c5b583fc5bbc45d15" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>BDateTime</name></member>
      <member refid="classBPrivate_1_1BDateTime_1abc8b4b9b84d9364a96f649c15ad2195b" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>BDateTime</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a4a0ce0805bf6cdaedfabd0d3f76c18b1" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>CurrentDateTime</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a2622f4a9f9dd15cecda0f8d9e8ec644f" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>Date</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a6ab33c8ebc6aff7828df64a97a906a99" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>Date</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a9a2340e0ff1bf487e237b4c9286a6064" prot="private" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>fDate</name></member>
      <member refid="classBPrivate_1_1BDateTime_1ad38a14448a9e925cc26eb3c435edbb46" prot="private" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>fTime</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a35079db2323aaa157120b82c21de45f0" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>IsValid</name></member>
      <member refid="classBPrivate_1_1BDateTime_1adc9ff6d90979bd7aef7551792455f991" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>operator!=</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a19dd60c1db197507cce6b588293222b5" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>operator&lt;</name></member>
      <member refid="classBPrivate_1_1BDateTime_1af8ec95d26f933fff457b5b2c17a61032" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>operator&lt;=</name></member>
      <member refid="classBPrivate_1_1BDateTime_1acfae8b7c8197a489f61efb5ff97f6222" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>operator==</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a3e6c795be18e2d7a814c726027c96678" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>operator&gt;</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a31b34c8249298e7ec66469bba5064855" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>operator&gt;=</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a0734c196375923df776061d64ee90a6a" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>SetDate</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a2aebe7cd502451f0ffc4f44bd6e4d91a" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>SetDateTime</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a45226c9e7f2a60c3fcab80975bf9b49c" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>SetTime</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a11f8a88f1723c39dcf19e0933f5925cd" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>SetTime_t</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a17caf746952aec849810efce687e5091" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>Time</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a1ac5fcc0887e85bd24f090db792f4d40" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>Time</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a8639aa22479e59b2ab833ab330c208be" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>Time_t</name></member>
      <member refid="classBPrivate_1_1BDateTime_1a1253ca0d204a07a019e3100f6a9798c5" prot="public" virt="non-virtual"><scope>BPrivate::BDateTime</scope><name>~BDateTime</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
