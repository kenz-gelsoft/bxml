<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBMediaAddOn" kind="class" language="C++" prot="public">
    <compoundname>BMediaAddOn</compoundname>
    <includes local="no">MediaAddOn.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBMediaAddOn_1a1a737a9ef838910fabae8a63418e627b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BPrivate::media::DormantNodeManager</definition>
        <argsstring></argsstring>
        <name>BPrivate::media::DormantNodeManager</name>
        <qualifiedname>BMediaAddOn::DormantNodeManager</qualifiedname>
        <param>
          <type>BPrivate::media::DormantNodeManager</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="152" column="14" bodyfile="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBMediaAddOn_1a6861f4e3925a99c47298b329eca9d738" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMediaAddOn::_reserved_media_add_on_[7]</definition>
        <argsstring>[7]</argsstring>
        <name>_reserved_media_add_on_</name>
        <qualifiedname>BMediaAddOn::_reserved_media_add_on_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="164" column="7" bodyfile="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMediaAddOn_1a4aacfd490416d3319bab7551f6488eb7" prot="private" static="no" mutable="no">
        <type>media_addon_id</type>
        <definition>media_addon_id BMediaAddOn::fAddon</definition>
        <argsstring></argsstring>
        <name>fAddon</name>
        <qualifiedname>BMediaAddOn::fAddon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="162" column="15" bodyfile="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMediaAddOn_1ada04357a2e51f09a1665da5de7241d63" prot="private" static="no" mutable="no">
        <type>image_id</type>
        <definition>image_id BMediaAddOn::fImage</definition>
        <argsstring></argsstring>
        <name>fImage</name>
        <qualifiedname>BMediaAddOn::fImage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="161" column="10" bodyfile="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBMediaAddOn_1a72df226033509b4f9426bbb6cfc4c86f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMediaAddOn::BMediaAddOn</definition>
        <argsstring>(image_id image)</argsstring>
        <name>BMediaAddOn</name>
        <qualifiedname>BMediaAddOn::BMediaAddOn</qualifiedname>
        <param>
          <type>image_id</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="97" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a2c656a049f6b8f6ab20eb420fae05b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BMediaAddOn::~BMediaAddOn</definition>
        <argsstring>()</argsstring>
        <name>~BMediaAddOn</name>
        <qualifiedname>BMediaAddOn::~BMediaAddOn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="98" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1ad66436d1169bc2b73d3352c5642c9281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>media_addon_id</type>
        <definition>media_addon_id BMediaAddOn::AddonID</definition>
        <argsstring>()</argsstring>
        <name>AddonID</name>
        <qualifiedname>BMediaAddOn::AddonID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="137" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a5fba5a9e9ae37159c64de3b081b3d6c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::AutoStart</definition>
        <argsstring>(int index, BMediaNode **_node, int32 *_internalID, bool *_hasMore)</argsstring>
        <name>AutoStart</name>
        <qualifiedname>BMediaAddOn::AutoStart</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBMediaNode" kindref="compound">BMediaNode</ref> **</type>
          <declname>_node</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_internalID</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>_hasMore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="109" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1aec96f0613b8972e4accd7fa4210623ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BMediaAddOn::CountFlavors</definition>
        <argsstring>()</argsstring>
        <name>CountFlavors</name>
        <qualifiedname>BMediaAddOn::CountFlavors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="101" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a8dbca7947381b0a8858fb49baab089d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::GetConfigurationFor</definition>
        <argsstring>(BMediaNode *yourNode, BMessage *intoMessage)</argsstring>
        <name>GetConfigurationFor</name>
        <qualifiedname>BMediaAddOn::GetConfigurationFor</qualifiedname>
        <param>
          <type><ref refid="classBMediaNode" kindref="compound">BMediaNode</ref> *</type>
          <declname>yourNode</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>intoMessage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="106" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1af3d1cc33704ce17306511ae7813af377" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::GetFileFormatList</definition>
        <argsstring>(int32 forNodeFlavorID, media_file_format *_writableFormats, int32 writableFormatsCount, int32 *_writableFormatsTotalCount, media_file_format *_readableFormats, int32 readableFormatsCount, int32 *_readableFormatsTotalCount, void *_reserved)</argsstring>
        <name>GetFileFormatList</name>
        <qualifiedname>BMediaAddOn::GetFileFormatList</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>forNodeFlavorID</declname>
        </param>
        <param>
          <type>media_file_format *</type>
          <declname>_writableFormats</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>writableFormatsCount</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_writableFormatsTotalCount</declname>
        </param>
        <param>
          <type>media_file_format *</type>
          <declname>_readableFormats</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>readableFormatsCount</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_readableFormatsTotalCount</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>_reserved</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="122" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a78c97b145b7b69e3ac39543125b7a5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::GetFlavorAt</definition>
        <argsstring>(int32 index, const flavor_info **_info)</argsstring>
        <name>GetFlavorAt</name>
        <qualifiedname>BMediaAddOn::GetFlavorAt</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>const flavor_info **</type>
          <declname>_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="102" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1adfaeeb76c462d31c3436a54c69dfd042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>image_id</type>
        <definition>image_id BMediaAddOn::ImageID</definition>
        <argsstring>()</argsstring>
        <name>ImageID</name>
        <qualifiedname>BMediaAddOn::ImageID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="136" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1ac5e6d456b3ba5ddd083582848d6a0302" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::InitCheck</definition>
        <argsstring>(const char **_failureText)</argsstring>
        <name>InitCheck</name>
        <qualifiedname>BMediaAddOn::InitCheck</qualifiedname>
        <param>
          <type>const char **</type>
          <declname>_failureText</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="100" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a50214633e7f91fa90cd17c0e15fb09de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBMediaNode" kindref="compound">BMediaNode</ref> *</type>
        <definition>virtual BMediaNode * BMediaAddOn::InstantiateNodeFor</definition>
        <argsstring>(const flavor_info *info, BMessage *config, status_t *_error)</argsstring>
        <name>InstantiateNodeFor</name>
        <qualifiedname>BMediaAddOn::InstantiateNodeFor</qualifiedname>
        <param>
          <type>const flavor_info *</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref> *</type>
          <declname>_error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="104" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a3b9d58d83103124a8e987db6ee66c3dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::SniffRef</definition>
        <argsstring>(const entry_ref &amp;file, BMimeType *ioMimeType, float *_quality, int32 *_internalID)</argsstring>
        <name>SniffRef</name>
        <qualifiedname>BMediaAddOn::SniffRef</qualifiedname>
        <param>
          <type>const <ref refid="structentry__ref" kindref="compound">entry_ref</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="classBMimeType" kindref="compound">BMimeType</ref> *</type>
          <declname>ioMimeType</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_quality</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_internalID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="113" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a9c9a295977965dc9dd17a392e7ceeaa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::SniffType</definition>
        <argsstring>(const BMimeType &amp;type, float *_quality, int32 *_internalID)</argsstring>
        <name>SniffType</name>
        <qualifiedname>BMediaAddOn::SniffType</qualifiedname>
        <param>
          <type>const <ref refid="classBMimeType" kindref="compound">BMimeType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_quality</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_internalID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="119" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a580aa7326880bffdd7f86fb44b7ae475" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::SniffTypeKind</definition>
        <argsstring>(const BMimeType &amp;type, uint64 kinds, float *_quality, int32 *_internalID, void *_reserved)</argsstring>
        <name>SniffTypeKind</name>
        <qualifiedname>BMediaAddOn::SniffTypeKind</qualifiedname>
        <param>
          <type>const <ref refid="classBMimeType" kindref="compound">BMimeType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a31809f9e3be3ab0398318f669d00a181" kindref="member">uint64</ref></type>
          <declname>kinds</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>_quality</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref> *</type>
          <declname>_internalID</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>_reserved</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="132" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a096c80604f55dc33a15e981c699fa9ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BMediaAddOn::WantsAutoStart</definition>
        <argsstring>()</argsstring>
        <name>WantsAutoStart</name>
        <qualifiedname>BMediaAddOn::WantsAutoStart</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="108" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBMediaAddOn_1a54d42314afc9cd9367cc176142e64bbf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BMediaAddOn::NotifyFlavorChange</definition>
        <argsstring>()</argsstring>
        <name>NotifyFlavorChange</name>
        <qualifiedname>BMediaAddOn::NotifyFlavorChange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="142" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBMediaAddOn_1a9ee3a0aa2b6c2423c1cbe8a5f549b399" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMediaAddOn::BMediaAddOn</definition>
        <argsstring>()</argsstring>
        <name>BMediaAddOn</name>
        <qualifiedname>BMediaAddOn::BMediaAddOn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a1731ac82139249d880204dfacd1a85c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMediaAddOn::BMediaAddOn</definition>
        <argsstring>(const BMediaAddOn &amp;other)</argsstring>
        <name>BMediaAddOn</name>
        <qualifiedname>BMediaAddOn::BMediaAddOn</qualifiedname>
        <param>
          <type>const <ref refid="classBMediaAddOn" kindref="compound">BMediaAddOn</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a482fadf841fa462f5c0d243c5c808905" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::_Reserved_MediaAddOn_2</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_MediaAddOn_2</name>
        <qualifiedname>BMediaAddOn::_Reserved_MediaAddOn_2</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="154" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a7695e0dea18833f682af50d8fcddf063" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::_Reserved_MediaAddOn_3</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_MediaAddOn_3</name>
        <qualifiedname>BMediaAddOn::_Reserved_MediaAddOn_3</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="155" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a8d172c2158290f0c56152ca534d6743b" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::_Reserved_MediaAddOn_4</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_MediaAddOn_4</name>
        <qualifiedname>BMediaAddOn::_Reserved_MediaAddOn_4</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="156" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a27bc03bbe28336adfec7b823e3343962" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::_Reserved_MediaAddOn_5</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_MediaAddOn_5</name>
        <qualifiedname>BMediaAddOn::_Reserved_MediaAddOn_5</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="157" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a1f5fa522220cdead8aa63b4ad08c9005" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::_Reserved_MediaAddOn_6</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_MediaAddOn_6</name>
        <qualifiedname>BMediaAddOn::_Reserved_MediaAddOn_6</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="158" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1adfdd5df5087867b9c38ff867d6f15e49" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BMediaAddOn::_Reserved_MediaAddOn_7</definition>
        <argsstring>(void *)</argsstring>
        <name>_Reserved_MediaAddOn_7</name>
        <qualifiedname>BMediaAddOn::_Reserved_MediaAddOn_7</qualifiedname>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="159" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBMediaAddOn_1a03a1db88e69634a18896aefaa2fde77b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMediaAddOn" kindref="compound">BMediaAddOn</ref> &amp;</type>
        <definition>BMediaAddOn &amp; BMediaAddOn::operator=</definition>
        <argsstring>(const BMediaAddOn &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BMediaAddOn::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBMediaAddOn" kindref="compound">BMediaAddOn</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="150" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>a MediaAddOn is something which can manufacture MediaNodes </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" line="95" column="1" bodyfile="/boot/home/src/haiku/headers/os/media/MediaAddOn.h" bodystart="95" bodyend="165"/>
    <listofallmembers>
      <member refid="classBMediaAddOn_1a6861f4e3925a99c47298b329eca9d738" prot="private" virt="non-virtual"><scope>BMediaAddOn</scope><name>_reserved_media_add_on_</name></member>
      <member refid="classBMediaAddOn_1a482fadf841fa462f5c0d243c5c808905" prot="private" virt="virtual"><scope>BMediaAddOn</scope><name>_Reserved_MediaAddOn_2</name></member>
      <member refid="classBMediaAddOn_1a7695e0dea18833f682af50d8fcddf063" prot="private" virt="virtual"><scope>BMediaAddOn</scope><name>_Reserved_MediaAddOn_3</name></member>
      <member refid="classBMediaAddOn_1a8d172c2158290f0c56152ca534d6743b" prot="private" virt="virtual"><scope>BMediaAddOn</scope><name>_Reserved_MediaAddOn_4</name></member>
      <member refid="classBMediaAddOn_1a27bc03bbe28336adfec7b823e3343962" prot="private" virt="virtual"><scope>BMediaAddOn</scope><name>_Reserved_MediaAddOn_5</name></member>
      <member refid="classBMediaAddOn_1a1f5fa522220cdead8aa63b4ad08c9005" prot="private" virt="virtual"><scope>BMediaAddOn</scope><name>_Reserved_MediaAddOn_6</name></member>
      <member refid="classBMediaAddOn_1adfdd5df5087867b9c38ff867d6f15e49" prot="private" virt="virtual"><scope>BMediaAddOn</scope><name>_Reserved_MediaAddOn_7</name></member>
      <member refid="classBMediaAddOn_1ad66436d1169bc2b73d3352c5642c9281" prot="public" virt="non-virtual"><scope>BMediaAddOn</scope><name>AddonID</name></member>
      <member refid="classBMediaAddOn_1a5fba5a9e9ae37159c64de3b081b3d6c7" prot="public" virt="virtual"><scope>BMediaAddOn</scope><name>AutoStart</name></member>
      <member refid="classBMediaAddOn_1a72df226033509b4f9426bbb6cfc4c86f" prot="public" virt="non-virtual"><scope>BMediaAddOn</scope><name>BMediaAddOn</name></member>
      <member refid="classBMediaAddOn_1a9ee3a0aa2b6c2423c1cbe8a5f549b399" prot="private" virt="non-virtual"><scope>BMediaAddOn</scope><name>BMediaAddOn</name></member>
      <member refid="classBMediaAddOn_1a1731ac82139249d880204dfacd1a85c3" prot="private" virt="non-virtual"><scope>BMediaAddOn</scope><name>BMediaAddOn</name></member>
      <member refid="classBMediaAddOn_1aec96f0613b8972e4accd7fa4210623ac" prot="public" virt="virtual"><scope>BMediaAddOn</scope><name>CountFlavors</name></member>
      <member refid="classBMediaAddOn_1a4aacfd490416d3319bab7551f6488eb7" prot="private" virt="non-virtual"><scope>BMediaAddOn</scope><name>fAddon</name></member>
      <member refid="classBMediaAddOn_1ada04357a2e51f09a1665da5de7241d63" prot="private" virt="non-virtual"><scope>BMediaAddOn</scope><name>fImage</name></member>
      <member refid="classBMediaAddOn_1a8dbca7947381b0a8858fb49baab089d6" prot="public" virt="virtual"><scope>BMediaAddOn</scope><name>GetConfigurationFor</name></member>
      <member refid="classBMediaAddOn_1af3d1cc33704ce17306511ae7813af377" prot="public" virt="virtual"><scope>BMediaAddOn</scope><name>GetFileFormatList</name></member>
      <member refid="classBMediaAddOn_1a78c97b145b7b69e3ac39543125b7a5cb" prot="public" virt="virtual"><scope>BMediaAddOn</scope><name>GetFlavorAt</name></member>
      <member refid="classBMediaAddOn_1adfaeeb76c462d31c3436a54c69dfd042" prot="public" virt="non-virtual"><scope>BMediaAddOn</scope><name>ImageID</name></member>
      <member refid="classBMediaAddOn_1ac5e6d456b3ba5ddd083582848d6a0302" prot="public" virt="virtual"><scope>BMediaAddOn</scope><name>InitCheck</name></member>
      <member refid="classBMediaAddOn_1a50214633e7f91fa90cd17c0e15fb09de" prot="public" virt="virtual"><scope>BMediaAddOn</scope><name>InstantiateNodeFor</name></member>
      <member refid="classBMediaAddOn_1a54d42314afc9cd9367cc176142e64bbf" prot="protected" virt="non-virtual"><scope>BMediaAddOn</scope><name>NotifyFlavorChange</name></member>
      <member refid="classBMediaAddOn_1a03a1db88e69634a18896aefaa2fde77b" prot="private" virt="non-virtual"><scope>BMediaAddOn</scope><name>operator=</name></member>
      <member refid="classBMediaAddOn_1a3b9d58d83103124a8e987db6ee66c3dc" prot="public" virt="virtual"><scope>BMediaAddOn</scope><name>SniffRef</name></member>
      <member refid="classBMediaAddOn_1a9c9a295977965dc9dd17a392e7ceeaa6" prot="public" virt="virtual"><scope>BMediaAddOn</scope><name>SniffType</name></member>
      <member refid="classBMediaAddOn_1a580aa7326880bffdd7f86fb44b7ae475" prot="public" virt="virtual"><scope>BMediaAddOn</scope><name>SniffTypeKind</name></member>
      <member refid="classBMediaAddOn_1a096c80604f55dc33a15e981c699fa9ad" prot="public" virt="virtual"><scope>BMediaAddOn</scope><name>WantsAutoStart</name></member>
      <member refid="classBMediaAddOn_1a2c656a049f6b8f6ab20eb420fae05b12" prot="public" virt="virtual"><scope>BMediaAddOn</scope><name>~BMediaAddOn</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
