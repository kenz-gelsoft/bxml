<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput" kind="class" language="C++" prot="public">
    <compoundname>BPrivate::Network::BHttpFields::InvalidInput</compoundname>
    <basecompoundref refid="classBPrivate_1_1Network_1_1BError" prot="public" virt="non-virtual">BPrivate::Network::BError</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput_1a1100da56c1211cb526fb82fdfb8e8e97" prot="public" static="no" mutable="no">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BPrivate::Network::BHttpFields::InvalidInput::input</definition>
        <argsstring></argsstring>
        <name>input</name>
        <qualifiedname>BPrivate::Network::BHttpFields::InvalidInput::input</qualifiedname>
        <briefdescription>
<para>The input that contains the invalid contents. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpFields.h" line="82" column="8" bodyfile="/boot/home/src/haiku/headers/private/netservices2/HttpFields.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput_1a2d084b070375ae89f538ec5f8c08b0ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BPrivate::Network::BHttpFields::InvalidInput::InvalidInput</definition>
        <argsstring>(const char *origin, BString input)</argsstring>
        <name>InvalidInput</name>
        <qualifiedname>BPrivate::Network::BHttpFields::InvalidInput::InvalidInput</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Constructor that sets the <emphasis>origin</emphasis> and the invalid <emphasis>input</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpFields.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput_1afb2156182ef6be328515b94733ec4bf2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BPrivate::Network::BHttpFields::InvalidInput::DebugMessage</definition>
        <argsstring>() const override</argsstring>
        <name>DebugMessage</name>
        <qualifiedname>BPrivate::Network::BHttpFields::InvalidInput::DebugMessage</qualifiedname>
        <reimplements refid="classBPrivate_1_1Network_1_1BError_1a93a2260671aad699aa8787fd74061f98">DebugMessage</reimplements>
        <briefdescription>
<para>Retrieve a debug message that contains all info in this error. </para>
        </briefdescription>
        <detaileddescription>
<para>The output will be along the lines of: <programlisting><codeline><highlight class="normal">[<ref refid="classBPrivate_1_1Network_1_1BError_1a63dedfb711a141621fa266fb25bff2d8" kindref="member">Origin</ref>]<sp/>Invalid<sp/>format<sp/>or<sp/>unsupported<sp/>characters<sp/>in<sp/><ref refid="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput_1a1100da56c1211cb526fb82fdfb8e8e97" kindref="member">input</ref><sp/><sp/><sp/><sp/>[<ref refid="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput_1a1100da56c1211cb526fb82fdfb8e8e97" kindref="member">input</ref>]</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>In the future this method may throw this exception when the memory for the debug message cannot be allocated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classBString" kindref="compound">BString</ref> object that contains the debug message.</para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpFields.h" line="80" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput_1a35b8bd69f9464a25407e1f1e5346db6a" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type>const char *</type>
        <definition>const char * BPrivate::Network::BHttpFields::InvalidInput::Message</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>Message</name>
        <qualifiedname>BPrivate::Network::BHttpFields::InvalidInput::Message</qualifiedname>
        <reimplements refid="classBPrivate_1_1Network_1_1BError_1a2c1b049e967387a289b1b0b8694eca28">Message</reimplements>
        <briefdescription>
<para>Get a pointer to the message describing the error. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/HttpFields.h" line="79" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Error that represents when a string input contains characters that are incompatible with the HTTP specification. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BPrivate::Network::BError</label>
        <link refid="classBPrivate_1_1Network_1_1BError"/>
      </node>
      <node id="1">
        <label>BPrivate::Network::BHttpFields::InvalidInput</label>
        <link refid="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BPrivate::Network::BError</label>
        <link refid="classBPrivate_1_1Network_1_1BError"/>
      </node>
      <node id="1">
        <label>BPrivate::Network::BHttpFields::InvalidInput</label>
        <link refid="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>input</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>BString</label>
        <link refid="classBString"/>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/private/netservices2/HttpFields.h" line="74" column="1" bodyfile="/boot/home/src/haiku/headers/private/netservices2/HttpFields.h" bodystart="75" bodyend="83"/>
    <listofallmembers>
      <member refid="classBPrivate_1_1Network_1_1BError_1a98953038abdab68796b3bf373ead0540" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>BError</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1abbf80a044f5af02aac87a65a6aba703a" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>BError</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1abf7e40af168fdcf53eb7a86e42c9141c" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>BError</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1a227208ede157ae501ea3acee188e46b7" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>BError</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput_1afb2156182ef6be328515b94733ec4bf2" prot="public" virt="virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>DebugMessage</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput_1a1100da56c1211cb526fb82fdfb8e8e97" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>input</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput_1a2d084b070375ae89f538ec5f8c08b0ea" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>InvalidInput</name></member>
      <member refid="classBPrivate_1_1Network_1_1BHttpFields_1_1InvalidInput_1a35b8bd69f9464a25407e1f1e5346db6a" prot="public" virt="virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>Message</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1af4a889a39e9530458aeb649d2ba12d45" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>operator=</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1ab80467e8f9af8142d4d7cfa311f04c68" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>operator=</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1a63dedfb711a141621fa266fb25bff2d8" prot="public" virt="virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>Origin</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1a69a0b83a56c08e510e16aaba841f25e5" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>WriteToOutput</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1a2c7538bd21c2844cd1ee0c8ee0ba74ef" prot="public" virt="non-virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>WriteToStream</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1a0ffdd9cc030c188df03dd95e1de82bf4" prot="public" virt="virtual"><scope>BPrivate::Network::BHttpFields::InvalidInput</scope><name>~BError</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
