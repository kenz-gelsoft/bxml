<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBCertificate" kind="class" language="C++" prot="public">
    <compoundname>BCertificate</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBCertificate_1acdfb6093699c98926229700ed3d471c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BSecureSocket::Private</definition>
        <argsstring></argsstring>
        <name>BSecureSocket::Private</name>
        <qualifiedname>BCertificate::Private</qualifiedname>
        <param>
          <type>BSecureSocket::Private</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="35" column="14" bodyfile="/boot/home/src/haiku/headers/os/net/Certificate.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBCertificate_1a3ab1f13812f0de6a76464a7963f44238" prot="private" static="no" mutable="no">
        <type>Private *</type>
        <definition>Private* BCertificate::fPrivate</definition>
        <argsstring></argsstring>
        <name>fPrivate</name>
        <qualifiedname>BCertificate::fPrivate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="39" column="8" bodyfile="/boot/home/src/haiku/headers/os/net/Certificate.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBCertificate_1a562aa5811ea6415507dd794c27e8a2fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BCertificate::BCertificate</definition>
        <argsstring>(const BCertificate &amp;other)</argsstring>
        <name>BCertificate</name>
        <qualifiedname>BCertificate::BCertificate</qualifiedname>
        <param>
          <type>const BCertificate &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBCertificate_1a5a40bd6f073bedc75ca9cc38fc05d429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BCertificate::~BCertificate</definition>
        <argsstring>()</argsstring>
        <name>~BCertificate</name>
        <qualifiedname>BCertificate::~BCertificate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBCertificate_1ab07ad57d7409d7c77aa5dfcd94abe477" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t BCertificate::ExpirationDate</definition>
        <argsstring>() const</argsstring>
        <name>ExpirationDate</name>
        <qualifiedname>BCertificate::ExpirationDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="21" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBCertificate_1a16d50bda6786bc68ccdc933d9d12ebe7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BCertificate::IsSelfSigned</definition>
        <argsstring>() const</argsstring>
        <name>IsSelfSigned</name>
        <qualifiedname>BCertificate::IsSelfSigned</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="24" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBCertificate_1ad20634595e49693f0a487ca4621132cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BCertificate::Issuer</definition>
        <argsstring>() const</argsstring>
        <name>Issuer</name>
        <qualifiedname>BCertificate::Issuer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="26" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBCertificate_1a9076a330e829664a4a0fc8e7c7f0867a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BCertificate::IsValidAuthority</definition>
        <argsstring>() const</argsstring>
        <name>IsValidAuthority</name>
        <qualifiedname>BCertificate::IsValidAuthority</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBCertificate_1a059ff0000aa107e618b40eb3d87c05db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BCertificate::operator==</definition>
        <argsstring>(const BCertificate &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>BCertificate::operator==</qualifiedname>
        <param>
          <type>const BCertificate &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="32" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBCertificate_1a7c0103c69c76b9ade3788f9f591c0b4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BCertificate::SignatureAlgorithm</definition>
        <argsstring>() const</argsstring>
        <name>SignatureAlgorithm</name>
        <qualifiedname>BCertificate::SignatureAlgorithm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="28" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBCertificate_1a5c43e6c6b0ee4972010ef2e298522ca9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t BCertificate::StartDate</definition>
        <argsstring>() const</argsstring>
        <name>StartDate</name>
        <qualifiedname>BCertificate::StartDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="20" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBCertificate_1a1464e7e915c2cfc8c0c318761a553944" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BCertificate::String</definition>
        <argsstring>() const</argsstring>
        <name>String</name>
        <qualifiedname>BCertificate::String</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="30" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBCertificate_1ae0bb56c7cdd5c262c568b4400fbd5ab3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBString" kindref="compound">BString</ref></type>
        <definition>BString BCertificate::Subject</definition>
        <argsstring>() const</argsstring>
        <name>Subject</name>
        <qualifiedname>BCertificate::Subject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="27" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBCertificate_1a2b19094b0e6648a6b51a58636322bf44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BCertificate::Version</definition>
        <argsstring>() const</argsstring>
        <name>Version</name>
        <qualifiedname>BCertificate::Version</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="18" column="4"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBCertificate_1aa8c845282cb6d090d9d0e78adb6d7d70" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BCertificate::BCertificate</definition>
        <argsstring>(Private *data)</argsstring>
        <name>BCertificate</name>
        <qualifiedname>BCertificate::BCertificate</qualifiedname>
        <param>
          <type>Private *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="37" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/net/Certificate.h" line="13" column="1" bodyfile="/boot/home/src/haiku/headers/os/net/Certificate.h" bodystart="13" bodyend="40"/>
    <listofallmembers>
      <member refid="classBCertificate_1a562aa5811ea6415507dd794c27e8a2fd" prot="public" virt="non-virtual"><scope>BCertificate</scope><name>BCertificate</name></member>
      <member refid="classBCertificate_1aa8c845282cb6d090d9d0e78adb6d7d70" prot="private" virt="non-virtual"><scope>BCertificate</scope><name>BCertificate</name></member>
      <member refid="classBCertificate_1ab07ad57d7409d7c77aa5dfcd94abe477" prot="public" virt="non-virtual"><scope>BCertificate</scope><name>ExpirationDate</name></member>
      <member refid="classBCertificate_1a3ab1f13812f0de6a76464a7963f44238" prot="private" virt="non-virtual"><scope>BCertificate</scope><name>fPrivate</name></member>
      <member refid="classBCertificate_1a16d50bda6786bc68ccdc933d9d12ebe7" prot="public" virt="non-virtual"><scope>BCertificate</scope><name>IsSelfSigned</name></member>
      <member refid="classBCertificate_1ad20634595e49693f0a487ca4621132cf" prot="public" virt="non-virtual"><scope>BCertificate</scope><name>Issuer</name></member>
      <member refid="classBCertificate_1a9076a330e829664a4a0fc8e7c7f0867a" prot="public" virt="non-virtual"><scope>BCertificate</scope><name>IsValidAuthority</name></member>
      <member refid="classBCertificate_1a059ff0000aa107e618b40eb3d87c05db" prot="public" virt="non-virtual"><scope>BCertificate</scope><name>operator==</name></member>
      <member refid="classBCertificate_1a7c0103c69c76b9ade3788f9f591c0b4c" prot="public" virt="non-virtual"><scope>BCertificate</scope><name>SignatureAlgorithm</name></member>
      <member refid="classBCertificate_1a5c43e6c6b0ee4972010ef2e298522ca9" prot="public" virt="non-virtual"><scope>BCertificate</scope><name>StartDate</name></member>
      <member refid="classBCertificate_1a1464e7e915c2cfc8c0c318761a553944" prot="public" virt="non-virtual"><scope>BCertificate</scope><name>String</name></member>
      <member refid="classBCertificate_1ae0bb56c7cdd5c262c568b4400fbd5ab3" prot="public" virt="non-virtual"><scope>BCertificate</scope><name>Subject</name></member>
      <member refid="classBCertificate_1a2b19094b0e6648a6b51a58636322bf44" prot="public" virt="non-virtual"><scope>BCertificate</scope><name>Version</name></member>
      <member refid="classBCertificate_1a5a40bd6f073bedc75ca9cc38fc05d429" prot="public" virt="non-virtual"><scope>BCertificate</scope><name>~BCertificate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
