<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBNetEndpoint" kind="class" language="C++" prot="public">
    <compoundname>BNetEndpoint</compoundname>
    <basecompoundref refid="classBArchivable" prot="public" virt="non-virtual">BArchivable</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBNetEndpoint_1ae6af03e22022093257c461a9591e79f5" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BNetEndpoint::_reserved[16]</definition>
        <argsstring>[16]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BNetEndpoint::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="103" column="6" bodyfile="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetEndpoint_1ac3280f0bef9aad6040dc8eb0dd95a9d6" prot="private" static="no" mutable="no">
        <type>BNetAddress</type>
        <definition>BNetAddress BNetEndpoint::fAddr</definition>
        <argsstring></argsstring>
        <name>fAddr</name>
        <qualifiedname>BNetEndpoint::fAddr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="100" column="13" bodyfile="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetEndpoint_1a807cc27559975d2bedda369095d03ca0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BNetEndpoint::fFamily</definition>
        <argsstring></argsstring>
        <name>fFamily</name>
        <qualifiedname>BNetEndpoint::fFamily</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="95" column="4" bodyfile="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetEndpoint_1afc7601acc1abf1ef98b9a4882c432f49" prot="private" static="no" mutable="no">
        <type>BNetAddress</type>
        <definition>BNetAddress BNetEndpoint::fPeer</definition>
        <argsstring></argsstring>
        <name>fPeer</name>
        <qualifiedname>BNetEndpoint::fPeer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="101" column="13" bodyfile="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetEndpoint_1a24faf4ad31a5ecb21e113bff167326a5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BNetEndpoint::fProtocol</definition>
        <argsstring></argsstring>
        <name>fProtocol</name>
        <qualifiedname>BNetEndpoint::fProtocol</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="97" column="4" bodyfile="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetEndpoint_1a84741d74d892f77dfea69426c01f6768" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BNetEndpoint::fSocket</definition>
        <argsstring></argsstring>
        <name>fSocket</name>
        <qualifiedname>BNetEndpoint::fSocket</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="98" column="4" bodyfile="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetEndpoint_1a7b7c0ba71f4dfb94053cde84d37f7c7a" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetEndpoint::fStatus</definition>
        <argsstring></argsstring>
        <name>fStatus</name>
        <qualifiedname>BNetEndpoint::fStatus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="94" column="9" bodyfile="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetEndpoint_1a24682ca8cb837383cbcb7cc9d63b8880" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
        <definition>bigtime_t BNetEndpoint::fTimeout</definition>
        <argsstring></argsstring>
        <name>fTimeout</name>
        <qualifiedname>BNetEndpoint::fTimeout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="99" column="10" bodyfile="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBNetEndpoint_1a9f8b849bfc71df6cb67fdf514a18800e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BNetEndpoint::fType</definition>
        <argsstring></argsstring>
        <name>fType</name>
        <qualifiedname>BNetEndpoint::fType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="96" column="4" bodyfile="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBNetEndpoint_1a2020ca5eaa32399a46d66e9169576736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetEndpoint::BNetEndpoint</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>BNetEndpoint</name>
        <qualifiedname>BNetEndpoint::BNetEndpoint</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1ac8ec68db43133173eefc40ba25ba6085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetEndpoint::BNetEndpoint</definition>
        <argsstring>(const BNetEndpoint &amp;other)</argsstring>
        <name>BNetEndpoint</name>
        <qualifiedname>BNetEndpoint::BNetEndpoint</qualifiedname>
        <param>
          <type>const BNetEndpoint &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a3133c4dc0577d31d7ed40b36d0fa6dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetEndpoint::BNetEndpoint</definition>
        <argsstring>(int family, int type, int protocol)</argsstring>
        <name>BNetEndpoint</name>
        <qualifiedname>BNetEndpoint::BNetEndpoint</qualifiedname>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a5aca21dd964eb4b56c41c95e27814bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetEndpoint::BNetEndpoint</definition>
        <argsstring>(int type=SOCK_STREAM)</argsstring>
        <name>BNetEndpoint</name>
        <qualifiedname>BNetEndpoint::BNetEndpoint</qualifiedname>
        <param>
          <type>int</type>
          <declname>type</declname>
          <defval>SOCK_STREAM</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a6975384c7099d55bba00f505bf5a7d92" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BNetEndpoint::~BNetEndpoint</definition>
        <argsstring>()</argsstring>
        <name>~BNetEndpoint</name>
        <qualifiedname>BNetEndpoint::~BNetEndpoint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="24" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a9f1d3949a7bc355c371c7330d6b0dc32" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BNetEndpoint *</type>
        <definition>virtual BNetEndpoint * BNetEndpoint::Accept</definition>
        <argsstring>(int32 timeout=-1)</argsstring>
        <name>Accept</name>
        <qualifiedname>BNetEndpoint::Accept</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>timeout</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="51" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a85168e37ff7586356c24dad7434629d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BNetEndpoint::Archive</definition>
        <argsstring>(BMessage *into, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BNetEndpoint::Archive</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>into</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="30" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a6488e0ee9126ebf0071cd95290fcfb07" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BNetEndpoint::Bind</definition>
        <argsstring>(const BNetAddress &amp;addr)</argsstring>
        <name>Bind</name>
        <qualifiedname>BNetEndpoint::Bind</qualifiedname>
        <param>
          <type>const BNetAddress &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="46" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a19d144e6d6c3dafc030929f16a98329c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BNetEndpoint::Bind</definition>
        <argsstring>(int port=0)</argsstring>
        <name>Bind</name>
        <qualifiedname>BNetEndpoint::Bind</qualifiedname>
        <param>
          <type>int</type>
          <declname>port</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="47" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1afb53233d1c49c0c8bb6b3af51466c49d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetEndpoint::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <qualifiedname>BNetEndpoint::Close</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="44" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1abfcde2612620b9bcefac66f270089fb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BNetEndpoint::Connect</definition>
        <argsstring>(const BNetAddress &amp;addr)</argsstring>
        <name>Connect</name>
        <qualifiedname>BNetEndpoint::Connect</qualifiedname>
        <param>
          <type>const BNetAddress &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="48" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a10e29a79464ca81174f4231f18865f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BNetEndpoint::Connect</definition>
        <argsstring>(const char *addr, int port)</argsstring>
        <name>Connect</name>
        <qualifiedname>BNetEndpoint::Connect</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="49" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1ac20130bdcbba205fbfba280dd8031586" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BNetEndpoint::Error</definition>
        <argsstring>() const</argsstring>
        <name>Error</name>
        <qualifiedname>BNetEndpoint::Error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="53" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a02b06da84434c5ee2390626cf2642c78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * BNetEndpoint::ErrorStr</definition>
        <argsstring>() const</argsstring>
        <name>ErrorStr</name>
        <qualifiedname>BNetEndpoint::ErrorStr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="54" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1ab6e79b7e55aa89840248e6f709272ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetEndpoint::InitCheck</definition>
        <argsstring>()</argsstring>
        <name>InitCheck</name>
        <qualifiedname>BNetEndpoint::InitCheck</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="76" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a139b668cd6327772b279b1db0fed9cb4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetEndpoint::InitCheck</definition>
        <argsstring>() const</argsstring>
        <name>InitCheck</name>
        <qualifiedname>BNetEndpoint::InitCheck</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="28" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1adcc7e676c38a370689ff188b700f9cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BNetEndpoint::IsDataPending</definition>
        <argsstring>(bigtime_t timeout=0)</argsstring>
        <name>IsDataPending</name>
        <qualifiedname>BNetEndpoint::IsDataPending</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
          <declname>timeout</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="73" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1ab5bc7e819d7507d78aa7bb7e8e09bba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BNetEndpoint::Listen</definition>
        <argsstring>(int backlog=5)</argsstring>
        <name>Listen</name>
        <qualifiedname>BNetEndpoint::Listen</qualifiedname>
        <param>
          <type>int</type>
          <declname>backlog</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="50" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a44fa93936cbc22b7a840550daef2f5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const BNetAddress &amp;</type>
        <definition>const BNetAddress &amp; BNetEndpoint::LocalAddr</definition>
        <argsstring>()</argsstring>
        <name>LocalAddr</name>
        <qualifiedname>BNetEndpoint::LocalAddr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="77" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a3fa52548b0a6ec8944e51360d9f1446d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const BNetAddress &amp;</type>
        <definition>const BNetAddress &amp; BNetEndpoint::LocalAddr</definition>
        <argsstring>() const</argsstring>
        <name>LocalAddr</name>
        <qualifiedname>BNetEndpoint::LocalAddr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="39" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a115430f46bec8f08575a7c4e581eaf6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BNetEndpoint &amp;</type>
        <definition>BNetEndpoint &amp; BNetEndpoint::operator=</definition>
        <argsstring>(const BNetEndpoint &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BNetEndpoint::operator=</qualifiedname>
        <param>
          <type>const BNetEndpoint &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="26" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1af1d412235bb0ac667aec2f7b4629fd50" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BNetEndpoint::Receive</definition>
        <argsstring>(BNetBuffer &amp;buffer, size_t size, int flags=0)</argsstring>
        <name>Receive</name>
        <qualifiedname>BNetEndpoint::Receive</qualifiedname>
        <param>
          <type>BNetBuffer &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="67" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a218eddbe086fcc37b4efa044c0e0527f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BNetEndpoint::Receive</definition>
        <argsstring>(void *buffer, size_t size, int flags=0)</argsstring>
        <name>Receive</name>
        <qualifiedname>BNetEndpoint::Receive</qualifiedname>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="66" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1aba9308b3e16ad62b15b8e067bfbf2829" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BNetEndpoint::ReceiveFrom</definition>
        <argsstring>(BNetBuffer &amp;buffer, size_t size, BNetAddress &amp;from, int flags=0)</argsstring>
        <name>ReceiveFrom</name>
        <qualifiedname>BNetEndpoint::ReceiveFrom</qualifiedname>
        <param>
          <type>BNetBuffer &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>BNetAddress &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="70" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a9b7f69b4e01604c3e6d6f66fe78e0c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BNetEndpoint::ReceiveFrom</definition>
        <argsstring>(void *buffer, size_t size, BNetAddress &amp;from, int flags=0)</argsstring>
        <name>ReceiveFrom</name>
        <qualifiedname>BNetEndpoint::ReceiveFrom</qualifiedname>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>BNetAddress &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="68" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a933b4ec91d73130a5b558f270072fc93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const BNetAddress &amp;</type>
        <definition>const BNetAddress &amp; BNetEndpoint::RemoteAddr</definition>
        <argsstring>()</argsstring>
        <name>RemoteAddr</name>
        <qualifiedname>BNetEndpoint::RemoteAddr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="78" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a55d3d4af3427994ca03050ec42d9ea23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const BNetAddress &amp;</type>
        <definition>const BNetAddress &amp; BNetEndpoint::RemoteAddr</definition>
        <argsstring>() const</argsstring>
        <name>RemoteAddr</name>
        <qualifiedname>BNetEndpoint::RemoteAddr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="40" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a3602a839f0402ca0b2f037e34a6ba170" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BNetEndpoint::Send</definition>
        <argsstring>(BNetBuffer &amp;buffer, int flags=0)</argsstring>
        <name>Send</name>
        <qualifiedname>BNetEndpoint::Send</qualifiedname>
        <param>
          <type>BNetBuffer &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="57" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a4b43a1036e87e1b04c3b3e7acce40623" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BNetEndpoint::Send</definition>
        <argsstring>(const void *buffer, size_t size, int flags=0)</argsstring>
        <name>Send</name>
        <qualifiedname>BNetEndpoint::Send</qualifiedname>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="56" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a62f92444faac6ad93fbc3c55643e725d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BNetEndpoint::SendTo</definition>
        <argsstring>(BNetBuffer &amp;buffer, const BNetAddress &amp;to, int flags=0)</argsstring>
        <name>SendTo</name>
        <qualifiedname>BNetEndpoint::SendTo</qualifiedname>
        <param>
          <type>BNetBuffer &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const BNetAddress &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="61" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1aea26164b14373524b1e78194374b68de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>virtual int32 BNetEndpoint::SendTo</definition>
        <argsstring>(const void *buffer, size_t size, const BNetAddress &amp;to, int flags=0)</argsstring>
        <name>SendTo</name>
        <qualifiedname>BNetEndpoint::SendTo</qualifiedname>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const BNetAddress &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="59" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a5b9bfd94f516ff7d78a6e2f49f1014e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BNetEndpoint::SetNonBlocking</definition>
        <argsstring>(bool on=true)</argsstring>
        <name>SetNonBlocking</name>
        <qualifiedname>BNetEndpoint::SetNonBlocking</qualifiedname>
        <param>
          <type>bool</type>
          <declname>on</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="36" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1aaa866437022af561d9c36630cd4fc4ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BNetEndpoint::SetOption</definition>
        <argsstring>(int32 option, int32 level, const void *data, unsigned int dataSize)</argsstring>
        <name>SetOption</name>
        <qualifiedname>BNetEndpoint::SetOption</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>dataSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="34" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a384760a8f525b2f09b59dc9f0a060e0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetEndpoint::SetProtocol</definition>
        <argsstring>(int protocol)</argsstring>
        <name>SetProtocol</name>
        <qualifiedname>BNetEndpoint::SetProtocol</qualifiedname>
        <param>
          <type>int</type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="33" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a316eb4579182a0a62638f035219055bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BNetEndpoint::SetReuseAddr</definition>
        <argsstring>(bool on=true)</argsstring>
        <name>SetReuseAddr</name>
        <qualifiedname>BNetEndpoint::SetReuseAddr</qualifiedname>
        <param>
          <type>bool</type>
          <declname>on</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a31c2996c4b34238bb2a3628f99dddcfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BNetEndpoint::SetTimeout</definition>
        <argsstring>(bigtime_t usec)</argsstring>
        <name>SetTimeout</name>
        <qualifiedname>BNetEndpoint::SetTimeout</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
          <declname>usec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="64" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1acda2089fd2be7ae10ea3a03caec623e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BNetEndpoint::Socket</definition>
        <argsstring>() const</argsstring>
        <name>Socket</name>
        <qualifiedname>BNetEndpoint::Socket</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="42" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBNetEndpoint_1a1fe428bdd67fc73251c9b1071fb5f260" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>static BArchivable * BNetEndpoint::Instantiate</definition>
        <argsstring>(BMessage *archive)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BNetEndpoint::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="31" column="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBNetEndpoint_1af65245a42f6d22dee1ffb6e7decebf4c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BNetEndpoint::BNetEndpoint</definition>
        <argsstring>(const BNetEndpoint &amp;other, int socket, const struct sockaddr_in &amp;localAddress, const struct sockaddr_in &amp;peerAddress)</argsstring>
        <name>BNetEndpoint</name>
        <qualifiedname>BNetEndpoint::BNetEndpoint</qualifiedname>
        <param>
          <type>const BNetEndpoint &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>int</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const struct sockaddr_in &amp;</type>
          <declname>localAddress</declname>
        </param>
        <param>
          <type>const struct sockaddr_in &amp;</type>
          <declname>peerAddress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1acb1340dc1f5d68fdd56445ee53b38f88" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetEndpoint::_ReservedBNetEndpointFBCCruft1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedBNetEndpointFBCCruft1</name>
        <qualifiedname>BNetEndpoint::_ReservedBNetEndpointFBCCruft1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="87" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a195323bd2f95c89dff30b985488b4abb" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetEndpoint::_ReservedBNetEndpointFBCCruft2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedBNetEndpointFBCCruft2</name>
        <qualifiedname>BNetEndpoint::_ReservedBNetEndpointFBCCruft2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="88" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a0515a0667d7c0d989eb2ac0dba47b417" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetEndpoint::_ReservedBNetEndpointFBCCruft3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedBNetEndpointFBCCruft3</name>
        <qualifiedname>BNetEndpoint::_ReservedBNetEndpointFBCCruft3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="89" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1ada8e0bba0a32f25555d9f11a915ff4f8" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetEndpoint::_ReservedBNetEndpointFBCCruft4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedBNetEndpointFBCCruft4</name>
        <qualifiedname>BNetEndpoint::_ReservedBNetEndpointFBCCruft4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="90" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a5a8aa57318c45fc434ac7b4df9f5ca6a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetEndpoint::_ReservedBNetEndpointFBCCruft5</definition>
        <argsstring>()</argsstring>
        <name>_ReservedBNetEndpointFBCCruft5</name>
        <qualifiedname>BNetEndpoint::_ReservedBNetEndpointFBCCruft5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="91" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1ab85126e697d5ffe7c0f723e4a45d3633" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BNetEndpoint::_ReservedBNetEndpointFBCCruft6</definition>
        <argsstring>()</argsstring>
        <name>_ReservedBNetEndpointFBCCruft6</name>
        <qualifiedname>BNetEndpoint::_ReservedBNetEndpointFBCCruft6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="92" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBNetEndpoint_1a6e0240d3c7d3a886185f2cc439ae3677" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BNetEndpoint::_SetupSocket</definition>
        <argsstring>()</argsstring>
        <name>_SetupSocket</name>
        <qualifiedname>BNetEndpoint::_SetupSocket</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="85" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BNetEndpoint</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BNetEndpoint</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" line="18" column="1" bodyfile="/boot/home/src/haiku/headers/os/net/NetEndpoint.h" bodystart="18" bodyend="104"/>
    <listofallmembers>
      <member refid="classBNetEndpoint_1ae6af03e22022093257c461a9591e79f5" prot="private" virt="non-virtual"><scope>BNetEndpoint</scope><name>_reserved</name></member>
      <member refid="classBNetEndpoint_1acb1340dc1f5d68fdd56445ee53b38f88" prot="private" virt="virtual"><scope>BNetEndpoint</scope><name>_ReservedBNetEndpointFBCCruft1</name></member>
      <member refid="classBNetEndpoint_1a195323bd2f95c89dff30b985488b4abb" prot="private" virt="virtual"><scope>BNetEndpoint</scope><name>_ReservedBNetEndpointFBCCruft2</name></member>
      <member refid="classBNetEndpoint_1a0515a0667d7c0d989eb2ac0dba47b417" prot="private" virt="virtual"><scope>BNetEndpoint</scope><name>_ReservedBNetEndpointFBCCruft3</name></member>
      <member refid="classBNetEndpoint_1ada8e0bba0a32f25555d9f11a915ff4f8" prot="private" virt="virtual"><scope>BNetEndpoint</scope><name>_ReservedBNetEndpointFBCCruft4</name></member>
      <member refid="classBNetEndpoint_1a5a8aa57318c45fc434ac7b4df9f5ca6a" prot="private" virt="virtual"><scope>BNetEndpoint</scope><name>_ReservedBNetEndpointFBCCruft5</name></member>
      <member refid="classBNetEndpoint_1ab85126e697d5ffe7c0f723e4a45d3633" prot="private" virt="virtual"><scope>BNetEndpoint</scope><name>_ReservedBNetEndpointFBCCruft6</name></member>
      <member refid="classBNetEndpoint_1a6e0240d3c7d3a886185f2cc439ae3677" prot="private" virt="non-virtual"><scope>BNetEndpoint</scope><name>_SetupSocket</name></member>
      <member refid="classBNetEndpoint_1a9f1d3949a7bc355c371c7330d6b0dc32" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Accept</name></member>
      <member refid="classBArchivable_1a4075315c407443a3b0dbb3d7551b53c9" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>AllArchived</name></member>
      <member refid="classBArchivable_1a2b1d74c147ea18e4b4bfacd42f11e0d2" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>AllUnarchived</name></member>
      <member refid="classBNetEndpoint_1a85168e37ff7586356c24dad7434629d0" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Archive</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>BArchivable</name></member>
      <member refid="classBNetEndpoint_1a6488e0ee9126ebf0071cd95290fcfb07" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Bind</name></member>
      <member refid="classBNetEndpoint_1a19d144e6d6c3dafc030929f16a98329c" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Bind</name></member>
      <member refid="classBNetEndpoint_1a5aca21dd964eb4b56c41c95e27814bcb" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>BNetEndpoint</name></member>
      <member refid="classBNetEndpoint_1a3133c4dc0577d31d7ed40b36d0fa6dbc" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>BNetEndpoint</name></member>
      <member refid="classBNetEndpoint_1ac8ec68db43133173eefc40ba25ba6085" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>BNetEndpoint</name></member>
      <member refid="classBNetEndpoint_1a2020ca5eaa32399a46d66e9169576736" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>BNetEndpoint</name></member>
      <member refid="classBNetEndpoint_1af65245a42f6d22dee1ffb6e7decebf4c" prot="private" virt="non-virtual"><scope>BNetEndpoint</scope><name>BNetEndpoint</name></member>
      <member refid="classBNetEndpoint_1afb53233d1c49c0c8bb6b3af51466c49d" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Close</name></member>
      <member refid="classBNetEndpoint_1abfcde2612620b9bcefac66f270089fb1" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Connect</name></member>
      <member refid="classBNetEndpoint_1a10e29a79464ca81174f4231f18865f12" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Connect</name></member>
      <member refid="classBNetEndpoint_1ac20130bdcbba205fbfba280dd8031586" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>Error</name></member>
      <member refid="classBNetEndpoint_1a02b06da84434c5ee2390626cf2642c78" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>ErrorStr</name></member>
      <member refid="classBNetEndpoint_1ac3280f0bef9aad6040dc8eb0dd95a9d6" prot="private" virt="non-virtual"><scope>BNetEndpoint</scope><name>fAddr</name></member>
      <member refid="classBNetEndpoint_1a807cc27559975d2bedda369095d03ca0" prot="private" virt="non-virtual"><scope>BNetEndpoint</scope><name>fFamily</name></member>
      <member refid="classBNetEndpoint_1afc7601acc1abf1ef98b9a4882c432f49" prot="private" virt="non-virtual"><scope>BNetEndpoint</scope><name>fPeer</name></member>
      <member refid="classBNetEndpoint_1a24faf4ad31a5ecb21e113bff167326a5" prot="private" virt="non-virtual"><scope>BNetEndpoint</scope><name>fProtocol</name></member>
      <member refid="classBNetEndpoint_1a84741d74d892f77dfea69426c01f6768" prot="private" virt="non-virtual"><scope>BNetEndpoint</scope><name>fSocket</name></member>
      <member refid="classBNetEndpoint_1a7b7c0ba71f4dfb94053cde84d37f7c7a" prot="private" virt="non-virtual"><scope>BNetEndpoint</scope><name>fStatus</name></member>
      <member refid="classBNetEndpoint_1a24682ca8cb837383cbcb7cc9d63b8880" prot="private" virt="non-virtual"><scope>BNetEndpoint</scope><name>fTimeout</name></member>
      <member refid="classBNetEndpoint_1a9f8b849bfc71df6cb67fdf514a18800e" prot="private" virt="non-virtual"><scope>BNetEndpoint</scope><name>fType</name></member>
      <member refid="classBNetEndpoint_1a139b668cd6327772b279b1db0fed9cb4" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>InitCheck</name></member>
      <member refid="classBNetEndpoint_1ab6e79b7e55aa89840248e6f709272ce3" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>InitCheck</name></member>
      <member refid="classBNetEndpoint_1a1fe428bdd67fc73251c9b1071fb5f260" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>Instantiate</name></member>
      <member refid="classBNetEndpoint_1adcc7e676c38a370689ff188b700f9cc5" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>IsDataPending</name></member>
      <member refid="classBNetEndpoint_1ab5bc7e819d7507d78aa7bb7e8e09bba3" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Listen</name></member>
      <member refid="classBNetEndpoint_1a3fa52548b0a6ec8944e51360d9f1446d" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>LocalAddr</name></member>
      <member refid="classBNetEndpoint_1a44fa93936cbc22b7a840550daef2f5d0" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>LocalAddr</name></member>
      <member refid="classBNetEndpoint_1a115430f46bec8f08575a7c4e581eaf6b" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>operator=</name></member>
      <member refid="classBArchivable_1a827fa92febcf925f07545aa9777df9de" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Perform</name></member>
      <member refid="classBNetEndpoint_1a218eddbe086fcc37b4efa044c0e0527f" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Receive</name></member>
      <member refid="classBNetEndpoint_1af1d412235bb0ac667aec2f7b4629fd50" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Receive</name></member>
      <member refid="classBNetEndpoint_1a9b7f69b4e01604c3e6d6f66fe78e0c95" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>ReceiveFrom</name></member>
      <member refid="classBNetEndpoint_1aba9308b3e16ad62b15b8e067bfbf2829" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>ReceiveFrom</name></member>
      <member refid="classBNetEndpoint_1a55d3d4af3427994ca03050ec42d9ea23" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>RemoteAddr</name></member>
      <member refid="classBNetEndpoint_1a933b4ec91d73130a5b558f270072fc93" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>RemoteAddr</name></member>
      <member refid="classBNetEndpoint_1a4b43a1036e87e1b04c3b3e7acce40623" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Send</name></member>
      <member refid="classBNetEndpoint_1a3602a839f0402ca0b2f037e34a6ba170" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>Send</name></member>
      <member refid="classBNetEndpoint_1aea26164b14373524b1e78194374b68de" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>SendTo</name></member>
      <member refid="classBNetEndpoint_1a62f92444faac6ad93fbc3c55643e725d" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>SendTo</name></member>
      <member refid="classBNetEndpoint_1a5b9bfd94f516ff7d78a6e2f49f1014e8" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>SetNonBlocking</name></member>
      <member refid="classBNetEndpoint_1aaa866437022af561d9c36630cd4fc4ca" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>SetOption</name></member>
      <member refid="classBNetEndpoint_1a384760a8f525b2f09b59dc9f0a060e0c" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>SetProtocol</name></member>
      <member refid="classBNetEndpoint_1a316eb4579182a0a62638f035219055bf" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>SetReuseAddr</name></member>
      <member refid="classBNetEndpoint_1a31c2996c4b34238bb2a3628f99dddcfb" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>SetTimeout</name></member>
      <member refid="classBNetEndpoint_1acda2089fd2be7ae10ea3a03caec623e7" prot="public" virt="non-virtual"><scope>BNetEndpoint</scope><name>Socket</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>~BArchivable</name></member>
      <member refid="classBNetEndpoint_1a6975384c7099d55bba00f505bf5a7d92" prot="public" virt="virtual"><scope>BNetEndpoint</scope><name>~BNetEndpoint</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
