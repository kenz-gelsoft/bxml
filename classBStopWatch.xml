<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBStopWatch" kind="class" language="C++" prot="public">
    <compoundname>BStopWatch</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBStopWatch_1a27ac8fe2c7eef5404b1a2e1d00914120" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BStopWatch::_reserved[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BStopWatch::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="34" column="7" bodyfile="/boot/home/src/haiku/headers/os/support/StopWatch.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBStopWatch_1ae03d5b8ca809187f1e92f365ceb9bf05" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BStopWatch::fLap</definition>
        <argsstring></argsstring>
        <name>fLap</name>
        <qualifiedname>BStopWatch::fLap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="32" column="6" bodyfile="/boot/home/src/haiku/headers/os/support/StopWatch.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBStopWatch_1a3e393b64ce159d3f71745728752779f7" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
        <definition>bigtime_t BStopWatch::fLaps[10]</definition>
        <argsstring>[10]</argsstring>
        <name>fLaps</name>
        <qualifiedname>BStopWatch::fLaps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="31" column="10" bodyfile="/boot/home/src/haiku/headers/os/support/StopWatch.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBStopWatch_1a909d66ee2545aa66a5e45c1a8ae10ee3" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* BStopWatch::fName</definition>
        <argsstring></argsstring>
        <name>fName</name>
        <qualifiedname>BStopWatch::fName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="33" column="11" bodyfile="/boot/home/src/haiku/headers/os/support/StopWatch.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBStopWatch_1ad1e0e34e78c6a601a3c1aa4f18d34d62" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BStopWatch::fSilent</definition>
        <argsstring></argsstring>
        <name>fSilent</name>
        <qualifiedname>BStopWatch::fSilent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="35" column="5" bodyfile="/boot/home/src/haiku/headers/os/support/StopWatch.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBStopWatch_1a1e375168bedfbbc23fdf8b53f7b6d606" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
        <definition>bigtime_t BStopWatch::fStart</definition>
        <argsstring></argsstring>
        <name>fStart</name>
        <qualifiedname>BStopWatch::fStart</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="29" column="10" bodyfile="/boot/home/src/haiku/headers/os/support/StopWatch.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBStopWatch_1afec32f5b282c4ac0724cde6a167ba3e3" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
        <definition>bigtime_t BStopWatch::fSuspendTime</definition>
        <argsstring></argsstring>
        <name>fSuspendTime</name>
        <qualifiedname>BStopWatch::fSuspendTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="30" column="10" bodyfile="/boot/home/src/haiku/headers/os/support/StopWatch.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBStopWatch_1aabb1a2f52cf9d2da34304c84bbb3a360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BStopWatch::BStopWatch</definition>
        <argsstring>(const char *name, bool silent=false)</argsstring>
        <name>BStopWatch</name>
        <qualifiedname>BStopWatch::BStopWatch</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>silent</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classBStopWatch" kindref="compound">BStopWatch</ref> object and starts the timer. </para>
        </briefdescription>
        <detaileddescription>
<para>This method creates a new <ref refid="classBStopWatch" kindref="compound">BStopWatch</ref> object. As soon as the object is created the timer starts ticking away.</para>
<para>If you are profiling your code with this class pass <computeroutput>false</computeroutput> to the <emphasis>silent</emphasis> parameter to cause the elapsed time information to be streamed to standard output when the object is destroyed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the stop watch. You may pass <computeroutput>NULL</computeroutput> to create an anonymous stop watch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>silent</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass <computeroutput>true</computeroutput> to suppress time information from streaming to standard output when the object is destroyed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBStopWatch_1a1765b93b121693f2afcb5e27168d435b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BStopWatch::~BStopWatch</definition>
        <argsstring>()</argsstring>
        <name>~BStopWatch</name>
        <qualifiedname>BStopWatch::~BStopWatch</qualifiedname>
        <briefdescription>
<para>Destroys the object stopping the timer. </para>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>silent</emphasis> was set to <computeroutput>false</computeroutput> in the constructor then this method will print elapsed time information to standard output.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="16" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBStopWatch_1ab4978bf1acb340342bc4754745f8f255" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
        <definition>bigtime_t BStopWatch::ElapsedTime</definition>
        <argsstring>() const</argsstring>
        <name>ElapsedTime</name>
        <qualifiedname>BStopWatch::ElapsedTime</qualifiedname>
        <briefdescription>
<para>Gets the elapsed time the object has counted. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The elapsed time in microseconds.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="21" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStopWatch_1aa3b2d59dc0f5581912b3b2767de4d1db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a29bb8e432e460af113ef8938cef96f8b" kindref="member">bigtime_t</ref></type>
        <definition>bigtime_t BStopWatch::Lap</definition>
        <argsstring>()</argsstring>
        <name>Lap</name>
        <qualifiedname>BStopWatch::Lap</qualifiedname>
        <briefdescription>
<para>Starts a new timer lap. </para>
        </briefdescription>
        <detaileddescription>
<para>In the current implementation you are unable to actually retrieve the timings of each lap, they are only printed to the standard output when the object is destroyed. This makes the <ref refid="classBStopWatch_1aa3b2d59dc0f5581912b3b2767de4d1db" kindref="member">Lap()</ref> method only usable when doing some types of profiling.</para>
<para><simplesect kind="note"><para>The current implementation is limited to 10 laps. The value returned is the time that has passed since the timer was last started (not the time that has passed since the last lap). Any call to <ref refid="classBStopWatch_1aa3b2d59dc0f5581912b3b2767de4d1db" kindref="member">Lap()</ref> beyond the 10th lap will overwrite the last value. Calling <ref refid="classBStopWatch_1aa3b2d59dc0f5581912b3b2767de4d1db" kindref="member">Lap()</ref> while the timer is suspended does nothing and returns 0.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="20" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBStopWatch_1a5a38a8f863850e3cf3a2d9be9e8e5dbe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * BStopWatch::Name</definition>
        <argsstring>() const</argsstring>
        <name>Name</name>
        <qualifiedname>BStopWatch::Name</qualifiedname>
        <briefdescription>
<para>Returns the name of the stop watch. </para>
        </briefdescription>
        <detaileddescription>
<para>If name was set to <computeroutput>NULL</computeroutput> in the constructor this method returns a blank string.</para>
<para><simplesect kind="return"><para>the name of the stop watch set in the constructor.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="23" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBStopWatch_1ad51af987bd2e704609d45fb31817d226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BStopWatch::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <qualifiedname>BStopWatch::Reset</qualifiedname>
        <briefdescription>
<para>Restarts the timer. </para>
        </briefdescription>
        <detaileddescription>
<para>Resets the stop watch clearing the start time and stored laps and restarts the timer.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="22" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBStopWatch_1add07ccf4401109f0f88974ea3063d16c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BStopWatch::Resume</definition>
        <argsstring>()</argsstring>
        <name>Resume</name>
        <qualifiedname>BStopWatch::Resume</qualifiedname>
        <briefdescription>
<para>Resume the timer from a suspended state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBStopWatch_1a375f8b983fb8bfd6afa91fc8c4aba6e9" kindref="member">Suspend()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="19" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBStopWatch_1a375f8b983fb8bfd6afa91fc8c4aba6e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BStopWatch::Suspend</definition>
        <argsstring>()</argsstring>
        <name>Suspend</name>
        <qualifiedname>BStopWatch::Suspend</qualifiedname>
        <briefdescription>
<para>Suspend the timer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBStopWatch_1add07ccf4401109f0f88974ea3063d16c" kindref="member">Resume()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="18" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBStopWatch_1a2e324679693bc94027738ebf49bdcfb0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BStopWatch::_ReservedStopWatch1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedStopWatch1</name>
        <qualifiedname>BStopWatch::_ReservedStopWatch1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="26" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBStopWatch_1afeee7e65e7e000ebeae2d4b2a297df64" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BStopWatch::_ReservedStopWatch2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedStopWatch2</name>
        <qualifiedname>BStopWatch::_ReservedStopWatch2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="27" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple class used to time events like a stop watch. </para>
    </briefdescription>
    <detaileddescription>
<para>The interface of this class is designed to behave like a physical stop watch. It is useful for debugging parts of your code acting as a quick and dirty profiler.</para>
<para>To use this class first create a <ref refid="classBStopWatch" kindref="compound">BStopWatch</ref> object, this starts the timer going. You may call <ref refid="classBStopWatch_1a375f8b983fb8bfd6afa91fc8c4aba6e9" kindref="member">Suspend()</ref> and <ref refid="classBStopWatch_1add07ccf4401109f0f88974ea3063d16c" kindref="member">Resume()</ref> to start and stop the stop watch. Call <ref refid="classBStopWatch_1ab4978bf1acb340342bc4754745f8f255" kindref="member">ElapsedTime()</ref> to get the current timer count at any time. You may call <ref refid="classBStopWatch_1aa3b2d59dc0f5581912b3b2767de4d1db" kindref="member">Lap()</ref> to start a new lap (up to 10 laps are supported) or call <ref refid="classBStopWatch_1ad51af987bd2e704609d45fb31817d226" kindref="member">Reset()</ref> to reset the timer back to 0 clearing all lap info. When the object is destroyed the timing information is streamed to standard out unless you set the <emphasis>silent</emphasis> parameter to <computeroutput>true</computeroutput> in the constructor.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/support/StopWatch.h" line="13" column="1" bodyfile="/boot/home/src/haiku/headers/os/support/StopWatch.h" bodystart="13" bodyend="36"/>
    <listofallmembers>
      <member refid="classBStopWatch_1a27ac8fe2c7eef5404b1a2e1d00914120" prot="private" virt="non-virtual"><scope>BStopWatch</scope><name>_reserved</name></member>
      <member refid="classBStopWatch_1a2e324679693bc94027738ebf49bdcfb0" prot="private" virt="virtual"><scope>BStopWatch</scope><name>_ReservedStopWatch1</name></member>
      <member refid="classBStopWatch_1afeee7e65e7e000ebeae2d4b2a297df64" prot="private" virt="virtual"><scope>BStopWatch</scope><name>_ReservedStopWatch2</name></member>
      <member refid="classBStopWatch_1aabb1a2f52cf9d2da34304c84bbb3a360" prot="public" virt="non-virtual"><scope>BStopWatch</scope><name>BStopWatch</name></member>
      <member refid="classBStopWatch_1ab4978bf1acb340342bc4754745f8f255" prot="public" virt="non-virtual"><scope>BStopWatch</scope><name>ElapsedTime</name></member>
      <member refid="classBStopWatch_1ae03d5b8ca809187f1e92f365ceb9bf05" prot="private" virt="non-virtual"><scope>BStopWatch</scope><name>fLap</name></member>
      <member refid="classBStopWatch_1a3e393b64ce159d3f71745728752779f7" prot="private" virt="non-virtual"><scope>BStopWatch</scope><name>fLaps</name></member>
      <member refid="classBStopWatch_1a909d66ee2545aa66a5e45c1a8ae10ee3" prot="private" virt="non-virtual"><scope>BStopWatch</scope><name>fName</name></member>
      <member refid="classBStopWatch_1ad1e0e34e78c6a601a3c1aa4f18d34d62" prot="private" virt="non-virtual"><scope>BStopWatch</scope><name>fSilent</name></member>
      <member refid="classBStopWatch_1a1e375168bedfbbc23fdf8b53f7b6d606" prot="private" virt="non-virtual"><scope>BStopWatch</scope><name>fStart</name></member>
      <member refid="classBStopWatch_1afec32f5b282c4ac0724cde6a167ba3e3" prot="private" virt="non-virtual"><scope>BStopWatch</scope><name>fSuspendTime</name></member>
      <member refid="classBStopWatch_1aa3b2d59dc0f5581912b3b2767de4d1db" prot="public" virt="non-virtual"><scope>BStopWatch</scope><name>Lap</name></member>
      <member refid="classBStopWatch_1a5a38a8f863850e3cf3a2d9be9e8e5dbe" prot="public" virt="non-virtual"><scope>BStopWatch</scope><name>Name</name></member>
      <member refid="classBStopWatch_1ad51af987bd2e704609d45fb31817d226" prot="public" virt="non-virtual"><scope>BStopWatch</scope><name>Reset</name></member>
      <member refid="classBStopWatch_1add07ccf4401109f0f88974ea3063d16c" prot="public" virt="non-virtual"><scope>BStopWatch</scope><name>Resume</name></member>
      <member refid="classBStopWatch_1a375f8b983fb8bfd6afa91fc8c4aba6e9" prot="public" virt="non-virtual"><scope>BStopWatch</scope><name>Suspend</name></member>
      <member refid="classBStopWatch_1a1765b93b121693f2afcb5e27168d435b" prot="public" virt="virtual"><scope>BStopWatch</scope><name>~BStopWatch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
