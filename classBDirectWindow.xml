<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBDirectWindow" kind="class" language="C++" prot="public">
    <compoundname>BDirectWindow</compoundname>
    <basecompoundref refid="classBWindow" prot="public" virt="non-virtual">BWindow</basecompoundref>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classBDirectWindow_1ad172d2474d20c072972dbc1f84390b9d" prot="private" static="no">
        <type><ref refid="classBWindow" kindref="compound">BWindow</ref></type>
        <definition>typedef BWindow BDirectWindow::inherited</definition>
        <argsstring></argsstring>
        <name>inherited</name>
        <qualifiedname>BDirectWindow::inherited</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="123" column="15" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBDirectWindow_1ac7b1f3fbbcf8bbd7817afcb592e628f4" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BDirectWindow::_more_reserved_[17]</definition>
        <argsstring>[17]</argsstring>
        <name>_more_reserved_</name>
        <qualifiedname>BDirectWindow::_more_reserved_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="163" column="7" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1ae36e866ef1f1f6251025526dbaa916ca" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BDirectWindow::_reserved[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BDirectWindow::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="156" column="7" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a17089c2330e45f9d9c46b6c0f9b17952" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BDirectWindow::_unused</definition>
        <argsstring></argsstring>
        <name>_unused</name>
        <qualifiedname>BDirectWindow::_unused</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="143" column="5" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1adcca08fcc12dc452ba62e62cb3a26140" prot="private" static="no" mutable="no">
        <type><ref refid="structdirect__buffer__info" kindref="compound">direct_buffer_info</ref> *</type>
        <definition>direct_buffer_info* BDirectWindow::fBufferDesc</definition>
        <argsstring></argsstring>
        <name>fBufferDesc</name>
        <qualifiedname>BDirectWindow::fBufferDesc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="161" column="19" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a4794abad008675969034286ec57de8c8" prot="private" static="no" mutable="no">
        <type>area_id</type>
        <definition>area_id BDirectWindow::fClonedClippingArea</definition>
        <argsstring></argsstring>
        <name>fClonedClippingArea</name>
        <qualifiedname>BDirectWindow::fClonedClippingArea</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="158" column="8" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1af742cafeae3837c8d99a1246a14b45d0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BDirectWindow::fConnectionEnable</definition>
        <argsstring></argsstring>
        <name>fConnectionEnable</name>
        <qualifiedname>BDirectWindow::fConnectionEnable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="141" column="5" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a736fea039161973dedc6114aa5c2dd6b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BDirectWindow::fDaemonKiller</definition>
        <argsstring></argsstring>
        <name>fDaemonKiller</name>
        <qualifiedname>BDirectWindow::fDaemonKiller</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="140" column="5" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a27cabc1460a4150bc31c857d87c52dfc" prot="private" static="no" mutable="no">
        <type>thread_id</type>
        <definition>thread_id BDirectWindow::fDirectDaemonId</definition>
        <argsstring></argsstring>
        <name>fDirectDaemonId</name>
        <qualifiedname>BDirectWindow::fDirectDaemonId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="160" column="10" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a6abdb788903cc68ffd7bf15ee88cb966" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BDirectWindow::fDirectLock</definition>
        <argsstring></argsstring>
        <name>fDirectLock</name>
        <qualifiedname>BDirectWindow::fDirectLock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="145" column="6" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a82a4f76275f7cbb6a2fe94fa56d15297" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BDirectWindow::fDirectLockCount</definition>
        <argsstring></argsstring>
        <name>fDirectLockCount</name>
        <qualifiedname>BDirectWindow::fDirectLockCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="147" column="7" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a35ab76a0f4815626b80226f084edc97e" prot="private" static="no" mutable="no">
        <type>thread_id</type>
        <definition>thread_id BDirectWindow::fDirectLockOwner</definition>
        <argsstring></argsstring>
        <name>fDirectLockOwner</name>
        <qualifiedname>BDirectWindow::fDirectLockOwner</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="148" column="10" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a71e4a26b461ccde8de5c97d8d137de6d" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* BDirectWindow::fDirectLockStack</definition>
        <argsstring></argsstring>
        <name>fDirectLockStack</name>
        <qualifiedname>BDirectWindow::fDirectLockStack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="149" column="5" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1ac74c5620923e7db0bf19633a7e1d2384" prot="private" static="no" mutable="no">
        <type>sem_id</type>
        <definition>sem_id BDirectWindow::fDirectSem</definition>
        <argsstring></argsstring>
        <name>fDirectSem</name>
        <qualifiedname>BDirectWindow::fDirectSem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="146" column="7" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a153a8f18f4a2fe43323e778f49af661e" prot="private" static="no" mutable="no">
        <type>sem_id</type>
        <definition>sem_id BDirectWindow::fDisableSem</definition>
        <argsstring></argsstring>
        <name>fDisableSem</name>
        <qualifiedname>BDirectWindow::fDisableSem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="150" column="7" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a192e83526c6cbb757cf37d2f8b1a81f0" prot="private" static="no" mutable="no">
        <type>sem_id</type>
        <definition>sem_id BDirectWindow::fDisableSemAck</definition>
        <argsstring></argsstring>
        <name>fDisableSemAck</name>
        <qualifiedname>BDirectWindow::fDisableSemAck</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="151" column="7" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a16b683420d72c9c4764d7a2c01b24b6e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BDirectWindow::fInDirectConnect</definition>
        <argsstring></argsstring>
        <name>fInDirectConnect</name>
        <qualifiedname>BDirectWindow::fInDirectConnect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="144" column="5" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1aa86e7727d5d9c0c073d9d818f17da2c8" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BDirectWindow::fInfoAreaSize</definition>
        <argsstring></argsstring>
        <name>fInfoAreaSize</name>
        <qualifiedname>BDirectWindow::fInfoAreaSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="154" column="7" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a239623b542cadf40f28d8648e520acd2" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BDirectWindow::fInitStatus</definition>
        <argsstring></argsstring>
        <name>fInitStatus</name>
        <qualifiedname>BDirectWindow::fInitStatus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="153" column="7" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1a6c1bd38e0ff20160d40f8ea5a7260608" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BDirectWindow::fIsFullScreen</definition>
        <argsstring></argsstring>
        <name>fIsFullScreen</name>
        <qualifiedname>BDirectWindow::fIsFullScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="142" column="5" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBDirectWindow_1ab86146545d7a6cc3f329fcfb7acccedb" prot="private" static="no" mutable="no">
        <type>area_id</type>
        <definition>area_id BDirectWindow::fSourceClippingArea</definition>
        <argsstring></argsstring>
        <name>fSourceClippingArea</name>
        <qualifiedname>BDirectWindow::fSourceClippingArea</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="159" column="8" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBDirectWindow_1a6e0d46dc4ae1de3fbfe84c1ac2b4b7a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BDirectWindow::BDirectWindow</definition>
        <argsstring>(BRect frame, const char *title, window_look look, window_feel feel, uint32 flags, uint32 workspace=B_CURRENT_WORKSPACE)</argsstring>
        <name>BDirectWindow</name>
        <qualifiedname>BDirectWindow::BDirectWindow</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="Window_8h_1addfecca662cd95a41673f24622690b41" kindref="member">window_look</ref></type>
          <declname>look</declname>
        </param>
        <param>
          <type><ref refid="Window_8h_1a4a2cc5b573803174c60a35727f711bf3" kindref="member">window_feel</ref></type>
          <declname>feel</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>workspace</declname>
          <defval><ref refid="Window_8h_1acf1ba45f7f701a6e6eb5f78bb022c23e" kindref="member">B_CURRENT_WORKSPACE</ref></defval>
        </param>
        <briefdescription>
<para>Creates and initializes a <ref refid="classBDirectWindow" kindref="compound">BDirectWindow</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial frame rectangle of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The title of the Window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>look</parametername>
</parameternamelist>
<parameterdescription>
<para>Window look (see <ref refid="classBWindow" kindref="compound">BWindow</ref>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>feel</parametername>
</parameternamelist>
<parameterdescription>
<para>Window feel (see <ref refid="classBWindow" kindref="compound">BWindow</ref>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Window flags (see <ref refid="classBWindow" kindref="compound">BWindow</ref>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workspace</parametername>
</parameternamelist>
<parameterdescription>
<para>Workspace of the direct window (see <ref refid="classBWindow" kindref="compound">BWindow</ref>).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1ae10a47c1fd630772b1e66be2826ce326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BDirectWindow::BDirectWindow</definition>
        <argsstring>(BRect frame, const char *title, window_type type, uint32 flags, uint32 workspace=B_CURRENT_WORKSPACE)</argsstring>
        <name>BDirectWindow</name>
        <qualifiedname>BDirectWindow::BDirectWindow</qualifiedname>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="Window_8h_1a4730a93b07f17fa824a2e42df3e0af6d" kindref="member">window_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>workspace</declname>
          <defval><ref refid="Window_8h_1acf1ba45f7f701a6e6eb5f78bb022c23e" kindref="member">B_CURRENT_WORKSPACE</ref></defval>
        </param>
        <briefdescription>
<para>Creates and initializes a <ref refid="classBDirectWindow" kindref="compound">BDirectWindow</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial frame rectangle of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The title of the Window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Window type (see <ref refid="classBWindow" kindref="compound">BWindow</ref>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Window flags (see <ref refid="classBWindow" kindref="compound">BWindow</ref>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workspace</parametername>
</parameternamelist>
<parameterdescription>
<para>Workspace of the direct window (see <ref refid="classBWindow" kindref="compound">BWindow</ref>).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a4463293711a20166e9960d2ad56450ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BDirectWindow::~BDirectWindow</definition>
        <argsstring>()</argsstring>
        <name>~BDirectWindow</name>
        <qualifiedname>BDirectWindow::~BDirectWindow</qualifiedname>
        <briefdescription>
<para>Destroys the <ref refid="classBDirectWindow" kindref="compound">BDirectWindow</ref> and frees all memory used by it. </para>
        </briefdescription>
        <detaileddescription>
<para>Do not delete a <ref refid="classBDirectWindow" kindref="compound">BDirectWindow</ref> object directly, call <ref refid="classBDirectWindow_1a0e078c054a66514021099c529cfdde2f" kindref="member">Quit()</ref> instead.</para>
<para>Destroying a <ref refid="classBDirectWindow" kindref="compound">BDirectWindow</ref> involves a few steps to make sure that it is disconnected and cleaned up.</para>
<para>Set the fConnectionDisabled flag to <computeroutput>true</computeroutput> to prevent <ref refid="classBDirectWindow_1a55e29e12c950682d986e2b168b0d68c8" kindref="member">DirectConnected()</ref> from attempting to reconnect while it&apos;s being destroyed.</para>
<para>next call <ref refid="classBDirectWindow_1af9258f81376f03c05192a1c0627722bd" kindref="member">Hide()</ref> and finally <ref refid="classBWindow_1a332bea9ef16fedc16134bf587b52fa09" kindref="member">Sync()</ref> to force the direct window to disconnect from direct access.</para>
<para>Once these steps are complete you may do your usual destructor work.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="65" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a39e69ba4bba5221b3099cf34129862c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BDirectWindow::Archive</definition>
        <argsstring>(BMessage *data, bool deep=true) const</argsstring>
        <name>Archive</name>
        <qualifiedname>BDirectWindow::Archive</qualifiedname>
        <reimplements refid="classBWindow_1a69163d40d8f1eda77c9134ad4ab745a2">Archive</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deep</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Archive window into message <emphasis>data</emphasis>. Not implemented. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="68" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a55e29e12c950682d986e2b168b0d68c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BDirectWindow::DirectConnected</definition>
        <argsstring>(direct_buffer_info *info)</argsstring>
        <name>DirectConnected</name>
        <qualifiedname>BDirectWindow::DirectConnected</qualifiedname>
        <param>
          <type><ref refid="structdirect__buffer__info" kindref="compound">direct_buffer_info</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Hook method called when your application learns about the state of the graphics display and changes occur. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the heart of <ref refid="classBDirectWindow" kindref="compound">BDirectWindow</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="structdirect__buffer__info" kindref="compound">direct_buffer_info</ref></computeroutput> struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="107" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a62952e05d331dde0b091998db878a9f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::DispatchMessage</definition>
        <argsstring>(BMessage *message, BHandler *handler)</argsstring>
        <name>DispatchMessage</name>
        <qualifiedname>BDirectWindow::DispatchMessage</qualifiedname>
        <reimplements refid="classBWindow_1a2089af8a214389c3f673c06420457b16">DispatchMessage</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
          <declname>handler</declname>
          <defname>target</defname>
        </param>
        <briefdescription>
<para>Window&apos;s central message-processing method. </para>
        </briefdescription>
        <detaileddescription>
<para>This method called automatically as messages arrive in the queue, you should never call <ref refid="classBDirectWindow_1a62952e05d331dde0b091998db878a9f6" kindref="member">DispatchMessage()</ref> yourself.</para>
<para><simplesect kind="warning"><para>Don&apos;t override this method in your <ref refid="classBWindow" kindref="compound">BWindow</ref> subclass. Override <ref refid="classBDirectWindow_1a1eb5e6dfeee341e9baf3d688ff66194a" kindref="member">MessageReceived()</ref> instead to alter the window&apos;s message dispatching mechanism.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBLooper_1add21ca8765c67b0dbf95b8f0361afa73" kindref="member">BLooper::DispatchMessage()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="73" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a90091f68f028a04d9454201603c27638" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::FrameMoved</definition>
        <argsstring>(BPoint newPosition)</argsstring>
        <name>FrameMoved</name>
        <qualifiedname>BDirectWindow::FrameMoved</qualifiedname>
        <reimplements refid="classBWindow_1a95f6fb2941250e7ed54fce6671f782c6">FrameMoved</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>newPosition</declname>
        </param>
        <briefdescription>
<para>Hook method that gets called when the window is moved. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>The point of the top left corner of the frame rectangle that the window has been moved to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="78" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a8d5888adb8fa39a0affbbdaae6bcfd24" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::FrameResized</definition>
        <argsstring>(float newWidth, float newHeight)</argsstring>
        <name>FrameResized</name>
        <qualifiedname>BDirectWindow::FrameResized</qualifiedname>
        <reimplements refid="classBWindow_1a280fab2b2900abc61dd4bcb7a2a4793f">FrameResized</reimplements>
        <param>
          <type>float</type>
          <declname>newWidth</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newHeight</declname>
        </param>
        <briefdescription>
<para>Hook method that gets called when the window is resized. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>The new <emphasis>width</emphasis> of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>The new <emphasis>height</emphasis> of the window.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="79" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a0348004aa00c94524211136632b183bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BDirectWindow::GetClippingRegion</definition>
        <argsstring>(BRegion *region, BPoint *origin=NULL) const</argsstring>
        <name>GetClippingRegion</name>
        <qualifiedname>BDirectWindow::GetClippingRegion</qualifiedname>
        <param>
          <type><ref refid="classBRegion" kindref="compound">BRegion</ref> *</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref> *</type>
          <declname>origin</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Sets <emphasis>region</emphasis> to the current clipping region of the direct window. </para>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>origin</emphasis> is not <computeroutput>NULL</computeroutput>, the <emphasis>region</emphasis> is offset by <emphasis>origin</emphasis>.</para>
<para><simplesect kind="warning"><para><ref refid="classBDirectWindow_1a0348004aa00c94524211136632b183bf" kindref="member">GetClippingRegion()</ref> should only be called from within the <ref refid="classBDirectWindow_1a55e29e12c950682d986e2b168b0d68c8" kindref="member">DirectConnected()</ref> method. If called outside <ref refid="classBDirectWindow_1a0348004aa00c94524211136632b183bf" kindref="member">GetClippingRegion()</ref> will return <computeroutput>B_ERROR</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>region</parametername>
</parameternamelist>
<parameterdescription>
<para>The clipping region to fill out. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>An origin to offset the region by.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went as expected. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_BAD_VALUE</parametername>
</parameternamelist>
<parameterdescription>
<para><emphasis>region</emphasis> was NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>Window not locked or not in <ref refid="classBDirectWindow_1a55e29e12c950682d986e2b168b0d68c8" kindref="member">DirectConnected()</ref> method. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_NO_MEMORY</parametername>
</parameternamelist>
<parameterdescription>
<para>Not enough memory to fill <emphasis>region</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="109" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a55e920fcba8972f5173bd3714f416c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BDirectWindow::GetSupportedSuites</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>GetSupportedSuites</name>
        <qualifiedname>BDirectWindow::GetSupportedSuites</qualifiedname>
        <reimplements refid="classBWindow_1a8c2f3013601609b54778af99fa6a25ca">GetSupportedSuites</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Reports the suites of messages and specifiers understood by the window. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3     </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="104" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1af9258f81376f03c05192a1c0627722bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::Hide</definition>
        <argsstring>()</argsstring>
        <name>Hide</name>
        <qualifiedname>BDirectWindow::Hide</qualifiedname>
        <reimplements refid="classBWindow_1a53b85e4d43d34e5259b3b16ff6c52b32">Hide</reimplements>
        <briefdescription>
<para>Removes the window from the screen, removes it from Deskbar&apos;s window list, and passes active status to another window. </para>
        </briefdescription>
        <detaileddescription>
<para>Calls to <ref refid="classBDirectWindow_1af9258f81376f03c05192a1c0627722bd" kindref="member">Hide()</ref> and <ref refid="classBDirectWindow_1a48d82b1d72a1def5188b1985b5f51f33" kindref="member">Show()</ref> are cumulative.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="98" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1adb07385ae47ebe8793daf3333e726093" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BDirectWindow::IsFullScreen</definition>
        <argsstring>() const</argsstring>
        <name>IsFullScreen</name>
        <qualifiedname>BDirectWindow::IsFullScreen</qualifiedname>
        <briefdescription>
<para>Returns whether the window is in full-screen or windowed mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if in full-screen mode, <computeroutput>false</computeroutput> if in windowed mode.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="113" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1af05688e3cffca075a7c88c4d8707c9b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::MenusBeginning</definition>
        <argsstring>()</argsstring>
        <name>MenusBeginning</name>
        <qualifiedname>BDirectWindow::MenusBeginning</qualifiedname>
        <reimplements refid="classBWindow_1a981d5c2993f4514fbcd1bdaf297a2a2d">MenusBeginning</reimplements>
        <briefdescription>
<para>Hook method that gets called just before a menu owned by the window is shown. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method is not invoked by a message, there is no <computeroutput>B_MENUS_BEGINNING</computeroutput> flag.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="94" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a4aa81f5f362906c8cf7b41230dce3879" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::MenusEnded</definition>
        <argsstring>()</argsstring>
        <name>MenusEnded</name>
        <qualifiedname>BDirectWindow::MenusEnded</qualifiedname>
        <reimplements refid="classBWindow_1a7bb882de172223e68ee6249596b80564">MenusEnded</reimplements>
        <briefdescription>
<para>Hook method that gets called just before a menu owned by the window is hidden. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method is not invoked by a message, there is no <computeroutput>B_MENUS_ENDED</computeroutput> flag.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="95" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a1eb5e6dfeee341e9baf3d688ff66194a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::MessageReceived</definition>
        <argsstring>(BMessage *message)</argsstring>
        <name>MessageReceived</name>
        <qualifiedname>BDirectWindow::MessageReceived</qualifiedname>
        <reimplements refid="classBWindow_1a1ce544ea7d9adcc6941759817a42affe">MessageReceived</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Handle <emphasis>message</emphasis> received by the associated looper. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>message</emphasis> received by the looper.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBHandler_1aeecda5017e0081db617f23bbff71fb53" kindref="member">BHandler::MessageReceived()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="76" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a8107850d1d7710dc11a1acf1bbf16972" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::Minimize</definition>
        <argsstring>(bool minimize)</argsstring>
        <name>Minimize</name>
        <qualifiedname>BDirectWindow::Minimize</qualifiedname>
        <reimplements refid="classBWindow_1aabe75f91b52b94de6989b4cf49bd89b5">Minimize</reimplements>
        <param>
          <type>bool</type>
          <declname>minimize</declname>
        </param>
        <briefdescription>
<para>Minimizes or un-minimizes the window based on <emphasis>minimize</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="classBDirectWindow_1af9258f81376f03c05192a1c0627722bd" kindref="member">Hide()</ref> an <ref refid="classBDirectWindow_1a48d82b1d72a1def5188b1985b5f51f33" kindref="member">Show()</ref>, <ref refid="classBDirectWindow_1a8107850d1d7710dc11a1acf1bbf16972" kindref="member">Minimize()</ref> dims and un-dims the entry for the window in Deskbar&apos;s window list rather than removing it. Also <ref refid="classBDirectWindow_1a8107850d1d7710dc11a1acf1bbf16972" kindref="member">Minimize()</ref> calls are not cumulative like <ref refid="classBDirectWindow_1af9258f81376f03c05192a1c0627722bd" kindref="member">Hide()</ref> and <ref refid="classBDirectWindow_1a48d82b1d72a1def5188b1985b5f51f33" kindref="member">Show()</ref>; one <computeroutput>false</computeroutput> call will undo multiple <computeroutput>true</computeroutput> calls.</para>
<para><ref refid="classBDirectWindow_1a8107850d1d7710dc11a1acf1bbf16972" kindref="member">Minimize()</ref> also acts as a hook method that is invoked when the user double- clicks on the title tab of the window or selects the window from the DeskBar window list. The <emphasis>minimize</emphasis> parameter is <computeroutput>true</computeroutput> if the window is about to be hidden and <computeroutput>false</computeroutput> if it is about to be shown.</para>
<para>If you override <ref refid="classBDirectWindow_1a8107850d1d7710dc11a1acf1bbf16972" kindref="member">Minimize()</ref> and you want to inherit <ref refid="classBWindow" kindref="compound">BWindow</ref>&apos;s behavior, you must call <ref refid="classBWindow_1aabe75f91b52b94de6989b4cf49bd89b5" kindref="member">BWindow::Minimize()</ref>.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="87" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a113afd3534fca8b81bcc86f8e55738be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>virtual status_t BDirectWindow::Perform</definition>
        <argsstring>(perform_code code, void *arg)</argsstring>
        <name>Perform</name>
        <qualifiedname>BDirectWindow::Perform</qualifiedname>
        <reimplements refid="classBWindow_1afde7d74e5526f740dedb82a1d10faa7a">Perform</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1ad2237b0064c91c237159edc020989bab" kindref="member">perform_code</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Internal method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="105" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a0e078c054a66514021099c529cfdde2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::Quit</definition>
        <argsstring>()</argsstring>
        <name>Quit</name>
        <qualifiedname>BDirectWindow::Quit</qualifiedname>
        <reimplements refid="classBWindow_1a054c0206836014dcc20c59e50bceab44">Quit</reimplements>
        <briefdescription>
<para>Deletes the window and all child views, destroys the window thread, removes the window&apos;s connection to the Application Server, and deletes the object. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this method to destroy a window rather than using the delete operator.</para>
<para>This method works much like the <ref refid="classBLooper_1a10d5a4873f14fd247890a6dfc9b8b949" kindref="member">BLooper::Quit()</ref>, it doesn&apos;t return when called from the <ref refid="classBWindow" kindref="compound">BWindow</ref>&apos;s thread and it returns after all messages have been processed when called from another thread and the <ref refid="classBWindow" kindref="compound">BWindow</ref> and its thread has been destroyed.</para>
<para><simplesect kind="warning"><para>The window must first be locked before calling <ref refid="classBDirectWindow_1a0e078c054a66514021099c529cfdde2f" kindref="member">Quit()</ref>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBLooper_1a10d5a4873f14fd247890a6dfc9b8b949" kindref="member">BLooper::Quit()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="71" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1aee5db7142cabc984cb16e61eaa7baa36" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBHandler" kindref="compound">BHandler</ref> *</type>
        <definition>virtual BHandler * BDirectWindow::ResolveSpecifier</definition>
        <argsstring>(BMessage *message, int32 index, BMessage *specifier, int32 what, const char *property)</argsstring>
        <name>ResolveSpecifier</name>
        <qualifiedname>BDirectWindow::ResolveSpecifier</qualifiedname>
        <reimplements refid="classBWindow_1aaf328e28799cf868ec31df2847a4ed37">ResolveSpecifier</reimplements>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>specifier</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>what</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine the proper handler for a scripting message.  </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The scripting message to determine the handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the specifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specifier</parametername>
</parameternamelist>
<parameterdescription>
<para>The message which contains the specifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>what</parametername>
</parameternamelist>
<parameterdescription>
<para>The &apos;what&apos; field of the specifier message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the target property.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the proper <ref refid="classBHandler" kindref="compound">BHandler</ref> for the given scripting message.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3     </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="100" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1af260392459433e8abf6e47e869065975" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::ScreenChanged</definition>
        <argsstring>(BRect screenFrame, color_space depth)</argsstring>
        <name>ScreenChanged</name>
        <qualifiedname>BDirectWindow::ScreenChanged</qualifiedname>
        <reimplements refid="classBWindow_1ab53cad2a56a967f0a52d5603d806561b">ScreenChanged</reimplements>
        <param>
          <type><ref refid="classBRect" kindref="compound">BRect</ref></type>
          <declname>screenSize</declname>
        </param>
        <param>
          <type>color_space</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
<para>Hook method that is called when the screen that the window is located on changes size or location or the color space of the screen changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>screenSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The new screen size in the screen&apos;s coordinate system. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The new color space of the screen.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="91" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a5f3ddeac2d1e6a683007e6be3e0998b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1ab6735558965995709a53691ae913c81b" kindref="member">status_t</ref></type>
        <definition>status_t BDirectWindow::SetFullScreen</definition>
        <argsstring>(bool enable)</argsstring>
        <name>SetFullScreen</name>
        <qualifiedname>BDirectWindow::SetFullScreen</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enables or disables full-screen mode. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classBDirectWindow_1a2cb6aec5a4dea1761a64bc5ec5031096" kindref="member">SupportsWindowMode()</ref> method determines whether or not the video card is capable of supporting windowed mode.</para>
<para>When the window is in full screen mode it will always have the focus and no other window can be in front of it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to enable fullscreen mode, <computeroutput>false</computeroutput> for windowed mode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>B_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Everything went as expected. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>An error occurred while trying to switch between full screen and windowed mode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classBDirectWindow_1a2cb6aec5a4dea1761a64bc5ec5031096" kindref="member">BDirectWindow::SupportsWindowMode()</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="112" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a48d82b1d72a1def5188b1985b5f51f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::Show</definition>
        <argsstring>()</argsstring>
        <name>Show</name>
        <qualifiedname>BDirectWindow::Show</qualifiedname>
        <reimplements refid="classBWindow_1af7009117df50add72cf0e799ff7d0fa5">Show</reimplements>
        <briefdescription>
<para>Shows the window on screen, places it frontmost on the screen, adds the window to Deskbar&apos;s window list, and makes it the active window. </para>
        </briefdescription>
        <detaileddescription>
<para>If this is the first time <ref refid="classBDirectWindow_1a48d82b1d72a1def5188b1985b5f51f33" kindref="member">Show()</ref> has been called on the window the message loop is started and it is unlocked.</para>
<para>Calls to <ref refid="classBDirectWindow_1af9258f81376f03c05192a1c0627722bd" kindref="member">Hide()</ref> and <ref refid="classBDirectWindow_1a48d82b1d72a1def5188b1985b5f51f33" kindref="member">Show()</ref> are cumulative.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="97" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a1521e3361a53816b665861141b3d651a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::WindowActivated</definition>
        <argsstring>(bool state)</argsstring>
        <name>WindowActivated</name>
        <qualifiedname>BDirectWindow::WindowActivated</qualifiedname>
        <reimplements refid="classBWindow_1a0a17d973a17bb8d3aef09d45d58a9aca">WindowActivated</reimplements>
        <param>
          <type>bool</type>
          <declname>focus</declname>
          <defname>active</defname>
        </param>
        <briefdescription>
<para>Hook method that gets called when the window becomes activated or deactivated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>active</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> if the window has become activated, <computeroutput>false</computeroutput> if the window has become deactivated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="96" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a965f35341d9515e1f5c9c93eaa3404eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::WorkspaceActivated</definition>
        <argsstring>(int32 workspaceIndex, bool state)</argsstring>
        <name>WorkspaceActivated</name>
        <qualifiedname>BDirectWindow::WorkspaceActivated</qualifiedname>
        <reimplements refid="classBWindow_1ac3c293ef3d60df9b3125fb15d0c67cf7">WorkspaceActivated</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>workspace</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Hook method that gets called when the active workspace changes. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is only called when a workspace in which the window resides is activated or deactivated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>workspace</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>workspace</emphasis> number that was activated/deactivated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> if activated, <computeroutput>false</computeroutput> if deactivated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="84" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a566f11807e382e2e09610619a2029f63" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::WorkspacesChanged</definition>
        <argsstring>(uint32 oldWorkspaces, uint32 newWorkspaces)</argsstring>
        <name>WorkspacesChanged</name>
        <qualifiedname>BDirectWindow::WorkspacesChanged</qualifiedname>
        <reimplements refid="classBWindow_1af8dc496d4239a2c343a364a4ad9aabc4">WorkspacesChanged</reimplements>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>oldWorkspaces</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>newWorkspaces</declname>
        </param>
        <briefdescription>
<para>Hook method that gets called whenever the workspaces the window is in changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldWorkspaces</parametername>
</parameternamelist>
<parameterdescription>
<para>The old set of workspaces the window was visible in. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newWorkspaces</parametername>
</parameternamelist>
<parameterdescription>
<para>The new set of workspaces the window is visible in.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="81" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1afa7f05be4a2964c593b3287a3216b041" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::Zoom</definition>
        <argsstring>(BPoint recPosition, float recWidth, float recHeight)</argsstring>
        <name>Zoom</name>
        <qualifiedname>BDirectWindow::Zoom</qualifiedname>
        <reimplements refid="classBWindow_1ae7bea03df00c760d7f489acd3e312290">Zoom</reimplements>
        <param>
          <type><ref refid="classBPoint" kindref="compound">BPoint</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Move window to <emphasis>origin</emphasis>, then resize to <emphasis>width</emphasis> and <emphasis>height</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>You may call <ref refid="classBWindow_1a722772f2902e82bf65010ac2c13570bc" kindref="member">Zoom()</ref> even if the window has the <computeroutput>B_NOT_ZOOMABLE</computeroutput> flag set.</para>
<para>This method may move and resize the window resulting in both the <ref refid="classBDirectWindow_1a90091f68f028a04d9454201603c27638" kindref="member">FrameMoved()</ref> and <ref refid="classBDirectWindow_1a8d5888adb8fa39a0affbbdaae6bcfd24" kindref="member">FrameResized()</ref> hook methods to be called.</para>
<para>You can override this method to change how your window behaves when the user clicks the zoom button or when <ref refid="classBWindow_1a722772f2902e82bf65010ac2c13570bc" kindref="member">Zoom()</ref> is called.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>The point that the window was moved to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The new width of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>The new height of the window.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="88" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBDirectWindow_1a67961b1dae15acfe471080074a804fde" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBArchivable" kindref="compound">BArchivable</ref> *</type>
        <definition>BArchivable * BDirectWindow::Instantiate</definition>
        <argsstring>(BMessage *data)</argsstring>
        <name>Instantiate</name>
        <qualifiedname>BDirectWindow::Instantiate</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Instantiate window from message <emphasis>data</emphasis>. Not implemented. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="67" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a2cb6aec5a4dea1761a64bc5ec5031096" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool BDirectWindow::SupportsWindowMode</definition>
        <argsstring>(screen_id id=B_MAIN_SCREEN_ID)</argsstring>
        <name>SupportsWindowMode</name>
        <qualifiedname>BDirectWindow::SupportsWindowMode</qualifiedname>
        <param>
          <type>screen_id</type>
          <declname>id</declname>
          <defval>B_MAIN_SCREEN_ID</defval>
        </param>
        <briefdescription>
<para>Returns whether or not the specified screen supports windowed mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Because this is a static function you don&apos;t have to construct a <ref refid="classBDirectWindow" kindref="compound">BDirectWindow</ref> object to call it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the screen you want to check, <computeroutput>B_MAIN_SCREEN_ID</computeroutput> by default.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the screen support windowed mode, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="115" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBDirectWindow_1aaa01dd8e14d5e258c9c190bc8fbbe213" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BDirectWindow::BDirectWindow</definition>
        <argsstring>()</argsstring>
        <name>BDirectWindow</name>
        <qualifiedname>BDirectWindow::BDirectWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a0be09d846bfd4b3683132fe26a366b15" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BDirectWindow::BDirectWindow</definition>
        <argsstring>(BDirectWindow &amp;other)</argsstring>
        <name>BDirectWindow</name>
        <qualifiedname>BDirectWindow::BDirectWindow</qualifiedname>
        <param>
          <type><ref refid="classBDirectWindow" kindref="compound">BDirectWindow</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1af7f99656c8591acf27f87a89fbbac2c6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>int32 BDirectWindow::_DirectDaemon</definition>
        <argsstring>()</argsstring>
        <name>_DirectDaemon</name>
        <qualifiedname>BDirectWindow::_DirectDaemon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="134" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1ab664d10ba9d8549f1c2c0b4e92d3629f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BDirectWindow::_DisposeData</definition>
        <argsstring>()</argsstring>
        <name>_DisposeData</name>
        <qualifiedname>BDirectWindow::_DisposeData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="138" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a7e8d2a323f1e5fe8e7994fdf44288850" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BDirectWindow::_InitData</definition>
        <argsstring>()</argsstring>
        <name>_InitData</name>
        <qualifiedname>BDirectWindow::_InitData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="137" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a534cdbf9189c8fefb71f504a557529a1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BDirectWindow::_LockDirect</definition>
        <argsstring>() const</argsstring>
        <name>_LockDirect</name>
        <qualifiedname>BDirectWindow::_LockDirect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="135" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1aced2a0667f3604c37cde6b2b085887fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::_ReservedDirectWindow1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedDirectWindow1</name>
        <qualifiedname>BDirectWindow::_ReservedDirectWindow1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="125" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a983381548d297c2501be2ca73371d97f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::_ReservedDirectWindow2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedDirectWindow2</name>
        <qualifiedname>BDirectWindow::_ReservedDirectWindow2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="126" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1ab3c76f4efa7c732c203b501e4e9ac3ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::_ReservedDirectWindow3</definition>
        <argsstring>()</argsstring>
        <name>_ReservedDirectWindow3</name>
        <qualifiedname>BDirectWindow::_ReservedDirectWindow3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="127" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1aa64a86a0b29c440e10153780168cbe5a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::_ReservedDirectWindow4</definition>
        <argsstring>()</argsstring>
        <name>_ReservedDirectWindow4</name>
        <qualifiedname>BDirectWindow::_ReservedDirectWindow4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="128" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a6f19f2ec2f0117b5c74f3ddd713eb530" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BDirectWindow::_UnlockDirect</definition>
        <argsstring>() const</argsstring>
        <name>_UnlockDirect</name>
        <qualifiedname>BDirectWindow::_UnlockDirect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="136" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a76f533f2ddedce57b026c771d4cedc99" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
        <definition>virtual BMessage * BDirectWindow::ConvertToMessage</definition>
        <argsstring>(void *raw, int32 code)</argsstring>
        <name>ConvertToMessage</name>
        <qualifiedname>BDirectWindow::ConvertToMessage</qualifiedname>
        <reimplements refid="classBWindow_1a46de81dc0e4aefd6ff2e2ff84c72e37c">ConvertToMessage</reimplements>
        <param>
          <type>void *</type>
          <declname>raw</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="131" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1acc86c8e4ff1393de0939f7b5c5e4767b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBDirectWindow" kindref="compound">BDirectWindow</ref> &amp;</type>
        <definition>BDirectWindow &amp; BDirectWindow::operator=</definition>
        <argsstring>(BDirectWindow &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>BDirectWindow::operator=</qualifiedname>
        <param>
          <type><ref refid="classBDirectWindow" kindref="compound">BDirectWindow</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="121" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBDirectWindow_1a6c5ed232c8060d3ce8f6c861fa2d793c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BDirectWindow::task_looper</definition>
        <argsstring>()</argsstring>
        <name>task_looper</name>
        <qualifiedname>BDirectWindow::task_looper</qualifiedname>
        <reimplements refid="classBWindow_1a03af45cf0edd6565f15e8fce29a146b7">task_looper</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="130" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classBDirectWindow_1a81a7e266cfb177f6c864e5a823e5a35f" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a87905854573530ba20766196388ad2a1" kindref="member">int32</ref></type>
        <definition>static int32 BDirectWindow::_daemon_thread</definition>
        <argsstring>(void *arg)</argsstring>
        <name>_daemon_thread</name>
        <qualifiedname>BDirectWindow::_daemon_thread</qualifiedname>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="133" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides direct access to the video card graphics frame buffer. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BDirectWindow</label>
        <link refid="classBDirectWindow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BLooper</label>
        <link refid="classBLooper"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BWindow</label>
        <link refid="classBWindow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>BArchivable</label>
        <link refid="classBArchivable"/>
      </node>
      <node id="1">
        <label>BDirectWindow</label>
        <link refid="classBDirectWindow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BHandler</label>
        <link refid="classBHandler"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BLooper</label>
        <link refid="classBLooper"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BWindow</label>
        <link refid="classBWindow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/os/game/DirectWindow.h" line="54" column="1" bodyfile="/boot/home/src/haiku/headers/os/game/DirectWindow.h" bodystart="54" bodyend="164"/>
    <listofallmembers>
      <member refid="classBDirectWindow_1a81a7e266cfb177f6c864e5a823e5a35f" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>_daemon_thread</name></member>
      <member refid="classBDirectWindow_1af7f99656c8591acf27f87a89fbbac2c6" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>_DirectDaemon</name></member>
      <member refid="classBDirectWindow_1ab664d10ba9d8549f1c2c0b4e92d3629f" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>_DisposeData</name></member>
      <member refid="classBDirectWindow_1a7e8d2a323f1e5fe8e7994fdf44288850" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>_InitData</name></member>
      <member refid="classBDirectWindow_1a534cdbf9189c8fefb71f504a557529a1" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>_LockDirect</name></member>
      <member refid="classBDirectWindow_1ac7b1f3fbbcf8bbd7817afcb592e628f4" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>_more_reserved_</name></member>
      <member refid="classBDirectWindow_1ae36e866ef1f1f6251025526dbaa916ca" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>_reserved</name></member>
      <member refid="classBDirectWindow_1aced2a0667f3604c37cde6b2b085887fe" prot="private" virt="virtual"><scope>BDirectWindow</scope><name>_ReservedDirectWindow1</name></member>
      <member refid="classBDirectWindow_1a983381548d297c2501be2ca73371d97f" prot="private" virt="virtual"><scope>BDirectWindow</scope><name>_ReservedDirectWindow2</name></member>
      <member refid="classBDirectWindow_1ab3c76f4efa7c732c203b501e4e9ac3ac" prot="private" virt="virtual"><scope>BDirectWindow</scope><name>_ReservedDirectWindow3</name></member>
      <member refid="classBDirectWindow_1aa64a86a0b29c440e10153780168cbe5a" prot="private" virt="virtual"><scope>BDirectWindow</scope><name>_ReservedDirectWindow4</name></member>
      <member refid="classBDirectWindow_1a6f19f2ec2f0117b5c74f3ddd713eb530" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>_UnlockDirect</name></member>
      <member refid="classBDirectWindow_1a17089c2330e45f9d9c46b6c0f9b17952" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>_unused</name></member>
      <member refid="classBWindow_1a24ef781656049451c5c6ed06eeb98c06" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Activate</name></member>
      <member refid="classBWindow_1ac3b09ede3b0256df9cbcc7b2a3d6eda4" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>AddChild</name></member>
      <member refid="classBWindow_1a798386ef9d12eb4f0dafff375e3b85d6" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>AddChild</name></member>
      <member refid="classBLooper_1a25adc41bdfd741e9c82d2b469a5086b0" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>AddCommonFilter</name></member>
      <member refid="classBHandler_1a862bea548363faac6f883b348cbed838" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>AddFilter</name></member>
      <member refid="classBLooper_1a484be74814014e3c48c1a16f44e34074" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>AddHandler</name></member>
      <member refid="classBWindow_1a5b05894e227eb22cba63ddaff289a95b" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>AddShortcut</name></member>
      <member refid="classBWindow_1a169c891ff22f6a76f10c15bd16cde3c5" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>AddShortcut</name></member>
      <member refid="classBWindow_1ac2abecfda66af23ee5e944530ce69c97" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>AddToSubset</name></member>
      <member refid="classBArchivable_1a4075315c407443a3b0dbb3d7551b53c9" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>AllArchived</name></member>
      <member refid="classBArchivable_1a2b1d74c147ea18e4b4bfacd42f11e0d2" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>AllUnarchived</name></member>
      <member refid="classBDirectWindow_1a39e69ba4bba5221b3099cf34129862c8" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>Archive</name></member>
      <member refid="classBArchivable_1aed4f0566f9659b03912a859077c27c89" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>BArchivable</name></member>
      <member refid="classBArchivable_1a66e6b947f092d32f287913a8c253290f" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>BArchivable</name></member>
      <member refid="classBDirectWindow_1ae10a47c1fd630772b1e66be2826ce326" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>BDirectWindow</name></member>
      <member refid="classBDirectWindow_1a6e0d46dc4ae1de3fbfe84c1ac2b4b7a4" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>BDirectWindow</name></member>
      <member refid="classBDirectWindow_1aaa01dd8e14d5e258c9c190bc8fbbe213" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>BDirectWindow</name></member>
      <member refid="classBDirectWindow_1a0be09d846bfd4b3683132fe26a366b15" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>BDirectWindow</name></member>
      <member refid="classBWindow_1a160e5f8757a65eaf3fec463fd6f2ba33" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>BeginViewTransaction</name></member>
      <member refid="classBHandler_1a2142e21fe781b24f914ec2086e5f05b7" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>BHandler</name></member>
      <member refid="classBHandler_1add8fa081a7bb8633581e78777b215d0b" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>BHandler</name></member>
      <member refid="classBLooper_1a33fa84a6ed383e5a897d11380d72ce38" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>BLooper</name></member>
      <member refid="classBLooper_1aad314758fd652fb48d61bcccab8b6ae3" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>BLooper</name></member>
      <member refid="classBWindow_1ab1084c04b99938ec93d2865962ec6bc2" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Bounds</name></member>
      <member refid="classBWindow_1afe03898c4cefc6b853f304c57afee533" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>BWindow</name></member>
      <member refid="classBWindow_1a92dfad4d2089ea9a4e8ca8154776e82d" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>BWindow</name></member>
      <member refid="classBWindow_1a967856a612c3e7ad4d5d1f4970f744e3" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>BWindow</name></member>
      <member refid="classBWindow_1a4ea700aa901a1ac76b23605d82c79de8" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>CenterIn</name></member>
      <member refid="classBWindow_1a1fbaa783dffbd7bb5f0b135cde5e0237" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>CenterOnScreen</name></member>
      <member refid="classBWindow_1aa9890ed5cb76c2c2a8fb82d7cd664586" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>CenterOnScreen</name></member>
      <member refid="classBWindow_1aeaeec9bcb12b7b03132e61dba501b19b" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>ChildAt</name></member>
      <member refid="classBWindow_1a3be508837c0b14b176b916e45c9c1f31" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Close</name></member>
      <member refid="classBLooper_1ad64f1a98c1cce8087e7d492860461a62" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>CommonFilterList</name></member>
      <member refid="classBWindow_1aaa76e90a0578a4081eb4765467d594ea" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>ConvertFromScreen</name></member>
      <member refid="classBWindow_1ac0f4cc714ef1cc817100ae028f75d496" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>ConvertFromScreen</name></member>
      <member refid="classBWindow_1a7b3b4a579b4e14cd6acf1a95aee75687" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>ConvertFromScreen</name></member>
      <member refid="classBWindow_1ae748ea5865c1905c56c30e110c2f4947" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>ConvertFromScreen</name></member>
      <member refid="classBDirectWindow_1a76f533f2ddedce57b026c771d4cedc99" prot="private" virt="virtual"><scope>BDirectWindow</scope><name>ConvertToMessage</name></member>
      <member refid="classBWindow_1a218bb4c66ca3f58fbc203a36996fd119" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>ConvertToScreen</name></member>
      <member refid="classBWindow_1ac139848b8a9075d0ede0e28d87d95872" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>ConvertToScreen</name></member>
      <member refid="classBWindow_1a83c3d8f1fb020740f7b4c3658e5222b5" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>ConvertToScreen</name></member>
      <member refid="classBWindow_1a6997351ff94fca3d18459b41a790ce73" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>ConvertToScreen</name></member>
      <member refid="classBWindow_1a742200112899822a889c2e69bf86db5d" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>CountChildren</name></member>
      <member refid="classBLooper_1a6179629238d0be92d7a89503be24d4e3" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>CountHandlers</name></member>
      <member refid="classBLooper_1a64e7b89294df1f7b614d1267f870ecd9" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>CountLockRequests</name></member>
      <member refid="classBLooper_1a4eec703acd9bd7fe9a455af0f81e08f9" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>CountLocks</name></member>
      <member refid="classBWindow_1a31d98b696b4e2a98ae83c841e342fe1b" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>CurrentFocus</name></member>
      <member refid="classBLooper_1a6d244af065c4a12ea795bbbc7bb20e07" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>CurrentMessage</name></member>
      <member refid="classBWindow_1a8a990fd437ac8f94f7be26f35145048d" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>DecoratorFrame</name></member>
      <member refid="classBWindow_1a6995f1dcc605c006e4118cc4b687e766" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>DefaultButton</name></member>
      <member refid="classBLooper_1a7c8f05bcc354bc1d53026417417120e3" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>DetachCurrentMessage</name></member>
      <member refid="classBDirectWindow_1a55e29e12c950682d986e2b168b0d68c8" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>DirectConnected</name></member>
      <member refid="classBWindow_1a83111af72c672b2b7029e712e9b702f3" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>DisableUpdates</name></member>
      <member refid="classBLooper_1a3a2d3773466de19a6c117f3a04861b11" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>DispatchExternalMessage</name></member>
      <member refid="classBDirectWindow_1a62952e05d331dde0b091998db878a9f6" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>DispatchMessage</name></member>
      <member refid="classBWindow_1ab71c5c4ddd8f1cc677115157ec1c0c96" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>EnableUpdates</name></member>
      <member refid="classBWindow_1a54d387b099fb88e5aa565bdc40f338eb" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>EndViewTransaction</name></member>
      <member refid="classBDirectWindow_1adcca08fcc12dc452ba62e62cb3a26140" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fBufferDesc</name></member>
      <member refid="classBDirectWindow_1a4794abad008675969034286ec57de8c8" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fClonedClippingArea</name></member>
      <member refid="classBDirectWindow_1af742cafeae3837c8d99a1246a14b45d0" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fConnectionEnable</name></member>
      <member refid="classBDirectWindow_1a736fea039161973dedc6114aa5c2dd6b" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fDaemonKiller</name></member>
      <member refid="classBDirectWindow_1a27cabc1460a4150bc31c857d87c52dfc" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fDirectDaemonId</name></member>
      <member refid="classBDirectWindow_1a6abdb788903cc68ffd7bf15ee88cb966" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fDirectLock</name></member>
      <member refid="classBDirectWindow_1a82a4f76275f7cbb6a2fe94fa56d15297" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fDirectLockCount</name></member>
      <member refid="classBDirectWindow_1a35ab76a0f4815626b80226f084edc97e" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fDirectLockOwner</name></member>
      <member refid="classBDirectWindow_1a71e4a26b461ccde8de5c97d8d137de6d" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fDirectLockStack</name></member>
      <member refid="classBDirectWindow_1ac74c5620923e7db0bf19633a7e1d2384" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fDirectSem</name></member>
      <member refid="classBDirectWindow_1a153a8f18f4a2fe43323e778f49af661e" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fDisableSem</name></member>
      <member refid="classBDirectWindow_1a192e83526c6cbb757cf37d2f8b1a81f0" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fDisableSemAck</name></member>
      <member refid="classBWindow_1ab3cf63c90d209ec6cb1aaeadb7f61fb1" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Feel</name></member>
      <member refid="classBHandler_1a909662a049856f6863a934cf18161554" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>FilterList</name></member>
      <member refid="classBDirectWindow_1a16b683420d72c9c4764d7a2c01b24b6e" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fInDirectConnect</name></member>
      <member refid="classBWindow_1ac295d2dff72e4c5254cf597d4b31f9c6" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>FindView</name></member>
      <member refid="classBWindow_1a4c252d9c733a703ca25dcc4d3eae6209" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>FindView</name></member>
      <member refid="classBDirectWindow_1aa86e7727d5d9c0c073d9d818f17da2c8" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fInfoAreaSize</name></member>
      <member refid="classBDirectWindow_1a239623b542cadf40f28d8648e520acd2" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fInitStatus</name></member>
      <member refid="classBDirectWindow_1a6c1bd38e0ff20160d40f8ea5a7260608" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fIsFullScreen</name></member>
      <member refid="classBWindow_1ab99cdac9e2a0270c8afc07cfae7a02a8" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Flags</name></member>
      <member refid="classBWindow_1a2e74fd82a8095399d73a28920cc7c9b9" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Flush</name></member>
      <member refid="classBWindow_1ab6c744272c04751fa0b44e605b063a5d" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Frame</name></member>
      <member refid="classBDirectWindow_1a90091f68f028a04d9454201603c27638" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>FrameMoved</name></member>
      <member refid="classBDirectWindow_1a8d5888adb8fa39a0affbbdaae6bcfd24" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>FrameResized</name></member>
      <member refid="classBDirectWindow_1ab86146545d7a6cc3f329fcfb7acccedb" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>fSourceClippingArea</name></member>
      <member refid="classBDirectWindow_1a0348004aa00c94524211136632b183bf" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>GetClippingRegion</name></member>
      <member refid="classBWindow_1a58fba1b0ad6c2035cf1dac6304d21912" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>GetDecoratorSettings</name></member>
      <member refid="classBWindow_1adb07dc64e991f7a42dfad000b2a1b0c7" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>GetLayout</name></member>
      <member refid="classBWindow_1aebce716c628bac67367875d1129db8c5" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>GetSizeLimits</name></member>
      <member refid="classBDirectWindow_1a55e920fcba8972f5173bd3714f416c13" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>GetSupportedSuites</name></member>
      <member refid="classBWindow_1a62a354bee61a0b5cd5ac499b5f728b7f" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>GetWindowAlignment</name></member>
      <member refid="classBLooper_1a6976132123edacf4b3a2831eadf5f4bf" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>HandlerAt</name></member>
      <member refid="classBWindow_1a08765e38e5cd5f37e19981d217b985d3" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>HasShortcut</name></member>
      <member refid="classBDirectWindow_1af9258f81376f03c05192a1c0627722bd" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>Hide</name></member>
      <member refid="classBLooper_1a3061534f6d2f3186efca4cddd19f378f" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>IndexOf</name></member>
      <member refid="classBDirectWindow_1ad172d2474d20c072972dbc1f84390b9d" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>inherited</name></member>
      <member refid="classBDirectWindow_1a67961b1dae15acfe471080074a804fde" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Instantiate</name></member>
      <member refid="classBWindow_1a6abf2efb0ab304b75d72df3b6a2b9df3" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>InvalidateLayout</name></member>
      <member refid="classBWindow_1ae5d1ae4e9598ed736c557031b92753ce" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>InViewTransaction</name></member>
      <member refid="classBWindow_1abbaa2f20d86a5c4d12591fefef0c49fa" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>IsActive</name></member>
      <member refid="classBWindow_1a54158d02e55dbeb212ccf9af5b5a2f23" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>IsFloating</name></member>
      <member refid="classBWindow_1a61ab745cf98f47cac71ed3b750d4d21f" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>IsFront</name></member>
      <member refid="classBDirectWindow_1adb07385ae47ebe8793daf3333e726093" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>IsFullScreen</name></member>
      <member refid="classBWindow_1ae92c2b3b1340af7740b7c4e3e14dcd30" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>IsHidden</name></member>
      <member refid="classBLooper_1a525d6677c2fc76a84c2d48853dad142a" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>IsLocked</name></member>
      <member refid="classBLooper_1a27fd22b9eeaeadbeff1e973ed5242a64" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>IsMessageWaiting</name></member>
      <member refid="classBWindow_1a6c209b1d5ab1b82f43993074b1373678" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>IsMinimized</name></member>
      <member refid="classBWindow_1aa10b6592ab7e291ce7152a72605c68fa" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>IsModal</name></member>
      <member refid="classBWindow_1a61d9b0d1e0de31231b835cc5293f8ed2" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>IsOffscreenWindow</name></member>
      <member refid="classBHandler_1a581b84f0f067afa88768ce6a0c07f59f" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>IsWatched</name></member>
      <member refid="classBWindow_1a3f4cf14e9f6453e63b58acfd7098941c" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>KeyMenuBar</name></member>
      <member refid="classBWindow_1a59ef137725976cea5008e5efd683357e" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>LastMouseMovedView</name></member>
      <member refid="classBWindow_1ae3f008c018e413d75ddea1a60b0c9df7" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Layout</name></member>
      <member refid="classBLooper_1a757a3e406ea3b7bb9a1ad16d04689b1d" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Lock</name></member>
      <member refid="classBLooper_1a1d5d9dbc9d890ed1329b69fbfe9254b3" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>LockingThread</name></member>
      <member refid="classBHandler_1a9d64bf66b4914918e24390d117e83477" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>LockLooper</name></member>
      <member refid="classBHandler_1afa0099ff6defcb6d64e3ee1c2fb47afe" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>LockLooperWithTimeout</name></member>
      <member refid="classBLooper_1a734cdb06bfe92efdea24528c9b43bfc1" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>LockWithTimeout</name></member>
      <member refid="classBWindow_1a056fe3233f883b1c4518619e59d825cd" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Look</name></member>
      <member refid="classBLooper_1a5cb1d2eb7640fdcbc1085ad19583691d" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Loop</name></member>
      <member refid="classBHandler_1ac8e949959b12e602e3b0c4f023c60e6c" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Looper</name></member>
      <member refid="classBLooper_1acf16bb9628e7dbbace3920ebeff6dc34" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>LooperForThread</name></member>
      <member refid="classBDirectWindow_1af05688e3cffca075a7c88c4d8707c9b9" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>MenusBeginning</name></member>
      <member refid="classBDirectWindow_1a4aa81f5f362906c8cf7b41230dce3879" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>MenusEnded</name></member>
      <member refid="classBLooper_1a1be73aad8e8fed41659b98633525e5b3" prot="protected" virt="non-virtual"><scope>BDirectWindow</scope><name>MessageFromPort</name></member>
      <member refid="classBLooper_1ad0643973ceda5cca540c4684a9f670ac" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>MessageQueue</name></member>
      <member refid="classBDirectWindow_1a1eb5e6dfeee341e9baf3d688ff66194a" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>MessageReceived</name></member>
      <member refid="classBDirectWindow_1a8107850d1d7710dc11a1acf1bbf16972" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>Minimize</name></member>
      <member refid="classBWindow_1a146584fa5815bd413f71671f33a9de89" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>MoveBy</name></member>
      <member refid="classBWindow_1ae426291c30652864d0a464518f9cda12" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>MoveOnScreen</name></member>
      <member refid="classBWindow_1ae81b509d6ee2eb29b9a703c75ef07ee5" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>MoveTo</name></member>
      <member refid="classBWindow_1af419313a1b9b73a2c1cdb2365ff16189" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>MoveTo</name></member>
      <member refid="classBHandler_1a40b246ac272e09b2f641d1290be21200" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Name</name></member>
      <member refid="classBWindow_1a9c03d9a6a454edec5eb38657e5c66490" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>NeedsUpdate</name></member>
      <member refid="classBHandler_1a92855d8f88f6072e7225bde292feaa38" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>NextHandler</name></member>
      <member refid="classBDirectWindow_1acc86c8e4ff1393de0939f7b5c5e4767b" prot="private" virt="non-virtual"><scope>BDirectWindow</scope><name>operator=</name></member>
      <member refid="classBDirectWindow_1a113afd3534fca8b81bcc86f8e55738be" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>Perform</name></member>
      <member refid="classBLooper_1a0de6737bfbf8a8b4913adc8c74bb544e" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>PostMessage</name></member>
      <member refid="classBLooper_1ae79a7818ce950d8edcd238f7948df020" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>PostMessage</name></member>
      <member refid="classBLooper_1a2dc16ecf211eb7e32eaa4b08863e856d" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>PostMessage</name></member>
      <member refid="classBLooper_1ac75eed80e72b236650f19b4015de6e99" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>PostMessage</name></member>
      <member refid="classBLooper_1af1a4af6872abc40a887bfcabd55aff98" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>PreferredHandler</name></member>
      <member refid="classBWindow_1a8ea37743fc8c09aab2a511a7c14fa9c4" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>PulseRate</name></member>
      <member refid="classBDirectWindow_1a0e078c054a66514021099c529cfdde2f" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>Quit</name></member>
      <member refid="classBWindow_1a8fccbfd10fceb2c6103c6036ca9e961a" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>QuitRequested</name></member>
      <member refid="classBWindow_1ac271fe9be15e5d6e0a5d59b7b2ed3e8d" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>RemoveChild</name></member>
      <member refid="classBLooper_1ad2233fa143e9deff912bff39eebac4a2" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>RemoveCommonFilter</name></member>
      <member refid="classBHandler_1a2b608135b27f283802648e7c6f8cdc83" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>RemoveFilter</name></member>
      <member refid="classBWindow_1af9ef1e4afee9bfde7c7d9d8e2796c2de" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>RemoveFromSubset</name></member>
      <member refid="classBLooper_1a5af57140bf018388a2e64343f46ac330" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>RemoveHandler</name></member>
      <member refid="classBWindow_1a81d5e6ed3a8a7b7f5013055bf69593ba" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>RemoveShortcut</name></member>
      <member refid="classBWindow_1a6aba4ddafc654f362799b6a96e6c76cd" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>ResizeBy</name></member>
      <member refid="classBWindow_1a31e2ea325258646128cfe8618cb79edc" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>ResizeTo</name></member>
      <member refid="classBWindow_1a68db6173b92973252fc1876c5376bcd4" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>ResizeToPreferred</name></member>
      <member refid="classBDirectWindow_1aee5db7142cabc984cb16e61eaa7baa36" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>ResolveSpecifier</name></member>
      <member refid="classBWindow_1ae49c02ad870d55514c800631b37b97cf" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>Run</name></member>
      <member refid="classBDirectWindow_1af260392459433e8abf6e47e869065975" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>ScreenChanged</name></member>
      <member refid="classBLooper_1aa96df67561b0ce1428ae45148c21e01f" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Sem</name></member>
      <member refid="classBWindow_1a88c3aa6ee3ea29d7868bafec749f891e" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SendBehind</name></member>
      <member refid="classBHandler_1a71bf72dc17a64bcd42656722271a9e0c" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>SendNotices</name></member>
      <member refid="classBLooper_1a9b39e686873763cc6491c91f77b177b7" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>SetCommonFilterList</name></member>
      <member refid="classBWindow_1aecfdd5136ed18c193357a8e3130ba578" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetDecoratorSettings</name></member>
      <member refid="classBWindow_1ab6c969b403bd24dc8b1e9d846a4ae414" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetDefaultButton</name></member>
      <member refid="classBWindow_1a2317402cb859f5a438bc69e186ee2f04" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetFeel</name></member>
      <member refid="classBHandler_1a503344dc801858e1f5f419be3919e9cf" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>SetFilterList</name></member>
      <member refid="classBWindow_1a8f0caf4693a1952ac9bbe9a52bfdd778" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetFlags</name></member>
      <member refid="classBDirectWindow_1a5f3ddeac2d1e6a683007e6be3e0998b1" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetFullScreen</name></member>
      <member refid="classBWindow_1aa1e9322c76ffdad1886253171f8a5972" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetKeyMenuBar</name></member>
      <member refid="classBWindow_1ad0e630f2691a0f7919b809b7ea265095" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>SetLayout</name></member>
      <member refid="classBWindow_1ac9ca5f4b8a78f95403dbc35ad9728e0c" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetLook</name></member>
      <member refid="classBHandler_1abf861126df4b6e71b9261a99da4ad0eb" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetName</name></member>
      <member refid="classBHandler_1a02f78779c8141987d6030e73c22e734a" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>SetNextHandler</name></member>
      <member refid="classBLooper_1a07c6e5c65354b48465fde2b0b44e22c6" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetPreferredHandler</name></member>
      <member refid="classBWindow_1ad69001922aad8daf7b65f82eb4b439f0" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetPulseRate</name></member>
      <member refid="classBWindow_1a8668ecf18ad145391f66704c3339eb3d" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetSizeLimits</name></member>
      <member refid="classBWindow_1a7cd4bf7dc0079e9a52b0ac1e7e2f897b" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetTitle</name></member>
      <member refid="classBWindow_1a0f8f96c37d83e8df9e97c25a69c68295" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetType</name></member>
      <member refid="classBWindow_1a91d42de7f54efe1399c3838d35162d20" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetWindowAlignment</name></member>
      <member refid="classBWindow_1a3549fdb63a64637fa8e2054e8c21272d" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetWorkspaces</name></member>
      <member refid="classBWindow_1ad3c2e560e41b377456faf9bd5dabcdc0" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SetZoomLimits</name></member>
      <member refid="classBDirectWindow_1a48d82b1d72a1def5188b1985b5f51f33" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>Show</name></member>
      <member refid="classBWindow_1afc61a0c6129f233e56fa373107bd8790" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Size</name></member>
      <member refid="classBHandler_1af7d600e33a0586af7444d9abc8500504" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a20713ff6ee9df49a014f391374eaf689" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>StartWatching</name></member>
      <member refid="classBHandler_1a58d7c8d30e47fbb7590f10dea1f21166" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a31927c51d89e0e3b3bf609a786ee6c3b" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>StartWatchingAll</name></member>
      <member refid="classBHandler_1a9d1f0d55b3dc7337058aba769b4e4f93" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1ad3544be491270f856a0af8d36ce02d78" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>StopWatching</name></member>
      <member refid="classBHandler_1a199c167e0dcee95aa65d09435804b3d9" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>StopWatchingAll</name></member>
      <member refid="classBHandler_1a8b9a424ce63f5932666094b6eadf10cf" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>StopWatchingAll</name></member>
      <member refid="classBDirectWindow_1a2cb6aec5a4dea1761a64bc5ec5031096" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>SupportsWindowMode</name></member>
      <member refid="classBWindow_1a332bea9ef16fedc16134bf587b52fa09" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Sync</name></member>
      <member refid="classBDirectWindow_1a6c5ed232c8060d3ce8f6c861fa2d793c" prot="private" virt="virtual"><scope>BDirectWindow</scope><name>task_looper</name></member>
      <member refid="classBLooper_1afeb7a4900f26e7746d6c8bdb5cf684f3" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Team</name></member>
      <member refid="classBLooper_1a257d396d04d128edf7a0c9669ead36c0" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Thread</name></member>
      <member refid="classBWindow_1a73c7a05ef33d579de61b83b5daaf3c6b" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Title</name></member>
      <member refid="classBWindow_1a103e6f93287afd65ed72ff760403fdf6" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Type</name></member>
      <member refid="classBLooper_1ac84ea15405640082b9fda58f6672467c" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Unlock</name></member>
      <member refid="classBHandler_1ab131af7eb7aa2b9eea3a11ac1bfd4c03" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>UnlockLooper</name></member>
      <member refid="classBWindow_1a49b0c49eeef751b17bdc08d2e4d58cb9" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>UpdateIfNeeded</name></member>
      <member refid="classBWindow_1a99df6b9964c69b1c69c47fab6262abee" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>UpdateSizeLimits</name></member>
      <member refid="classBDirectWindow_1a1521e3361a53816b665861141b3d651a" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>WindowActivated</name></member>
      <member refid="classBDirectWindow_1a965f35341d9515e1f5c9c93eaa3404eb" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>WorkspaceActivated</name></member>
      <member refid="classBWindow_1aba3b83e88043338b66c2b2f501fbbbee" prot="public" virt="non-virtual"><scope>BDirectWindow</scope><name>Workspaces</name></member>
      <member refid="classBDirectWindow_1a566f11807e382e2e09610619a2029f63" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>WorkspacesChanged</name></member>
      <member refid="classBDirectWindow_1afa7f05be4a2964c593b3287a3216b041" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>Zoom</name></member>
      <member refid="classBWindow_1a722772f2902e82bf65010ac2c13570bc" prot="public" virt="non-virtual" ambiguityscope="BWindow::"><scope>BDirectWindow</scope><name>Zoom</name></member>
      <member refid="classBArchivable_1af1a37be4b953423787b0d0be0b345ff3" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>~BArchivable</name></member>
      <member refid="classBDirectWindow_1a4463293711a20166e9960d2ad56450ea" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>~BDirectWindow</name></member>
      <member refid="classBHandler_1a928254034959d19ef588b7898a6f8194" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>~BHandler</name></member>
      <member refid="classBLooper_1ab2fa21c0315644144f55523adbdc0457" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>~BLooper</name></member>
      <member refid="classBWindow_1a896913784046fcfde7d1f8891e54af08" prot="public" virt="virtual"><scope>BDirectWindow</scope><name>~BWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
