<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBMessageFilter" kind="class" language="C++" prot="public">
    <compoundname>BMessageFilter</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBMessageFilter_1ae292714a27146822665fd7a24c10a07a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BHandler</definition>
        <argsstring></argsstring>
        <name>BHandler</name>
        <qualifiedname>BMessageFilter::BHandler</qualifiedname>
        <param>
          <type><ref refid="classBHandler" kindref="compound">BHandler</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="69" column="14" bodyfile="/boot/home/src/haiku/headers/os/app/MessageFilter.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classBMessageFilter_1a8593052564979388dbc606faa8cd7692" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class BLooper</definition>
        <argsstring></argsstring>
        <name>BLooper</name>
        <qualifiedname>BMessageFilter::BLooper</qualifiedname>
        <param>
          <type><ref refid="classBLooper" kindref="compound">BLooper</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="68" column="14" bodyfile="/boot/home/src/haiku/headers/os/app/MessageFilter.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBMessageFilter_1aa3af656b3fce28b9363d183e296a98fc" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMessageFilter::_reserved[3]</definition>
        <argsstring>[3]</argsstring>
        <name>_reserved</name>
        <qualifiedname>BMessageFilter::_reserved</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="84" column="7" bodyfile="/boot/home/src/haiku/headers/os/app/MessageFilter.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMessageFilter_1ad91c24c8e5dd10cc74af2a90904a0729" prot="private" static="no" mutable="no">
        <type><ref refid="MessageFilter_8h_1ad24c4676e2df15c1e432b7892fd70349" kindref="member">message_delivery</ref></type>
        <definition>message_delivery BMessageFilter::fDelivery</definition>
        <argsstring></argsstring>
        <name>fDelivery</name>
        <qualifiedname>BMessageFilter::fDelivery</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="79" column="17" bodyfile="/boot/home/src/haiku/headers/os/app/MessageFilter.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMessageFilter_1ac310b9d10c7abcdf1a30effaef79eb83" prot="private" static="no" mutable="no">
        <type><ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref></type>
        <definition>filter_hook BMessageFilter::fFilterFunction</definition>
        <argsstring></argsstring>
        <name>fFilterFunction</name>
        <qualifiedname>BMessageFilter::fFilterFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="82" column="12" bodyfile="/boot/home/src/haiku/headers/os/app/MessageFilter.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMessageFilter_1a4fb1e5fee63d42a432ac55f759e7029a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BMessageFilter::fFiltersAny</definition>
        <argsstring></argsstring>
        <name>fFiltersAny</name>
        <qualifiedname>BMessageFilter::fFiltersAny</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="77" column="5" bodyfile="/boot/home/src/haiku/headers/os/app/MessageFilter.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMessageFilter_1aa539b705e4b4451467595066e5f9ab38" prot="private" static="no" mutable="no">
        <type><ref refid="classBLooper" kindref="compound">BLooper</ref> *</type>
        <definition>BLooper* BMessageFilter::fLooper</definition>
        <argsstring></argsstring>
        <name>fLooper</name>
        <qualifiedname>BMessageFilter::fLooper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="81" column="8" bodyfile="/boot/home/src/haiku/headers/os/app/MessageFilter.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMessageFilter_1a614ddf2e115c6bc1013d3bbe883229a1" prot="private" static="no" mutable="no">
        <type><ref refid="MessageFilter_8h_1a4d5a65f8d934511387e0cd57dccbfce2" kindref="member">message_source</ref></type>
        <definition>message_source BMessageFilter::fSource</definition>
        <argsstring></argsstring>
        <name>fSource</name>
        <qualifiedname>BMessageFilter::fSource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="80" column="15" bodyfile="/boot/home/src/haiku/headers/os/app/MessageFilter.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBMessageFilter_1a22a1550e4ed100caa42f20970d7c692b" prot="private" static="no" mutable="no">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMessageFilter::fWhat</definition>
        <argsstring></argsstring>
        <name>fWhat</name>
        <qualifiedname>BMessageFilter::fWhat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="78" column="7" bodyfile="/boot/home/src/haiku/headers/os/app/MessageFilter.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBMessageFilter_1a9f39d38ba0af5b36602a891dc4874c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMessageFilter::BMessageFilter</definition>
        <argsstring>(const BMessageFilter &amp;filter)</argsstring>
        <name>BMessageFilter</name>
        <qualifiedname>BMessageFilter::BMessageFilter</qualifiedname>
        <param>
          <type>const <ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref> &amp;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Copy constructor. Copy the criteria from another object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1a24aec9732c406ba5e05e1e45ebde22cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMessageFilter::BMessageFilter</definition>
        <argsstring>(const BMessageFilter *filter)</argsstring>
        <name>BMessageFilter</name>
        <qualifiedname>BMessageFilter::BMessageFilter</qualifiedname>
        <param>
          <type>const <ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Create a new object based on criteria of another object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1a9aea3db944fc4ef4790a8e861e5aaec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMessageFilter::BMessageFilter</definition>
        <argsstring>(message_delivery delivery, message_source source, filter_hook func=NULL)</argsstring>
        <name>BMessageFilter</name>
        <qualifiedname>BMessageFilter::BMessageFilter</qualifiedname>
        <param>
          <type><ref refid="MessageFilter_8h_1ad24c4676e2df15c1e432b7892fd70349" kindref="member">message_delivery</ref></type>
          <declname>delivery</declname>
        </param>
        <param>
          <type><ref refid="MessageFilter_8h_1a4d5a65f8d934511387e0cd57dccbfce2" kindref="member">message_source</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref></type>
          <declname>func</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Construct a new object that filters on delivery method and message source. </para>
        </briefdescription>
        <detaileddescription>
<para>You can also specify a <ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref>, if you want to apply custom filter criteria.</para>
<para><simplesect kind="see"><para><ref refid="classBMessageFilter_1af546360211fffc0cd16ec3eefeaff8a5" kindref="member">BMessageFilter(uint32 what,filter_hook)</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBMessageFilter_1a11be578c622a6e96f20a96f88cff7c4d" kindref="member">BMessageFilter(message_delivery, message_source, uint32 what, filter_hook)</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1a11be578c622a6e96f20a96f88cff7c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMessageFilter::BMessageFilter</definition>
        <argsstring>(message_delivery delivery, message_source source, uint32 what, filter_hook func=NULL)</argsstring>
        <name>BMessageFilter</name>
        <qualifiedname>BMessageFilter::BMessageFilter</qualifiedname>
        <param>
          <type><ref refid="MessageFilter_8h_1ad24c4676e2df15c1e432b7892fd70349" kindref="member">message_delivery</ref></type>
          <declname>delivery</declname>
        </param>
        <param>
          <type><ref refid="MessageFilter_8h_1a4d5a65f8d934511387e0cd57dccbfce2" kindref="member">message_source</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>what</declname>
          <defname>inWhat</defname>
        </param>
        <param>
          <type><ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref></type>
          <declname>func</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Construct a new object that filters on delivery method, message source and specific message constants. </para>
        </briefdescription>
        <detaileddescription>
<para>You can also specify a <ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref>, if you want to apply custom filter criteria.</para>
<para><simplesect kind="see"><para><ref refid="classBMessageFilter_1af546360211fffc0cd16ec3eefeaff8a5" kindref="member">BMessageFilter(uint32 what,filter_hook)</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBMessageFilter_1a9aea3db944fc4ef4790a8e861e5aaec2" kindref="member">BMessageFilter(message_delivery, message_source, filter_hook)</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1af546360211fffc0cd16ec3eefeaff8a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BMessageFilter::BMessageFilter</definition>
        <argsstring>(uint32 what, filter_hook func=NULL)</argsstring>
        <name>BMessageFilter</name>
        <qualifiedname>BMessageFilter::BMessageFilter</qualifiedname>
        <param>
          <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
          <declname>what</declname>
          <defname>inWhat</defname>
        </param>
        <param>
          <type><ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref></type>
          <declname>func</declname>
          <defval><ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Construct a new object that filters on a message constant. </para>
        </briefdescription>
        <detaileddescription>
<para>You can also specify a <ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref>, if you want apply custom filter criteria.</para>
<para><simplesect kind="see"><para><ref refid="classBMessageFilter_1a9aea3db944fc4ef4790a8e861e5aaec2" kindref="member">BMessageFilter(message_delivery, message_source, filter_hook)</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classBMessageFilter_1a11be578c622a6e96f20a96f88cff7c4d" kindref="member">BMessageFilter(message_delivery, message_source, uint32 what, filter_hook)</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1aa75c113ae45ab87e89782639c95e16b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BMessageFilter::~BMessageFilter</definition>
        <argsstring>()</argsstring>
        <name>~BMessageFilter</name>
        <qualifiedname>BMessageFilter::~BMessageFilter</qualifiedname>
        <briefdescription>
<para>Destructor. Does nothing. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="54" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1a62142f07062ced2b096e4de9a76e05ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="SupportDefs_8h_1a9a72138d173e1e5243078b8644d4a1c2" kindref="member">uint32</ref></type>
        <definition>uint32 BMessageFilter::Command</definition>
        <argsstring>() const</argsstring>
        <name>Command</name>
        <qualifiedname>BMessageFilter::Command</qualifiedname>
        <briefdescription>
<para>Return the accepted message constant. </para>
        </briefdescription>
        <detaileddescription>
<para>This method returns zero (0) in case this filter does not filter based on the message constant.</para>
<para><simplesect kind="see"><para><ref refid="classBMessageFilter_1af0723b7033a806a1f0c21eb319a6656e" kindref="member">FiltersAnyCommand() const</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="63" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1a530d9898fb51e57e93bf674b8e13bcb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="MessageFilter_8h_1a442f07e5189554ce784922f72c3e7d34" kindref="member">filter_result</ref></type>
        <definition>filter_result BMessageFilter::Filter</definition>
        <argsstring>(BMessage *message, BHandler **_target)</argsstring>
        <name>Filter</name>
        <qualifiedname>BMessageFilter::Filter</qualifiedname>
        <param>
          <type><ref refid="classBMessage" kindref="compound">BMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="classBHandler" kindref="compound">BHandler</ref> **</type>
          <declname>_target</declname>
          <defname>target</defname>
        </param>
        <briefdescription>
<para>Filter the message according to custom criteria. </para>
        </briefdescription>
        <detaileddescription>
<para>The default implementation of this method always returns <computeroutput>B_DISPATCH_MESSAGE</computeroutput>. You can override this method in subclasses to suit your own criteria. You receive two arguments.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message that needs to be filtered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>If you want to, you can specify a handler that should handle this message. Note that you do have to pass a handler that is associated with the looper that received the message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>You should return <computeroutput>B_DISPATCH_MESSAGE</computeroutput> in case the message passes the tests, or <computeroutput>B_SKIP_MESSAGE</computeroutput> in case the message does not pass.</para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="59" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1af0723b7033a806a1f0c21eb319a6656e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BMessageFilter::FiltersAnyCommand</definition>
        <argsstring>() const</argsstring>
        <name>FiltersAnyCommand</name>
        <qualifiedname>BMessageFilter::FiltersAnyCommand</qualifiedname>
        <briefdescription>
<para>Return whether or not this filter has a message command criterium. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classBMessageFilter_1a62142f07062ced2b096e4de9a76e05ce" kindref="member">Command() const</ref></para>
</simplesect>
<simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="64" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1af6b140130183142c94afdb397a0a238f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBLooper" kindref="compound">BLooper</ref> *</type>
        <definition>BLooper * BMessageFilter::Looper</definition>
        <argsstring>() const</argsstring>
        <name>Looper</name>
        <qualifiedname>BMessageFilter::Looper</qualifiedname>
        <briefdescription>
<para>Return the looper this filter is associated with. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="65" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1a8ea42c862ce9358566a3ba47e1dbfa53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="MessageFilter_8h_1ad24c4676e2df15c1e432b7892fd70349" kindref="member">message_delivery</ref></type>
        <definition>message_delivery BMessageFilter::MessageDelivery</definition>
        <argsstring>() const</argsstring>
        <name>MessageDelivery</name>
        <qualifiedname>BMessageFilter::MessageDelivery</qualifiedname>
        <briefdescription>
<para>Return the message_delivery criterium of this filter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="61" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1adc41e6c0cb98bc3ea5564f04c1a74eec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="MessageFilter_8h_1a4d5a65f8d934511387e0cd57dccbfce2" kindref="member">message_source</ref></type>
        <definition>message_source BMessageFilter::MessageSource</definition>
        <argsstring>() const</argsstring>
        <name>MessageSource</name>
        <qualifiedname>BMessageFilter::MessageSource</qualifiedname>
        <briefdescription>
<para>Return the message_source criterium of this filter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="62" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1a5b6cd31021809533ded7d5af25b1d5b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref> &amp;</type>
        <definition>BMessageFilter &amp; BMessageFilter::operator=</definition>
        <argsstring>(const BMessageFilter &amp;from)</argsstring>
        <name>operator=</name>
        <qualifiedname>BMessageFilter::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Assignment operator. Copies criteria from another filter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="56" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBMessageFilter_1a6337ddd2aeb57e2afd9b7a4c9d31bd87" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMessageFilter::_ReservedMessageFilter1</definition>
        <argsstring>()</argsstring>
        <name>_ReservedMessageFilter1</name>
        <qualifiedname>BMessageFilter::_ReservedMessageFilter1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="71" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1ab19abda5ced4c7424de2c895c936563c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void BMessageFilter::_ReservedMessageFilter2</definition>
        <argsstring>()</argsstring>
        <name>_ReservedMessageFilter2</name>
        <qualifiedname>BMessageFilter::_ReservedMessageFilter2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="72" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1a658fe1ca4614090b3e58507ea00354a2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref></type>
        <definition>filter_hook BMessageFilter::FilterFunction</definition>
        <argsstring>() const</argsstring>
        <name>FilterFunction</name>
        <qualifiedname>BMessageFilter::FilterFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="75" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBMessageFilter_1a980af0107335f9b384270509fa30eb93" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMessageFilter::SetLooper</definition>
        <argsstring>(BLooper *owner)</argsstring>
        <name>SetLooper</name>
        <qualifiedname>BMessageFilter::SetLooper</qualifiedname>
        <param>
          <type><ref refid="classBLooper" kindref="compound">BLooper</ref> *</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="74" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes a message filter for <ref refid="classBLooper" kindref="compound">BLooper</ref> and <ref refid="classBHandler" kindref="compound">BHandler</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Objects of this class serve as a description of properties that incoming messages should have in order to be processed by a handler or a looper. <ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref> provides three default filter criteria, the <computeroutput>what</computeroutput> constant, the <ref refid="MessageFilter_8h_1a4d5a65f8d934511387e0cd57dccbfce2" kindref="member">message_source</ref> and the type of message_delivery, and an extendible <ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref>.</para>
<para><ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref>&apos;s standard filter criteria can be extended in two ways:<orderedlist>
<listitem><para>Specify a <ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref>. This is a static function that takes a message and a pointer to a <ref refid="classBHandler" kindref="compound">BHandler</ref> as arguments, and allows you to accept or reject the message, and even redirect it to a specific <ref refid="classBHandler" kindref="compound">BHandler</ref>.</para>
</listitem><listitem><para>Subclass the <ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref> class and override the <ref refid="classBMessageFilter_1a530d9898fb51e57e93bf674b8e13bcb6" kindref="member">Filter()</ref> function. This has the same capabilities as using a <ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref>, but it allows cleaner code (in some cases). Both methods have their merits, but please remember that you have to choose which one you want to use, since you can&apos;t use both. The order of processing the criteria is in this order: the source, the delivery method, the filter hook and then the overrided <ref refid="classBMessageFilter_1a530d9898fb51e57e93bf674b8e13bcb6" kindref="member">Filter()</ref> method. Additionally, if a <ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref> is registered, the <ref refid="classBMessageFilter_1a530d9898fb51e57e93bf674b8e13bcb6" kindref="member">Filter()</ref> method will not be called.</para>
</listitem></orderedlist>
</para>
<para>The <ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref> objects are used in two different classes. They can be associated with specific BHandlers. Using the <ref refid="classBHandler_1a862bea548363faac6f883b348cbed838" kindref="member">BHandler::AddFilter()</ref> and the <ref refid="classBHandler_1a503344dc801858e1f5f419be3919e9cf" kindref="member">BHandler::SetFilterList()</ref> methods, you can add filters to the filter list. It is also possible to associate filters with BLoopers. In that case, all incoming messages of that looper are checked against the criteria. To perform filtering in loopers, have a look at the <ref refid="classBLooper_1a25adc41bdfd741e9c82d2b469a5086b0" kindref="member">BLooper::AddCommonFilter()</ref> and the <ref refid="classBLooper_1a9b39e686873763cc6491c91f77b177b7" kindref="member">BLooper::SetCommonFilterList()</ref> methods.</para>
<para>An example of a filter that selects on the default criteria: <programlisting><codeline><highlight class="comment">//<sp/>Our<sp/>window<sp/>does<sp/>not<sp/>handle<sp/>drop<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref><sp/>*filter<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref>(<ref refid="MessageFilter_8h_1ad24c4676e2df15c1e432b7892fd70349a97416e5bfbb23dcef84cedf4c2693754" kindref="member">B_PROGRAMMED_DELIVERY</ref>,<sp/><ref refid="MessageFilter_8h_1a4d5a65f8d934511387e0cd57dccbfce2a3737116d73c61949db328be5bd0132d7" kindref="member">B_ANY_SOURCE</ref>);</highlight></codeline>
<codeline><highlight class="normal">window-&gt;AddCommonFilter(filter);</highlight></codeline>
</programlisting></para>
<para>An example of a filter that only allows one type of message: <programlisting><codeline><highlight class="normal"><ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref><sp/>*filter<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref>(kHappyMessages);</highlight></codeline>
<codeline><highlight class="normal">handler-&gt;AddFilter(filter);</highlight></codeline>
</programlisting></para>
<para>An example of a <ref refid="MessageFilter_8h_1a35663faa91226effa30d66143466b489" kindref="member">filter_hook</ref>: <programlisting><codeline><highlight class="comment">//<sp/>The<sp/>handler<sp/>depends<sp/>on<sp/>the<sp/>what<sp/>code<sp/>of<sp/>a<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="MessageFilter_8h_1a442f07e5189554ce784922f72c3e7d34" kindref="member">filter_result</ref></highlight></codeline>
<codeline><highlight class="normal">ScreenMessage(<ref refid="classBMessage" kindref="compound">BMessage</ref>*<sp/>message,<sp/><ref refid="classBHandler" kindref="compound">BHandler</ref>**<sp/>target,<sp/><ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref>*<sp/>filter)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(message-&gt;<ref refid="classBMessage_1ad074faab0857f51fba778f0d8558df1e" kindref="member">what</ref>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>kTcpEvent:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/>&amp;fTcpHandler;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="MessageFilter_8h_1a442f07e5189554ce784922f72c3e7d34a0743c6519a603fc0ad1a5e12daabc43c" kindref="member">B_DISPATCH_MESSAGE</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>kUdpEvent:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/>&amp;fUdpHandler;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="MessageFilter_8h_1a442f07e5189554ce784922f72c3e7d34a0743c6519a603fc0ad1a5e12daabc43c" kindref="member">B_DISPATCH_MESSAGE</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="MessageFilter_8h_1a442f07e5189554ce784922f72c3e7d34ae0cff882162b57e4ac59e7b4b3d98341" kindref="member">B_SKIP_MESSAGE</ref>;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref><sp/>*filter<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref>(<ref refid="MessageFilter_8h_1ad24c4676e2df15c1e432b7892fd70349abf006cea5c0ac22cd3baa976d9dc82d7" kindref="member">B_ANY_DELIVERY</ref>,<sp/><ref refid="MessageFilter_8h_1a4d5a65f8d934511387e0cd57dccbfce2a3737116d73c61949db328be5bd0132d7" kindref="member">B_ANY_SOURCE</ref>,<sp/>ScreenMessage);</highlight></codeline>
<codeline><highlight class="normal">looper-&gt;AddCommonFilter(filter);</highlight></codeline>
</programlisting></para>
<para>The two classes that use <ref refid="classBMessageFilter" kindref="compound">BMessageFilter</ref> are <ref refid="classBLooper" kindref="compound">BLooper</ref> and <ref refid="classBHandler" kindref="compound">BHandler</ref>. In the general messaging introduction, there is also a section on <ref refid="app_messaging_1app-messaging-receiving" kindref="member">handling messages</ref>.</para>
<para><simplesect kind="since"><para>BeOS R3 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/boot/home/src/haiku/headers/os/app/MessageFilter.h" line="43" column="1" bodyfile="/boot/home/src/haiku/headers/os/app/MessageFilter.h" bodystart="43" bodyend="85"/>
    <listofallmembers>
      <member refid="classBMessageFilter_1aa3af656b3fce28b9363d183e296a98fc" prot="private" virt="non-virtual"><scope>BMessageFilter</scope><name>_reserved</name></member>
      <member refid="classBMessageFilter_1a6337ddd2aeb57e2afd9b7a4c9d31bd87" prot="private" virt="virtual"><scope>BMessageFilter</scope><name>_ReservedMessageFilter1</name></member>
      <member refid="classBMessageFilter_1ab19abda5ced4c7424de2c895c936563c" prot="private" virt="virtual"><scope>BMessageFilter</scope><name>_ReservedMessageFilter2</name></member>
      <member refid="classBMessageFilter_1af546360211fffc0cd16ec3eefeaff8a5" prot="public" virt="non-virtual"><scope>BMessageFilter</scope><name>BMessageFilter</name></member>
      <member refid="classBMessageFilter_1a9aea3db944fc4ef4790a8e861e5aaec2" prot="public" virt="non-virtual"><scope>BMessageFilter</scope><name>BMessageFilter</name></member>
      <member refid="classBMessageFilter_1a11be578c622a6e96f20a96f88cff7c4d" prot="public" virt="non-virtual"><scope>BMessageFilter</scope><name>BMessageFilter</name></member>
      <member refid="classBMessageFilter_1a9f39d38ba0af5b36602a891dc4874c30" prot="public" virt="non-virtual"><scope>BMessageFilter</scope><name>BMessageFilter</name></member>
      <member refid="classBMessageFilter_1a24aec9732c406ba5e05e1e45ebde22cf" prot="public" virt="non-virtual"><scope>BMessageFilter</scope><name>BMessageFilter</name></member>
      <member refid="classBMessageFilter_1a62142f07062ced2b096e4de9a76e05ce" prot="public" virt="non-virtual"><scope>BMessageFilter</scope><name>Command</name></member>
      <member refid="classBMessageFilter_1ad91c24c8e5dd10cc74af2a90904a0729" prot="private" virt="non-virtual"><scope>BMessageFilter</scope><name>fDelivery</name></member>
      <member refid="classBMessageFilter_1ac310b9d10c7abcdf1a30effaef79eb83" prot="private" virt="non-virtual"><scope>BMessageFilter</scope><name>fFilterFunction</name></member>
      <member refid="classBMessageFilter_1a4fb1e5fee63d42a432ac55f759e7029a" prot="private" virt="non-virtual"><scope>BMessageFilter</scope><name>fFiltersAny</name></member>
      <member refid="classBMessageFilter_1a530d9898fb51e57e93bf674b8e13bcb6" prot="public" virt="virtual"><scope>BMessageFilter</scope><name>Filter</name></member>
      <member refid="classBMessageFilter_1a658fe1ca4614090b3e58507ea00354a2" prot="private" virt="non-virtual"><scope>BMessageFilter</scope><name>FilterFunction</name></member>
      <member refid="classBMessageFilter_1af0723b7033a806a1f0c21eb319a6656e" prot="public" virt="non-virtual"><scope>BMessageFilter</scope><name>FiltersAnyCommand</name></member>
      <member refid="classBMessageFilter_1aa539b705e4b4451467595066e5f9ab38" prot="private" virt="non-virtual"><scope>BMessageFilter</scope><name>fLooper</name></member>
      <member refid="classBMessageFilter_1a614ddf2e115c6bc1013d3bbe883229a1" prot="private" virt="non-virtual"><scope>BMessageFilter</scope><name>fSource</name></member>
      <member refid="classBMessageFilter_1a22a1550e4ed100caa42f20970d7c692b" prot="private" virt="non-virtual"><scope>BMessageFilter</scope><name>fWhat</name></member>
      <member refid="classBMessageFilter_1af6b140130183142c94afdb397a0a238f" prot="public" virt="non-virtual"><scope>BMessageFilter</scope><name>Looper</name></member>
      <member refid="classBMessageFilter_1a8ea42c862ce9358566a3ba47e1dbfa53" prot="public" virt="non-virtual"><scope>BMessageFilter</scope><name>MessageDelivery</name></member>
      <member refid="classBMessageFilter_1adc41e6c0cb98bc3ea5564f04c1a74eec" prot="public" virt="non-virtual"><scope>BMessageFilter</scope><name>MessageSource</name></member>
      <member refid="classBMessageFilter_1a5b6cd31021809533ded7d5af25b1d5b1" prot="public" virt="non-virtual"><scope>BMessageFilter</scope><name>operator=</name></member>
      <member refid="classBMessageFilter_1a980af0107335f9b384270509fa30eb93" prot="private" virt="non-virtual"><scope>BMessageFilter</scope><name>SetLooper</name></member>
      <member refid="classBMessageFilter_1aa75c113ae45ab87e89782639c95e16b5" prot="public" virt="virtual"><scope>BMessageFilter</scope><name>~BMessageFilter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
