<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="ClassInfo_8h" kind="file" language="C++">
    <compoundname>ClassInfo.h</compoundname>
    <includes local="no">typeinfo</includes>
    <incdepgraph>
      <node id="1">
        <label>ClassInfo.h</label>
        <link refid="ClassInfo_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>typeinfo</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ClassInfo_8h_1a7d71c18344a728b01b9ebc1fe5c3ee53" prot="public" static="no">
        <name>cast_as</name>
        <param><defname>object</defname></param>
        <param><defname>class</defname></param>
        <initializer>	(dynamic_cast&lt;class*&gt;(object))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ClassInfo.h" line="17" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ClassInfo.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ClassInfo_8h_1a834aeddd0b0a4d030ba5365066a5d4eb" prot="public" static="no">
        <name>class_name</name>
        <param><defname>object</defname></param>
        <initializer>	((typeid(*(object))).name())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ClassInfo.h" line="15" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ClassInfo.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ClassInfo_8h_1ab224d46de0a38249695ef4699821ab5f" prot="public" static="no">
        <name>is_instance_of</name>
        <param><defname>object</defname></param>
        <param><defname>class</defname></param>
        <initializer>	(typeid(*(object)) == typeid(class))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ClassInfo.h" line="21" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ClassInfo.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ClassInfo_8h_1a9b396a70ff522f5cd28ff0368d7f8b2a" prot="public" static="no">
        <name>is_kind_of</name>
        <param><defname>object</defname></param>
        <param><defname>class</defname></param>
        <initializer>	(dynamic_cast&lt;class*&gt;(object) != <ref refid="SupportDefs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/os/support/ClassInfo.h" line="19" column="9" bodyfile="/boot/home/src/haiku/headers/os/support/ClassInfo.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2007<sp/>Haiku,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>MIT<sp/>License.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_CLASS_INFO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CLASS_INFO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>deprecated,<sp/>use<sp/>standard<sp/>RTTI<sp/>calls<sp/>instead<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>maybe<sp/>get<sp/>rid<sp/>of<sp/>this<sp/>header<sp/>completely?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>class_name(object)<sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((typeid(*(object))).name())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cast_as(object,<sp/>class)<sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(dynamic_cast&lt;class*&gt;(object))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>is_kind_of(object,<sp/>class)<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(dynamic_cast&lt;class*&gt;(object)<sp/>!=<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>is_instance_of(object,<sp/>class)<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(typeid(*(object))<sp/>==<sp/>typeid(class))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>_CLASS_INFO_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/boot/home/src/haiku/headers/os/support/ClassInfo.h"/>
  </compounddef>
</doxygen>
