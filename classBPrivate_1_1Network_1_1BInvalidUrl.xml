<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classBPrivate_1_1Network_1_1BInvalidUrl" kind="class" language="C++" prot="public">
    <compoundname>BPrivate::Network::BInvalidUrl</compoundname>
    <basecompoundref refid="classBPrivate_1_1Network_1_1BError" prot="public" virt="non-virtual">BPrivate::Network::BError</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBPrivate_1_1Network_1_1BInvalidUrl_1a0fff8199ec9b3c8b26a2521e26440af5" prot="private" static="no" mutable="no">
        <type><ref refid="classBUrl" kindref="compound">BUrl</ref></type>
        <definition>BUrl BPrivate::Network::BInvalidUrl::fUrl</definition>
        <argsstring></argsstring>
        <name>fUrl</name>
        <qualifiedname>BPrivate::Network::BInvalidUrl::fUrl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/NetServicesDefs.h" line="51" column="5" bodyfile="/boot/home/src/haiku/headers/private/netservices2/NetServicesDefs.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BInvalidUrl_1aeed16135547543a6f0386227c80b9cc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BPrivate::Network::BInvalidUrl::BInvalidUrl</definition>
        <argsstring>(BString origin, BUrl url)</argsstring>
        <name>BInvalidUrl</name>
        <qualifiedname>BPrivate::Network::BInvalidUrl::BInvalidUrl</qualifiedname>
        <param>
          <type><ref refid="classBString" kindref="compound">BString</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classBUrl" kindref="compound">BUrl</ref></type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new error invalid URL error.  </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>A string representing where this error occured. It is advised to initialize it to <computeroutput>__PRETTY_FUNCTION__</computeroutput> by default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>The URL object that did not contain a valid URL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/NetServicesDefs.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BInvalidUrl_1af16d943fc333667bb5ad8f96535f1153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BPrivate::Network::BInvalidUrl::BInvalidUrl</definition>
        <argsstring>(const char *origin, BUrl url)</argsstring>
        <name>BInvalidUrl</name>
        <qualifiedname>BPrivate::Network::BInvalidUrl::BInvalidUrl</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classBUrl" kindref="compound">BUrl</ref></type>
          <declname>url</declname>
        </param>
        <briefdescription>
<para>Create a new error invalid URL error. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>A string representing where this error occured. It is advised to initialize it to <computeroutput>__PRETTY_FUNCTION__</computeroutput> by default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>The URL object that did not contain a valid URL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/NetServicesDefs.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BInvalidUrl_1a68f2c421e5cfca9d7102257459602e23" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type>const char *</type>
        <definition>const char * BPrivate::Network::BInvalidUrl::Message</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>Message</name>
        <qualifiedname>BPrivate::Network::BInvalidUrl::Message</qualifiedname>
        <reimplements refid="classBPrivate_1_1Network_1_1BError_1a2c1b049e967387a289b1b0b8694eca28">Message</reimplements>
        <briefdescription>
<para>Access the string representation of the message. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/NetServicesDefs.h" line="46" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBPrivate_1_1Network_1_1BInvalidUrl_1a9754d8b1ba93ae09c40d71f61827f5d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classBUrl" kindref="compound">BUrl</ref> &amp;</type>
        <definition>const BUrl &amp; BPrivate::Network::BInvalidUrl::Url</definition>
        <argsstring>() const</argsstring>
        <name>Url</name>
        <qualifiedname>BPrivate::Network::BInvalidUrl::Url</qualifiedname>
        <briefdescription>
<para>The URL that caused the issue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/boot/home/src/haiku/headers/private/netservices2/NetServicesDefs.h" line="48" column="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Error that indicates that the URL is not valid. </para>
    </briefdescription>
    <detaileddescription>
<para>This error is raised as an exception when the caller tries to pass a <ref refid="classBUrl" kindref="compound">BUrl</ref> object that does not contain a valid URL.</para>
<para><simplesect kind="see"><para><ref refid="classBUrl_1ac000b758475efde79295319800c4b94b" kindref="member">BUrl::IsValid()</ref></para>
</simplesect>
<simplesect kind="since"><para>Haiku R1 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BPrivate::Network::BError</label>
        <link refid="classBPrivate_1_1Network_1_1BError"/>
      </node>
      <node id="1">
        <label>BPrivate::Network::BInvalidUrl</label>
        <link refid="classBPrivate_1_1Network_1_1BInvalidUrl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BPrivate::Network::BError</label>
        <link refid="classBPrivate_1_1Network_1_1BError"/>
      </node>
      <node id="1">
        <label>BPrivate::Network::BInvalidUrl</label>
        <link refid="classBPrivate_1_1Network_1_1BInvalidUrl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/boot/home/src/haiku/headers/private/netservices2/NetServicesDefs.h" line="40" column="1" bodyfile="/boot/home/src/haiku/headers/private/netservices2/NetServicesDefs.h" bodystart="41" bodyend="52"/>
    <listofallmembers>
      <member refid="classBPrivate_1_1Network_1_1BError_1a98953038abdab68796b3bf373ead0540" prot="public" virt="non-virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>BError</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1abbf80a044f5af02aac87a65a6aba703a" prot="public" virt="non-virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>BError</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1abf7e40af168fdcf53eb7a86e42c9141c" prot="public" virt="non-virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>BError</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1a227208ede157ae501ea3acee188e46b7" prot="public" virt="non-virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>BError</name></member>
      <member refid="classBPrivate_1_1Network_1_1BInvalidUrl_1af16d943fc333667bb5ad8f96535f1153" prot="public" virt="non-virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>BInvalidUrl</name></member>
      <member refid="classBPrivate_1_1Network_1_1BInvalidUrl_1aeed16135547543a6f0386227c80b9cc4" prot="public" virt="non-virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>BInvalidUrl</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1a93a2260671aad699aa8787fd74061f98" prot="public" virt="virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>DebugMessage</name></member>
      <member refid="classBPrivate_1_1Network_1_1BInvalidUrl_1a0fff8199ec9b3c8b26a2521e26440af5" prot="private" virt="non-virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>fUrl</name></member>
      <member refid="classBPrivate_1_1Network_1_1BInvalidUrl_1a68f2c421e5cfca9d7102257459602e23" prot="public" virt="virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>Message</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1af4a889a39e9530458aeb649d2ba12d45" prot="public" virt="non-virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>operator=</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1ab80467e8f9af8142d4d7cfa311f04c68" prot="public" virt="non-virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>operator=</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1a63dedfb711a141621fa266fb25bff2d8" prot="public" virt="virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>Origin</name></member>
      <member refid="classBPrivate_1_1Network_1_1BInvalidUrl_1a9754d8b1ba93ae09c40d71f61827f5d5" prot="public" virt="non-virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>Url</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1a69a0b83a56c08e510e16aaba841f25e5" prot="public" virt="non-virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>WriteToOutput</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1a2c7538bd21c2844cd1ee0c8ee0ba74ef" prot="public" virt="non-virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>WriteToStream</name></member>
      <member refid="classBPrivate_1_1Network_1_1BError_1a0ffdd9cc030c188df03dd95e1de82bf4" prot="public" virt="virtual"><scope>BPrivate::Network::BInvalidUrl</scope><name>~BError</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
